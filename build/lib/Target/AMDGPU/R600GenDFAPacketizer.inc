/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Target DFA Packetizer Tables                                               *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#include "llvm/CodeGen/DFAPacketizer.h"
namespace llvm {
} // end namespace llvm

namespace {
constexpr unsigned R600ResourceIndices[] = {
  0, 1, 2, 3, 4, 5, 0, 1, 2, 2, 1, 0, 
};

constexpr unsigned R600ProcResourceIndexStart[] = {
  0, // NoSchedModel
  0, // R600_VLIW5_ItinModel
  6, // R600_VLIW4_ItinModel
  12
};

// Input NFA has 64 states with 384 transitions.
// Generated DFA has 46 states with 163 transitions.

// A zero-terminated sequence of NFA state transitions. Every DFA
// transition implies a set of NFA transitions. These are referred
// to by index in R600Transitions[].
const std::array<NfaStatePair, 818> R600TransitionInfo = {{
  /* 0 */ {0, 1}, {0ULL, 0ULL},
  /* 2 */ {0, 1}, {0, 2}, {0, 4}, {0, 8}, {0ULL, 0ULL},
  /* 7 */ {0, 1}, {0, 2}, {0, 4}, {0, 8}, {0, 16}, {0ULL, 0ULL},
  /* 13 */ {0, 32}, {0ULL, 0ULL},
  /* 15 */ {1, 3}, {1, 5}, {1, 9}, {0ULL, 0ULL},
  /* 19 */ {1, 3}, {1, 5}, {1, 9}, {1, 17}, {0ULL, 0ULL},
  /* 24 */ {1, 33}, {0ULL, 0ULL},
  /* 26 */ {2, 3}, {4, 5}, {8, 9}, {0ULL, 0ULL},
  /* 30 */ {1, 3}, {1, 5}, {1, 9}, {2, 3}, {2, 6}, {2, 10}, {4, 5}, {4, 6}, {4, 12}, {8, 9}, {8, 10}, {8, 12}, {0ULL, 0ULL},
  /* 43 */ {1, 17}, {2, 18}, {4, 20}, {8, 24}, {0ULL, 0ULL},
  /* 48 */ {1, 3}, {1, 5}, {1, 9}, {1, 17}, {2, 3}, {2, 6}, {2, 10}, {2, 18}, {4, 5}, {4, 6}, {4, 12}, {4, 20}, {8, 9}, {8, 10}, {8, 12}, {8, 24}, {0ULL, 0ULL},
  /* 65 */ {1, 33}, {2, 34}, {4, 36}, {8, 40}, {0ULL, 0ULL},
  /* 70 */ {3, 7}, {3, 11}, {5, 7}, {5, 13}, {9, 11}, {9, 13}, {0ULL, 0ULL},
  /* 77 */ {3, 19}, {5, 21}, {9, 25}, {0ULL, 0ULL},
  /* 81 */ {3, 7}, {3, 11}, {3, 19}, {5, 7}, {5, 13}, {5, 21}, {9, 11}, {9, 13}, {9, 25}, {0ULL, 0ULL},
  /* 91 */ {3, 35}, {5, 37}, {9, 41}, {0ULL, 0ULL},
  /* 95 */ {6, 7}, {10, 11}, {12, 13}, {0ULL, 0ULL},
  /* 99 */ {3, 7}, {3, 11}, {5, 7}, {5, 13}, {6, 7}, {6, 14}, {9, 11}, {9, 13}, {10, 11}, {10, 14}, {12, 13}, {12, 14}, {0ULL, 0ULL},
  /* 112 */ {3, 19}, {5, 21}, {6, 22}, {9, 25}, {10, 26}, {12, 28}, {0ULL, 0ULL},
  /* 119 */ {3, 7}, {3, 11}, {3, 19}, {5, 7}, {5, 13}, {5, 21}, {6, 7}, {6, 14}, {6, 22}, {9, 11}, {9, 13}, {9, 25}, {10, 11}, {10, 14}, {10, 26}, {12, 13}, {12, 14}, {12, 28}, {0ULL, 0ULL},
  /* 138 */ {3, 35}, {5, 37}, {6, 38}, {9, 41}, {10, 42}, {12, 44}, {0ULL, 0ULL},
  /* 145 */ {7, 15}, {11, 15}, {13, 15}, {0ULL, 0ULL},
  /* 149 */ {7, 23}, {11, 27}, {13, 29}, {0ULL, 0ULL},
  /* 153 */ {7, 15}, {7, 23}, {11, 15}, {11, 27}, {13, 15}, {13, 29}, {0ULL, 0ULL},
  /* 160 */ {7, 39}, {11, 43}, {13, 45}, {0ULL, 0ULL},
  /* 164 */ {7, 15}, {11, 15}, {13, 15}, {14, 15}, {0ULL, 0ULL},
  /* 169 */ {7, 23}, {11, 27}, {13, 29}, {14, 30}, {0ULL, 0ULL},
  /* 174 */ {7, 15}, {7, 23}, {11, 15}, {11, 27}, {13, 15}, {13, 29}, {14, 15}, {14, 30}, {0ULL, 0ULL},
  /* 183 */ {7, 39}, {11, 43}, {13, 45}, {14, 46}, {0ULL, 0ULL},
  /* 188 */ {15, 31}, {0ULL, 0ULL},
  /* 190 */ {15, 47}, {0ULL, 0ULL},
  /* 192 */ {2, 3}, {4, 5}, {8, 9}, {16, 17}, {0ULL, 0ULL},
  /* 197 */ {1, 3}, {1, 5}, {1, 9}, {2, 3}, {2, 6}, {2, 10}, {4, 5}, {4, 6}, {4, 12}, {8, 9}, {8, 10}, {8, 12}, {16, 17}, {16, 18}, {16, 20}, {16, 24}, {0ULL, 0ULL},
  /* 214 */ {1, 3}, {1, 5}, {1, 9}, {1, 17}, {2, 3}, {2, 6}, {2, 10}, {2, 18}, {4, 5}, {4, 6}, {4, 12}, {4, 20}, {8, 9}, {8, 10}, {8, 12}, {8, 24}, {16, 17}, {16, 18}, {16, 20}, {16, 24}, {0ULL, 0ULL},
  /* 235 */ {1, 33}, {2, 34}, {4, 36}, {8, 40}, {16, 48}, {0ULL, 0ULL},
  /* 241 */ {3, 7}, {3, 11}, {5, 7}, {5, 13}, {9, 11}, {9, 13}, {17, 19}, {17, 21}, {17, 25}, {0ULL, 0ULL},
  /* 251 */ {3, 7}, {3, 11}, {3, 19}, {5, 7}, {5, 13}, {5, 21}, {9, 11}, {9, 13}, {9, 25}, {17, 19}, {17, 21}, {17, 25}, {0ULL, 0ULL},
  /* 264 */ {3, 35}, {5, 37}, {9, 41}, {17, 49}, {0ULL, 0ULL},
  /* 269 */ {6, 7}, {10, 11}, {12, 13}, {18, 19}, {20, 21}, {24, 25}, {0ULL, 0ULL},
  /* 276 */ {3, 7}, {3, 11}, {5, 7}, {5, 13}, {6, 7}, {6, 14}, {9, 11}, {9, 13}, {10, 11}, {10, 14}, {12, 13}, {12, 14}, {17, 19}, {17, 21}, {17, 25}, {18, 19}, {18, 22}, {18, 26}, {20, 21}, {20, 22}, {20, 28}, {24, 25}, {24, 26}, {24, 28}, {0ULL, 0ULL},
  /* 301 */ {3, 7}, {3, 11}, {3, 19}, {5, 7}, {5, 13}, {5, 21}, {6, 7}, {6, 14}, {6, 22}, {9, 11}, {9, 13}, {9, 25}, {10, 11}, {10, 14}, {10, 26}, {12, 13}, {12, 14}, {12, 28}, {17, 19}, {17, 21}, {17, 25}, {18, 19}, {18, 22}, {18, 26}, {20, 21}, {20, 22}, {20, 28}, {24, 25}, {24, 26}, {24, 28}, {0ULL, 0ULL},
  /* 332 */ {3, 35}, {5, 37}, {6, 38}, {9, 41}, {10, 42}, {12, 44}, {17, 49}, {18, 50}, {20, 52}, {24, 56}, {0ULL, 0ULL},
  /* 343 */ {7, 15}, {11, 15}, {13, 15}, {19, 23}, {19, 27}, {21, 23}, {21, 29}, {25, 27}, {25, 29}, {0ULL, 0ULL},
  /* 353 */ {7, 15}, {7, 23}, {11, 15}, {11, 27}, {13, 15}, {13, 29}, {19, 23}, {19, 27}, {21, 23}, {21, 29}, {25, 27}, {25, 29}, {0ULL, 0ULL},
  /* 366 */ {7, 39}, {11, 43}, {13, 45}, {19, 51}, {21, 53}, {25, 57}, {0ULL, 0ULL},
  /* 373 */ {14, 15}, {22, 23}, {26, 27}, {28, 29}, {0ULL, 0ULL},
  /* 378 */ {7, 15}, {11, 15}, {13, 15}, {14, 15}, {19, 23}, {19, 27}, {21, 23}, {21, 29}, {22, 23}, {22, 30}, {25, 27}, {25, 29}, {26, 27}, {26, 30}, {28, 29}, {28, 30}, {0ULL, 0ULL},
  /* 395 */ {7, 15}, {7, 23}, {11, 15}, {11, 27}, {13, 15}, {13, 29}, {14, 15}, {14, 30}, {19, 23}, {19, 27}, {21, 23}, {21, 29}, {22, 23}, {22, 30}, {25, 27}, {25, 29}, {26, 27}, {26, 30}, {28, 29}, {28, 30}, {0ULL, 0ULL},
  /* 416 */ {7, 39}, {11, 43}, {13, 45}, {14, 46}, {19, 51}, {21, 53}, {22, 54}, {25, 57}, {26, 58}, {28, 60}, {0ULL, 0ULL},
  /* 427 */ {15, 31}, {23, 31}, {27, 31}, {29, 31}, {0ULL, 0ULL},
  /* 432 */ {15, 47}, {23, 55}, {27, 59}, {29, 61}, {0ULL, 0ULL},
  /* 437 */ {15, 31}, {23, 31}, {27, 31}, {29, 31}, {30, 31}, {0ULL, 0ULL},
  /* 443 */ {15, 47}, {23, 55}, {27, 59}, {29, 61}, {30, 62}, {0ULL, 0ULL},
  /* 449 */ {31, 63}, {0ULL, 0ULL},
  /* 451 */ {32, 33}, {0ULL, 0ULL},
  /* 453 */ {32, 33}, {32, 34}, {32, 36}, {32, 40}, {0ULL, 0ULL},
  /* 458 */ {32, 33}, {32, 34}, {32, 36}, {32, 40}, {32, 48}, {0ULL, 0ULL},
  /* 464 */ {33, 35}, {33, 37}, {33, 41}, {0ULL, 0ULL},
  /* 468 */ {33, 35}, {33, 37}, {33, 41}, {33, 49}, {0ULL, 0ULL},
  /* 473 */ {34, 35}, {36, 37}, {40, 41}, {0ULL, 0ULL},
  /* 477 */ {33, 35}, {33, 37}, {33, 41}, {34, 35}, {34, 38}, {34, 42}, {36, 37}, {36, 38}, {36, 44}, {40, 41}, {40, 42}, {40, 44}, {0ULL, 0ULL},
  /* 490 */ {33, 49}, {34, 50}, {36, 52}, {40, 56}, {0ULL, 0ULL},
  /* 495 */ {33, 35}, {33, 37}, {33, 41}, {33, 49}, {34, 35}, {34, 38}, {34, 42}, {34, 50}, {36, 37}, {36, 38}, {36, 44}, {36, 52}, {40, 41}, {40, 42}, {40, 44}, {40, 56}, {0ULL, 0ULL},
  /* 512 */ {35, 39}, {35, 43}, {37, 39}, {37, 45}, {41, 43}, {41, 45}, {0ULL, 0ULL},
  /* 519 */ {35, 51}, {37, 53}, {41, 57}, {0ULL, 0ULL},
  /* 523 */ {35, 39}, {35, 43}, {35, 51}, {37, 39}, {37, 45}, {37, 53}, {41, 43}, {41, 45}, {41, 57}, {0ULL, 0ULL},
  /* 533 */ {38, 39}, {42, 43}, {44, 45}, {0ULL, 0ULL},
  /* 537 */ {35, 39}, {35, 43}, {37, 39}, {37, 45}, {38, 39}, {38, 46}, {41, 43}, {41, 45}, {42, 43}, {42, 46}, {44, 45}, {44, 46}, {0ULL, 0ULL},
  /* 550 */ {35, 51}, {37, 53}, {38, 54}, {41, 57}, {42, 58}, {44, 60}, {0ULL, 0ULL},
  /* 557 */ {35, 39}, {35, 43}, {35, 51}, {37, 39}, {37, 45}, {37, 53}, {38, 39}, {38, 46}, {38, 54}, {41, 43}, {41, 45}, {41, 57}, {42, 43}, {42, 46}, {42, 58}, {44, 45}, {44, 46}, {44, 60}, {0ULL, 0ULL},
  /* 576 */ {39, 47}, {43, 47}, {45, 47}, {0ULL, 0ULL},
  /* 580 */ {39, 55}, {43, 59}, {45, 61}, {0ULL, 0ULL},
  /* 584 */ {39, 47}, {39, 55}, {43, 47}, {43, 59}, {45, 47}, {45, 61}, {0ULL, 0ULL},
  /* 591 */ {39, 47}, {43, 47}, {45, 47}, {46, 47}, {0ULL, 0ULL},
  /* 596 */ {39, 55}, {43, 59}, {45, 61}, {46, 62}, {0ULL, 0ULL},
  /* 601 */ {39, 47}, {39, 55}, {43, 47}, {43, 59}, {45, 47}, {45, 61}, {46, 47}, {46, 62}, {0ULL, 0ULL},
  /* 610 */ {47, 63}, {0ULL, 0ULL},
  /* 612 */ {34, 35}, {36, 37}, {40, 41}, {48, 49}, {0ULL, 0ULL},
  /* 617 */ {33, 35}, {33, 37}, {33, 41}, {34, 35}, {34, 38}, {34, 42}, {36, 37}, {36, 38}, {36, 44}, {40, 41}, {40, 42}, {40, 44}, {48, 49}, {48, 50}, {48, 52}, {48, 56}, {0ULL, 0ULL},
  /* 634 */ {33, 35}, {33, 37}, {33, 41}, {33, 49}, {34, 35}, {34, 38}, {34, 42}, {34, 50}, {36, 37}, {36, 38}, {36, 44}, {36, 52}, {40, 41}, {40, 42}, {40, 44}, {40, 56}, {48, 49}, {48, 50}, {48, 52}, {48, 56}, {0ULL, 0ULL},
  /* 655 */ {35, 39}, {35, 43}, {37, 39}, {37, 45}, {41, 43}, {41, 45}, {49, 51}, {49, 53}, {49, 57}, {0ULL, 0ULL},
  /* 665 */ {35, 39}, {35, 43}, {35, 51}, {37, 39}, {37, 45}, {37, 53}, {41, 43}, {41, 45}, {41, 57}, {49, 51}, {49, 53}, {49, 57}, {0ULL, 0ULL},
  /* 678 */ {38, 39}, {42, 43}, {44, 45}, {50, 51}, {52, 53}, {56, 57}, {0ULL, 0ULL},
  /* 685 */ {35, 39}, {35, 43}, {37, 39}, {37, 45}, {38, 39}, {38, 46}, {41, 43}, {41, 45}, {42, 43}, {42, 46}, {44, 45}, {44, 46}, {49, 51}, {49, 53}, {49, 57}, {50, 51}, {50, 54}, {50, 58}, {52, 53}, {52, 54}, {52, 60}, {56, 57}, {56, 58}, {56, 60}, {0ULL, 0ULL},
  /* 710 */ {35, 39}, {35, 43}, {35, 51}, {37, 39}, {37, 45}, {37, 53}, {38, 39}, {38, 46}, {38, 54}, {41, 43}, {41, 45}, {41, 57}, {42, 43}, {42, 46}, {42, 58}, {44, 45}, {44, 46}, {44, 60}, {49, 51}, {49, 53}, {49, 57}, {50, 51}, {50, 54}, {50, 58}, {52, 53}, {52, 54}, {52, 60}, {56, 57}, {56, 58}, {56, 60}, {0ULL, 0ULL},
  /* 741 */ {39, 47}, {43, 47}, {45, 47}, {51, 55}, {51, 59}, {53, 55}, {53, 61}, {57, 59}, {57, 61}, {0ULL, 0ULL},
  /* 751 */ {39, 47}, {39, 55}, {43, 47}, {43, 59}, {45, 47}, {45, 61}, {51, 55}, {51, 59}, {53, 55}, {53, 61}, {57, 59}, {57, 61}, {0ULL, 0ULL},
  /* 764 */ {46, 47}, {54, 55}, {58, 59}, {60, 61}, {0ULL, 0ULL},
  /* 769 */ {39, 47}, {43, 47}, {45, 47}, {46, 47}, {51, 55}, {51, 59}, {53, 55}, {53, 61}, {54, 55}, {54, 62}, {57, 59}, {57, 61}, {58, 59}, {58, 62}, {60, 61}, {60, 62}, {0ULL, 0ULL},
  /* 786 */ {39, 47}, {39, 55}, {43, 47}, {43, 59}, {45, 47}, {45, 61}, {46, 47}, {46, 62}, {51, 55}, {51, 59}, {53, 55}, {53, 61}, {54, 55}, {54, 62}, {57, 59}, {57, 61}, {58, 59}, {58, 62}, {60, 61}, {60, 62}, {0ULL, 0ULL},
  /* 807 */ {47, 63}, {55, 63}, {59, 63}, {61, 63}, {0ULL, 0ULL},
  /* 812 */ {47, 63}, {55, 63}, {59, 63}, {61, 63}, {62, 63}, {0ULL, 0ULL},
}};

// A transition in the generated R600 DFA.
struct R600Transition {
  unsigned FromDfaState; // The transitioned-from DFA state.
  uint64_t Action;       // The input symbol that causes this transition.
  unsigned ToDfaState;   // The transitioned-to DFA state.
  unsigned InfoIdx;      // Start index into R600TransitionInfo.
};

// A table of DFA transitions, ordered by {FromDfaState, Action}.
// The initial state is 1, not zero.
const std::array<R600Transition, 163> R600Transitions = {{
  {1, 1, 2, 13},
  {1, 2, 3, 2},
  {1, 3, 4, 7},
  {1, 4, 5, 11},
  {1, 5, 6, 0},
  {2, 2, 7, 453},
  {2, 3, 8, 458},
  {2, 4, 9, 462},
  {2, 5, 10, 451},
  {3, 1, 7, 65},
  {3, 2, 11, 30},
  {3, 3, 12, 48},
  {3, 4, 13, 43},
  {3, 5, 14, 26},
  {4, 1, 8, 235},
  {4, 2, 12, 197},
  {4, 3, 12, 214},
  {4, 4, 13, 43},
  {4, 5, 15, 192},
  {5, 1, 9, 239},
  {5, 2, 13, 209},
  {5, 3, 13, 209},
  {5, 5, 16, 195},
  {6, 1, 10, 24},
  {6, 2, 14, 15},
  {6, 3, 15, 19},
  {6, 4, 16, 22},
  {7, 2, 17, 477},
  {7, 3, 18, 495},
  {7, 4, 19, 490},
  {7, 5, 20, 473},
  {8, 2, 18, 617},
  {8, 3, 18, 634},
  {8, 4, 19, 490},
  {8, 5, 21, 612},
  {9, 2, 19, 629},
  {9, 3, 19, 629},
  {9, 5, 22, 615},
  {10, 2, 20, 464},
  {10, 3, 21, 468},
  {10, 4, 22, 471},
  {11, 1, 17, 138},
  {11, 2, 23, 99},
  {11, 3, 24, 119},
  {11, 4, 25, 112},
  {11, 5, 26, 95},
  {12, 1, 18, 332},
  {12, 2, 24, 276},
  {12, 3, 24, 301},
  {12, 4, 25, 112},
  {12, 5, 27, 269},
  {13, 1, 19, 338},
  {13, 2, 25, 288},
  {13, 3, 25, 288},
  {13, 5, 28, 272},
  {14, 1, 20, 91},
  {14, 2, 26, 70},
  {14, 3, 27, 81},
  {14, 4, 28, 77},
  {15, 1, 21, 264},
  {15, 2, 27, 241},
  {15, 3, 27, 251},
  {15, 4, 28, 77},
  {16, 1, 22, 267},
  {16, 2, 28, 247},
  {16, 3, 28, 247},
  {17, 2, 29, 537},
  {17, 3, 30, 557},
  {17, 4, 31, 550},
  {17, 5, 32, 533},
  {18, 2, 30, 685},
  {18, 3, 30, 710},
  {18, 4, 31, 550},
  {18, 5, 33, 678},
  {19, 2, 31, 697},
  {19, 3, 31, 697},
  {19, 5, 34, 681},
  {20, 2, 32, 512},
  {20, 3, 33, 523},
  {20, 4, 34, 519},
  {21, 2, 33, 655},
  {21, 3, 33, 665},
  {21, 4, 34, 519},
  {22, 2, 34, 661},
  {22, 3, 34, 661},
  {23, 1, 29, 183},
  {23, 2, 35, 164},
  {23, 3, 36, 174},
  {23, 4, 37, 169},
  {23, 5, 35, 167},
  {24, 1, 30, 416},
  {24, 2, 36, 378},
  {24, 3, 36, 395},
  {24, 4, 37, 169},
  {24, 5, 38, 373},
  {25, 1, 31, 420},
  {25, 2, 37, 382},
  {25, 3, 37, 382},
  {25, 5, 39, 374},
  {26, 1, 32, 160},
  {26, 2, 35, 145},
  {26, 3, 38, 153},
  {26, 4, 39, 149},
  {27, 1, 33, 366},
  {27, 2, 38, 343},
  {27, 3, 38, 353},
  {27, 4, 39, 149},
  {28, 1, 34, 369},
  {28, 2, 39, 346},
  {28, 3, 39, 346},
  {29, 2, 40, 591},
  {29, 3, 41, 601},
  {29, 4, 42, 596},
  {29, 5, 40, 594},
  {30, 2, 41, 769},
  {30, 3, 41, 786},
  {30, 4, 42, 596},
  {30, 5, 43, 764},
  {31, 2, 42, 773},
  {31, 3, 42, 773},
  {31, 5, 44, 765},
  {32, 2, 40, 576},
  {32, 3, 43, 584},
  {32, 4, 44, 580},
  {33, 2, 43, 741},
  {33, 3, 43, 751},
  {33, 4, 44, 580},
  {34, 2, 44, 744},
  {34, 3, 44, 744},
  {35, 1, 40, 190},
  {35, 3, 45, 188},
  {35, 4, 45, 188},
  {36, 1, 41, 443},
  {36, 2, 45, 438},
  {36, 3, 45, 437},
  {36, 4, 45, 188},
  {36, 5, 45, 441},
  {37, 1, 42, 444},
  {37, 2, 45, 438},
  {37, 3, 45, 438},
  {37, 5, 45, 441},
  {38, 1, 43, 432},
  {38, 2, 45, 428},
  {38, 3, 45, 427},
  {38, 4, 45, 188},
  {39, 1, 44, 433},
  {39, 2, 45, 428},
  {39, 3, 45, 428},
  {40, 3, 46, 610},
  {40, 4, 46, 610},
  {41, 2, 46, 813},
  {41, 3, 46, 812},
  {41, 4, 46, 610},
  {41, 5, 46, 816},
  {42, 2, 46, 813},
  {42, 3, 46, 813},
  {42, 5, 46, 816},
  {43, 2, 46, 808},
  {43, 3, 46, 807},
  {43, 4, 46, 610},
  {44, 2, 46, 808},
  {44, 3, 46, 808},
  {45, 1, 46, 449},

}};

} // end anonymous namespace

namespace llvm {
DFAPacketizer *R600GenSubtargetInfo::createDFAPacketizer(const InstrItineraryData *IID) const {
  static Automaton<uint64_t> A(ArrayRef<R600Transition>(R600Transitions), R600TransitionInfo);
  unsigned ProcResIdxStart = R600ProcResourceIndexStart[IID->SchedModel.ProcID];
  unsigned ProcResIdxNum = R600ProcResourceIndexStart[IID->SchedModel.ProcID + 1] - ProcResIdxStart;
  return new DFAPacketizer(IID, A, {&R600ResourceIndices[ProcResIdxStart], ProcResIdxNum});

}

} // end namespace llvm
