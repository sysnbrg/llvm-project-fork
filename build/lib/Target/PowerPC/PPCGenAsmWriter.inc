/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Assembly Writer Source Fragment                                            *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

/// getMnemonic - This method is automatically generated by tablegen
/// from the instruction set description.
std::pair<const char *, uint64_t> PPCInstPrinter::getMnemonic(const MCInst *MI) {
  static const char AsmStrs[] = {
  /* 0 */ '#', 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'S', 'e', 't', 'u', 'p', 9, 0,
  /* 16 */ 'b', 'd', 'z', 'l', 'a', '+', 32, 0,
  /* 24 */ 'b', 'd', 'n', 'z', 'l', 'a', '+', 32, 0,
  /* 33 */ 'b', 'd', 'z', 'a', '+', 32, 0,
  /* 40 */ 'b', 'd', 'n', 'z', 'a', '+', 32, 0,
  /* 48 */ 'b', 'd', 'z', 'l', '+', 32, 0,
  /* 55 */ 'b', 'd', 'n', 'z', 'l', '+', 32, 0,
  /* 63 */ 'b', 'd', 'z', '+', 32, 0,
  /* 69 */ 'b', 'd', 'n', 'z', '+', 32, 0,
  /* 76 */ 'b', 'c', 'l', 32, '2', '0', ',', 32, '3', '1', ',', 32, 0,
  /* 89 */ 'b', 'c', 't', 'r', 'l', 10, 9, 'l', 'd', 32, '2', ',', 32, 0,
  /* 103 */ 'b', 'c', 't', 'r', 'l', 10, 9, 'l', 'w', 'z', 32, '2', ',', 32, 0,
  /* 118 */ 'b', 'c', 32, '1', '2', ',', 32, 0,
  /* 126 */ 'b', 'c', 'l', 32, '1', '2', ',', 32, 0,
  /* 135 */ 'b', 'c', 'l', 'r', 'l', 32, '1', '2', ',', 32, 0,
  /* 146 */ 'b', 'c', 'c', 't', 'r', 'l', 32, '1', '2', ',', 32, 0,
  /* 158 */ 'b', 'c', 'l', 'r', 32, '1', '2', ',', 32, 0,
  /* 168 */ 'b', 'c', 'c', 't', 'r', 32, '1', '2', ',', 32, 0,
  /* 179 */ 'm', 't', 's', 'p', 'r', 32, '3', ',', 32, 0,
  /* 189 */ 'b', 'c', 32, '4', ',', 32, 0,
  /* 196 */ 'b', 'c', 'l', 32, '4', ',', 32, 0,
  /* 204 */ 'b', 'c', 'l', 'r', 'l', 32, '4', ',', 32, 0,
  /* 214 */ 'b', 'c', 'c', 't', 'r', 'l', 32, '4', ',', 32, 0,
  /* 225 */ 'b', 'c', 'l', 'r', 32, '4', ',', 32, 0,
  /* 234 */ 'b', 'c', 'c', 't', 'r', 32, '4', ',', 32, 0,
  /* 244 */ 'm', 't', 's', 'p', 'r', 32, '2', '5', '6', ',', 32, 0,
  /* 256 */ 'b', 'd', 'z', 'l', 'a', '-', 32, 0,
  /* 264 */ 'b', 'd', 'n', 'z', 'l', 'a', '-', 32, 0,
  /* 273 */ 'b', 'd', 'z', 'a', '-', 32, 0,
  /* 280 */ 'b', 'd', 'n', 'z', 'a', '-', 32, 0,
  /* 288 */ 'b', 'd', 'z', 'l', '-', 32, 0,
  /* 295 */ 'b', 'd', 'n', 'z', 'l', '-', 32, 0,
  /* 303 */ 'b', 'd', 'z', '-', 32, 0,
  /* 309 */ 'b', 'd', 'n', 'z', '-', 32, 0,
  /* 316 */ 'v', 'c', 'm', 'p', 'n', 'e', 'b', '.', 32, 0,
  /* 326 */ 'v', 'c', 'm', 'p', 'g', 't', 's', 'b', '.', 32, 0,
  /* 337 */ 'e', 'x', 't', 's', 'b', '.', 32, 0,
  /* 345 */ 'v', 'c', 'm', 'p', 'e', 'q', 'u', 'b', '.', 32, 0,
  /* 356 */ 'b', 'c', 'd', 's', 'u', 'b', '.', 32, 0,
  /* 365 */ 'f', 's', 'u', 'b', '.', 32, 0,
  /* 372 */ 'f', 'm', 's', 'u', 'b', '.', 32, 0,
  /* 380 */ 'f', 'n', 'm', 's', 'u', 'b', '.', 32, 0,
  /* 389 */ 'v', 'c', 'm', 'p', 'g', 't', 'u', 'b', '.', 32, 0,
  /* 400 */ 'v', 'c', 'm', 'p', 'n', 'e', 'z', 'b', '.', 32, 0,
  /* 411 */ 'a', 'd', 'd', 'c', '.', 32, 0,
  /* 418 */ 'a', 'n', 'd', 'c', '.', 32, 0,
  /* 425 */ 't', 'a', 'b', 'o', 'r', 't', 'd', 'c', '.', 32, 0,
  /* 436 */ 's', 'u', 'b', 'f', 'c', '.', 32, 0,
  /* 444 */ 's', 'u', 'b', 'i', 'c', '.', 32, 0,
  /* 452 */ 'a', 'd', 'd', 'i', 'c', '.', 32, 0,
  /* 460 */ 'r', 'l', 'd', 'i', 'c', '.', 32, 0,
  /* 468 */ 'b', 'c', 'd', 't', 'r', 'u', 'n', 'c', '.', 32, 0,
  /* 479 */ 'b', 'c', 'd', 'u', 't', 'r', 'u', 'n', 'c', '.', 32, 0,
  /* 491 */ 'o', 'r', 'c', '.', 32, 0,
  /* 497 */ 't', 'a', 'b', 'o', 'r', 't', 'w', 'c', '.', 32, 0,
  /* 508 */ 's', 'r', 'a', 'd', '.', 32, 0,
  /* 515 */ 'b', 'c', 'd', 'a', 'd', 'd', '.', 32, 0,
  /* 524 */ 'f', 'a', 'd', 'd', '.', 32, 0,
  /* 531 */ 'f', 'm', 'a', 'd', 'd', '.', 32, 0,
  /* 539 */ 'f', 'n', 'm', 'a', 'd', 'd', '.', 32, 0,
  /* 548 */ 'm', 'u', 'l', 'h', 'd', '.', 32, 0,
  /* 556 */ 'f', 'c', 'f', 'i', 'd', '.', 32, 0,
  /* 564 */ 'f', 'c', 't', 'i', 'd', '.', 32, 0,
  /* 572 */ 'm', 'u', 'l', 'l', 'd', '.', 32, 0,
  /* 580 */ 's', 'l', 'd', '.', 32, 0,
  /* 586 */ 'n', 'a', 'n', 'd', '.', 32, 0,
  /* 593 */ 't', 'e', 'n', 'd', '.', 32, 0,
  /* 600 */ 's', 'r', 'd', '.', 32, 0,
  /* 606 */ 'v', 'c', 'm', 'p', 'g', 't', 's', 'd', '.', 32, 0,
  /* 617 */ 'v', 'c', 'm', 'p', 'e', 'q', 'u', 'd', '.', 32, 0,
  /* 628 */ 'v', 'c', 'm', 'p', 'g', 't', 'u', 'd', '.', 32, 0,
  /* 639 */ 'd', 'i', 'v', 'd', '.', 32, 0,
  /* 646 */ 'c', 'n', 't', 'l', 'z', 'd', '.', 32, 0,
  /* 655 */ 'c', 'n', 't', 't', 'z', 'd', '.', 32, 0,
  /* 664 */ 'a', 'd', 'd', 'e', '.', 32, 0,
  /* 671 */ 'd', 'i', 'v', 'd', 'e', '.', 32, 0,
  /* 679 */ 's', 'l', 'b', 'f', 'e', 'e', '.', 32, 0,
  /* 688 */ 's', 'u', 'b', 'f', 'e', '.', 32, 0,
  /* 696 */ 'a', 'd', 'd', 'm', 'e', '.', 32, 0,
  /* 704 */ 's', 'u', 'b', 'f', 'm', 'e', '.', 32, 0,
  /* 713 */ 'f', 'r', 'e', '.', 32, 0,
  /* 719 */ 'f', 'r', 's', 'q', 'r', 't', 'e', '.', 32, 0,
  /* 729 */ 'p', 'a', 's', 't', 'e', '.', 32, 0,
  /* 737 */ 'd', 'i', 'v', 'w', 'e', '.', 32, 0,
  /* 745 */ 'a', 'd', 'd', 'z', 'e', '.', 32, 0,
  /* 753 */ 's', 'u', 'b', 'f', 'z', 'e', '.', 32, 0,
  /* 762 */ 's', 'u', 'b', 'f', '.', 32, 0,
  /* 769 */ 'm', 't', 'f', 's', 'f', '.', 32, 0,
  /* 777 */ 'f', 'n', 'e', 'g', '.', 32, 0,
  /* 784 */ 'v', 'c', 'm', 'p', 'n', 'e', 'h', '.', 32, 0,
  /* 794 */ 'v', 'c', 'm', 'p', 'g', 't', 's', 'h', '.', 32, 0,
  /* 805 */ 'e', 'x', 't', 's', 'h', '.', 32, 0,
  /* 813 */ 'v', 'c', 'm', 'p', 'e', 'q', 'u', 'h', '.', 32, 0,
  /* 824 */ 'v', 'c', 'm', 'p', 'g', 't', 'u', 'h', '.', 32, 0,
  /* 835 */ 'v', 'c', 'm', 'p', 'n', 'e', 'z', 'h', '.', 32, 0,
  /* 846 */ 't', 'a', 'b', 'o', 'r', 't', 'd', 'c', 'i', '.', 32, 0,
  /* 858 */ 't', 'a', 'b', 'o', 'r', 't', 'w', 'c', 'i', '.', 32, 0,
  /* 870 */ 's', 'r', 'a', 'd', 'i', '.', 32, 0,
  /* 878 */ 'c', 'l', 'r', 'l', 's', 'l', 'd', 'i', '.', 32, 0,
  /* 889 */ 'e', 'x', 't', 'l', 'd', 'i', '.', 32, 0,
  /* 898 */ 'a', 'n', 'd', 'i', '.', 32, 0,
  /* 905 */ 'c', 'l', 'r', 'r', 'd', 'i', '.', 32, 0,
  /* 914 */ 'i', 'n', 's', 'r', 'd', 'i', '.', 32, 0,
  /* 923 */ 'r', 'o', 't', 'r', 'd', 'i', '.', 32, 0,
  /* 932 */ 'e', 'x', 't', 'r', 'd', 'i', '.', 32, 0,
  /* 941 */ 'm', 't', 'f', 's', 'f', 'i', '.', 32, 0,
  /* 950 */ 'e', 'x', 't', 's', 'w', 's', 'l', 'i', '.', 32, 0,
  /* 961 */ 'r', 'l', 'd', 'i', 'm', 'i', '.', 32, 0,
  /* 970 */ 'r', 'l', 'w', 'i', 'm', 'i', '.', 32, 0,
  /* 979 */ 's', 'r', 'a', 'w', 'i', '.', 32, 0,
  /* 987 */ 'c', 'l', 'r', 'l', 's', 'l', 'w', 'i', '.', 32, 0,
  /* 998 */ 'i', 'n', 's', 'l', 'w', 'i', '.', 32, 0,
  /* 1007 */ 'e', 'x', 't', 'l', 'w', 'i', '.', 32, 0,
  /* 1016 */ 'c', 'l', 'r', 'r', 'w', 'i', '.', 32, 0,
  /* 1025 */ 'i', 'n', 's', 'r', 'w', 'i', '.', 32, 0,
  /* 1034 */ 'r', 'o', 't', 'r', 'w', 'i', '.', 32, 0,
  /* 1043 */ 'e', 'x', 't', 'r', 'w', 'i', '.', 32, 0,
  /* 1052 */ 'v', 's', 't', 'r', 'i', 'b', 'l', '.', 32, 0,
  /* 1062 */ 'r', 'l', 'd', 'c', 'l', '.', 32, 0,
  /* 1070 */ 'r', 'l', 'd', 'i', 'c', 'l', '.', 32, 0,
  /* 1079 */ 'f', 's', 'e', 'l', '.', 32, 0,
  /* 1086 */ 'v', 's', 't', 'r', 'i', 'h', 'l', '.', 32, 0,
  /* 1096 */ 'f', 'm', 'u', 'l', '.', 32, 0,
  /* 1103 */ 't', 'r', 'e', 'c', 'l', 'a', 'i', 'm', '.', 32, 0,
  /* 1114 */ 'f', 'r', 'i', 'm', '.', 32, 0,
  /* 1121 */ 'r', 'l', 'w', 'i', 'n', 'm', '.', 32, 0,
  /* 1130 */ 'r', 'l', 'w', 'n', 'm', '.', 32, 0,
  /* 1138 */ 'b', 'c', 'd', 'c', 'f', 'n', '.', 32, 0,
  /* 1147 */ 'b', 'c', 'd', 'c', 'p', 's', 'g', 'n', '.', 32, 0,
  /* 1158 */ 'f', 'c', 'p', 's', 'g', 'n', '.', 32, 0,
  /* 1167 */ 'b', 'c', 'd', 's', 'e', 't', 's', 'g', 'n', '.', 32, 0,
  /* 1179 */ 't', 'b', 'e', 'g', 'i', 'n', '.', 32, 0,
  /* 1188 */ 'f', 'r', 'i', 'n', '.', 32, 0,
  /* 1195 */ 'b', 'c', 'd', 'c', 't', 'n', '.', 32, 0,
  /* 1204 */ 'a', 'd', 'd', 'c', 'o', '.', 32, 0,
  /* 1212 */ 's', 'u', 'b', 'f', 'c', 'o', '.', 32, 0,
  /* 1221 */ 'a', 'd', 'd', 'o', '.', 32, 0,
  /* 1228 */ 'm', 'u', 'l', 'l', 'd', 'o', '.', 32, 0,
  /* 1237 */ 'd', 'i', 'v', 'd', 'o', '.', 32, 0,
  /* 1245 */ 'a', 'd', 'd', 'e', 'o', '.', 32, 0,
  /* 1253 */ 'd', 'i', 'v', 'd', 'e', 'o', '.', 32, 0,
  /* 1262 */ 's', 'u', 'b', 'f', 'e', 'o', '.', 32, 0,
  /* 1271 */ 'a', 'd', 'd', 'm', 'e', 'o', '.', 32, 0,
  /* 1280 */ 's', 'u', 'b', 'f', 'm', 'e', 'o', '.', 32, 0,
  /* 1290 */ 'd', 'i', 'v', 'w', 'e', 'o', '.', 32, 0,
  /* 1299 */ 'a', 'd', 'd', 'z', 'e', 'o', '.', 32, 0,
  /* 1308 */ 's', 'u', 'b', 'f', 'z', 'e', 'o', '.', 32, 0,
  /* 1318 */ 's', 'u', 'b', 'f', 'o', '.', 32, 0,
  /* 1326 */ 'n', 'e', 'g', 'o', '.', 32, 0,
  /* 1333 */ 'd', 'i', 'v', 'd', 'u', 'o', '.', 32, 0,
  /* 1342 */ 'd', 'i', 'v', 'd', 'e', 'u', 'o', '.', 32, 0,
  /* 1352 */ 'd', 'i', 'v', 'w', 'e', 'u', 'o', '.', 32, 0,
  /* 1362 */ 'd', 'i', 'v', 'w', 'u', 'o', '.', 32, 0,
  /* 1371 */ 'm', 'u', 'l', 'l', 'w', 'o', '.', 32, 0,
  /* 1380 */ 'd', 'i', 'v', 'w', 'o', '.', 32, 0,
  /* 1388 */ 'x', 'v', 'c', 'm', 'p', 'g', 'e', 'd', 'p', '.', 32, 0,
  /* 1400 */ 'x', 'v', 'c', 'm', 'p', 'e', 'q', 'd', 'p', '.', 32, 0,
  /* 1412 */ 'x', 'v', 'c', 'm', 'p', 'g', 't', 'd', 'p', '.', 32, 0,
  /* 1424 */ 'v', 'c', 'm', 'p', 'b', 'f', 'p', '.', 32, 0,
  /* 1434 */ 'v', 'c', 'm', 'p', 'g', 'e', 'f', 'p', '.', 32, 0,
  /* 1445 */ 'v', 'c', 'm', 'p', 'e', 'q', 'f', 'p', '.', 32, 0,
  /* 1456 */ 'v', 'c', 'm', 'p', 'g', 't', 'f', 'p', '.', 32, 0,
  /* 1467 */ 'f', 'r', 'i', 'p', '.', 32, 0,
  /* 1474 */ 'x', 'v', 'c', 'm', 'p', 'g', 'e', 's', 'p', '.', 32, 0,
  /* 1486 */ 'x', 'v', 'c', 'm', 'p', 'e', 'q', 's', 'p', '.', 32, 0,
  /* 1498 */ 'f', 'r', 's', 'p', '.', 32, 0,
  /* 1505 */ 'x', 'v', 'c', 'm', 'p', 'g', 't', 's', 'p', '.', 32, 0,
  /* 1517 */ 'i', 'c', 'b', 'l', 'q', '.', 32, 0,
  /* 1525 */ 'b', 'c', 'd', 'c', 'f', 's', 'q', '.', 32, 0,
  /* 1535 */ 'b', 'c', 'd', 'c', 't', 's', 'q', '.', 32, 0,
  /* 1545 */ 'v', 'c', 'm', 'p', 'g', 't', 's', 'q', '.', 32, 0,
  /* 1556 */ 'v', 'c', 'm', 'p', 'e', 'q', 'u', 'q', '.', 32, 0,
  /* 1567 */ 'v', 'c', 'm', 'p', 'g', 't', 'u', 'q', '.', 32, 0,
  /* 1578 */ 'v', 's', 't', 'r', 'i', 'b', 'r', '.', 32, 0,
  /* 1588 */ 'r', 'l', 'd', 'c', 'r', '.', 32, 0,
  /* 1596 */ 'r', 'l', 'd', 'i', 'c', 'r', '.', 32, 0,
  /* 1605 */ 'v', 's', 't', 'r', 'i', 'h', 'r', '.', 32, 0,
  /* 1615 */ 'f', 'm', 'r', '.', 32, 0,
  /* 1621 */ 'n', 'o', 'r', '.', 32, 0,
  /* 1627 */ 'x', 'o', 'r', '.', 32, 0,
  /* 1633 */ 'b', 'c', 'd', 's', 'r', '.', 32, 0,
  /* 1641 */ 't', 's', 'r', '.', 32, 0,
  /* 1647 */ 'f', 'a', 'b', 's', '.', 32, 0,
  /* 1654 */ 'f', 'n', 'a', 'b', 's', '.', 32, 0,
  /* 1662 */ 'f', 's', 'u', 'b', 's', '.', 32, 0,
  /* 1670 */ 'f', 'm', 's', 'u', 'b', 's', '.', 32, 0,
  /* 1679 */ 'f', 'n', 'm', 's', 'u', 'b', 's', '.', 32, 0,
  /* 1689 */ 'b', 'c', 'd', 's', '.', 32, 0,
  /* 1696 */ 'f', 'a', 'd', 'd', 's', '.', 32, 0,
  /* 1704 */ 'f', 'm', 'a', 'd', 'd', 's', '.', 32, 0,
  /* 1713 */ 'f', 'n', 'm', 'a', 'd', 'd', 's', '.', 32, 0,
  /* 1723 */ 'f', 'c', 'f', 'i', 'd', 's', '.', 32, 0,
  /* 1732 */ 'f', 'r', 'e', 's', '.', 32, 0,
  /* 1739 */ 'f', 'r', 's', 'q', 'r', 't', 'e', 's', '.', 32, 0,
  /* 1750 */ 'm', 'f', 'f', 's', '.', 32, 0,
  /* 1757 */ 'a', 'n', 'd', 'i', 's', '.', 32, 0,
  /* 1765 */ 'f', 'm', 'u', 'l', 's', '.', 32, 0,
  /* 1773 */ 'f', 's', 'q', 'r', 't', 's', '.', 32, 0,
  /* 1782 */ 'b', 'c', 'd', 'u', 's', '.', 32, 0,
  /* 1790 */ 'f', 'c', 'f', 'i', 'd', 'u', 's', '.', 32, 0,
  /* 1800 */ 'f', 'd', 'i', 'v', 's', '.', 32, 0,
  /* 1808 */ 't', 'a', 'b', 'o', 'r', 't', '.', 32, 0,
  /* 1817 */ 'f', 's', 'q', 'r', 't', '.', 32, 0,
  /* 1825 */ 'm', 'u', 'l', 'h', 'd', 'u', '.', 32, 0,
  /* 1834 */ 'f', 'c', 'f', 'i', 'd', 'u', '.', 32, 0,
  /* 1843 */ 'f', 'c', 't', 'i', 'd', 'u', '.', 32, 0,
  /* 1852 */ 'd', 'i', 'v', 'd', 'u', '.', 32, 0,
  /* 1860 */ 'd', 'i', 'v', 'd', 'e', 'u', '.', 32, 0,
  /* 1869 */ 'd', 'i', 'v', 'w', 'e', 'u', '.', 32, 0,
  /* 1878 */ 'm', 'u', 'l', 'h', 'w', 'u', '.', 32, 0,
  /* 1887 */ 'f', 'c', 't', 'i', 'w', 'u', '.', 32, 0,
  /* 1896 */ 'd', 'i', 'v', 'w', 'u', '.', 32, 0,
  /* 1904 */ 'f', 'd', 'i', 'v', '.', 32, 0,
  /* 1911 */ 'e', 'q', 'v', '.', 32, 0,
  /* 1917 */ 's', 'r', 'a', 'w', '.', 32, 0,
  /* 1924 */ 'v', 'c', 'm', 'p', 'n', 'e', 'w', '.', 32, 0,
  /* 1934 */ 'm', 'u', 'l', 'h', 'w', '.', 32, 0,
  /* 1942 */ 'f', 'c', 't', 'i', 'w', '.', 32, 0,
  /* 1950 */ 'm', 'u', 'l', 'l', 'w', '.', 32, 0,
  /* 1958 */ 's', 'l', 'w', '.', 32, 0,
  /* 1964 */ 's', 'r', 'w', '.', 32, 0,
  /* 1970 */ 'v', 'c', 'm', 'p', 'g', 't', 's', 'w', '.', 32, 0,
  /* 1981 */ 'e', 'x', 't', 's', 'w', '.', 32, 0,
  /* 1989 */ 'v', 'c', 'm', 'p', 'e', 'q', 'u', 'w', '.', 32, 0,
  /* 2000 */ 'v', 'c', 'm', 'p', 'g', 't', 'u', 'w', '.', 32, 0,
  /* 2011 */ 'd', 'i', 'v', 'w', '.', 32, 0,
  /* 2018 */ 'v', 'c', 'm', 'p', 'n', 'e', 'z', 'w', '.', 32, 0,
  /* 2029 */ 'c', 'n', 't', 'l', 'z', 'w', '.', 32, 0,
  /* 2038 */ 'c', 'n', 't', 't', 'z', 'w', '.', 32, 0,
  /* 2047 */ 's', 't', 'b', 'c', 'x', '.', 32, 0,
  /* 2055 */ 's', 't', 'd', 'c', 'x', '.', 32, 0,
  /* 2063 */ 's', 't', 'h', 'c', 'x', '.', 32, 0,
  /* 2071 */ 's', 't', 'q', 'c', 'x', '.', 32, 0,
  /* 2079 */ 's', 't', 'w', 'c', 'x', '.', 32, 0,
  /* 2087 */ 't', 'l', 'b', 's', 'x', '.', 32, 0,
  /* 2095 */ 'f', 'c', 't', 'i', 'd', 'z', '.', 32, 0,
  /* 2104 */ 'b', 'c', 'd', 'c', 'f', 'z', '.', 32, 0,
  /* 2113 */ 'f', 'r', 'i', 'z', '.', 32, 0,
  /* 2120 */ 'b', 'c', 'd', 'c', 't', 'z', '.', 32, 0,
  /* 2129 */ 'f', 'c', 't', 'i', 'd', 'u', 'z', '.', 32, 0,
  /* 2139 */ 'f', 'c', 't', 'i', 'w', 'u', 'z', '.', 32, 0,
  /* 2149 */ 'f', 'c', 't', 'i', 'w', 'z', '.', 32, 0,
  /* 2158 */ 'm', 't', 'f', 's', 'b', '0', 32, 0,
  /* 2166 */ 'm', 't', 'f', 's', 'b', '1', 32, 0,
  /* 2174 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '3', '2', 32, 0,
  /* 2196 */ 'p', 'm', 'x', 'v', 'b', 'f', '1', '6', 'g', 'e', 'r', '2', 32, 0,
  /* 2210 */ 'p', 'm', 'x', 'v', 'f', '1', '6', 'g', 'e', 'r', '2', 32, 0,
  /* 2223 */ 'p', 'm', 'x', 'v', 'i', '1', '6', 'g', 'e', 'r', '2', 32, 0,
  /* 2236 */ 'p', 'm', 'x', 'v', 'i', '8', 'g', 'e', 'r', '4', 32, 0,
  /* 2248 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '6', 32, 0,
  /* 2270 */ 'x', 'v', 'c', 'v', 's', 'p', 'b', 'f', '1', '6', 32, 0,
  /* 2282 */ '#', 'T', 'C', '_', 'R', 'E', 'T', 'U', 'R', 'N', 'a', '8', 32, 0,
  /* 2296 */ '#', 'T', 'C', '_', 'R', 'E', 'T', 'U', 'R', 'N', 'd', '8', 32, 0,
  /* 2310 */ '#', 'T', 'C', '_', 'R', 'E', 'T', 'U', 'R', 'N', 'r', '8', 32, 0,
  /* 2324 */ 'p', 'm', 'x', 'v', 'i', '4', 'g', 'e', 'r', '8', 32, 0,
  /* 2336 */ '#', 'B', 'U', 'I', 'L', 'D', '_', 'U', 'A', 'C', 'C', 32, 0,
  /* 2349 */ '#', 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'D', 'O', 'W', 'N', 32, 0,
  /* 2368 */ '#', 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'U', 'P', 32, 0,
  /* 2385 */ '#', 'T', 'C', '_', 'R', 'E', 'T', 'U', 'R', 'N', 'a', 32, 0,
  /* 2398 */ 'e', 'v', 'm', 'h', 'e', 'g', 's', 'm', 'f', 'a', 'a', 32, 0,
  /* 2411 */ 'e', 'v', 'm', 'h', 'o', 'g', 's', 'm', 'f', 'a', 'a', 32, 0,
  /* 2424 */ 'e', 'v', 'm', 'w', 's', 'm', 'f', 'a', 'a', 32, 0,
  /* 2435 */ 'e', 'v', 'm', 'w', 's', 's', 'f', 'a', 'a', 32, 0,
  /* 2446 */ 'e', 'v', 'm', 'h', 'e', 'g', 's', 'm', 'i', 'a', 'a', 32, 0,
  /* 2459 */ 'e', 'v', 'm', 'h', 'o', 'g', 's', 'm', 'i', 'a', 'a', 32, 0,
  /* 2472 */ 'e', 'v', 'm', 'w', 's', 'm', 'i', 'a', 'a', 32, 0,
  /* 2483 */ 'e', 'v', 'm', 'h', 'e', 'g', 'u', 'm', 'i', 'a', 'a', 32, 0,
  /* 2496 */ 'e', 'v', 'm', 'h', 'o', 'g', 'u', 'm', 'i', 'a', 'a', 32, 0,
  /* 2509 */ 'e', 'v', 'm', 'w', 'u', 'm', 'i', 'a', 'a', 32, 0,
  /* 2520 */ 'd', 'c', 'b', 'a', 32, 0,
  /* 2526 */ 'b', 'c', 'a', 32, 0,
  /* 2531 */ 'e', 'v', 'm', 'h', 'e', 's', 'm', 'f', 'a', 32, 0,
  /* 2542 */ 'e', 'v', 'm', 'w', 'h', 's', 'm', 'f', 'a', 32, 0,
  /* 2553 */ 'e', 'v', 'm', 'h', 'o', 's', 'm', 'f', 'a', 32, 0,
  /* 2564 */ 'e', 'v', 'm', 'w', 's', 'm', 'f', 'a', 32, 0,
  /* 2574 */ 'e', 'v', 'm', 'h', 'e', 's', 's', 'f', 'a', 32, 0,
  /* 2585 */ 'e', 'v', 'm', 'w', 'h', 's', 's', 'f', 'a', 32, 0,
  /* 2596 */ 'e', 'v', 'm', 'h', 'o', 's', 's', 'f', 'a', 32, 0,
  /* 2607 */ 'e', 'v', 'm', 'w', 's', 's', 'f', 'a', 32, 0,
  /* 2617 */ 'p', 'l', 'h', 'a', 32, 0,
  /* 2623 */ 'e', 'v', 'm', 'h', 'e', 's', 'm', 'i', 'a', 32, 0,
  /* 2634 */ 'e', 'v', 'm', 'w', 'h', 's', 'm', 'i', 'a', 32, 0,
  /* 2645 */ 'e', 'v', 'm', 'h', 'o', 's', 'm', 'i', 'a', 32, 0,
  /* 2656 */ 'e', 'v', 'm', 'w', 's', 'm', 'i', 'a', 32, 0,
  /* 2666 */ 'e', 'v', 'm', 'h', 'e', 'u', 'm', 'i', 'a', 32, 0,
  /* 2677 */ 'e', 'v', 'm', 'w', 'h', 'u', 'm', 'i', 'a', 32, 0,
  /* 2688 */ 'e', 'v', 'm', 'w', 'l', 'u', 'm', 'i', 'a', 32, 0,
  /* 2699 */ 'e', 'v', 'm', 'h', 'o', 'u', 'm', 'i', 'a', 32, 0,
  /* 2710 */ 'e', 'v', 'm', 'w', 'u', 'm', 'i', 'a', 32, 0,
  /* 2720 */ 'b', 'l', 'a', 32, 0,
  /* 2725 */ 'b', 'c', 'l', 'a', 32, 0,
  /* 2731 */ 'b', 'd', 'z', 'l', 'a', 32, 0,
  /* 2738 */ 'b', 'd', 'n', 'z', 'l', 'a', 32, 0,
  /* 2746 */ 'e', 'v', 'm', 'r', 'a', 32, 0,
  /* 2753 */ 'p', 'l', 'w', 'a', 32, 0,
  /* 2759 */ 'm', 't', 'v', 's', 'r', 'w', 'a', 32, 0,
  /* 2768 */ 'b', 'd', 'z', 'a', 32, 0,
  /* 2774 */ 'b', 'd', 'n', 'z', 'a', 32, 0,
  /* 2781 */ 'v', 's', 'r', 'a', 'b', 32, 0,
  /* 2788 */ 'r', 'f', 'e', 'b', 'b', 32, 0,
  /* 2795 */ 'v', 'c', 'n', 't', 'm', 'b', 'b', 32, 0,
  /* 2804 */ 'x', 'v', 't', 'l', 's', 'b', 'b', 32, 0,
  /* 2813 */ 'v', 'c', 'l', 'z', 'l', 's', 'b', 'b', 32, 0,
  /* 2823 */ 'v', 'c', 't', 'z', 'l', 's', 'b', 'b', 32, 0,
  /* 2833 */ 'v', 'c', 'm', 'p', 'n', 'e', 'b', 32, 0,
  /* 2842 */ 'v', 'm', 'r', 'g', 'h', 'b', 32, 0,
  /* 2850 */ 'x', 'x', 's', 'p', 'l', 't', 'i', 'b', 32, 0,
  /* 2860 */ 'v', 'm', 'r', 'g', 'l', 'b', 32, 0,
  /* 2868 */ 'v', 'c', 'l', 'r', 'l', 'b', 32, 0,
  /* 2876 */ 'v', 'r', 'l', 'b', 32, 0,
  /* 2882 */ 'v', 's', 'l', 'b', 32, 0,
  /* 2888 */ 'v', 'p', 'm', 's', 'u', 'm', 'b', 32, 0,
  /* 2897 */ 'v', 'g', 'n', 'b', 32, 0,
  /* 2903 */ 'c', 'm', 'p', 'b', 32, 0,
  /* 2909 */ 'c', 'm', 'p', 'e', 'q', 'b', 32, 0,
  /* 2917 */ 'c', 'm', 'p', 'r', 'b', 32, 0,
  /* 2924 */ 'v', 'c', 'l', 'r', 'r', 'b', 32, 0,
  /* 2932 */ 'v', 's', 'r', 'b', 32, 0,
  /* 2938 */ 'v', 'm', 'u', 'l', 'e', 's', 'b', 32, 0,
  /* 2947 */ 'v', 'a', 'v', 'g', 's', 'b', 32, 0,
  /* 2955 */ 'v', 'u', 'p', 'k', 'h', 's', 'b', 32, 0,
  /* 2964 */ 'v', 's', 'p', 'l', 't', 'i', 's', 'b', 32, 0,
  /* 2974 */ 'v', 'u', 'p', 'k', 'l', 's', 'b', 32, 0,
  /* 2983 */ 'v', 'm', 'i', 'n', 's', 'b', 32, 0,
  /* 2991 */ 'v', 'm', 'u', 'l', 'o', 's', 'b', 32, 0,
  /* 3000 */ 'v', 'c', 'm', 'p', 'g', 't', 's', 'b', 32, 0,
  /* 3010 */ 'e', 'v', 'e', 'x', 't', 's', 'b', 32, 0,
  /* 3019 */ 'v', 'm', 'a', 'x', 's', 'b', 32, 0,
  /* 3027 */ 's', 'e', 't', 'b', 32, 0,
  /* 3033 */ 'm', 'f', 't', 'b', 32, 0,
  /* 3039 */ 'v', 's', 'p', 'l', 't', 'b', 32, 0,
  /* 3047 */ 'v', 'p', 'o', 'p', 'c', 'n', 't', 'b', 32, 0,
  /* 3057 */ 'v', 'i', 'n', 's', 'e', 'r', 't', 'b', 32, 0,
  /* 3067 */ 'p', 's', 't', 'b', 32, 0,
  /* 3073 */ 'v', 'a', 'b', 's', 'd', 'u', 'b', 32, 0,
  /* 3082 */ 'v', 'm', 'u', 'l', 'e', 'u', 'b', 32, 0,
  /* 3091 */ 'v', 'a', 'v', 'g', 'u', 'b', 32, 0,
  /* 3099 */ 'v', 'm', 'i', 'n', 'u', 'b', 32, 0,
  /* 3107 */ 'v', 'm', 'u', 'l', 'o', 'u', 'b', 32, 0,
  /* 3116 */ 'v', 'c', 'm', 'p', 'e', 'q', 'u', 'b', 32, 0,
  /* 3126 */ 'e', 'f', 'd', 's', 'u', 'b', 32, 0,
  /* 3134 */ 'f', 's', 'u', 'b', 32, 0,
  /* 3140 */ 'f', 'm', 's', 'u', 'b', 32, 0,
  /* 3147 */ 'f', 'n', 'm', 's', 'u', 'b', 32, 0,
  /* 3155 */ 'e', 'f', 's', 's', 'u', 'b', 32, 0,
  /* 3163 */ 'e', 'v', 'f', 's', 's', 'u', 'b', 32, 0,
  /* 3172 */ 'v', 'e', 'x', 't', 'r', 'a', 'c', 't', 'u', 'b', 32, 0,
  /* 3184 */ 'v', 'c', 'm', 'p', 'g', 't', 'u', 'b', 32, 0,
  /* 3194 */ 'v', 'm', 'a', 'x', 'u', 'b', 32, 0,
  /* 3202 */ 'x', 'x', 'b', 'l', 'e', 'n', 'd', 'v', 'b', 32, 0,
  /* 3213 */ 'v', 'c', 'm', 'p', 'n', 'e', 'z', 'b', 32, 0,
  /* 3223 */ 'v', 'c', 'l', 'z', 'b', 32, 0,
  /* 3230 */ 'v', 'c', 't', 'z', 'b', 32, 0,
  /* 3237 */ 's', 'e', 't', 'n', 'b', 'c', 32, 0,
  /* 3245 */ 's', 'e', 't', 'b', 'c', 32, 0,
  /* 3252 */ 'x', 'x', 'm', 'f', 'a', 'c', 'c', 32, 0,
  /* 3261 */ 'x', 'x', 'm', 't', 'a', 'c', 'c', 32, 0,
  /* 3270 */ 'a', 'd', 'd', 'c', 32, 0,
  /* 3276 */ 'x', 'x', 'l', 'a', 'n', 'd', 'c', 32, 0,
  /* 3285 */ 'c', 'r', 'a', 'n', 'd', 'c', 32, 0,
  /* 3293 */ 'e', 'v', 'a', 'n', 'd', 'c', 32, 0,
  /* 3301 */ 's', 'u', 'b', 'f', 'c', 32, 0,
  /* 3308 */ 's', 'u', 'b', 'i', 'c', 32, 0,
  /* 3315 */ 'a', 'd', 'd', 'i', 'c', 32, 0,
  /* 3322 */ 'r', 'l', 'd', 'i', 'c', 32, 0,
  /* 3329 */ 's', 'u', 'b', 'f', 'i', 'c', 32, 0,
  /* 3337 */ 'x', 's', 'r', 'd', 'p', 'i', 'c', 32, 0,
  /* 3346 */ 'x', 'v', 'r', 'd', 'p', 'i', 'c', 32, 0,
  /* 3355 */ 'x', 'v', 'r', 's', 'p', 'i', 'c', 32, 0,
  /* 3364 */ 'i', 'c', 'b', 'l', 'c', 32, 0,
  /* 3371 */ 'b', 'r', 'i', 'n', 'c', 32, 0,
  /* 3378 */ 's', 'y', 'n', 'c', 32, 0,
  /* 3384 */ 'x', 'x', 'l', 'o', 'r', 'c', 32, 0,
  /* 3392 */ 'c', 'r', 'o', 'r', 'c', 32, 0,
  /* 3399 */ 'e', 'v', 'o', 'r', 'c', 32, 0,
  /* 3406 */ 's', 'c', 32, 0,
  /* 3410 */ 'v', 'e', 'x', 't', 's', 'b', '2', 'd', 32, 0,
  /* 3420 */ 'v', 'e', 'x', 't', 's', 'h', '2', 'd', 32, 0,
  /* 3430 */ 'v', 'e', 'x', 't', 's', 'w', '2', 'd', 32, 0,
  /* 3440 */ '#', 'T', 'C', '_', 'R', 'E', 'T', 'U', 'R', 'N', 'd', 32, 0,
  /* 3453 */ 'v', 's', 'h', 'a', 's', 'i', 'g', 'm', 'a', 'd', 32, 0,
  /* 3465 */ 'v', 's', 'r', 'a', 'd', 32, 0,
  /* 3472 */ 'v', 'g', 'b', 'b', 'd', 32, 0,
  /* 3479 */ 'v', 'c', 'n', 't', 'm', 'b', 'd', 32, 0,
  /* 3488 */ 'v', 'p', 'r', 't', 'y', 'b', 'd', 32, 0,
  /* 3497 */ 'e', 'f', 'd', 'a', 'd', 'd', 32, 0,
  /* 3505 */ 'f', 'a', 'd', 'd', 32, 0,
  /* 3511 */ 'f', 'm', 'a', 'd', 'd', 32, 0,
  /* 3518 */ 'f', 'n', 'm', 'a', 'd', 'd', 32, 0,
  /* 3526 */ 'e', 'f', 's', 'a', 'd', 'd', 32, 0,
  /* 3534 */ 'e', 'v', 'f', 's', 'a', 'd', 'd', 32, 0,
  /* 3543 */ 'e', 'v', 'l', 'd', 'd', 32, 0,
  /* 3550 */ 'm', 't', 'v', 's', 'r', 'd', 'd', 32, 0,
  /* 3559 */ 'e', 'v', 's', 't', 'd', 'd', 32, 0,
  /* 3567 */ 'v', 'c', 'f', 'u', 'g', 'e', 'd', 32, 0,
  /* 3576 */ 'e', 'f', 's', 'c', 'f', 'd', 32, 0,
  /* 3584 */ 'p', 'l', 'f', 'd', 32, 0,
  /* 3590 */ 'p', 's', 't', 'f', 'd', 32, 0,
  /* 3597 */ 'v', 'n', 'e', 'g', 'd', 32, 0,
  /* 3604 */ 'm', 'a', 'd', 'd', 'h', 'd', 32, 0,
  /* 3612 */ 'm', 'u', 'l', 'h', 'd', 32, 0,
  /* 3619 */ 'f', 'c', 'f', 'i', 'd', 32, 0,
  /* 3626 */ 'e', 'f', 'd', 'c', 'f', 's', 'i', 'd', 32, 0,
  /* 3636 */ 'f', 'c', 't', 'i', 'd', 32, 0,
  /* 3643 */ 'e', 'f', 'd', 'c', 'f', 'u', 'i', 'd', 32, 0,
  /* 3653 */ 't', 'l', 'b', 'l', 'd', 32, 0,
  /* 3660 */ 'm', 'a', 'd', 'd', 'l', 'd', 32, 0,
  /* 3668 */ 'v', 'm', 'u', 'l', 'l', 'd', 32, 0,
  /* 3676 */ 'c', 'm', 'p', 'l', 'd', 32, 0,
  /* 3683 */ 'm', 'f', 'v', 's', 'r', 'l', 'd', 32, 0,
  /* 3692 */ 'v', 'r', 'l', 'd', 32, 0,
  /* 3698 */ 'v', 's', 'l', 'd', 32, 0,
  /* 3704 */ 'v', 'b', 'p', 'e', 'r', 'm', 'd', 32, 0,
  /* 3713 */ 'v', 'p', 'm', 's', 'u', 'm', 'd', 32, 0,
  /* 3722 */ 'x', 'x', 'l', 'a', 'n', 'd', 32, 0,
  /* 3730 */ 'x', 'x', 'l', 'n', 'a', 'n', 'd', 32, 0,
  /* 3739 */ 'c', 'r', 'n', 'a', 'n', 'd', 32, 0,
  /* 3747 */ 'e', 'v', 'n', 'a', 'n', 'd', 32, 0,
  /* 3755 */ 'c', 'r', 'a', 'n', 'd', 32, 0,
  /* 3762 */ 'e', 'v', 'a', 'n', 'd', 32, 0,
  /* 3769 */ 'v', 'p', 'd', 'e', 'p', 'd', 32, 0,
  /* 3777 */ 'c', 'm', 'p', 'd', 32, 0,
  /* 3783 */ 'x', 'x', 'b', 'r', 'd', 32, 0,
  /* 3790 */ 'm', 't', 'm', 's', 'r', 'd', 32, 0,
  /* 3798 */ 'm', 'f', 'v', 's', 'r', 'd', 32, 0,
  /* 3806 */ 'm', 't', 'v', 's', 'r', 'd', 32, 0,
  /* 3814 */ 'v', 'm', 'o', 'd', 's', 'd', 32, 0,
  /* 3822 */ 'v', 'm', 'u', 'l', 'e', 's', 'd', 32, 0,
  /* 3831 */ 'v', 'd', 'i', 'v', 'e', 's', 'd', 32, 0,
  /* 3840 */ 'v', 'm', 'u', 'l', 'h', 's', 'd', 32, 0,
  /* 3849 */ 'v', 'm', 'i', 'n', 's', 'd', 32, 0,
  /* 3857 */ 'v', 'i', 'n', 's', 'd', 32, 0,
  /* 3864 */ 'v', 'm', 'u', 'l', 'o', 's', 'd', 32, 0,
  /* 3873 */ 'v', 'c', 'm', 'p', 'g', 't', 's', 'd', 32, 0,
  /* 3883 */ 'v', 'd', 'i', 'v', 's', 'd', 32, 0,
  /* 3891 */ 'v', 'm', 'a', 'x', 's', 'd', 32, 0,
  /* 3899 */ 'p', 'l', 'x', 's', 'd', 32, 0,
  /* 3906 */ 'p', 's', 't', 'x', 's', 'd', 32, 0,
  /* 3914 */ 'v', 'e', 'x', 't', 'r', 'a', 'c', 't', 'd', 32, 0,
  /* 3925 */ 'v', 'p', 'o', 'p', 'c', 'n', 't', 'd', 32, 0,
  /* 3935 */ 'v', 'i', 'n', 's', 'e', 'r', 't', 'd', 32, 0,
  /* 3945 */ 'p', 's', 't', 'd', 32, 0,
  /* 3951 */ 'v', 'p', 'e', 'x', 't', 'd', 32, 0,
  /* 3959 */ 'v', 'm', 's', 'u', 'm', 'c', 'u', 'd', 32, 0,
  /* 3969 */ 'v', 'm', 'o', 'd', 'u', 'd', 32, 0,
  /* 3977 */ 'v', 'm', 'u', 'l', 'e', 'u', 'd', 32, 0,
  /* 3986 */ 'v', 'd', 'i', 'v', 'e', 'u', 'd', 32, 0,
  /* 3995 */ 'v', 'm', 'u', 'l', 'h', 'u', 'd', 32, 0,
  /* 4004 */ 'v', 'm', 'i', 'n', 'u', 'd', 32, 0,
  /* 4012 */ 'v', 'm', 'u', 'l', 'o', 'u', 'd', 32, 0,
  /* 4021 */ 'v', 'c', 'm', 'p', 'e', 'q', 'u', 'd', 32, 0,
  /* 4031 */ 'v', 'c', 'm', 'p', 'g', 't', 'u', 'd', 32, 0,
  /* 4041 */ 'v', 'd', 'i', 'v', 'u', 'd', 32, 0,
  /* 4049 */ 'v', 'm', 'a', 'x', 'u', 'd', 32, 0,
  /* 4057 */ 'x', 'x', 'b', 'l', 'e', 'n', 'd', 'v', 'd', 32, 0,
  /* 4068 */ 'd', 'i', 'v', 'd', 32, 0,
  /* 4074 */ 'v', 'c', 'l', 'z', 'd', 32, 0,
  /* 4081 */ 'c', 'n', 't', 'l', 'z', 'd', 32, 0,
  /* 4089 */ 'v', 'c', 't', 'z', 'd', 32, 0,
  /* 4096 */ 'c', 'n', 't', 't', 'z', 'd', 32, 0,
  /* 4104 */ 'm', 'f', 'b', 'h', 'r', 'b', 'e', 32, 0,
  /* 4113 */ 'm', 'f', 'f', 's', 'c', 'e', 32, 0,
  /* 4121 */ 'a', 'd', 'd', 'e', 32, 0,
  /* 4127 */ 'd', 'i', 'v', 'd', 'e', 32, 0,
  /* 4134 */ 's', 'l', 'b', 'm', 'f', 'e', 'e', 32, 0,
  /* 4143 */ 'w', 'r', 't', 'e', 'e', 32, 0,
  /* 4150 */ 's', 'u', 'b', 'f', 'e', 32, 0,
  /* 4157 */ 'e', 'v', 'l', 'w', 'h', 'e', 32, 0,
  /* 4165 */ 'e', 'v', 's', 't', 'w', 'h', 'e', 32, 0,
  /* 4174 */ 's', 'l', 'b', 'i', 'e', 32, 0,
  /* 4181 */ 't', 'l', 'b', 'i', 'e', 32, 0,
  /* 4188 */ 'a', 'd', 'd', 'm', 'e', 32, 0,
  /* 4195 */ 's', 'u', 'b', 'f', 'm', 'e', 32, 0,
  /* 4203 */ 't', 'l', 'b', 'r', 'e', 32, 0,
  /* 4210 */ 'f', 'r', 'e', 32, 0,
  /* 4215 */ 's', 'l', 'b', 'm', 't', 'e', 32, 0,
  /* 4223 */ 'f', 'r', 's', 'q', 'r', 't', 'e', 32, 0,
  /* 4232 */ 't', 'l', 'b', 'w', 'e', 32, 0,
  /* 4239 */ 'd', 'i', 'v', 'w', 'e', 32, 0,
  /* 4246 */ 'e', 'v', 's', 't', 'w', 'w', 'e', 32, 0,
  /* 4255 */ 'a', 'd', 'd', 'z', 'e', 32, 0,
  /* 4262 */ 's', 'u', 'b', 'f', 'z', 'e', 32, 0,
  /* 4270 */ 'd', 'c', 'b', 'f', 32, 0,
  /* 4276 */ 's', 'u', 'b', 'f', 32, 0,
  /* 4282 */ 'e', 'v', 'm', 'h', 'e', 's', 'm', 'f', 32, 0,
  /* 4292 */ 'e', 'v', 'm', 'w', 'h', 's', 'm', 'f', 32, 0,
  /* 4302 */ 'e', 'v', 'm', 'h', 'o', 's', 'm', 'f', 32, 0,
  /* 4312 */ 'e', 'v', 'm', 'w', 's', 'm', 'f', 32, 0,
  /* 4321 */ 'm', 'c', 'r', 'f', 32, 0,
  /* 4327 */ 'm', 'f', 'o', 'c', 'r', 'f', 32, 0,
  /* 4335 */ 'm', 't', 'o', 'c', 'r', 'f', 32, 0,
  /* 4343 */ 'm', 't', 'c', 'r', 'f', 32, 0,
  /* 4350 */ 'e', 'f', 'd', 'c', 'f', 's', 'f', 32, 0,
  /* 4359 */ 'e', 'f', 's', 'c', 'f', 's', 'f', 32, 0,
  /* 4368 */ 'e', 'v', 'f', 's', 'c', 'f', 's', 'f', 32, 0,
  /* 4378 */ 'm', 't', 'f', 's', 'f', 32, 0,
  /* 4385 */ 'e', 'v', 'm', 'h', 'e', 's', 's', 'f', 32, 0,
  /* 4395 */ 'e', 'v', 'm', 'w', 'h', 's', 's', 'f', 32, 0,
  /* 4405 */ 'e', 'v', 'm', 'h', 'o', 's', 's', 'f', 32, 0,
  /* 4415 */ 'e', 'v', 'm', 'w', 's', 's', 'f', 32, 0,
  /* 4424 */ 'e', 'f', 'd', 'c', 't', 's', 'f', 32, 0,
  /* 4433 */ 'e', 'f', 's', 'c', 't', 's', 'f', 32, 0,
  /* 4442 */ 'e', 'v', 'f', 's', 'c', 't', 's', 'f', 32, 0,
  /* 4452 */ 'e', 'f', 'd', 'c', 'f', 'u', 'f', 32, 0,
  /* 4461 */ 'e', 'f', 's', 'c', 'f', 'u', 'f', 32, 0,
  /* 4470 */ 'e', 'v', 'f', 's', 'c', 'f', 'u', 'f', 32, 0,
  /* 4480 */ 'e', 'f', 'd', 'c', 't', 'u', 'f', 32, 0,
  /* 4489 */ 'e', 'f', 's', 'c', 't', 'u', 'f', 32, 0,
  /* 4498 */ 's', 'l', 'b', 'i', 'e', 'g', 32, 0,
  /* 4506 */ 'e', 'f', 'd', 'n', 'e', 'g', 32, 0,
  /* 4514 */ 'f', 'n', 'e', 'g', 32, 0,
  /* 4520 */ 'e', 'f', 's', 'n', 'e', 'g', 32, 0,
  /* 4528 */ 'e', 'v', 'f', 's', 'n', 'e', 'g', 32, 0,
  /* 4537 */ 'e', 'v', 'n', 'e', 'g', 32, 0,
  /* 4544 */ 'v', 's', 'r', 'a', 'h', 32, 0,
  /* 4551 */ 'v', 'c', 'n', 't', 'm', 'b', 'h', 32, 0,
  /* 4560 */ 'e', 'v', 'l', 'd', 'h', 32, 0,
  /* 4567 */ 'e', 'v', 's', 't', 'd', 'h', 32, 0,
  /* 4575 */ 'v', 'c', 'm', 'p', 'n', 'e', 'h', 32, 0,
  /* 4584 */ 'v', 'm', 'r', 'g', 'h', 'h', 32, 0,
  /* 4592 */ 'v', 'm', 'r', 'g', 'l', 'h', 32, 0,
  /* 4600 */ 'v', 'r', 'l', 'h', 32, 0,
  /* 4606 */ 'v', 's', 'l', 'h', 32, 0,
  /* 4612 */ 'v', 'p', 'm', 's', 'u', 'm', 'h', 32, 0,
  /* 4621 */ 'x', 'x', 'b', 'r', 'h', 32, 0,
  /* 4628 */ 'v', 's', 'r', 'h', 32, 0,
  /* 4634 */ 'v', 'm', 'u', 'l', 'e', 's', 'h', 32, 0,
  /* 4643 */ 'v', 'a', 'v', 'g', 's', 'h', 32, 0,
  /* 4651 */ 'v', 'u', 'p', 'k', 'h', 's', 'h', 32, 0,
  /* 4660 */ 'v', 's', 'p', 'l', 't', 'i', 's', 'h', 32, 0,
  /* 4670 */ 'v', 'u', 'p', 'k', 'l', 's', 'h', 32, 0,
  /* 4679 */ 'v', 'm', 'i', 'n', 's', 'h', 32, 0,
  /* 4687 */ 'v', 'm', 'u', 'l', 'o', 's', 'h', 32, 0,
  /* 4696 */ 'v', 'c', 'm', 'p', 'g', 't', 's', 'h', 32, 0,
  /* 4706 */ 'e', 'v', 'e', 'x', 't', 's', 'h', 32, 0,
  /* 4715 */ 'v', 'm', 'a', 'x', 's', 'h', 32, 0,
  /* 4723 */ 'v', 's', 'p', 'l', 't', 'h', 32, 0,
  /* 4731 */ 'v', 'p', 'o', 'p', 'c', 'n', 't', 'h', 32, 0,
  /* 4741 */ 'v', 'i', 'n', 's', 'e', 'r', 't', 'h', 32, 0,
  /* 4751 */ 'p', 's', 't', 'h', 32, 0,
  /* 4757 */ 'v', 'a', 'b', 's', 'd', 'u', 'h', 32, 0,
  /* 4766 */ 'v', 'm', 'u', 'l', 'e', 'u', 'h', 32, 0,
  /* 4775 */ 'v', 'a', 'v', 'g', 'u', 'h', 32, 0,
  /* 4783 */ 'v', 'm', 'i', 'n', 'u', 'h', 32, 0,
  /* 4791 */ 'v', 'm', 'u', 'l', 'o', 'u', 'h', 32, 0,
  /* 4800 */ 'v', 'c', 'm', 'p', 'e', 'q', 'u', 'h', 32, 0,
  /* 4810 */ 'v', 'e', 'x', 't', 'r', 'a', 'c', 't', 'u', 'h', 32, 0,
  /* 4822 */ 'v', 'c', 'm', 'p', 'g', 't', 'u', 'h', 32, 0,
  /* 4832 */ 'v', 'm', 'a', 'x', 'u', 'h', 32, 0,
  /* 4840 */ 'x', 'x', 'b', 'l', 'e', 'n', 'd', 'v', 'h', 32, 0,
  /* 4851 */ 'v', 'c', 'm', 'p', 'n', 'e', 'z', 'h', 32, 0,
  /* 4861 */ 'v', 'c', 'l', 'z', 'h', 32, 0,
  /* 4868 */ 'v', 'c', 't', 'z', 'h', 32, 0,
  /* 4875 */ 'd', 'c', 'b', 'i', 32, 0,
  /* 4881 */ 'i', 'c', 'b', 'i', 32, 0,
  /* 4887 */ 'v', 's', 'l', 'd', 'b', 'i', 32, 0,
  /* 4895 */ 'v', 's', 'r', 'd', 'b', 'i', 32, 0,
  /* 4903 */ 's', 'u', 'b', 'i', 32, 0,
  /* 4909 */ 'd', 'c', 'c', 'c', 'i', 32, 0,
  /* 4916 */ 'i', 'c', 'c', 'c', 'i', 32, 0,
  /* 4923 */ 's', 'r', 'a', 'd', 'i', 32, 0,
  /* 4930 */ 'p', 'a', 'd', 'd', 'i', 32, 0,
  /* 4937 */ 'c', 'm', 'p', 'l', 'd', 'i', 32, 0,
  /* 4945 */ 'c', 'l', 'r', 'l', 's', 'l', 'd', 'i', 32, 0,
  /* 4955 */ 'e', 'x', 't', 'l', 'd', 'i', 32, 0,
  /* 4963 */ 'x', 'x', 'p', 'e', 'r', 'm', 'd', 'i', 32, 0,
  /* 4973 */ 'c', 'm', 'p', 'd', 'i', 32, 0,
  /* 4980 */ 'c', 'l', 'r', 'r', 'd', 'i', 32, 0,
  /* 4988 */ 'i', 'n', 's', 'r', 'd', 'i', 32, 0,
  /* 4996 */ 'r', 'o', 't', 'r', 'd', 'i', 32, 0,
  /* 5004 */ 'e', 'x', 't', 'r', 'd', 'i', 32, 0,
  /* 5012 */ 't', 'd', 'i', 32, 0,
  /* 5017 */ 'w', 'r', 't', 'e', 'e', 'i', 32, 0,
  /* 5025 */ 'm', 't', 'f', 's', 'f', 'i', 32, 0,
  /* 5033 */ 'e', 'v', 's', 'p', 'l', 'a', 't', 'f', 'i', 32, 0,
  /* 5044 */ 'e', 'v', 'm', 'e', 'r', 'g', 'e', 'h', 'i', 32, 0,
  /* 5055 */ 'e', 'v', 'm', 'e', 'r', 'g', 'e', 'l', 'o', 'h', 'i', 32, 0,
  /* 5068 */ 't', 'l', 'b', 'l', 'i', 32, 0,
  /* 5075 */ 'm', 'u', 'l', 'l', 'i', 32, 0,
  /* 5082 */ 'p', 'l', 'i', 32, 0,
  /* 5087 */ 'e', 'x', 't', 's', 'w', 's', 'l', 'i', 32, 0,
  /* 5097 */ 'm', 't', 'v', 's', 'r', 'b', 'm', 'i', 32, 0,
  /* 5107 */ 'v', 'r', 'l', 'd', 'm', 'i', 32, 0,
  /* 5115 */ 'r', 'l', 'd', 'i', 'm', 'i', 32, 0,
  /* 5123 */ 'r', 'l', 'w', 'i', 'm', 'i', 32, 0,
  /* 5131 */ 'v', 'r', 'l', 'q', 'm', 'i', 32, 0,
  /* 5139 */ 'e', 'v', 'm', 'h', 'e', 's', 'm', 'i', 32, 0,
  /* 5149 */ 'e', 'v', 'm', 'w', 'h', 's', 'm', 'i', 32, 0,
  /* 5159 */ 'e', 'v', 'm', 'h', 'o', 's', 'm', 'i', 32, 0,
  /* 5169 */ 'e', 'v', 'm', 'w', 's', 'm', 'i', 32, 0,
  /* 5178 */ 'e', 'v', 'm', 'h', 'e', 'u', 'm', 'i', 32, 0,
  /* 5188 */ 'e', 'v', 'm', 'w', 'h', 'u', 'm', 'i', 32, 0,
  /* 5198 */ 'e', 'v', 'm', 'w', 'l', 'u', 'm', 'i', 32, 0,
  /* 5208 */ 'e', 'v', 'm', 'h', 'o', 'u', 'm', 'i', 32, 0,
  /* 5218 */ 'e', 'v', 'm', 'w', 'u', 'm', 'i', 32, 0,
  /* 5227 */ 'v', 'r', 'l', 'w', 'm', 'i', 32, 0,
  /* 5235 */ 'm', 'f', 'f', 's', 'c', 'r', 'n', 'i', 32, 0,
  /* 5245 */ 'm', 'f', 'f', 's', 'c', 'd', 'r', 'n', 'i', 32, 0,
  /* 5256 */ 'v', 's', 'l', 'd', 'o', 'i', 32, 0,
  /* 5264 */ 'x', 's', 'r', 'd', 'p', 'i', 32, 0,
  /* 5272 */ 'x', 'v', 'r', 'd', 'p', 'i', 32, 0,
  /* 5280 */ 'x', 's', 'r', 'q', 'p', 'i', 32, 0,
  /* 5288 */ 'x', 'v', 'r', 's', 'p', 'i', 32, 0,
  /* 5296 */ 'x', 'o', 'r', 'i', 32, 0,
  /* 5302 */ 'e', 'f', 'd', 'c', 'f', 's', 'i', 32, 0,
  /* 5311 */ 'e', 'f', 's', 'c', 'f', 's', 'i', 32, 0,
  /* 5320 */ 'e', 'v', 'f', 's', 'c', 'f', 's', 'i', 32, 0,
  /* 5330 */ 'e', 'f', 'd', 'c', 't', 's', 'i', 32, 0,
  /* 5339 */ 'e', 'f', 's', 'c', 't', 's', 'i', 32, 0,
  /* 5348 */ 'e', 'v', 'f', 's', 'c', 't', 's', 'i', 32, 0,
  /* 5358 */ 'e', 'v', 's', 'p', 'l', 'a', 't', 'i', 32, 0,
  /* 5368 */ 'e', 'f', 'd', 'c', 'f', 'u', 'i', 32, 0,
  /* 5377 */ 'e', 'f', 's', 'c', 'f', 'u', 'i', 32, 0,
  /* 5386 */ 'e', 'v', 'f', 's', 'c', 'f', 'u', 'i', 32, 0,
  /* 5396 */ 'e', 'f', 'd', 'c', 't', 'u', 'i', 32, 0,
  /* 5405 */ 'e', 'f', 's', 'c', 't', 'u', 'i', 32, 0,
  /* 5414 */ 'e', 'v', 'f', 's', 'c', 't', 'u', 'i', 32, 0,
  /* 5424 */ 's', 'r', 'a', 'w', 'i', 32, 0,
  /* 5431 */ 'x', 'x', 's', 'l', 'd', 'w', 'i', 32, 0,
  /* 5440 */ 'c', 'm', 'p', 'l', 'w', 'i', 32, 0,
  /* 5448 */ 'e', 'v', 'r', 'l', 'w', 'i', 32, 0,
  /* 5456 */ 'c', 'l', 'r', 'l', 's', 'l', 'w', 'i', 32, 0,
  /* 5466 */ 'i', 'n', 's', 'l', 'w', 'i', 32, 0,
  /* 5474 */ 'e', 'v', 's', 'l', 'w', 'i', 32, 0,
  /* 5482 */ 'e', 'x', 't', 'l', 'w', 'i', 32, 0,
  /* 5490 */ 'c', 'm', 'p', 'w', 'i', 32, 0,
  /* 5497 */ 'c', 'l', 'r', 'r', 'w', 'i', 32, 0,
  /* 5505 */ 'i', 'n', 's', 'r', 'w', 'i', 32, 0,
  /* 5513 */ 'r', 'o', 't', 'r', 'w', 'i', 32, 0,
  /* 5521 */ 'e', 'x', 't', 'r', 'w', 'i', 32, 0,
  /* 5529 */ 'l', 's', 'w', 'i', 32, 0,
  /* 5535 */ 's', 't', 's', 'w', 'i', 32, 0,
  /* 5542 */ 't', 'w', 'i', 32, 0,
  /* 5547 */ 't', 'c', 'h', 'e', 'c', 'k', 32, 0,
  /* 5555 */ 'h', 'a', 's', 'h', 'c', 'h', 'k', 32, 0,
  /* 5564 */ 'x', 'x', 'e', 'v', 'a', 'l', 32, 0,
  /* 5572 */ 'v', 's', 't', 'r', 'i', 'b', 'l', 32, 0,
  /* 5581 */ 'b', 'c', 'l', 32, 0,
  /* 5586 */ 'r', 'l', 'd', 'c', 'l', 32, 0,
  /* 5593 */ 'r', 'l', 'd', 'i', 'c', 'l', 32, 0,
  /* 5601 */ 't', 'l', 'b', 'i', 'e', 'l', 32, 0,
  /* 5609 */ 'f', 's', 'e', 'l', 32, 0,
  /* 5615 */ 'i', 's', 'e', 'l', 32, 0,
  /* 5621 */ 'v', 's', 'e', 'l', 32, 0,
  /* 5627 */ 'x', 'x', 's', 'e', 'l', 32, 0,
  /* 5634 */ 'd', 'c', 'b', 'f', 'l', 32, 0,
  /* 5641 */ 'v', 's', 't', 'r', 'i', 'h', 'l', 32, 0,
  /* 5650 */ 'l', 'x', 'v', 'l', 'l', 32, 0,
  /* 5657 */ 's', 't', 'x', 'v', 'l', 'l', 32, 0,
  /* 5665 */ 'b', 'c', 'l', 'r', 'l', 32, 0,
  /* 5672 */ 'b', 'c', 'c', 't', 'r', 'l', 32, 0,
  /* 5680 */ 'm', 'f', 'f', 's', 'l', 32, 0,
  /* 5687 */ 'l', 'v', 's', 'l', 32, 0,
  /* 5693 */ 'e', 'f', 'd', 'm', 'u', 'l', 32, 0,
  /* 5701 */ 'f', 'm', 'u', 'l', 32, 0,
  /* 5707 */ 'e', 'f', 's', 'm', 'u', 'l', 32, 0,
  /* 5715 */ 'e', 'v', 'f', 's', 'm', 'u', 'l', 32, 0,
  /* 5724 */ 'l', 'x', 'v', 'l', 32, 0,
  /* 5730 */ 's', 't', 'x', 'v', 'l', 32, 0,
  /* 5737 */ 'l', 'v', 'x', 'l', 32, 0,
  /* 5743 */ 's', 't', 'v', 'x', 'l', 32, 0,
  /* 5750 */ 'd', 'c', 'b', 'z', 'l', 32, 0,
  /* 5757 */ 'b', 'd', 'z', 'l', 32, 0,
  /* 5763 */ 'b', 'd', 'n', 'z', 'l', 32, 0,
  /* 5770 */ 'v', 'e', 'x', 'p', 'a', 'n', 'd', 'b', 'm', 32, 0,
  /* 5781 */ 'v', 'm', 's', 'u', 'm', 'm', 'b', 'm', 32, 0,
  /* 5791 */ 'm', 't', 'v', 's', 'r', 'b', 'm', 32, 0,
  /* 5800 */ 'v', 'e', 'x', 't', 'r', 'a', 'c', 't', 'b', 'm', 32, 0,
  /* 5812 */ 'v', 's', 'u', 'b', 'u', 'b', 'm', 32, 0,
  /* 5821 */ 'v', 'a', 'd', 'd', 'u', 'b', 'm', 32, 0,
  /* 5830 */ 'v', 'm', 's', 'u', 'm', 'u', 'b', 'm', 32, 0,
  /* 5840 */ 'x', 'x', 'g', 'e', 'n', 'p', 'c', 'v', 'b', 'm', 32, 0,
  /* 5852 */ 'v', 'e', 'x', 'p', 'a', 'n', 'd', 'd', 'm', 32, 0,
  /* 5863 */ 'm', 't', 'v', 's', 'r', 'd', 'm', 32, 0,
  /* 5872 */ 'v', 'e', 'x', 't', 'r', 'a', 'c', 't', 'd', 'm', 32, 0,
  /* 5884 */ 'v', 's', 'u', 'b', 'u', 'd', 'm', 32, 0,
  /* 5893 */ 'v', 'a', 'd', 'd', 'u', 'd', 'm', 32, 0,
  /* 5902 */ 'v', 'm', 's', 'u', 'm', 'u', 'd', 'm', 32, 0,
  /* 5912 */ 'x', 'x', 'g', 'e', 'n', 'p', 'c', 'v', 'd', 'm', 32, 0,
  /* 5924 */ 'v', 'c', 'l', 'z', 'd', 'm', 32, 0,
  /* 5932 */ 'c', 'n', 't', 'l', 'z', 'd', 'm', 32, 0,
  /* 5941 */ 'v', 'c', 't', 'z', 'd', 'm', 32, 0,
  /* 5949 */ 'c', 'n', 't', 't', 'z', 'd', 'm', 32, 0,
  /* 5958 */ 'v', 'e', 'x', 'p', 'a', 'n', 'd', 'h', 'm', 32, 0,
  /* 5969 */ 'm', 't', 'v', 's', 'r', 'h', 'm', 32, 0,
  /* 5978 */ 'v', 'm', 's', 'u', 'm', 's', 'h', 'm', 32, 0,
  /* 5988 */ 'v', 'e', 'x', 't', 'r', 'a', 'c', 't', 'h', 'm', 32, 0,
  /* 6000 */ 'v', 's', 'u', 'b', 'u', 'h', 'm', 32, 0,
  /* 6009 */ 'v', 'm', 'l', 'a', 'd', 'd', 'u', 'h', 'm', 32, 0,
  /* 6020 */ 'v', 'a', 'd', 'd', 'u', 'h', 'm', 32, 0,
  /* 6029 */ 'v', 'm', 's', 'u', 'm', 'u', 'h', 'm', 32, 0,
  /* 6039 */ 'x', 'x', 'g', 'e', 'n', 'p', 'c', 'v', 'h', 'm', 32, 0,
  /* 6051 */ 'v', 'r', 'f', 'i', 'm', 32, 0,
  /* 6058 */ 'x', 's', 'r', 'd', 'p', 'i', 'm', 32, 0,
  /* 6067 */ 'x', 'v', 'r', 'd', 'p', 'i', 'm', 32, 0,
  /* 6076 */ 'x', 'v', 'r', 's', 'p', 'i', 'm', 32, 0,
  /* 6085 */ 'f', 'r', 'i', 'm', 32, 0,
  /* 6091 */ 'v', 'r', 'l', 'd', 'n', 'm', 32, 0,
  /* 6099 */ 'r', 'l', 'w', 'i', 'n', 'm', 32, 0,
  /* 6107 */ 'v', 'r', 'l', 'q', 'n', 'm', 32, 0,
  /* 6115 */ 'v', 'r', 'l', 'w', 'n', 'm', 32, 0,
  /* 6123 */ 'v', 'e', 'x', 'p', 'a', 'n', 'd', 'q', 'm', 32, 0,
  /* 6134 */ 'm', 't', 'v', 's', 'r', 'q', 'm', 32, 0,
  /* 6143 */ 'v', 'e', 'x', 't', 'r', 'a', 'c', 't', 'q', 'm', 32, 0,
  /* 6155 */ 'v', 's', 'u', 'b', 'u', 'q', 'm', 32, 0,
  /* 6164 */ 'v', 'a', 'd', 'd', 'u', 'q', 'm', 32, 0,
  /* 6173 */ 'v', 's', 'u', 'b', 'e', 'u', 'q', 'm', 32, 0,
  /* 6183 */ 'v', 'a', 'd', 'd', 'e', 'u', 'q', 'm', 32, 0,
  /* 6193 */ 'v', 'p', 'e', 'r', 'm', 32, 0,
  /* 6200 */ 'x', 'x', 'p', 'e', 'r', 'm', 32, 0,
  /* 6208 */ 'v', 'p', 'k', 'u', 'd', 'u', 'm', 32, 0,
  /* 6217 */ 'v', 'p', 'k', 'u', 'h', 'u', 'm', 32, 0,
  /* 6226 */ 'v', 'p', 'k', 'u', 'w', 'u', 'm', 32, 0,
  /* 6235 */ 'v', 'e', 'x', 'p', 'a', 'n', 'd', 'w', 'm', 32, 0,
  /* 6246 */ 'm', 't', 'v', 's', 'r', 'w', 'm', 32, 0,
  /* 6255 */ 'v', 'e', 'x', 't', 'r', 'a', 'c', 't', 'w', 'm', 32, 0,
  /* 6267 */ 'v', 's', 'u', 'b', 'u', 'w', 'm', 32, 0,
  /* 6276 */ 'v', 'a', 'd', 'd', 'u', 'w', 'm', 32, 0,
  /* 6285 */ 'v', 'm', 'u', 'l', 'u', 'w', 'm', 32, 0,
  /* 6294 */ 'x', 'x', 'g', 'e', 'n', 'p', 'c', 'v', 'w', 'm', 32, 0,
  /* 6306 */ 'e', 'v', 'm', 'h', 'e', 'g', 's', 'm', 'f', 'a', 'n', 32, 0,
  /* 6319 */ 'e', 'v', 'm', 'h', 'o', 'g', 's', 'm', 'f', 'a', 'n', 32, 0,
  /* 6332 */ 'e', 'v', 'm', 'w', 's', 'm', 'f', 'a', 'n', 32, 0,
  /* 6343 */ 'e', 'v', 'm', 'w', 's', 's', 'f', 'a', 'n', 32, 0,
  /* 6354 */ 'e', 'v', 'm', 'h', 'e', 'g', 's', 'm', 'i', 'a', 'n', 32, 0,
  /* 6367 */ 'e', 'v', 'm', 'h', 'o', 'g', 's', 'm', 'i', 'a', 'n', 32, 0,
  /* 6380 */ 'e', 'v', 'm', 'w', 's', 'm', 'i', 'a', 'n', 32, 0,
  /* 6391 */ 'e', 'v', 'm', 'h', 'e', 'g', 'u', 'm', 'i', 'a', 'n', 32, 0,
  /* 6404 */ 'e', 'v', 'm', 'h', 'o', 'g', 'u', 'm', 'i', 'a', 'n', 32, 0,
  /* 6417 */ 'e', 'v', 'm', 'w', 'u', 'm', 'i', 'a', 'n', 32, 0,
  /* 6428 */ 'f', 'c', 'p', 's', 'g', 'n', 32, 0,
  /* 6436 */ 'v', 'r', 'f', 'i', 'n', 32, 0,
  /* 6443 */ 'f', 'r', 'i', 'n', 32, 0,
  /* 6449 */ 'm', 'f', 's', 'r', 'i', 'n', 32, 0,
  /* 6457 */ 'm', 't', 's', 'r', 'i', 'n', 32, 0,
  /* 6465 */ 'p', 'm', 'x', 'v', 'b', 'f', '1', '6', 'g', 'e', 'r', '2', 'n', 'n', 32, 0,
  /* 6481 */ 'p', 'm', 'x', 'v', 'f', '1', '6', 'g', 'e', 'r', '2', 'n', 'n', 32, 0,
  /* 6496 */ 'p', 'm', 'x', 'v', 'f', '3', '2', 'g', 'e', 'r', 'n', 'n', 32, 0,
  /* 6510 */ 'p', 'm', 'x', 'v', 'f', '6', '4', 'g', 'e', 'r', 'n', 'n', 32, 0,
  /* 6524 */ 'p', 'm', 'x', 'v', 'b', 'f', '1', '6', 'g', 'e', 'r', '2', 'p', 'n', 32, 0,
  /* 6540 */ 'p', 'm', 'x', 'v', 'f', '1', '6', 'g', 'e', 'r', '2', 'p', 'n', 32, 0,
  /* 6555 */ 'x', 's', 'c', 'v', 's', 'p', 'd', 'p', 'n', 32, 0,
  /* 6566 */ 'p', 'm', 'x', 'v', 'f', '3', '2', 'g', 'e', 'r', 'p', 'n', 32, 0,
  /* 6580 */ 'p', 'm', 'x', 'v', 'f', '6', '4', 'g', 'e', 'r', 'p', 'n', 32, 0,
  /* 6594 */ 'x', 'v', 'c', 'v', 'b', 'f', '1', '6', 's', 'p', 'n', 32, 0,
  /* 6607 */ 'x', 's', 'c', 'v', 'd', 'p', 's', 'p', 'n', 32, 0,
  /* 6618 */ 'd', 'a', 'r', 'n', 32, 0,
  /* 6624 */ 'm', 'f', 'f', 's', 'c', 'r', 'n', 32, 0,
  /* 6633 */ 'm', 'f', 'f', 's', 'c', 'd', 'r', 'n', 32, 0,
  /* 6643 */ 'a', 'd', 'd', 'c', 'o', 32, 0,
  /* 6650 */ 's', 'u', 'b', 'f', 'c', 'o', 32, 0,
  /* 6658 */ 'a', 'd', 'd', 'o', 32, 0,
  /* 6664 */ 'm', 'u', 'l', 'l', 'd', 'o', 32, 0,
  /* 6672 */ 'd', 'i', 'v', 'd', 'o', 32, 0,
  /* 6679 */ 'a', 'd', 'd', 'e', 'o', 32, 0,
  /* 6686 */ 'd', 'i', 'v', 'd', 'e', 'o', 32, 0,
  /* 6694 */ 's', 'u', 'b', 'f', 'e', 'o', 32, 0,
  /* 6702 */ 'a', 'd', 'd', 'm', 'e', 'o', 32, 0,
  /* 6710 */ 's', 'u', 'b', 'f', 'm', 'e', 'o', 32, 0,
  /* 6719 */ 'd', 'i', 'v', 'w', 'e', 'o', 32, 0,
  /* 6727 */ 'a', 'd', 'd', 'z', 'e', 'o', 32, 0,
  /* 6735 */ 's', 'u', 'b', 'f', 'z', 'e', 'o', 32, 0,
  /* 6744 */ 's', 'u', 'b', 'f', 'o', 32, 0,
  /* 6751 */ 'n', 'e', 'g', 'o', 32, 0,
  /* 6757 */ 'e', 'v', 's', 't', 'w', 'h', 'o', 32, 0,
  /* 6766 */ 'e', 'v', 'm', 'e', 'r', 'g', 'e', 'l', 'o', 32, 0,
  /* 6777 */ 'e', 'v', 'm', 'e', 'r', 'g', 'e', 'h', 'i', 'l', 'o', 32, 0,
  /* 6790 */ 'v', 's', 'l', 'o', 32, 0,
  /* 6796 */ 'x', 's', 'c', 'v', 'q', 'p', 'd', 'p', 'o', 32, 0,
  /* 6807 */ 'f', 'c', 'm', 'p', 'o', 32, 0,
  /* 6814 */ 'x', 's', 'n', 'm', 's', 'u', 'b', 'q', 'p', 'o', 32, 0,
  /* 6826 */ 'x', 's', 'm', 's', 'u', 'b', 'q', 'p', 'o', 32, 0,
  /* 6837 */ 'x', 's', 's', 'u', 'b', 'q', 'p', 'o', 32, 0,
  /* 6847 */ 'x', 's', 'n', 'm', 'a', 'd', 'd', 'q', 'p', 'o', 32, 0,
  /* 6859 */ 'x', 's', 'm', 'a', 'd', 'd', 'q', 'p', 'o', 32, 0,
  /* 6870 */ 'x', 's', 'a', 'd', 'd', 'q', 'p', 'o', 32, 0,
  /* 6880 */ 'x', 's', 'm', 'u', 'l', 'q', 'p', 'o', 32, 0,
  /* 6890 */ 'x', 's', 's', 'q', 'r', 't', 'q', 'p', 'o', 32, 0,
  /* 6901 */ 'x', 's', 'd', 'i', 'v', 'q', 'p', 'o', 32, 0,
  /* 6911 */ 'v', 's', 'r', 'o', 32, 0,
  /* 6917 */ 'd', 'i', 'v', 'd', 'u', 'o', 32, 0,
  /* 6925 */ 'd', 'i', 'v', 'd', 'e', 'u', 'o', 32, 0,
  /* 6934 */ 'd', 'i', 'v', 'w', 'e', 'u', 'o', 32, 0,
  /* 6943 */ 'd', 'i', 'v', 'w', 'u', 'o', 32, 0,
  /* 6951 */ 'm', 'u', 'l', 'l', 'w', 'o', 32, 0,
  /* 6959 */ 'd', 'i', 'v', 'w', 'o', 32, 0,
  /* 6966 */ 'e', 'v', 's', 't', 'w', 'w', 'o', 32, 0,
  /* 6975 */ 'x', 's', 'n', 'm', 's', 'u', 'b', 'a', 'd', 'p', 32, 0,
  /* 6987 */ 'x', 'v', 'n', 'm', 's', 'u', 'b', 'a', 'd', 'p', 32, 0,
  /* 6999 */ 'x', 's', 'm', 's', 'u', 'b', 'a', 'd', 'p', 32, 0,
  /* 7010 */ 'x', 'v', 'm', 's', 'u', 'b', 'a', 'd', 'p', 32, 0,
  /* 7021 */ 'x', 's', 'n', 'm', 'a', 'd', 'd', 'a', 'd', 'p', 32, 0,
  /* 7033 */ 'x', 'v', 'n', 'm', 'a', 'd', 'd', 'a', 'd', 'p', 32, 0,
  /* 7045 */ 'x', 's', 'm', 'a', 'd', 'd', 'a', 'd', 'p', 32, 0,
  /* 7056 */ 'x', 'v', 'm', 'a', 'd', 'd', 'a', 'd', 'p', 32, 0,
  /* 7067 */ 'x', 's', 's', 'u', 'b', 'd', 'p', 32, 0,
  /* 7076 */ 'x', 'v', 's', 'u', 'b', 'd', 'p', 32, 0,
  /* 7085 */ 'x', 's', 't', 's', 't', 'd', 'c', 'd', 'p', 32, 0,
  /* 7096 */ 'x', 'v', 't', 's', 't', 'd', 'c', 'd', 'p', 32, 0,
  /* 7107 */ 'x', 's', 'm', 'i', 'n', 'c', 'd', 'p', 32, 0,
  /* 7117 */ 'x', 's', 'm', 'a', 'x', 'c', 'd', 'p', 32, 0,
  /* 7127 */ 'x', 's', 'a', 'd', 'd', 'd', 'p', 32, 0,
  /* 7136 */ 'x', 'v', 'a', 'd', 'd', 'd', 'p', 32, 0,
  /* 7145 */ 'x', 's', 'c', 'v', 's', 'x', 'd', 'd', 'p', 32, 0,
  /* 7156 */ 'x', 'v', 'c', 'v', 's', 'x', 'd', 'd', 'p', 32, 0,
  /* 7167 */ 'x', 's', 'c', 'v', 'u', 'x', 'd', 'd', 'p', 32, 0,
  /* 7178 */ 'x', 'v', 'c', 'v', 'u', 'x', 'd', 'd', 'p', 32, 0,
  /* 7189 */ 'x', 's', 'c', 'm', 'p', 'g', 'e', 'd', 'p', 32, 0,
  /* 7200 */ 'x', 'v', 'c', 'm', 'p', 'g', 'e', 'd', 'p', 32, 0,
  /* 7211 */ 'x', 's', 'r', 'e', 'd', 'p', 32, 0,
  /* 7219 */ 'x', 'v', 'r', 'e', 'd', 'p', 32, 0,
  /* 7227 */ 'x', 's', 'r', 's', 'q', 'r', 't', 'e', 'd', 'p', 32, 0,
  /* 7239 */ 'x', 'v', 'r', 's', 'q', 'r', 't', 'e', 'd', 'p', 32, 0,
  /* 7251 */ 'x', 's', 'n', 'e', 'g', 'd', 'p', 32, 0,
  /* 7260 */ 'x', 'v', 'n', 'e', 'g', 'd', 'p', 32, 0,
  /* 7269 */ 'x', 's', 'x', 's', 'i', 'g', 'd', 'p', 32, 0,
  /* 7279 */ 'x', 'v', 'x', 's', 'i', 'g', 'd', 'p', 32, 0,
  /* 7289 */ 'x', 'x', 's', 'p', 'l', 't', 'i', 'd', 'p', 32, 0,
  /* 7300 */ 'x', 's', 'm', 'i', 'n', 'j', 'd', 'p', 32, 0,
  /* 7310 */ 'x', 's', 'm', 'a', 'x', 'j', 'd', 'p', 32, 0,
  /* 7320 */ 'x', 's', 'm', 'u', 'l', 'd', 'p', 32, 0,
  /* 7329 */ 'x', 'v', 'm', 'u', 'l', 'd', 'p', 32, 0,
  /* 7338 */ 'x', 's', 'n', 'm', 's', 'u', 'b', 'm', 'd', 'p', 32, 0,
  /* 7350 */ 'x', 'v', 'n', 'm', 's', 'u', 'b', 'm', 'd', 'p', 32, 0,
  /* 7362 */ 'x', 's', 'm', 's', 'u', 'b', 'm', 'd', 'p', 32, 0,
  /* 7373 */ 'x', 'v', 'm', 's', 'u', 'b', 'm', 'd', 'p', 32, 0,
  /* 7384 */ 'x', 's', 'n', 'm', 'a', 'd', 'd', 'm', 'd', 'p', 32, 0,
  /* 7396 */ 'x', 'v', 'n', 'm', 'a', 'd', 'd', 'm', 'd', 'p', 32, 0,
  /* 7408 */ 'x', 's', 'm', 'a', 'd', 'd', 'm', 'd', 'p', 32, 0,
  /* 7419 */ 'x', 'v', 'm', 'a', 'd', 'd', 'm', 'd', 'p', 32, 0,
  /* 7430 */ 'x', 's', 'c', 'p', 's', 'g', 'n', 'd', 'p', 32, 0,
  /* 7441 */ 'x', 'v', 'c', 'p', 's', 'g', 'n', 'd', 'p', 32, 0,
  /* 7452 */ 'x', 's', 'm', 'i', 'n', 'd', 'p', 32, 0,
  /* 7461 */ 'x', 'v', 'm', 'i', 'n', 'd', 'p', 32, 0,
  /* 7470 */ 'x', 's', 'c', 'm', 'p', 'o', 'd', 'p', 32, 0,
  /* 7480 */ 'x', 's', 'c', 'v', 'h', 'p', 'd', 'p', 32, 0,
  /* 7490 */ 'x', 's', 'c', 'v', 'q', 'p', 'd', 'p', 32, 0,
  /* 7500 */ 'x', 's', 'c', 'v', 's', 'p', 'd', 'p', 32, 0,
  /* 7510 */ 'x', 'v', 'c', 'v', 's', 'p', 'd', 'p', 32, 0,
  /* 7520 */ 'x', 's', 'i', 'e', 'x', 'p', 'd', 'p', 32, 0,
  /* 7530 */ 'x', 'v', 'i', 'e', 'x', 'p', 'd', 'p', 32, 0,
  /* 7540 */ 'x', 's', 'c', 'm', 'p', 'e', 'x', 'p', 'd', 'p', 32, 0,
  /* 7552 */ 'x', 's', 'x', 'e', 'x', 'p', 'd', 'p', 32, 0,
  /* 7562 */ 'x', 'v', 'x', 'e', 'x', 'p', 'd', 'p', 32, 0,
  /* 7572 */ 'x', 's', 'c', 'm', 'p', 'e', 'q', 'd', 'p', 32, 0,
  /* 7583 */ 'x', 'v', 'c', 'm', 'p', 'e', 'q', 'd', 'p', 32, 0,
  /* 7594 */ 'x', 's', 'n', 'a', 'b', 's', 'd', 'p', 32, 0,
  /* 7604 */ 'x', 'v', 'n', 'a', 'b', 's', 'd', 'p', 32, 0,
  /* 7614 */ 'x', 's', 'a', 'b', 's', 'd', 'p', 32, 0,
  /* 7623 */ 'x', 'v', 'a', 'b', 's', 'd', 'p', 32, 0,
  /* 7632 */ 'x', 's', 'c', 'm', 'p', 'g', 't', 'd', 'p', 32, 0,
  /* 7643 */ 'x', 'v', 'c', 'm', 'p', 'g', 't', 'd', 'p', 32, 0,
  /* 7654 */ 'x', 's', 's', 'q', 'r', 't', 'd', 'p', 32, 0,
  /* 7664 */ 'x', 's', 't', 's', 'q', 'r', 't', 'd', 'p', 32, 0,
  /* 7675 */ 'x', 'v', 't', 's', 'q', 'r', 't', 'd', 'p', 32, 0,
  /* 7686 */ 'x', 'v', 's', 'q', 'r', 't', 'd', 'p', 32, 0,
  /* 7696 */ 'x', 's', 'c', 'm', 'p', 'u', 'd', 'p', 32, 0,
  /* 7706 */ 'x', 's', 'd', 'i', 'v', 'd', 'p', 32, 0,
  /* 7715 */ 'x', 's', 't', 'd', 'i', 'v', 'd', 'p', 32, 0,
  /* 7725 */ 'x', 'v', 't', 'd', 'i', 'v', 'd', 'p', 32, 0,
  /* 7735 */ 'x', 'v', 'd', 'i', 'v', 'd', 'p', 32, 0,
  /* 7744 */ 'x', 'v', 'c', 'v', 's', 'x', 'w', 'd', 'p', 32, 0,
  /* 7755 */ 'x', 'v', 'c', 'v', 'u', 'x', 'w', 'd', 'p', 32, 0,
  /* 7766 */ 'x', 's', 'm', 'a', 'x', 'd', 'p', 32, 0,
  /* 7775 */ 'x', 'v', 'm', 'a', 'x', 'd', 'p', 32, 0,
  /* 7784 */ 'd', 'c', 'b', 'f', 'e', 'p', 32, 0,
  /* 7792 */ 'i', 'c', 'b', 'i', 'e', 'p', 32, 0,
  /* 7800 */ 'd', 'c', 'b', 'z', 'l', 'e', 'p', 32, 0,
  /* 7809 */ 'd', 'c', 'b', 't', 'e', 'p', 32, 0,
  /* 7817 */ 'd', 'c', 'b', 's', 't', 'e', 'p', 32, 0,
  /* 7826 */ 'd', 'c', 'b', 't', 's', 't', 'e', 'p', 32, 0,
  /* 7836 */ 'd', 'c', 'b', 'z', 'e', 'p', 32, 0,
  /* 7844 */ 'v', 'c', 'm', 'p', 'b', 'f', 'p', 32, 0,
  /* 7853 */ 'v', 'n', 'm', 's', 'u', 'b', 'f', 'p', 32, 0,
  /* 7863 */ 'v', 's', 'u', 'b', 'f', 'p', 32, 0,
  /* 7871 */ 'v', 'm', 'a', 'd', 'd', 'f', 'p', 32, 0,
  /* 7880 */ 'v', 'a', 'd', 'd', 'f', 'p', 32, 0,
  /* 7888 */ 'v', 'l', 'o', 'g', 'e', 'f', 'p', 32, 0,
  /* 7897 */ 'v', 'c', 'm', 'p', 'g', 'e', 'f', 'p', 32, 0,
  /* 7907 */ 'v', 'r', 'e', 'f', 'p', 32, 0,
  /* 7914 */ 'v', 'e', 'x', 'p', 't', 'e', 'f', 'p', 32, 0,
  /* 7924 */ 'v', 'r', 's', 'q', 'r', 't', 'e', 'f', 'p', 32, 0,
  /* 7935 */ 'v', 'm', 'i', 'n', 'f', 'p', 32, 0,
  /* 7943 */ 'v', 'c', 'm', 'p', 'e', 'q', 'f', 'p', 32, 0,
  /* 7953 */ 'v', 'c', 'm', 'p', 'g', 't', 'f', 'p', 32, 0,
  /* 7963 */ 'v', 'm', 'a', 'x', 'f', 'p', 32, 0,
  /* 7971 */ 'x', 's', 'c', 'v', 'd', 'p', 'h', 'p', 32, 0,
  /* 7981 */ 'x', 'v', 'c', 'v', 's', 'p', 'h', 'p', 32, 0,
  /* 7991 */ 'v', 'r', 'f', 'i', 'p', 32, 0,
  /* 7998 */ 'x', 's', 'r', 'd', 'p', 'i', 'p', 32, 0,
  /* 8007 */ 'x', 'v', 'r', 'd', 'p', 'i', 'p', 32, 0,
  /* 8016 */ 'x', 'v', 'r', 's', 'p', 'i', 'p', 32, 0,
  /* 8025 */ 'f', 'r', 'i', 'p', 32, 0,
  /* 8031 */ 'h', 'a', 's', 'h', 'c', 'h', 'k', 'p', 32, 0,
  /* 8041 */ 'd', 'c', 'b', 'f', 'l', 'p', 32, 0,
  /* 8049 */ 'p', 'm', 'x', 'v', 'b', 'f', '1', '6', 'g', 'e', 'r', '2', 'n', 'p', 32, 0,
  /* 8065 */ 'p', 'm', 'x', 'v', 'f', '1', '6', 'g', 'e', 'r', '2', 'n', 'p', 32, 0,
  /* 8080 */ 'p', 'm', 'x', 'v', 'f', '3', '2', 'g', 'e', 'r', 'n', 'p', 32, 0,
  /* 8094 */ 'p', 'm', 'x', 'v', 'f', '6', '4', 'g', 'e', 'r', 'n', 'p', 32, 0,
  /* 8108 */ 'p', 'm', 'x', 'v', 'b', 'f', '1', '6', 'g', 'e', 'r', '2', 'p', 'p', 32, 0,
  /* 8124 */ 'p', 'm', 'x', 'v', 'f', '1', '6', 'g', 'e', 'r', '2', 'p', 'p', 32, 0,
  /* 8139 */ 'p', 'm', 'x', 'v', 'i', '1', '6', 'g', 'e', 'r', '2', 'p', 'p', 32, 0,
  /* 8154 */ 'p', 'm', 'x', 'v', 'i', '8', 'g', 'e', 'r', '4', 'p', 'p', 32, 0,
  /* 8168 */ 'p', 'm', 'x', 'v', 'i', '4', 'g', 'e', 'r', '8', 'p', 'p', 32, 0,
  /* 8182 */ 'p', 'm', 'x', 'v', 'f', '3', '2', 'g', 'e', 'r', 'p', 'p', 32, 0,
  /* 8196 */ 'p', 'm', 'x', 'v', 'f', '6', '4', 'g', 'e', 'r', 'p', 'p', 32, 0,
  /* 8210 */ 'p', 'm', 'x', 'v', 'i', '1', '6', 'g', 'e', 'r', '2', 's', 'p', 'p', 32, 0,
  /* 8226 */ 'p', 'm', 'x', 'v', 'i', '8', 'g', 'e', 'r', '4', 's', 'p', 'p', 32, 0,
  /* 8241 */ 'x', 's', 'n', 'm', 's', 'u', 'b', 'q', 'p', 32, 0,
  /* 8252 */ 'x', 's', 'm', 's', 'u', 'b', 'q', 'p', 32, 0,
  /* 8262 */ 'x', 's', 's', 'u', 'b', 'q', 'p', 32, 0,
  /* 8271 */ 'x', 's', 't', 's', 't', 'd', 'c', 'q', 'p', 32, 0,
  /* 8282 */ 'x', 's', 'm', 'i', 'n', 'c', 'q', 'p', 32, 0,
  /* 8292 */ 'x', 's', 'm', 'a', 'x', 'c', 'q', 'p', 32, 0,
  /* 8302 */ 'x', 's', 'n', 'm', 'a', 'd', 'd', 'q', 'p', 32, 0,
  /* 8313 */ 'x', 's', 'm', 'a', 'd', 'd', 'q', 'p', 32, 0,
  /* 8323 */ 'x', 's', 'a', 'd', 'd', 'q', 'p', 32, 0,
  /* 8332 */ 'x', 's', 'c', 'v', 's', 'd', 'q', 'p', 32, 0,
  /* 8342 */ 'x', 's', 'c', 'v', 'u', 'd', 'q', 'p', 32, 0,
  /* 8352 */ 'x', 's', 'n', 'e', 'g', 'q', 'p', 32, 0,
  /* 8361 */ 'x', 's', 'x', 's', 'i', 'g', 'q', 'p', 32, 0,
  /* 8371 */ 'x', 's', 'm', 'u', 'l', 'q', 'p', 32, 0,
  /* 8380 */ 'x', 's', 'c', 'p', 's', 'g', 'n', 'q', 'p', 32, 0,
  /* 8391 */ 'x', 's', 'c', 'm', 'p', 'o', 'q', 'p', 32, 0,
  /* 8401 */ 'x', 's', 'c', 'v', 'd', 'p', 'q', 'p', 32, 0,
  /* 8411 */ 'x', 's', 'i', 'e', 'x', 'p', 'q', 'p', 32, 0,
  /* 8421 */ 'x', 's', 'c', 'm', 'p', 'e', 'x', 'p', 'q', 'p', 32, 0,
  /* 8433 */ 'x', 's', 'x', 'e', 'x', 'p', 'q', 'p', 32, 0,
  /* 8443 */ 'x', 's', 'c', 'v', 's', 'q', 'q', 'p', 32, 0,
  /* 8453 */ 'x', 's', 'c', 'v', 'u', 'q', 'q', 'p', 32, 0,
  /* 8463 */ 'x', 's', 'n', 'a', 'b', 's', 'q', 'p', 32, 0,
  /* 8473 */ 'x', 's', 'a', 'b', 's', 'q', 'p', 32, 0,
  /* 8482 */ 'x', 's', 's', 'q', 'r', 't', 'q', 'p', 32, 0,
  /* 8492 */ 'x', 's', 'c', 'm', 'p', 'u', 'q', 'p', 32, 0,
  /* 8502 */ 'x', 's', 'd', 'i', 'v', 'q', 'p', 32, 0,
  /* 8511 */ 'x', 's', 'n', 'm', 's', 'u', 'b', 'a', 's', 'p', 32, 0,
  /* 8523 */ 'x', 'v', 'n', 'm', 's', 'u', 'b', 'a', 's', 'p', 32, 0,
  /* 8535 */ 'x', 's', 'm', 's', 'u', 'b', 'a', 's', 'p', 32, 0,
  /* 8546 */ 'x', 'v', 'm', 's', 'u', 'b', 'a', 's', 'p', 32, 0,
  /* 8557 */ 'x', 's', 'n', 'm', 'a', 'd', 'd', 'a', 's', 'p', 32, 0,
  /* 8569 */ 'x', 'v', 'n', 'm', 'a', 'd', 'd', 'a', 's', 'p', 32, 0,
  /* 8581 */ 'x', 's', 'm', 'a', 'd', 'd', 'a', 's', 'p', 32, 0,
  /* 8592 */ 'x', 'v', 'm', 'a', 'd', 'd', 'a', 's', 'p', 32, 0,
  /* 8603 */ 'x', 's', 's', 'u', 'b', 's', 'p', 32, 0,
  /* 8612 */ 'x', 'v', 's', 'u', 'b', 's', 'p', 32, 0,
  /* 8621 */ 'x', 's', 't', 's', 't', 'd', 'c', 's', 'p', 32, 0,
  /* 8632 */ 'x', 'v', 't', 's', 't', 'd', 'c', 's', 'p', 32, 0,
  /* 8643 */ 'x', 's', 'a', 'd', 'd', 's', 'p', 32, 0,
  /* 8652 */ 'x', 'v', 'a', 'd', 'd', 's', 'p', 32, 0,
  /* 8661 */ 'x', 's', 'c', 'v', 's', 'x', 'd', 's', 'p', 32, 0,
  /* 8672 */ 'x', 'v', 'c', 'v', 's', 'x', 'd', 's', 'p', 32, 0,
  /* 8683 */ 'x', 's', 'c', 'v', 'u', 'x', 'd', 's', 'p', 32, 0,
  /* 8694 */ 'x', 'v', 'c', 'v', 'u', 'x', 'd', 's', 'p', 32, 0,
  /* 8705 */ 'x', 'v', 'c', 'm', 'p', 'g', 'e', 's', 'p', 32, 0,
  /* 8716 */ 'x', 's', 'r', 'e', 's', 'p', 32, 0,
  /* 8724 */ 'x', 'v', 'r', 'e', 's', 'p', 32, 0,
  /* 8732 */ 'x', 's', 'r', 's', 'q', 'r', 't', 'e', 's', 'p', 32, 0,
  /* 8744 */ 'x', 'v', 'r', 's', 'q', 'r', 't', 'e', 's', 'p', 32, 0,
  /* 8756 */ 'x', 'v', 'n', 'e', 'g', 's', 'p', 32, 0,
  /* 8765 */ 'x', 'v', 'x', 's', 'i', 'g', 's', 'p', 32, 0,
  /* 8775 */ 'x', 's', 'm', 'u', 'l', 's', 'p', 32, 0,
  /* 8784 */ 'x', 'v', 'm', 'u', 'l', 's', 'p', 32, 0,
  /* 8793 */ 'x', 's', 'n', 'm', 's', 'u', 'b', 'm', 's', 'p', 32, 0,
  /* 8805 */ 'x', 'v', 'n', 'm', 's', 'u', 'b', 'm', 's', 'p', 32, 0,
  /* 8817 */ 'x', 's', 'm', 's', 'u', 'b', 'm', 's', 'p', 32, 0,
  /* 8828 */ 'x', 'v', 'm', 's', 'u', 'b', 'm', 's', 'p', 32, 0,
  /* 8839 */ 'x', 's', 'n', 'm', 'a', 'd', 'd', 'm', 's', 'p', 32, 0,
  /* 8851 */ 'x', 'v', 'n', 'm', 'a', 'd', 'd', 'm', 's', 'p', 32, 0,
  /* 8863 */ 'x', 's', 'm', 'a', 'd', 'd', 'm', 's', 'p', 32, 0,
  /* 8874 */ 'x', 'v', 'm', 'a', 'd', 'd', 'm', 's', 'p', 32, 0,
  /* 8885 */ 'x', 'v', 'c', 'p', 's', 'g', 'n', 's', 'p', 32, 0,
  /* 8896 */ 'x', 'v', 'm', 'i', 'n', 's', 'p', 32, 0,
  /* 8905 */ 'x', 's', 'c', 'v', 'd', 'p', 's', 'p', 32, 0,
  /* 8915 */ 'x', 'v', 'c', 'v', 'd', 'p', 's', 'p', 32, 0,
  /* 8925 */ 'x', 'v', 'c', 'v', 'h', 'p', 's', 'p', 32, 0,
  /* 8935 */ 'x', 'v', 'i', 'e', 'x', 'p', 's', 'p', 32, 0,
  /* 8945 */ 'x', 'v', 'x', 'e', 'x', 'p', 's', 'p', 32, 0,
  /* 8955 */ 'x', 'v', 'c', 'm', 'p', 'e', 'q', 's', 'p', 32, 0,
  /* 8966 */ 'f', 'r', 's', 'p', 32, 0,
  /* 8972 */ 'x', 's', 'r', 's', 'p', 32, 0,
  /* 8979 */ 'x', 'v', 'n', 'a', 'b', 's', 's', 'p', 32, 0,
  /* 8989 */ 'x', 'v', 'a', 'b', 's', 's', 'p', 32, 0,
  /* 8998 */ 'p', 'l', 'x', 's', 's', 'p', 32, 0,
  /* 9006 */ 'p', 's', 't', 'x', 's', 's', 'p', 32, 0,
  /* 9015 */ 'x', 'v', 'c', 'm', 'p', 'g', 't', 's', 'p', 32, 0,
  /* 9026 */ 'x', 's', 's', 'q', 'r', 't', 's', 'p', 32, 0,
  /* 9036 */ 'x', 'v', 't', 's', 'q', 'r', 't', 's', 'p', 32, 0,
  /* 9047 */ 'x', 'v', 's', 'q', 'r', 't', 's', 'p', 32, 0,
  /* 9057 */ 'x', 's', 'd', 'i', 'v', 's', 'p', 32, 0,
  /* 9066 */ 'x', 'v', 't', 'd', 'i', 'v', 's', 'p', 32, 0,
  /* 9076 */ 'x', 'v', 'd', 'i', 'v', 's', 'p', 32, 0,
  /* 9085 */ 'x', 'v', 'c', 'v', 's', 'x', 'w', 's', 'p', 32, 0,
  /* 9096 */ 'x', 'v', 'c', 'v', 'u', 'x', 'w', 's', 'p', 32, 0,
  /* 9107 */ 'x', 'v', 'm', 'a', 'x', 's', 'p', 32, 0,
  /* 9116 */ 'h', 'a', 's', 'h', 's', 't', 'p', 32, 0,
  /* 9125 */ 'p', 'l', 'x', 'v', 'p', 32, 0,
  /* 9132 */ 'p', 's', 't', 'x', 'v', 'p', 32, 0,
  /* 9140 */ 'x', 's', 'r', 'q', 'p', 'x', 'p', 32, 0,
  /* 9149 */ 'v', 'e', 'x', 't', 's', 'd', '2', 'q', 32, 0,
  /* 9159 */ 'v', 's', 'r', 'a', 'q', 32, 0,
  /* 9166 */ 'v', 'p', 'r', 't', 'y', 'b', 'q', 32, 0,
  /* 9175 */ 'e', 'f', 'd', 'c', 'm', 'p', 'e', 'q', 32, 0,
  /* 9185 */ 'e', 'f', 's', 'c', 'm', 'p', 'e', 'q', 32, 0,
  /* 9195 */ 'e', 'v', 'f', 's', 'c', 'm', 'p', 'e', 'q', 32, 0,
  /* 9206 */ 'e', 'v', 'c', 'm', 'p', 'e', 'q', 32, 0,
  /* 9215 */ 'e', 'f', 'd', 't', 's', 't', 'e', 'q', 32, 0,
  /* 9225 */ 'e', 'f', 's', 't', 's', 't', 'e', 'q', 32, 0,
  /* 9235 */ 'e', 'v', 'f', 's', 't', 's', 't', 'e', 'q', 32, 0,
  /* 9246 */ 'l', 'x', 'v', 'k', 'q', 32, 0,
  /* 9253 */ 'v', 'r', 'l', 'q', 32, 0,
  /* 9259 */ 'v', 's', 'l', 'q', 32, 0,
  /* 9265 */ 'v', 'b', 'p', 'e', 'r', 'm', 'q', 32, 0,
  /* 9274 */ 'x', 'x', 'b', 'r', 'q', 32, 0,
  /* 9281 */ 'v', 's', 'r', 'q', 32, 0,
  /* 9287 */ 'v', 'm', 'o', 'd', 's', 'q', 32, 0,
  /* 9295 */ 'v', 'd', 'i', 'v', 'e', 's', 'q', 32, 0,
  /* 9304 */ 'v', 'c', 'm', 'p', 's', 'q', 32, 0,
  /* 9312 */ 'v', 'c', 'm', 'p', 'g', 't', 's', 'q', 32, 0,
  /* 9322 */ 'v', 'd', 'i', 'v', 's', 'q', 32, 0,
  /* 9330 */ 's', 't', 'q', 32, 0,
  /* 9335 */ 'v', 'm', 'u', 'l', '1', '0', 'u', 'q', 32, 0,
  /* 9345 */ 'v', 'm', 'u', 'l', '1', '0', 'c', 'u', 'q', 32, 0,
  /* 9356 */ 'v', 's', 'u', 'b', 'c', 'u', 'q', 32, 0,
  /* 9365 */ 'v', 'a', 'd', 'd', 'c', 'u', 'q', 32, 0,
  /* 9374 */ 'v', 'm', 'u', 'l', '1', '0', 'e', 'c', 'u', 'q', 32, 0,
  /* 9386 */ 'v', 's', 'u', 'b', 'e', 'c', 'u', 'q', 32, 0,
  /* 9396 */ 'v', 'a', 'd', 'd', 'e', 'c', 'u', 'q', 32, 0,
  /* 9406 */ 'v', 'm', 'o', 'd', 'u', 'q', 32, 0,
  /* 9414 */ 'v', 'm', 'u', 'l', '1', '0', 'e', 'u', 'q', 32, 0,
  /* 9425 */ 'v', 'd', 'i', 'v', 'e', 'u', 'q', 32, 0,
  /* 9434 */ 'v', 'c', 'm', 'p', 'u', 'q', 32, 0,
  /* 9442 */ 'v', 'c', 'm', 'p', 'e', 'q', 'u', 'q', 32, 0,
  /* 9452 */ 'v', 'c', 'm', 'p', 'g', 't', 'u', 'q', 32, 0,
  /* 9462 */ 'v', 'd', 'i', 'v', 'u', 'q', 32, 0,
  /* 9470 */ '#', 'T', 'C', '_', 'R', 'E', 'T', 'U', 'R', 'N', 'r', 32, 0,
  /* 9483 */ 'm', 'b', 'a', 'r', 32, 0,
  /* 9489 */ 'v', 's', 't', 'r', 'i', 'b', 'r', 32, 0,
  /* 9498 */ 's', 'e', 't', 'n', 'b', 'c', 'r', 32, 0,
  /* 9507 */ 's', 'e', 't', 'b', 'c', 'r', 32, 0,
  /* 9515 */ 'm', 'f', 'd', 'c', 'r', 32, 0,
  /* 9522 */ 'r', 'l', 'd', 'c', 'r', 32, 0,
  /* 9529 */ 'm', 't', 'd', 'c', 'r', 32, 0,
  /* 9536 */ 'm', 'f', 'c', 'r', 32, 0,
  /* 9542 */ 'r', 'l', 'd', 'i', 'c', 'r', 32, 0,
  /* 9550 */ 'm', 'f', 'v', 's', 'c', 'r', 32, 0,
  /* 9558 */ 'm', 't', 'v', 's', 'c', 'r', 32, 0,
  /* 9566 */ 'p', 'm', 'x', 'v', 'f', '3', '2', 'g', 'e', 'r', 32, 0,
  /* 9578 */ 'p', 'm', 'x', 'v', 'f', '6', '4', 'g', 'e', 'r', 32, 0,
  /* 9590 */ 'v', 'n', 'c', 'i', 'p', 'h', 'e', 'r', 32, 0,
  /* 9600 */ 'v', 'c', 'i', 'p', 'h', 'e', 'r', 32, 0,
  /* 9609 */ 'v', 's', 't', 'r', 'i', 'h', 'r', 32, 0,
  /* 9618 */ 'b', 'c', 'l', 'r', 32, 0,
  /* 9624 */ 'm', 'f', 'l', 'r', 32, 0,
  /* 9630 */ 'm', 't', 'l', 'r', 32, 0,
  /* 9636 */ 'f', 'm', 'r', 32, 0,
  /* 9641 */ 'm', 'f', 'p', 'm', 'r', 32, 0,
  /* 9648 */ 'm', 't', 'p', 'm', 'r', 32, 0,
  /* 9655 */ 'v', 'p', 'e', 'r', 'm', 'r', 32, 0,
  /* 9663 */ 'x', 'x', 'p', 'e', 'r', 'm', 'r', 32, 0,
  /* 9672 */ 'x', 'x', 'l', 'o', 'r', 32, 0,
  /* 9679 */ 'x', 'x', 'l', 'n', 'o', 'r', 32, 0,
  /* 9687 */ 'c', 'r', 'n', 'o', 'r', 32, 0,
  /* 9694 */ 'e', 'v', 'n', 'o', 'r', 32, 0,
  /* 9701 */ 'c', 'r', 'o', 'r', 32, 0,
  /* 9707 */ 'e', 'v', 'o', 'r', 32, 0,
  /* 9713 */ 'x', 'x', 'l', 'x', 'o', 'r', 32, 0,
  /* 9721 */ 'v', 'p', 'e', 'r', 'm', 'x', 'o', 'r', 32, 0,
  /* 9731 */ 'c', 'r', 'x', 'o', 'r', 32, 0,
  /* 9738 */ 'e', 'v', 'x', 'o', 'r', 32, 0,
  /* 9745 */ 'm', 'f', 's', 'p', 'r', 32, 0,
  /* 9752 */ 'm', 't', 's', 'p', 'r', 32, 0,
  /* 9759 */ 'm', 'f', 's', 'r', 32, 0,
  /* 9765 */ 'm', 'f', 'm', 's', 'r', 32, 0,
  /* 9772 */ 'm', 't', 'm', 's', 'r', 32, 0,
  /* 9779 */ 'm', 't', 's', 'r', 32, 0,
  /* 9785 */ 'l', 'v', 's', 'r', 32, 0,
  /* 9791 */ 'b', 'c', 'c', 't', 'r', 32, 0,
  /* 9798 */ 'm', 'f', 'c', 't', 'r', 32, 0,
  /* 9805 */ 'm', 't', 'c', 't', 'r', 32, 0,
  /* 9812 */ 'p', 'm', 'x', 'v', 'i', '1', '6', 'g', 'e', 'r', '2', 's', 32, 0,
  /* 9826 */ 'e', 'f', 'd', 'a', 'b', 's', 32, 0,
  /* 9834 */ 'f', 'a', 'b', 's', 32, 0,
  /* 9840 */ 'e', 'f', 'd', 'n', 'a', 'b', 's', 32, 0,
  /* 9849 */ 'f', 'n', 'a', 'b', 's', 32, 0,
  /* 9856 */ 'e', 'f', 's', 'n', 'a', 'b', 's', 32, 0,
  /* 9865 */ 'e', 'v', 'f', 's', 'n', 'a', 'b', 's', 32, 0,
  /* 9875 */ 'e', 'f', 's', 'a', 'b', 's', 32, 0,
  /* 9883 */ 'e', 'v', 'f', 's', 'a', 'b', 's', 32, 0,
  /* 9892 */ 'e', 'v', 'a', 'b', 's', 32, 0,
  /* 9899 */ 'v', 's', 'u', 'm', '4', 's', 'b', 's', 32, 0,
  /* 9909 */ 'v', 's', 'u', 'b', 's', 'b', 's', 32, 0,
  /* 9918 */ 'v', 'a', 'd', 'd', 's', 'b', 's', 32, 0,
  /* 9927 */ 'v', 's', 'u', 'm', '4', 'u', 'b', 's', 32, 0,
  /* 9937 */ 'v', 's', 'u', 'b', 'u', 'b', 's', 32, 0,
  /* 9946 */ 'v', 'a', 'd', 'd', 'u', 'b', 's', 32, 0,
  /* 9955 */ 'f', 's', 'u', 'b', 's', 32, 0,
  /* 9962 */ 'f', 'm', 's', 'u', 'b', 's', 32, 0,
  /* 9970 */ 'f', 'n', 'm', 's', 'u', 'b', 's', 32, 0,
  /* 9979 */ 'f', 'a', 'd', 'd', 's', 32, 0,
  /* 9986 */ 'f', 'm', 'a', 'd', 'd', 's', 32, 0,
  /* 9994 */ 'f', 'n', 'm', 'a', 'd', 'd', 's', 32, 0,
  /* 10003 */ 'f', 'c', 'f', 'i', 'd', 's', 32, 0,
  /* 10011 */ 'd', 'c', 'b', 't', 'd', 's', 32, 0,
  /* 10019 */ 'd', 'c', 'b', 't', 's', 't', 'd', 's', 32, 0,
  /* 10029 */ 'x', 's', 'c', 'v', 'd', 'p', 's', 'x', 'd', 's', 32, 0,
  /* 10041 */ 'x', 'v', 'c', 'v', 'd', 'p', 's', 'x', 'd', 's', 32, 0,
  /* 10053 */ 'x', 'v', 'c', 'v', 's', 'p', 's', 'x', 'd', 's', 32, 0,
  /* 10065 */ 'x', 's', 'c', 'v', 'd', 'p', 'u', 'x', 'd', 's', 32, 0,
  /* 10077 */ 'x', 'v', 'c', 'v', 'd', 'p', 'u', 'x', 'd', 's', 32, 0,
  /* 10089 */ 'x', 'v', 'c', 'v', 's', 'p', 'u', 'x', 'd', 's', 32, 0,
  /* 10101 */ 'f', 'r', 'e', 's', 32, 0,
  /* 10107 */ 'f', 'r', 's', 'q', 'r', 't', 'e', 's', 32, 0,
  /* 10117 */ 'e', 'f', 'd', 'c', 'f', 's', 32, 0,
  /* 10125 */ 'm', 'f', 'f', 's', 32, 0,
  /* 10131 */ 'p', 'l', 'f', 's', 32, 0,
  /* 10137 */ 'm', 'c', 'r', 'f', 's', 32, 0,
  /* 10144 */ 'p', 's', 't', 'f', 's', 32, 0,
  /* 10151 */ 'v', 's', 'u', 'm', '4', 's', 'h', 's', 32, 0,
  /* 10161 */ 'v', 's', 'u', 'b', 's', 'h', 's', 32, 0,
  /* 10170 */ 'v', 'm', 'h', 'a', 'd', 'd', 's', 'h', 's', 32, 0,
  /* 10181 */ 'v', 'm', 'h', 'r', 'a', 'd', 'd', 's', 'h', 's', 32, 0,
  /* 10193 */ 'v', 'a', 'd', 'd', 's', 'h', 's', 32, 0,
  /* 10202 */ 'v', 'm', 's', 'u', 'm', 's', 'h', 's', 32, 0,
  /* 10212 */ 'v', 's', 'u', 'b', 'u', 'h', 's', 32, 0,
  /* 10221 */ 'v', 'a', 'd', 'd', 'u', 'h', 's', 32, 0,
  /* 10230 */ 'v', 'm', 's', 'u', 'm', 'u', 'h', 's', 32, 0,
  /* 10240 */ 's', 'u', 'b', 'i', 's', 32, 0,
  /* 10247 */ 's', 'u', 'b', 'p', 'c', 'i', 's', 32, 0,
  /* 10256 */ 'a', 'd', 'd', 'p', 'c', 'i', 's', 32, 0,
  /* 10265 */ 'a', 'd', 'd', 'i', 's', 32, 0,
  /* 10272 */ 'l', 'i', 's', 32, 0,
  /* 10277 */ 'x', 'o', 'r', 'i', 's', 32, 0,
  /* 10284 */ 'e', 'v', 's', 'r', 'w', 'i', 's', 32, 0,
  /* 10293 */ 'i', 'c', 'b', 't', 'l', 's', 32, 0,
  /* 10301 */ 'f', 'm', 'u', 'l', 's', 32, 0,
  /* 10308 */ 'e', 'v', 'l', 'w', 'h', 'o', 's', 32, 0,
  /* 10317 */ 'd', 'c', 'b', 'f', 'p', 's', 32, 0,
  /* 10325 */ 'd', 'c', 'b', 's', 't', 'p', 's', 32, 0,
  /* 10334 */ 'v', 'p', 'k', 's', 'd', 's', 's', 32, 0,
  /* 10343 */ 'v', 'p', 'k', 's', 'h', 's', 's', 32, 0,
  /* 10352 */ 'v', 'p', 'k', 's', 'w', 's', 's', 32, 0,
  /* 10361 */ 'e', 'v', 'c', 'm', 'p', 'g', 't', 's', 32, 0,
  /* 10371 */ 'e', 'v', 'c', 'm', 'p', 'l', 't', 's', 32, 0,
  /* 10381 */ 'f', 's', 'q', 'r', 't', 's', 32, 0,
  /* 10389 */ 'f', 'c', 'f', 'i', 'd', 'u', 's', 32, 0,
  /* 10398 */ 'v', 'p', 'k', 's', 'd', 'u', 's', 32, 0,
  /* 10407 */ 'v', 'p', 'k', 'u', 'd', 'u', 's', 32, 0,
  /* 10416 */ 'v', 'p', 'k', 's', 'h', 'u', 's', 32, 0,
  /* 10425 */ 'v', 'p', 'k', 'u', 'h', 'u', 's', 32, 0,
  /* 10434 */ 'v', 'p', 'k', 's', 'w', 'u', 's', 32, 0,
  /* 10443 */ 'v', 'p', 'k', 'u', 'w', 'u', 's', 32, 0,
  /* 10452 */ 'f', 'd', 'i', 'v', 's', 32, 0,
  /* 10459 */ 'e', 'v', 's', 'r', 'w', 's', 32, 0,
  /* 10467 */ 'm', 't', 'v', 's', 'r', 'w', 's', 32, 0,
  /* 10476 */ 'v', 's', 'u', 'm', '2', 's', 'w', 's', 32, 0,
  /* 10486 */ 'v', 's', 'u', 'b', 's', 'w', 's', 32, 0,
  /* 10495 */ 'v', 'a', 'd', 'd', 's', 'w', 's', 32, 0,
  /* 10504 */ 'v', 's', 'u', 'm', 's', 'w', 's', 32, 0,
  /* 10513 */ 'v', 's', 'u', 'b', 'u', 'w', 's', 32, 0,
  /* 10522 */ 'v', 'a', 'd', 'd', 'u', 'w', 's', 32, 0,
  /* 10531 */ 'e', 'v', 'd', 'i', 'v', 'w', 's', 32, 0,
  /* 10540 */ 'x', 's', 'c', 'v', 'd', 'p', 's', 'x', 'w', 's', 32, 0,
  /* 10552 */ 'x', 'v', 'c', 'v', 'd', 'p', 's', 'x', 'w', 's', 32, 0,
  /* 10564 */ 'x', 'v', 'c', 'v', 's', 'p', 's', 'x', 'w', 's', 32, 0,
  /* 10576 */ 'x', 's', 'c', 'v', 'd', 'p', 'u', 'x', 'w', 's', 32, 0,
  /* 10588 */ 'x', 'v', 'c', 'v', 'd', 'p', 'u', 'x', 'w', 's', 32, 0,
  /* 10600 */ 'x', 'v', 'c', 'v', 's', 'p', 'u', 'x', 'w', 's', 32, 0,
  /* 10612 */ 'v', 'c', 't', 's', 'x', 's', 32, 0,
  /* 10620 */ 'v', 'c', 't', 'u', 'x', 's', 32, 0,
  /* 10628 */ 'l', 'd', 'a', 't', 32, 0,
  /* 10634 */ 's', 't', 'd', 'a', 't', 32, 0,
  /* 10641 */ 'e', 'v', 'l', 'h', 'h', 'e', 's', 'p', 'l', 'a', 't', 32, 0,
  /* 10654 */ 'e', 'v', 'l', 'w', 'h', 's', 'p', 'l', 'a', 't', 32, 0,
  /* 10666 */ 'e', 'v', 'l', 'h', 'h', 'o', 's', 's', 'p', 'l', 'a', 't', 32, 0,
  /* 10680 */ 'e', 'v', 'l', 'h', 'h', 'o', 'u', 's', 'p', 'l', 'a', 't', 32, 0,
  /* 10694 */ 'e', 'v', 'l', 'w', 'w', 's', 'p', 'l', 'a', 't', 32, 0,
  /* 10706 */ 'l', 'w', 'a', 't', 32, 0,
  /* 10712 */ 's', 't', 'w', 'a', 't', 32, 0,
  /* 10719 */ 'd', 'c', 'b', 't', 32, 0,
  /* 10725 */ 'i', 'c', 'b', 't', 32, 0,
  /* 10731 */ 'd', 'c', 'b', 't', 'c', 't', 32, 0,
  /* 10739 */ 'd', 'c', 'b', 't', 's', 't', 'c', 't', 32, 0,
  /* 10749 */ 'e', 'f', 'd', 'c', 'm', 'p', 'g', 't', 32, 0,
  /* 10759 */ 'e', 'f', 's', 'c', 'm', 'p', 'g', 't', 32, 0,
  /* 10769 */ 'e', 'v', 'f', 's', 'c', 'm', 'p', 'g', 't', 32, 0,
  /* 10780 */ 'e', 'f', 'd', 't', 's', 't', 'g', 't', 32, 0,
  /* 10790 */ 'e', 'f', 's', 't', 's', 't', 'g', 't', 32, 0,
  /* 10800 */ 'e', 'v', 'f', 's', 't', 's', 't', 'g', 't', 32, 0,
  /* 10811 */ 'w', 'a', 'i', 't', 32, 0,
  /* 10817 */ 'e', 'f', 'd', 'c', 'm', 'p', 'l', 't', 32, 0,
  /* 10827 */ 'e', 'f', 's', 'c', 'm', 'p', 'l', 't', 32, 0,
  /* 10837 */ 'e', 'v', 'f', 's', 'c', 'm', 'p', 'l', 't', 32, 0,
  /* 10848 */ 'e', 'f', 'd', 't', 's', 't', 'l', 't', 32, 0,
  /* 10858 */ 'e', 'f', 's', 't', 's', 't', 'l', 't', 32, 0,
  /* 10868 */ 'e', 'v', 'f', 's', 't', 's', 't', 'l', 't', 32, 0,
  /* 10879 */ 'f', 's', 'q', 'r', 't', 32, 0,
  /* 10886 */ 'f', 't', 's', 'q', 'r', 't', 32, 0,
  /* 10894 */ 'v', 'n', 'c', 'i', 'p', 'h', 'e', 'r', 'l', 'a', 's', 't', 32, 0,
  /* 10908 */ 'v', 'c', 'i', 'p', 'h', 'e', 'r', 'l', 'a', 's', 't', 32, 0,
  /* 10921 */ 'd', 'c', 'b', 's', 't', 32, 0,
  /* 10928 */ 'd', 's', 't', 32, 0,
  /* 10933 */ 'h', 'a', 's', 'h', 's', 't', 32, 0,
  /* 10941 */ 'd', 'c', 'b', 't', 's', 't', 32, 0,
  /* 10949 */ 'd', 's', 't', 's', 't', 32, 0,
  /* 10956 */ 'd', 'c', 'b', 't', 't', 32, 0,
  /* 10963 */ 'd', 's', 't', 't', 32, 0,
  /* 10969 */ 'd', 'c', 'b', 't', 's', 't', 't', 32, 0,
  /* 10978 */ 'd', 's', 't', 's', 't', 't', 32, 0,
  /* 10986 */ 'l', 'h', 'a', 'u', 32, 0,
  /* 10992 */ 's', 't', 'b', 'u', 32, 0,
  /* 10998 */ 'l', 'f', 'd', 'u', 32, 0,
  /* 11004 */ 's', 't', 'f', 'd', 'u', 32, 0,
  /* 11011 */ 'm', 'a', 'd', 'd', 'h', 'd', 'u', 32, 0,
  /* 11020 */ 'm', 'u', 'l', 'h', 'd', 'u', 32, 0,
  /* 11028 */ 'f', 'c', 'f', 'i', 'd', 'u', 32, 0,
  /* 11036 */ 'f', 'c', 't', 'i', 'd', 'u', 32, 0,
  /* 11044 */ 'l', 'd', 'u', 32, 0,
  /* 11049 */ 's', 't', 'd', 'u', 32, 0,
  /* 11055 */ 'd', 'i', 'v', 'd', 'u', 32, 0,
  /* 11062 */ 'd', 'i', 'v', 'd', 'e', 'u', 32, 0,
  /* 11070 */ 'd', 'i', 'v', 'w', 'e', 'u', 32, 0,
  /* 11078 */ 's', 't', 'h', 'u', 32, 0,
  /* 11084 */ 'e', 'v', 's', 'r', 'w', 'i', 'u', 32, 0,
  /* 11093 */ 'e', 'v', 'l', 'w', 'h', 'o', 'u', 32, 0,
  /* 11102 */ 'f', 'c', 'm', 'p', 'u', 32, 0,
  /* 11109 */ 'l', 'f', 's', 'u', 32, 0,
  /* 11115 */ 's', 't', 'f', 's', 'u', 32, 0,
  /* 11122 */ 'e', 'v', 'c', 'm', 'p', 'g', 't', 'u', 32, 0,
  /* 11132 */ 'e', 'v', 'c', 'm', 'p', 'l', 't', 'u', 32, 0,
  /* 11142 */ 'm', 'u', 'l', 'h', 'w', 'u', 32, 0,
  /* 11150 */ 'f', 'c', 't', 'i', 'w', 'u', 32, 0,
  /* 11158 */ 'e', 'v', 's', 'r', 'w', 'u', 32, 0,
  /* 11166 */ 's', 't', 'w', 'u', 32, 0,
  /* 11172 */ 'e', 'v', 'd', 'i', 'v', 'w', 'u', 32, 0,
  /* 11181 */ 'l', 'b', 'z', 'u', 32, 0,
  /* 11187 */ 'l', 'h', 'z', 'u', 32, 0,
  /* 11193 */ 'l', 'w', 'z', 'u', 32, 0,
  /* 11199 */ 's', 'l', 'b', 'm', 'f', 'e', 'v', 32, 0,
  /* 11208 */ 'e', 'f', 'd', 'd', 'i', 'v', 32, 0,
  /* 11216 */ 'f', 'd', 'i', 'v', 32, 0,
  /* 11222 */ 'e', 'f', 's', 'd', 'i', 'v', 32, 0,
  /* 11230 */ 'e', 'v', 'f', 's', 'd', 'i', 'v', 32, 0,
  /* 11239 */ 'f', 't', 'd', 'i', 'v', 32, 0,
  /* 11246 */ 'v', 's', 'l', 'v', 32, 0,
  /* 11252 */ 'x', 'x', 'l', 'e', 'q', 'v', 32, 0,
  /* 11260 */ 'c', 'r', 'e', 'q', 'v', 32, 0,
  /* 11267 */ 'e', 'v', 'e', 'q', 'v', 32, 0,
  /* 11274 */ 'v', 's', 'r', 'v', 32, 0,
  /* 11280 */ 'p', 'l', 'x', 'v', 32, 0,
  /* 11286 */ 'p', 's', 't', 'x', 'v', 32, 0,
  /* 11293 */ 'v', 'e', 'x', 't', 's', 'b', '2', 'w', 32, 0,
  /* 11303 */ 'v', 'e', 'x', 't', 's', 'h', '2', 'w', 32, 0,
  /* 11313 */ 'e', 'v', 'm', 'h', 'e', 's', 'm', 'f', 'a', 'a', 'w', 32, 0,
  /* 11326 */ 'e', 'v', 'm', 'h', 'o', 's', 'm', 'f', 'a', 'a', 'w', 32, 0,
  /* 11339 */ 'e', 'v', 'm', 'h', 'e', 's', 's', 'f', 'a', 'a', 'w', 32, 0,
  /* 11352 */ 'e', 'v', 'm', 'h', 'o', 's', 's', 'f', 'a', 'a', 'w', 32, 0,
  /* 11365 */ 'e', 'v', 'a', 'd', 'd', 's', 'm', 'i', 'a', 'a', 'w', 32, 0,
  /* 11378 */ 'e', 'v', 'm', 'h', 'e', 's', 'm', 'i', 'a', 'a', 'w', 32, 0,
  /* 11391 */ 'e', 'v', 's', 'u', 'b', 'f', 's', 'm', 'i', 'a', 'a', 'w', 32, 0,
  /* 11405 */ 'e', 'v', 'm', 'w', 'l', 's', 'm', 'i', 'a', 'a', 'w', 32, 0,
  /* 11418 */ 'e', 'v', 'm', 'h', 'o', 's', 'm', 'i', 'a', 'a', 'w', 32, 0,
  /* 11431 */ 'e', 'v', 'a', 'd', 'd', 'u', 'm', 'i', 'a', 'a', 'w', 32, 0,
  /* 11444 */ 'e', 'v', 'm', 'h', 'e', 'u', 'm', 'i', 'a', 'a', 'w', 32, 0,
  /* 11457 */ 'e', 'v', 's', 'u', 'b', 'f', 'u', 'm', 'i', 'a', 'a', 'w', 32, 0,
  /* 11471 */ 'e', 'v', 'm', 'w', 'l', 'u', 'm', 'i', 'a', 'a', 'w', 32, 0,
  /* 11484 */ 'e', 'v', 'm', 'h', 'o', 'u', 'm', 'i', 'a', 'a', 'w', 32, 0,
  /* 11497 */ 'e', 'v', 'a', 'd', 'd', 's', 's', 'i', 'a', 'a', 'w', 32, 0,
  /* 11510 */ 'e', 'v', 'm', 'h', 'e', 's', 's', 'i', 'a', 'a', 'w', 32, 0,
  /* 11523 */ 'e', 'v', 's', 'u', 'b', 'f', 's', 's', 'i', 'a', 'a', 'w', 32, 0,
  /* 11537 */ 'e', 'v', 'm', 'w', 'l', 's', 's', 'i', 'a', 'a', 'w', 32, 0,
  /* 11550 */ 'e', 'v', 'm', 'h', 'o', 's', 's', 'i', 'a', 'a', 'w', 32, 0,
  /* 11563 */ 'e', 'v', 'a', 'd', 'd', 'u', 's', 'i', 'a', 'a', 'w', 32, 0,
  /* 11576 */ 'e', 'v', 'm', 'h', 'e', 'u', 's', 'i', 'a', 'a', 'w', 32, 0,
  /* 11589 */ 'e', 'v', 's', 'u', 'b', 'f', 'u', 's', 'i', 'a', 'a', 'w', 32, 0,
  /* 11603 */ 'e', 'v', 'm', 'w', 'l', 'u', 's', 'i', 'a', 'a', 'w', 32, 0,
  /* 11616 */ 'e', 'v', 'm', 'h', 'o', 'u', 's', 'i', 'a', 'a', 'w', 32, 0,
  /* 11629 */ 'v', 's', 'h', 'a', 's', 'i', 'g', 'm', 'a', 'w', 32, 0,
  /* 11641 */ 'v', 's', 'r', 'a', 'w', 32, 0,
  /* 11648 */ 'v', 'c', 'n', 't', 'm', 'b', 'w', 32, 0,
  /* 11657 */ 'v', 'p', 'r', 't', 'y', 'b', 'w', 32, 0,
  /* 11666 */ 'e', 'v', 'a', 'd', 'd', 'w', 32, 0,
  /* 11674 */ 'e', 'v', 'l', 'd', 'w', 32, 0,
  /* 11681 */ 'e', 'v', 'r', 'n', 'd', 'w', 32, 0,
  /* 11689 */ 'e', 'v', 's', 't', 'd', 'w', 32, 0,
  /* 11697 */ 'v', 'm', 'r', 'g', 'e', 'w', 32, 0,
  /* 11705 */ 'v', 'c', 'm', 'p', 'n', 'e', 'w', 32, 0,
  /* 11714 */ 'e', 'v', 's', 'u', 'b', 'f', 'w', 32, 0,
  /* 11723 */ 'e', 'v', 's', 'u', 'b', 'i', 'f', 'w', 32, 0,
  /* 11733 */ 'v', 'n', 'e', 'g', 'w', 32, 0,
  /* 11740 */ 'v', 'm', 'r', 'g', 'h', 'w', 32, 0,
  /* 11748 */ 'x', 'x', 'm', 'r', 'g', 'h', 'w', 32, 0,
  /* 11757 */ 'm', 'u', 'l', 'h', 'w', 32, 0,
  /* 11764 */ 'e', 'v', 'a', 'd', 'd', 'i', 'w', 32, 0,
  /* 11773 */ 'f', 'c', 't', 'i', 'w', 32, 0,
  /* 11780 */ 'x', 'x', 's', 'p', 'l', 't', 'i', 'w', 32, 0,
  /* 11790 */ 'v', 'm', 'r', 'g', 'l', 'w', 32, 0,
  /* 11798 */ 'x', 'x', 'm', 'r', 'g', 'l', 'w', 32, 0,
  /* 11807 */ 'm', 'u', 'l', 'l', 'w', 32, 0,
  /* 11814 */ 'c', 'm', 'p', 'l', 'w', 32, 0,
  /* 11821 */ 'e', 'v', 'r', 'l', 'w', 32, 0,
  /* 11828 */ 'e', 'v', 's', 'l', 'w', 32, 0,
  /* 11835 */ 'l', 'm', 'w', 32, 0,
  /* 11840 */ 's', 't', 'm', 'w', 32, 0,
  /* 11846 */ 'v', 'p', 'm', 's', 'u', 'm', 'w', 32, 0,
  /* 11855 */ 'e', 'v', 'm', 'h', 'e', 's', 'm', 'f', 'a', 'n', 'w', 32, 0,
  /* 11868 */ 'e', 'v', 'm', 'h', 'o', 's', 'm', 'f', 'a', 'n', 'w', 32, 0,
  /* 11881 */ 'e', 'v', 'm', 'h', 'e', 's', 's', 'f', 'a', 'n', 'w', 32, 0,
  /* 11894 */ 'e', 'v', 'm', 'h', 'o', 's', 's', 'f', 'a', 'n', 'w', 32, 0,
  /* 11907 */ 'e', 'v', 'm', 'h', 'e', 's', 'm', 'i', 'a', 'n', 'w', 32, 0,
  /* 11920 */ 'e', 'v', 'm', 'w', 'l', 's', 'm', 'i', 'a', 'n', 'w', 32, 0,
  /* 11933 */ 'e', 'v', 'm', 'h', 'o', 's', 'm', 'i', 'a', 'n', 'w', 32, 0,
  /* 11946 */ 'e', 'v', 'm', 'h', 'e', 'u', 'm', 'i', 'a', 'n', 'w', 32, 0,
  /* 11959 */ 'e', 'v', 'm', 'w', 'l', 'u', 'm', 'i', 'a', 'n', 'w', 32, 0,
  /* 11972 */ 'e', 'v', 'm', 'h', 'o', 'u', 'm', 'i', 'a', 'n', 'w', 32, 0,
  /* 11985 */ 'e', 'v', 'm', 'h', 'e', 's', 's', 'i', 'a', 'n', 'w', 32, 0,
  /* 11998 */ 'e', 'v', 'm', 'w', 'l', 's', 's', 'i', 'a', 'n', 'w', 32, 0,
  /* 12011 */ 'e', 'v', 'm', 'h', 'o', 's', 's', 'i', 'a', 'n', 'w', 32, 0,
  /* 12024 */ 'e', 'v', 'm', 'h', 'e', 'u', 's', 'i', 'a', 'n', 'w', 32, 0,
  /* 12037 */ 'e', 'v', 'm', 'w', 'l', 'u', 's', 'i', 'a', 'n', 'w', 32, 0,
  /* 12050 */ 'e', 'v', 'm', 'h', 'o', 'u', 's', 'i', 'a', 'n', 'w', 32, 0,
  /* 12063 */ 'v', 'm', 'r', 'g', 'o', 'w', 32, 0,
  /* 12071 */ 'c', 'm', 'p', 'w', 32, 0,
  /* 12077 */ 'x', 'x', 'b', 'r', 'w', 32, 0,
  /* 12084 */ 'v', 's', 'r', 'w', 32, 0,
  /* 12090 */ 'v', 'm', 'o', 'd', 's', 'w', 32, 0,
  /* 12098 */ 'v', 'm', 'u', 'l', 'e', 's', 'w', 32, 0,
  /* 12107 */ 'v', 'd', 'i', 'v', 'e', 's', 'w', 32, 0,
  /* 12116 */ 'v', 'a', 'v', 'g', 's', 'w', 32, 0,
  /* 12124 */ 'v', 'u', 'p', 'k', 'h', 's', 'w', 32, 0,
  /* 12133 */ 'v', 'm', 'u', 'l', 'h', 's', 'w', 32, 0,
  /* 12142 */ 'v', 's', 'p', 'l', 't', 'i', 's', 'w', 32, 0,
  /* 12152 */ 'v', 'u', 'p', 'k', 'l', 's', 'w', 32, 0,
  /* 12161 */ 'e', 'v', 'c', 'n', 't', 'l', 's', 'w', 32, 0,
  /* 12171 */ 'v', 'm', 'i', 'n', 's', 'w', 32, 0,
  /* 12179 */ 'v', 'i', 'n', 's', 'w', 32, 0,
  /* 12186 */ 'v', 'm', 'u', 'l', 'o', 's', 'w', 32, 0,
  /* 12195 */ 'v', 'c', 'm', 'p', 'g', 't', 's', 'w', 32, 0,
  /* 12205 */ 'e', 'x', 't', 's', 'w', 32, 0,
  /* 12212 */ 'v', 'd', 'i', 'v', 's', 'w', 32, 0,
  /* 12220 */ 'v', 'm', 'a', 'x', 's', 'w', 32, 0,
  /* 12228 */ 'v', 's', 'p', 'l', 't', 'w', 32, 0,
  /* 12236 */ 'x', 'x', 's', 'p', 'l', 't', 'w', 32, 0,
  /* 12245 */ 'v', 'p', 'o', 'p', 'c', 'n', 't', 'w', 32, 0,
  /* 12255 */ 'v', 'i', 'n', 's', 'e', 'r', 't', 'w', 32, 0,
  /* 12265 */ 'x', 'x', 'i', 'n', 's', 'e', 'r', 't', 'w', 32, 0,
  /* 12276 */ 'p', 's', 't', 'w', 32, 0,
  /* 12282 */ 'v', 's', 'u', 'b', 'c', 'u', 'w', 32, 0,
  /* 12291 */ 'v', 'a', 'd', 'd', 'c', 'u', 'w', 32, 0,
  /* 12300 */ 'v', 'm', 'o', 'd', 'u', 'w', 32, 0,
  /* 12308 */ 'v', 'a', 'b', 's', 'd', 'u', 'w', 32, 0,
  /* 12317 */ 'v', 'm', 'u', 'l', 'e', 'u', 'w', 32, 0,
  /* 12326 */ 'v', 'd', 'i', 'v', 'e', 'u', 'w', 32, 0,
  /* 12335 */ 'v', 'a', 'v', 'g', 'u', 'w', 32, 0,
  /* 12343 */ 'v', 'm', 'u', 'l', 'h', 'u', 'w', 32, 0,
  /* 12352 */ 'v', 'm', 'i', 'n', 'u', 'w', 32, 0,
  /* 12360 */ 'v', 'm', 'u', 'l', 'o', 'u', 'w', 32, 0,
  /* 12369 */ 'v', 'c', 'm', 'p', 'e', 'q', 'u', 'w', 32, 0,
  /* 12379 */ 'v', 'e', 'x', 't', 'r', 'a', 'c', 't', 'u', 'w', 32, 0,
  /* 12391 */ 'x', 'x', 'e', 'x', 't', 'r', 'a', 'c', 't', 'u', 'w', 32, 0,
  /* 12404 */ 'v', 'c', 'm', 'p', 'g', 't', 'u', 'w', 32, 0,
  /* 12414 */ 'v', 'd', 'i', 'v', 'u', 'w', 32, 0,
  /* 12422 */ 'v', 'm', 'a', 'x', 'u', 'w', 32, 0,
  /* 12430 */ 'x', 'x', 'b', 'l', 'e', 'n', 'd', 'v', 'w', 32, 0,
  /* 12441 */ 'd', 'i', 'v', 'w', 32, 0,
  /* 12447 */ 'v', 'c', 'm', 'p', 'n', 'e', 'z', 'w', 32, 0,
  /* 12457 */ 'v', 'c', 'l', 'z', 'w', 32, 0,
  /* 12464 */ 'e', 'v', 'c', 'n', 't', 'l', 'z', 'w', 32, 0,
  /* 12474 */ 'v', 'c', 't', 'z', 'w', 32, 0,
  /* 12481 */ 'c', 'n', 't', 't', 'z', 'w', 32, 0,
  /* 12489 */ 'l', 'x', 'v', 'd', '2', 'x', 32, 0,
  /* 12497 */ 's', 't', 'x', 'v', 'd', '2', 'x', 32, 0,
  /* 12506 */ 'l', 'x', 'v', 'w', '4', 'x', 32, 0,
  /* 12514 */ 's', 't', 'x', 'v', 'w', '4', 'x', 32, 0,
  /* 12523 */ 'l', 'x', 'v', 'b', '1', '6', 'x', 32, 0,
  /* 12532 */ 's', 't', 'x', 'v', 'b', '1', '6', 'x', 32, 0,
  /* 12542 */ 'l', 'x', 'v', 'h', '8', 'x', 32, 0,
  /* 12550 */ 's', 't', 'x', 'v', 'h', '8', 'x', 32, 0,
  /* 12559 */ 'l', 'h', 'a', 'x', 32, 0,
  /* 12565 */ 't', 'l', 'b', 'i', 'v', 'a', 'x', 32, 0,
  /* 12574 */ 'l', 'f', 'i', 'w', 'a', 'x', 32, 0,
  /* 12582 */ 'l', 'x', 's', 'i', 'w', 'a', 'x', 32, 0,
  /* 12591 */ 'l', 'w', 'a', 'x', 32, 0,
  /* 12597 */ 'l', 'v', 'e', 'b', 'x', 32, 0,
  /* 12604 */ 's', 't', 'v', 'e', 'b', 'x', 32, 0,
  /* 12612 */ 's', 't', 'x', 's', 'i', 'b', 'x', 32, 0,
  /* 12621 */ 'l', 'x', 'v', 'r', 'b', 'x', 32, 0,
  /* 12629 */ 's', 't', 'x', 'v', 'r', 'b', 'x', 32, 0,
  /* 12638 */ 's', 't', 'b', 'x', 32, 0,
  /* 12644 */ 'x', 'x', 's', 'p', 'l', 't', 'i', '3', '2', 'd', 'x', 32, 0,
  /* 12657 */ 'e', 'v', 'l', 'd', 'd', 'x', 32, 0,
  /* 12665 */ 'e', 'v', 's', 't', 'd', 'd', 'x', 32, 0,
  /* 12674 */ 'l', 'f', 'd', 'x', 32, 0,
  /* 12680 */ 's', 't', 'f', 'd', 'x', 32, 0,
  /* 12687 */ 'l', 'd', 'x', 32, 0,
  /* 12692 */ 'l', 'x', 'v', 'r', 'd', 'x', 32, 0,
  /* 12700 */ 's', 't', 'x', 'v', 'r', 'd', 'x', 32, 0,
  /* 12709 */ 'l', 'x', 's', 'd', 'x', 32, 0,
  /* 12716 */ 's', 't', 'x', 's', 'd', 'x', 32, 0,
  /* 12724 */ 's', 't', 'd', 'x', 32, 0,
  /* 12730 */ 'a', 'd', 'd', 'e', 'x', 32, 0,
  /* 12737 */ 'e', 'v', 'l', 'w', 'h', 'e', 'x', 32, 0,
  /* 12746 */ 'e', 'v', 's', 't', 'w', 'h', 'e', 'x', 32, 0,
  /* 12756 */ 'e', 'v', 's', 't', 'w', 'w', 'e', 'x', 32, 0,
  /* 12766 */ 'e', 'v', 'l', 'd', 'h', 'x', 32, 0,
  /* 12774 */ 'e', 'v', 's', 't', 'd', 'h', 'x', 32, 0,
  /* 12783 */ 'l', 'v', 'e', 'h', 'x', 32, 0,
  /* 12790 */ 's', 't', 'v', 'e', 'h', 'x', 32, 0,
  /* 12798 */ 's', 't', 'x', 's', 'i', 'h', 'x', 32, 0,
  /* 12807 */ 'l', 'x', 'v', 'r', 'h', 'x', 32, 0,
  /* 12815 */ 's', 't', 'x', 'v', 'r', 'h', 'x', 32, 0,
  /* 12824 */ 's', 't', 'h', 'x', 32, 0,
  /* 12830 */ 's', 't', 'b', 'c', 'i', 'x', 32, 0,
  /* 12838 */ 'l', 'd', 'c', 'i', 'x', 32, 0,
  /* 12845 */ 's', 't', 'd', 'c', 'i', 'x', 32, 0,
  /* 12853 */ 's', 't', 'h', 'c', 'i', 'x', 32, 0,
  /* 12861 */ 's', 't', 'w', 'c', 'i', 'x', 32, 0,
  /* 12869 */ 'l', 'b', 'z', 'c', 'i', 'x', 32, 0,
  /* 12877 */ 'l', 'h', 'z', 'c', 'i', 'x', 32, 0,
  /* 12885 */ 'l', 'w', 'z', 'c', 'i', 'x', 32, 0,
  /* 12893 */ 'x', 's', 'r', 'q', 'p', 'i', 'x', 32, 0,
  /* 12902 */ 'v', 'i', 'n', 's', 'b', 'l', 'x', 32, 0,
  /* 12911 */ 'v', 'e', 'x', 't', 'u', 'b', 'l', 'x', 32, 0,
  /* 12921 */ 'v', 'i', 'n', 's', 'd', 'l', 'x', 32, 0,
  /* 12930 */ 'v', 'i', 'n', 's', 'h', 'l', 'x', 32, 0,
  /* 12939 */ 'v', 'e', 'x', 't', 'u', 'h', 'l', 'x', 32, 0,
  /* 12949 */ 'v', 'i', 'n', 's', 'b', 'v', 'l', 'x', 32, 0,
  /* 12959 */ 'v', 'e', 'x', 't', 'd', 'u', 'b', 'v', 'l', 'x', 32, 0,
  /* 12971 */ 'v', 'e', 'x', 't', 'd', 'd', 'v', 'l', 'x', 32, 0,
  /* 12982 */ 'v', 'i', 'n', 's', 'h', 'v', 'l', 'x', 32, 0,
  /* 12992 */ 'v', 'e', 'x', 't', 'd', 'u', 'h', 'v', 'l', 'x', 32, 0,
  /* 13004 */ 'v', 'i', 'n', 's', 'w', 'v', 'l', 'x', 32, 0,
  /* 13014 */ 'v', 'e', 'x', 't', 'd', 'u', 'w', 'v', 'l', 'x', 32, 0,
  /* 13026 */ 'v', 'i', 'n', 's', 'w', 'l', 'x', 32, 0,
  /* 13035 */ 'v', 'e', 'x', 't', 'u', 'w', 'l', 'x', 32, 0,
  /* 13045 */ 'x', 'x', 'p', 'e', 'r', 'm', 'x', 32, 0,
  /* 13054 */ 'v', 's', 'b', 'o', 'x', 32, 0,
  /* 13061 */ 'e', 'v', 's', 't', 'w', 'h', 'o', 'x', 32, 0,
  /* 13071 */ 'e', 'v', 's', 't', 'w', 'w', 'o', 'x', 32, 0,
  /* 13081 */ 'l', 'b', 'e', 'p', 'x', 32, 0,
  /* 13088 */ 's', 't', 'b', 'e', 'p', 'x', 32, 0,
  /* 13096 */ 'l', 'f', 'd', 'e', 'p', 'x', 32, 0,
  /* 13104 */ 's', 't', 'f', 'd', 'e', 'p', 'x', 32, 0,
  /* 13113 */ 'l', 'h', 'e', 'p', 'x', 32, 0,
  /* 13120 */ 's', 't', 'h', 'e', 'p', 'x', 32, 0,
  /* 13128 */ 'l', 'w', 'e', 'p', 'x', 32, 0,
  /* 13135 */ 's', 't', 'w', 'e', 'p', 'x', 32, 0,
  /* 13143 */ 'v', 'u', 'p', 'k', 'h', 'p', 'x', 32, 0,
  /* 13152 */ 'v', 'p', 'k', 'p', 'x', 32, 0,
  /* 13159 */ 'v', 'u', 'p', 'k', 'l', 'p', 'x', 32, 0,
  /* 13168 */ 'l', 'x', 's', 's', 'p', 'x', 32, 0,
  /* 13176 */ 's', 't', 'x', 's', 's', 'p', 'x', 32, 0,
  /* 13185 */ 'l', 'x', 'v', 'p', 'x', 32, 0,
  /* 13192 */ 's', 't', 'x', 'v', 'p', 'x', 32, 0,
  /* 13200 */ 'l', 'b', 'a', 'r', 'x', 32, 0,
  /* 13207 */ 'l', 'd', 'a', 'r', 'x', 32, 0,
  /* 13214 */ 'l', 'h', 'a', 'r', 'x', 32, 0,
  /* 13221 */ 'l', 'q', 'a', 'r', 'x', 32, 0,
  /* 13228 */ 'l', 'w', 'a', 'r', 'x', 32, 0,
  /* 13235 */ 'l', 'd', 'b', 'r', 'x', 32, 0,
  /* 13242 */ 's', 't', 'd', 'b', 'r', 'x', 32, 0,
  /* 13250 */ 'l', 'h', 'b', 'r', 'x', 32, 0,
  /* 13257 */ 's', 't', 'h', 'b', 'r', 'x', 32, 0,
  /* 13265 */ 'v', 'i', 'n', 's', 'b', 'r', 'x', 32, 0,
  /* 13274 */ 'v', 'e', 'x', 't', 'u', 'b', 'r', 'x', 32, 0,
  /* 13284 */ 'l', 'w', 'b', 'r', 'x', 32, 0,
  /* 13291 */ 's', 't', 'w', 'b', 'r', 'x', 32, 0,
  /* 13299 */ 'v', 'i', 'n', 's', 'd', 'r', 'x', 32, 0,
  /* 13308 */ 'v', 'i', 'n', 's', 'h', 'r', 'x', 32, 0,
  /* 13317 */ 'v', 'e', 'x', 't', 'u', 'h', 'r', 'x', 32, 0,
  /* 13327 */ 'v', 'i', 'n', 's', 'b', 'v', 'r', 'x', 32, 0,
  /* 13337 */ 'v', 'e', 'x', 't', 'd', 'u', 'b', 'v', 'r', 'x', 32, 0,
  /* 13349 */ 'v', 'e', 'x', 't', 'd', 'd', 'v', 'r', 'x', 32, 0,
  /* 13360 */ 'v', 'i', 'n', 's', 'h', 'v', 'r', 'x', 32, 0,
  /* 13370 */ 'v', 'e', 'x', 't', 'd', 'u', 'h', 'v', 'r', 'x', 32, 0,
  /* 13382 */ 'v', 'i', 'n', 's', 'w', 'v', 'r', 'x', 32, 0,
  /* 13392 */ 'v', 'e', 'x', 't', 'd', 'u', 'w', 'v', 'r', 'x', 32, 0,
  /* 13404 */ 'v', 'i', 'n', 's', 'w', 'r', 'x', 32, 0,
  /* 13413 */ 'v', 'e', 'x', 't', 'u', 'w', 'r', 'x', 32, 0,
  /* 13423 */ 'm', 'c', 'r', 'x', 'r', 'x', 32, 0,
  /* 13431 */ 't', 'l', 'b', 's', 'x', 32, 0,
  /* 13438 */ 'l', 'x', 'v', 'd', 's', 'x', 32, 0,
  /* 13446 */ 'v', 'c', 'f', 's', 'x', 32, 0,
  /* 13453 */ 'l', 'f', 's', 'x', 32, 0,
  /* 13459 */ 's', 't', 'f', 's', 'x', 32, 0,
  /* 13466 */ 'e', 'v', 'l', 'w', 'h', 'o', 's', 'x', 32, 0,
  /* 13476 */ 'l', 'x', 'v', 'w', 's', 'x', 32, 0,
  /* 13484 */ 'e', 'v', 'l', 'h', 'h', 'e', 's', 'p', 'l', 'a', 't', 'x', 32, 0,
  /* 13498 */ 'e', 'v', 'l', 'w', 'h', 's', 'p', 'l', 'a', 't', 'x', 32, 0,
  /* 13511 */ 'e', 'v', 'l', 'h', 'h', 'o', 's', 's', 'p', 'l', 'a', 't', 'x', 32, 0,
  /* 13526 */ 'e', 'v', 'l', 'h', 'h', 'o', 'u', 's', 'p', 'l', 'a', 't', 'x', 32, 0,
  /* 13541 */ 'e', 'v', 'l', 'w', 'w', 's', 'p', 'l', 'a', 't', 'x', 32, 0,
  /* 13554 */ 'l', 'h', 'a', 'u', 'x', 32, 0,
  /* 13561 */ 'l', 'w', 'a', 'u', 'x', 32, 0,
  /* 13568 */ 's', 't', 'b', 'u', 'x', 32, 0,
  /* 13575 */ 'l', 'f', 'd', 'u', 'x', 32, 0,
  /* 13582 */ 's', 't', 'f', 'd', 'u', 'x', 32, 0,
  /* 13590 */ 'l', 'd', 'u', 'x', 32, 0,
  /* 13596 */ 's', 't', 'd', 'u', 'x', 32, 0,
  /* 13603 */ 'v', 'c', 'f', 'u', 'x', 32, 0,
  /* 13610 */ 's', 't', 'h', 'u', 'x', 32, 0,
  /* 13617 */ 'e', 'v', 'l', 'w', 'h', 'o', 'u', 'x', 32, 0,
  /* 13627 */ 'l', 'f', 's', 'u', 'x', 32, 0,
  /* 13634 */ 's', 't', 'f', 's', 'u', 'x', 32, 0,
  /* 13642 */ 's', 't', 'w', 'u', 'x', 32, 0,
  /* 13649 */ 'l', 'b', 'z', 'u', 'x', 32, 0,
  /* 13656 */ 'l', 'h', 'z', 'u', 'x', 32, 0,
  /* 13663 */ 'l', 'w', 'z', 'u', 'x', 32, 0,
  /* 13670 */ 'l', 'v', 'x', 32, 0,
  /* 13675 */ 's', 't', 'v', 'x', 32, 0,
  /* 13681 */ 'l', 'x', 'v', 'x', 32, 0,
  /* 13687 */ 's', 't', 'x', 'v', 'x', 32, 0,
  /* 13694 */ 'e', 'v', 'l', 'd', 'w', 'x', 32, 0,
  /* 13702 */ 'e', 'v', 's', 't', 'd', 'w', 'x', 32, 0,
  /* 13711 */ 'l', 'v', 'e', 'w', 'x', 32, 0,
  /* 13718 */ 's', 't', 'v', 'e', 'w', 'x', 32, 0,
  /* 13726 */ 's', 't', 'f', 'i', 'w', 'x', 32, 0,
  /* 13734 */ 's', 't', 'x', 's', 'i', 'w', 'x', 32, 0,
  /* 13743 */ 'l', 'x', 'v', 'r', 'w', 'x', 32, 0,
  /* 13751 */ 's', 't', 'x', 'v', 'r', 'w', 'x', 32, 0,
  /* 13760 */ 's', 't', 'w', 'x', 32, 0,
  /* 13766 */ 'l', 'x', 's', 'i', 'b', 'z', 'x', 32, 0,
  /* 13775 */ 'l', 'b', 'z', 'x', 32, 0,
  /* 13781 */ 'l', 'x', 's', 'i', 'h', 'z', 'x', 32, 0,
  /* 13790 */ 'l', 'h', 'z', 'x', 32, 0,
  /* 13796 */ 'l', 'f', 'i', 'w', 'z', 'x', 32, 0,
  /* 13804 */ 'l', 'x', 's', 'i', 'w', 'z', 'x', 32, 0,
  /* 13813 */ 'l', 'w', 'z', 'x', 32, 0,
  /* 13819 */ 'c', 'o', 'p', 'y', 32, 0,
  /* 13825 */ 'd', 'c', 'b', 'z', 32, 0,
  /* 13831 */ 'p', 'l', 'b', 'z', 32, 0,
  /* 13837 */ 'x', 'x', 's', 'e', 't', 'a', 'c', 'c', 'z', 32, 0,
  /* 13848 */ 'b', 'd', 'z', 32, 0,
  /* 13853 */ 'e', 'f', 'd', 'c', 't', 's', 'i', 'd', 'z', 32, 0,
  /* 13864 */ 'f', 'c', 't', 'i', 'd', 'z', 32, 0,
  /* 13872 */ 'e', 'f', 'd', 'c', 't', 'u', 'i', 'd', 'z', 32, 0,
  /* 13883 */ 'x', 's', 'c', 'v', 'q', 'p', 's', 'd', 'z', 32, 0,
  /* 13894 */ 'x', 's', 'c', 'v', 'q', 'p', 'u', 'd', 'z', 32, 0,
  /* 13905 */ 'p', 'l', 'h', 'z', 32, 0,
  /* 13911 */ 'v', 'r', 'f', 'i', 'z', 32, 0,
  /* 13918 */ 'x', 's', 'r', 'd', 'p', 'i', 'z', 32, 0,
  /* 13927 */ 'x', 'v', 'r', 'd', 'p', 'i', 'z', 32, 0,
  /* 13936 */ 'x', 'v', 'r', 's', 'p', 'i', 'z', 32, 0,
  /* 13945 */ 'f', 'r', 'i', 'z', 32, 0,
  /* 13951 */ 'e', 'f', 'd', 'c', 't', 's', 'i', 'z', 32, 0,
  /* 13961 */ 'e', 'f', 's', 'c', 't', 's', 'i', 'z', 32, 0,
  /* 13971 */ 'e', 'v', 'f', 's', 'c', 't', 's', 'i', 'z', 32, 0,
  /* 13982 */ 'e', 'f', 'd', 'c', 't', 'u', 'i', 'z', 32, 0,
  /* 13992 */ 'e', 'f', 's', 'c', 't', 'u', 'i', 'z', 32, 0,
  /* 14002 */ 'b', 'd', 'n', 'z', 32, 0,
  /* 14008 */ 'x', 's', 'c', 'v', 'q', 'p', 's', 'q', 'z', 32, 0,
  /* 14019 */ 'x', 's', 'c', 'v', 'q', 'p', 'u', 'q', 'z', 32, 0,
  /* 14030 */ 'f', 'c', 't', 'i', 'd', 'u', 'z', 32, 0,
  /* 14039 */ 'f', 'c', 't', 'i', 'w', 'u', 'z', 32, 0,
  /* 14048 */ 'f', 'c', 't', 'i', 'w', 'z', 32, 0,
  /* 14056 */ 'p', 'l', 'w', 'z', 32, 0,
  /* 14062 */ 'm', 'f', 'v', 's', 'r', 'w', 'z', 32, 0,
  /* 14071 */ 'm', 't', 'v', 's', 'r', 'w', 'z', 32, 0,
  /* 14080 */ 'x', 's', 'c', 'v', 'q', 'p', 's', 'w', 'z', 32, 0,
  /* 14091 */ 'x', 's', 'c', 'v', 'q', 'p', 'u', 'w', 'z', 32, 0,
  /* 14102 */ 'b', 'd', 'z', 'l', 'r', 'l', '+', 0,
  /* 14110 */ 'b', 'd', 'n', 'z', 'l', 'r', 'l', '+', 0,
  /* 14119 */ 'b', 'd', 'z', 'l', 'r', '+', 0,
  /* 14126 */ 'b', 'd', 'n', 'z', 'l', 'r', '+', 0,
  /* 14134 */ 'e', 'v', 's', 'e', 'l', 32, 'c', 'r', 'D', ',', 0,
  /* 14145 */ 'b', 'd', 'z', 'l', 'r', 'l', '-', 0,
  /* 14153 */ 'b', 'd', 'n', 'z', 'l', 'r', 'l', '-', 0,
  /* 14162 */ 'b', 'd', 'z', 'l', 'r', '-', 0,
  /* 14169 */ 'b', 'd', 'n', 'z', 'l', 'r', '-', 0,
  /* 14177 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 32, 'P', 'a', 't', 'c', 'h', 'a', 'b', 'l', 'e', 32, 'R', 'E', 'T', '.', 0,
  /* 14208 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'T', 'y', 'p', 'e', 'd', 32, 'E', 'v', 'e', 'n', 't', 32, 'L', 'o', 'g', '.', 0,
  /* 14232 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'C', 'u', 's', 't', 'o', 'm', 32, 'E', 'v', 'e', 'n', 't', 32, 'L', 'o', 'g', '.', 0,
  /* 14257 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 32, 'E', 'n', 't', 'e', 'r', '.', 0,
  /* 14280 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'T', 'a', 'i', 'l', 32, 'C', 'a', 'l', 'l', 32, 'E', 'x', 'i', 't', '.', 0,
  /* 14303 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 32, 'E', 'x', 'i', 't', '.', 0,
  /* 14325 */ 't', 'r', 'e', 'c', 'h', 'k', 'p', 't', '.', 0,
  /* 14335 */ 'o', 'r', 'i', 32, '1', ',', 32, '1', ',', 32, '0', 0,
  /* 14347 */ 'o', 'r', 'i', 32, '2', ',', 32, '2', ',', 32, '0', 0,
  /* 14359 */ '#', 'A', 'D', 'D', 'I', 'S', 'd', 't', 'p', 'r', 'e', 'l', 'H', 'A', '3', '2', 0,
  /* 14376 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '3', '2', 0,
  /* 14397 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '3', '2', 0,
  /* 14418 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '3', '2', 0,
  /* 14440 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '3', '2', 0,
  /* 14461 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '3', '2', 0,
  /* 14483 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '3', '2', 0,
  /* 14504 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '3', '2', 0,
  /* 14521 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '3', '2', 0,
  /* 14542 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '3', '2', 0,
  /* 14562 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '3', '2', 0,
  /* 14584 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '3', '2', 0,
  /* 14605 */ '#', 'A', 'D', 'D', 'I', 't', 'l', 's', 'g', 'd', 'L', '3', '2', 0,
  /* 14619 */ '#', 'A', 'D', 'D', 'I', 't', 'l', 's', 'l', 'd', 'L', '3', '2', 0,
  /* 14633 */ '#', 'L', 'D', 'g', 'o', 't', 'T', 'p', 'r', 'e', 'l', 'L', '3', '2', 0,
  /* 14648 */ '#', 'A', 'D', 'D', 'I', 'd', 't', 'p', 'r', 'e', 'l', 'L', '3', '2', 0,
  /* 14663 */ '#', 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'L', 'O', 'N', 'G', 'J', 'M', 'P', '3', '2', 0,
  /* 14682 */ '#', 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'S', 'E', 'T', 'J', 'M', 'P', '3', '2', 0,
  /* 14700 */ '#', 'A', 'D', 'D', 'I', 't', 'l', 's', 'g', 'd', 'L', 'A', 'D', 'D', 'R', '3', '2', 0,
  /* 14718 */ '#', 'A', 'D', 'D', 'I', 't', 'l', 's', 'l', 'd', 'L', 'A', 'D', 'D', 'R', '3', '2', 0,
  /* 14736 */ 'G', 'E', 'T', 't', 'l', 's', 'l', 'd', 'A', 'D', 'D', 'R', '3', '2', 0,
  /* 14751 */ 'G', 'E', 'T', 't', 'l', 's', 'A', 'D', 'D', 'R', '3', '2', 0,
  /* 14764 */ '#', 'P', 'R', 'O', 'B', 'E', 'D', '_', 'A', 'L', 'L', 'O', 'C', 'A', '_', '3', '2', 0,
  /* 14782 */ '#', 'P', 'R', 'E', 'P', 'A', 'R', 'E', '_', 'P', 'R', 'O', 'B', 'E', 'D', '_', 'A', 'L', 'L', 'O', 'C', 'A', '_', '3', '2', 0,
  /* 14808 */ '#', 'P', 'R', 'O', 'B', 'E', 'D', '_', 'S', 'T', 'A', 'C', 'K', 'A', 'L', 'L', 'O', 'C', '_', '3', '2', 0,
  /* 14830 */ '#', 'P', 'R', 'E', 'P', 'A', 'R', 'E', '_', 'P', 'R', 'O', 'B', 'E', 'D', '_', 'A', 'L', 'L', 'O', 'C', 'A', '_', 'N', 'E', 'G', 'S', 'I', 'Z', 'E', '_', 'S', 'A', 'M', 'E', '_', 'R', 'E', 'G', '_', '3', '2', 0,
  /* 14873 */ '#', 'D', 'F', 'L', 'O', 'A', 'D', 'f', '3', '2', 0,
  /* 14884 */ '#', 'X', 'F', 'L', 'O', 'A', 'D', 'f', '3', '2', 0,
  /* 14895 */ '#', 'D', 'F', 'S', 'T', 'O', 'R', 'E', 'f', '3', '2', 0,
  /* 14907 */ '#', 'X', 'F', 'S', 'T', 'O', 'R', 'E', 'f', '3', '2', 0,
  /* 14919 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '6', '4', 0,
  /* 14940 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '6', '4', 0,
  /* 14961 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '6', '4', 0,
  /* 14983 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '6', '4', 0,
  /* 15005 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '6', '4', 0,
  /* 15026 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '6', '4', 0,
  /* 15043 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '6', '4', 0,
  /* 15064 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '6', '4', 0,
  /* 15085 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '6', '4', 0,
  /* 15105 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '6', '4', 0,
  /* 15127 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '6', '4', 0,
  /* 15148 */ '#', 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'L', 'O', 'N', 'G', 'J', 'M', 'P', '6', '4', 0,
  /* 15167 */ '#', 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'S', 'E', 'T', 'J', 'M', 'P', '6', '4', 0,
  /* 15185 */ '#', 'P', 'R', 'O', 'B', 'E', 'D', '_', 'A', 'L', 'L', 'O', 'C', 'A', '_', '6', '4', 0,
  /* 15203 */ '#', 'P', 'R', 'E', 'P', 'A', 'R', 'E', '_', 'P', 'R', 'O', 'B', 'E', 'D', '_', 'A', 'L', 'L', 'O', 'C', 'A', '_', '6', '4', 0,
  /* 15229 */ '#', 'P', 'R', 'O', 'B', 'E', 'D', '_', 'S', 'T', 'A', 'C', 'K', 'A', 'L', 'L', 'O', 'C', '_', '6', '4', 0,
  /* 15251 */ '#', 'P', 'R', 'E', 'P', 'A', 'R', 'E', '_', 'P', 'R', 'O', 'B', 'E', 'D', '_', 'A', 'L', 'L', 'O', 'C', 'A', '_', 'N', 'E', 'G', 'S', 'I', 'Z', 'E', '_', 'S', 'A', 'M', 'E', '_', 'R', 'E', 'G', '_', '6', '4', 0,
  /* 15294 */ '#', 'D', 'F', 'L', 'O', 'A', 'D', 'f', '6', '4', 0,
  /* 15305 */ '#', 'X', 'F', 'L', 'O', 'A', 'D', 'f', '6', '4', 0,
  /* 15316 */ '#', 'D', 'F', 'S', 'T', 'O', 'R', 'E', 'f', '6', '4', 0,
  /* 15328 */ '#', 'X', 'F', 'S', 'T', 'O', 'R', 'E', 'f', '6', '4', 0,
  /* 15340 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'i', '6', '4', 0,
  /* 15361 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'S', 'P', 'E', '4', 0,
  /* 15377 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'S', 'P', 'E', '4', 0,
  /* 15390 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'F', '4', 0,
  /* 15404 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'F', '4', 0,
  /* 15415 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'I', '4', 0,
  /* 15429 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'I', '4', 0,
  /* 15440 */ 'c', 'r', 'x', 'o', 'r', 32, '6', ',', 32, '6', ',', 32, '6', 0,
  /* 15454 */ 'c', 'r', 'e', 'q', 'v', 32, '6', ',', 32, '6', ',', 32, '6', 0,
  /* 15468 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'F', '1', '6', 0,
  /* 15483 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'F', '1', '6', 0,
  /* 15495 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '1', '6', 0,
  /* 15516 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '1', '6', 0,
  /* 15537 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '1', '6', 0,
  /* 15559 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '1', '6', 0,
  /* 15580 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '1', '6', 0,
  /* 15602 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '1', '6', 0,
  /* 15623 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '6', 0,
  /* 15640 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '1', '6', 0,
  /* 15661 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '1', '6', 0,
  /* 15681 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '1', '6', 0,
  /* 15703 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '1', '6', 0,
  /* 15724 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '1', '2', '8', 0,
  /* 15746 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '1', '2', '8', 0,
  /* 15768 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '1', '2', '8', 0,
  /* 15791 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '1', '2', '8', 0,
  /* 15813 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '2', '8', 0,
  /* 15831 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '2', '8', 0,
  /* 15853 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '1', '2', '8', 0,
  /* 15875 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '1', '2', '8', 0,
  /* 15896 */ '#', 'A', 'D', 'D', 'I', 'S', 't', 'o', 'c', 'H', 'A', '8', 0,
  /* 15909 */ '#', 'D', 'Y', 'N', 'A', 'L', 'L', 'O', 'C', '8', 0,
  /* 15920 */ '#', 'C', 'F', 'E', 'N', 'C', 'E', '8', 0,
  /* 15929 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'F', '8', 0,
  /* 15943 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'F', '8', 0,
  /* 15954 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '8', 0,
  /* 15974 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'I', '8', 0,
  /* 15988 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '8', 0,
  /* 16008 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '8', 0,
  /* 16029 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '8', 0,
  /* 16049 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '8', 0,
  /* 16070 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '8', 0,
  /* 16090 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '8', 0,
  /* 16110 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '8', 0,
  /* 16129 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '8', 0,
  /* 16148 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'I', '8', 0,
  /* 16159 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '8', 0,
  /* 16180 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '8', 0,
  /* 16200 */ '#', 'M', 'o', 'v', 'e', 'P', 'C', 't', 'o', 'L', 'R', '8', 0,
  /* 16213 */ '#', 'D', 'Y', 'N', 'A', 'R', 'E', 'A', 'O', 'F', 'F', 'S', 'E', 'T', '8', 0,
  /* 16229 */ '#', 'A', 'N', 'D', 'I', '_', 'r', 'e', 'c', '_', '1', '_', 'E', 'Q', '_', 'B', 'I', 'T', '8', 0,
  /* 16249 */ '#', 'A', 'N', 'D', 'I', '_', 'r', 'e', 'c', '_', '1', '_', 'G', 'T', '_', 'B', 'I', 'T', '8', 0,
  /* 16269 */ '#', 'T', 'L', 'S', 'G', 'D', 'A', 'I', 'X', '8', 0,
  /* 16280 */ '#', 'A', 'D', 'D', 'I', 't', 'o', 'c', '8', 0,
  /* 16290 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'i', '8', 0,
  /* 16306 */ '#', 'A', 'D', 'D', 'I', 'S', 't', 'o', 'c', 'H', 'A', 0,
  /* 16318 */ '#', 'A', 'D', 'D', 'I', 'S', 't', 'l', 's', 'g', 'd', 'H', 'A', 0,
  /* 16332 */ '#', 'A', 'D', 'D', 'I', 'S', 't', 'l', 's', 'l', 'd', 'H', 'A', 0,
  /* 16346 */ '#', 'A', 'D', 'D', 'I', 'S', 'g', 'o', 't', 'T', 'p', 'r', 'e', 'l', 'H', 'A', 0,
  /* 16363 */ '#', 'A', 'D', 'D', 'I', 'S', 'd', 't', 'p', 'r', 'e', 'l', 'H', 'A', 0,
  /* 16378 */ '#', 'R', 'e', 'a', 'd', 'T', 'B', 0,
  /* 16386 */ '#', 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'U', 'A', 'C', 'C', 0,
  /* 16400 */ '#', 'S', 'P', 'I', 'L', 'L', '_', 'U', 'A', 'C', 'C', 0,
  /* 16412 */ '#', 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'A', 'C', 'C', 0,
  /* 16425 */ '#', 'S', 'P', 'I', 'L', 'L', '_', 'A', 'C', 'C', 0,
  /* 16436 */ '#', 'D', 'Y', 'N', 'A', 'L', 'L', 'O', 'C', 0,
  /* 16446 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'V', 'S', 'F', 'R', 'C', 0,
  /* 16463 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'V', 'S', 'F', 'R', 'C', 0,
  /* 16477 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'V', 'R', 'R', 'C', 0,
  /* 16493 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'V', 'R', 'R', 'C', 0,
  /* 16506 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'V', 'S', 'S', 'R', 'C', 0,
  /* 16523 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'V', 'S', 'S', 'R', 'C', 0,
  /* 16537 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'V', 'S', 'R', 'C', 0,
  /* 16553 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'V', 'S', 'R', 'C', 0,
  /* 16566 */ '#', 'S', 'P', 'I', 'L', 'L', 'T', 'O', 'V', 'S', 'R', '_', 'L', 'D', 0,
  /* 16581 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 16594 */ '#', 'S', 'E', 'T', 'R', 'N', 'D', 0,
  /* 16602 */ '#', 'B', 'U', 'I', 'L', 'D', '_', 'Q', 'U', 'A', 'D', 'W', 'O', 'R', 'D', 0,
  /* 16618 */ '#', 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'Q', 'U', 'A', 'D', 'W', 'O', 'R', 'D', 0,
  /* 16636 */ '#', 'S', 'P', 'I', 'L', 'L', '_', 'Q', 'U', 'A', 'D', 'W', 'O', 'R', 'D', 0,
  /* 16652 */ '#', 'S', 'P', 'L', 'I', 'T', '_', 'Q', 'U', 'A', 'D', 'W', 'O', 'R', 'D', 0,
  /* 16668 */ 'P', 'S', 'E', 'U', 'D', 'O', '_', 'P', 'R', 'O', 'B', 'E', 0,
  /* 16681 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 16688 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'S', 'P', 'E', 0,
  /* 16703 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'S', 'P', 'E', 0,
  /* 16715 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 16725 */ 'D', 'B', 'G', '_', 'I', 'N', 'S', 'T', 'R', '_', 'R', 'E', 'F', 0,
  /* 16739 */ 'D', 'B', 'G', '_', 'P', 'H', 'I', 0,
  /* 16747 */ '#', 'L', 'D', 't', 'o', 'c', 'J', 'T', 'I', 0,
  /* 16757 */ 'D', 'B', 'G', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 16767 */ '#', 'G', 'E', 'T', 't', 'l', 's', 'l', 'd', 'A', 'D', 'D', 'R', 'P', 'C', 'R', 'E', 'L', 0,
  /* 16786 */ '#', 'G', 'E', 'T', 't', 'l', 's', 'A', 'D', 'D', 'R', 'P', 'C', 'R', 'E', 'L', 0,
  /* 16803 */ '#', 'L', 'D', 't', 'o', 'c', 'L', 0,
  /* 16811 */ '#', 'A', 'D', 'D', 'I', 't', 'o', 'c', 'L', 0,
  /* 16821 */ '#', 'L', 'W', 'Z', 't', 'o', 'c', 'L', 0,
  /* 16830 */ '#', 'A', 'D', 'D', 'I', 't', 'l', 's', 'g', 'd', 'L', 0,
  /* 16842 */ '#', 'A', 'D', 'D', 'I', 't', 'l', 's', 'l', 'd', 'L', 0,
  /* 16854 */ '#', 'L', 'D', 'g', 'o', 't', 'T', 'p', 'r', 'e', 'l', 'L', 0,
  /* 16867 */ '#', 'A', 'D', 'D', 'I', 'd', 't', 'p', 'r', 'e', 'l', 'L', 0,
  /* 16880 */ '#', 'S', 'E', 'T', 'F', 'L', 'M', 0,
  /* 16888 */ '#', 'L', 'Q', 'X', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 16900 */ '#', 'S', 'T', 'Q', 'X', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 16913 */ '#', 'P', 'P', 'C', 'E', 'I', 'E', 'I', 'O', 0,
  /* 16923 */ '#', 'U', 'N', 'E', 'N', 'C', 'O', 'D', 'E', 'D', '_', 'N', 'O', 'P', 0,
  /* 16938 */ '#', 'U', 'p', 'd', 'a', 't', 'e', 'G', 'B', 'R', 0,
  /* 16949 */ '#', 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'C', 'R', 0,
  /* 16961 */ '#', 'S', 'P', 'I', 'L', 'L', '_', 'C', 'R', 0,
  /* 16971 */ '#', 'A', 'D', 'D', 'I', 't', 'l', 's', 'g', 'd', 'L', 'A', 'D', 'D', 'R', 0,
  /* 16987 */ '#', 'A', 'D', 'D', 'I', 't', 'l', 's', 'l', 'd', 'L', 'A', 'D', 'D', 'R', 0,
  /* 17003 */ '#', 'G', 'E', 'T', 't', 'l', 's', 'l', 'd', 'A', 'D', 'D', 'R', 0,
  /* 17017 */ '#', 'G', 'E', 'T', 't', 'l', 's', 'A', 'D', 'D', 'R', 0,
  /* 17029 */ '#', 'K', 'I', 'L', 'L', '_', 'P', 'A', 'I', 'R', 0,
  /* 17040 */ '#', 'M', 'o', 'v', 'e', 'P', 'C', 't', 'o', 'L', 'R', 0,
  /* 17052 */ '#', 'M', 'o', 'v', 'e', 'G', 'O', 'T', 't', 'o', 'L', 'R', 0,
  /* 17065 */ '#', 'T', 'C', 'H', 'E', 'C', 'K', '_', 'R', 'E', 'T', 0,
  /* 17077 */ '#', 'T', 'B', 'E', 'G', 'I', 'N', '_', 'R', 'E', 'T', 0,
  /* 17089 */ '#', 'D', 'Y', 'N', 'A', 'R', 'E', 'A', 'O', 'F', 'F', 'S', 'E', 'T', 0,
  /* 17104 */ '#', 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'C', 'R', 'B', 'I', 'T', 0,
  /* 17119 */ '#', 'S', 'P', 'I', 'L', 'L', '_', 'C', 'R', 'B', 'I', 'T', 0,
  /* 17132 */ '#', 'A', 'N', 'D', 'I', '_', 'r', 'e', 'c', '_', '1', '_', 'E', 'Q', '_', 'B', 'I', 'T', 0,
  /* 17151 */ '#', 'A', 'N', 'D', 'I', '_', 'r', 'e', 'c', '_', '1', '_', 'G', 'T', '_', 'B', 'I', 'T', 0,
  /* 17170 */ '#', 'P', 'P', 'C', '3', '2', 'G', 'O', 'T', 0,
  /* 17180 */ '#', 'P', 'P', 'C', '3', '2', 'P', 'I', 'C', 'G', 'O', 'T', 0,
  /* 17193 */ '#', 'L', 'D', 't', 'o', 'c', 'C', 'P', 'T', 0,
  /* 17203 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 17218 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', '_', 'L', 'I', 'S', 'T', 0,
  /* 17233 */ '#', 'S', 'P', 'I', 'L', 'L', 'T', 'O', 'V', 'S', 'R', '_', 'S', 'T', 0,
  /* 17248 */ '#', 'L', 'I', 'W', 'A', 'X', 0,
  /* 17255 */ '#', 'S', 'P', 'I', 'L', 'L', 'T', 'O', 'V', 'S', 'R', '_', 'L', 'D', 'X', 0,
  /* 17271 */ 'G', 'E', 'T', 't', 'l', 's', 'A', 'D', 'D', 'R', '3', '2', 'A', 'I', 'X', 0,
  /* 17287 */ 'G', 'E', 'T', 't', 'l', 's', 'A', 'D', 'D', 'R', '6', '4', 'A', 'I', 'X', 0,
  /* 17303 */ '#', 'T', 'L', 'S', 'G', 'D', 'A', 'I', 'X', 0,
  /* 17313 */ '#', 'S', 'P', 'I', 'L', 'L', 'T', 'O', 'V', 'S', 'R', '_', 'S', 'T', 'X', 0,
  /* 17329 */ '#', 'S', 'T', 'I', 'W', 'X', 0,
  /* 17336 */ '#', 'L', 'I', 'W', 'Z', 'X', 0,
  /* 17343 */ 'b', 'c', 'a', 0,
  /* 17347 */ 's', 'l', 'b', 'i', 'a', 0,
  /* 17353 */ 't', 'l', 'b', 'i', 'a', 0,
  /* 17359 */ 'b', 'c', 'l', 'a', 0,
  /* 17364 */ 'c', 'l', 'r', 'b', 'h', 'r', 'b', 0,
  /* 17372 */ 'b', 'c', 0,
  /* 17375 */ 's', 'l', 'b', 's', 'y', 'n', 'c', 0,
  /* 17383 */ 't', 'l', 'b', 's', 'y', 'n', 'c', 0,
  /* 17391 */ 'm', 's', 'g', 's', 'y', 'n', 'c', 0,
  /* 17399 */ 'i', 's', 'y', 'n', 'c', 0,
  /* 17405 */ 'm', 's', 'y', 'n', 'c', 0,
  /* 17411 */ '#', 'L', 'D', 't', 'o', 'c', 0,
  /* 17418 */ '#', 'A', 'D', 'D', 'I', 't', 'o', 'c', 0,
  /* 17427 */ '#', 'L', 'W', 'Z', 't', 'o', 'c', 0,
  /* 17435 */ 'h', 'r', 'f', 'i', 'd', 0,
  /* 17441 */ 't', 'l', 'b', 'r', 'e', 0,
  /* 17447 */ 't', 'l', 'b', 'w', 'e', 0,
  /* 17453 */ '#', 'S', 'E', 'T', 'R', 'N', 'D', 'i', 0,
  /* 17462 */ 'r', 'f', 'c', 'i', 0,
  /* 17467 */ 'r', 'f', 'm', 'c', 'i', 0,
  /* 17473 */ 'r', 'f', 'd', 'i', 0,
  /* 17478 */ 'r', 'f', 'i', 0,
  /* 17482 */ 'b', 'c', 'l', 0,
  /* 17486 */ '#', 'P', 'A', 'D', 'D', 'I', 'd', 't', 'p', 'r', 'e', 'l', 0,
  /* 17499 */ '#', 32, 'F', 'E', 'n', 't', 'r', 'y', 32, 'c', 'a', 'l', 'l', 0,
  /* 17513 */ 'd', 's', 's', 'a', 'l', 'l', 0,
  /* 17520 */ 'b', 'l', 'r', 'l', 0,
  /* 17525 */ 'b', 'd', 'z', 'l', 'r', 'l', 0,
  /* 17532 */ 'b', 'd', 'n', 'z', 'l', 'r', 'l', 0,
  /* 17540 */ 'b', 'c', 't', 'r', 'l', 0,
  /* 17546 */ 'a', 't', 't', 'n', 0,
  /* 17551 */ '#', 'M', 'T', 'C', 'T', 'R', '8', 'P', 's', 'e', 'u', 'd', 'o', 0,
  /* 17565 */ '#', 'D', 'e', 'c', 'r', 'e', 'a', 's', 'e', 'C', 'T', 'R', '8', 'P', 's', 'e', 'u', 'd', 'o', 0,
  /* 17585 */ '#', 'M', 'T', 'C', 'T', 'R', 'P', 's', 'e', 'u', 'd', 'o', 0,
  /* 17598 */ '#', 'D', 'e', 'c', 'r', 'e', 'a', 's', 'e', 'C', 'T', 'R', 'P', 's', 'e', 'u', 'd', 'o', 0,
  /* 17617 */ 'e', 'i', 'e', 'i', 'o', 0,
  /* 17623 */ 'n', 'a', 'p', 0,
  /* 17627 */ 't', 'r', 'a', 'p', 0,
  /* 17632 */ 'n', 'o', 'p', 0,
  /* 17636 */ 's', 't', 'o', 'p', 0,
  /* 17641 */ 'b', 'l', 'r', 0,
  /* 17645 */ 'b', 'd', 'z', 'l', 'r', 0,
  /* 17651 */ 'b', 'd', 'n', 'z', 'l', 'r', 0,
  /* 17658 */ 'b', 'c', 't', 'r', 0,
  /* 17663 */ 'c', 'p', 'a', 'b', 'o', 'r', 't', 0,
  0
};

  static const uint32_t OpInfo0[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    16716U,	// DBG_VALUE
    17219U,	// DBG_VALUE_LIST
    16726U,	// DBG_INSTR_REF
    16740U,	// DBG_PHI
    16758U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    16682U,	// BUNDLE
    17204U,	// LIFETIME_START
    16582U,	// LIFETIME_END
    16669U,	// PSEUDO_PROBE
    0U,	// ARITH_FENCE
    0U,	// STACKMAP
    17500U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// PREALLOCATED_SETUP
    0U,	// PREALLOCATED_ARG
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    14258U,	// PATCHABLE_FUNCTION_ENTER
    14178U,	// PATCHABLE_RET
    14304U,	// PATCHABLE_FUNCTION_EXIT
    14281U,	// PATCHABLE_TAIL_CALL
    14233U,	// PATCHABLE_EVENT_CALL
    14209U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// G_ASSERT_SEXT
    0U,	// G_ASSERT_ZEXT
    0U,	// G_ASSERT_ALIGN
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_SDIVREM
    0U,	// G_UDIVREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_FREEZE
    0U,	// G_INTRINSIC_FPTRUNC_ROUND
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_INTRINSIC_LRINT
    0U,	// G_INTRINSIC_ROUNDEVEN
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_ATOMICRMW_FMAX
    0U,	// G_ATOMICRMW_FMIN
    0U,	// G_FENCE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_FSHL
    0U,	// G_FSHR
    0U,	// G_ROTR
    0U,	// G_ROTL
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_UADDSAT
    0U,	// G_SADDSAT
    0U,	// G_USUBSAT
    0U,	// G_SSUBSAT
    0U,	// G_USHLSAT
    0U,	// G_SSHLSAT
    0U,	// G_SMULFIX
    0U,	// G_UMULFIX
    0U,	// G_SMULFIXSAT
    0U,	// G_UMULFIXSAT
    0U,	// G_SDIVFIX
    0U,	// G_UDIVFIX
    0U,	// G_SDIVFIXSAT
    0U,	// G_UDIVFIXSAT
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FPOWI
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_IS_FPCLASS
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_PTR_ADD
    0U,	// G_PTRMASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_ABS
    0U,	// G_LROUND
    0U,	// G_LLROUND
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// G_STRICT_FADD
    0U,	// G_STRICT_FSUB
    0U,	// G_STRICT_FMUL
    0U,	// G_STRICT_FDIV
    0U,	// G_STRICT_FREM
    0U,	// G_STRICT_FMA
    0U,	// G_STRICT_FSQRT
    0U,	// G_READ_REGISTER
    0U,	// G_WRITE_REGISTER
    0U,	// G_MEMCPY
    0U,	// G_MEMCPY_INLINE
    0U,	// G_MEMMOVE
    0U,	// G_MEMSET
    0U,	// G_BZERO
    0U,	// G_VECREDUCE_SEQ_FADD
    0U,	// G_VECREDUCE_SEQ_FMUL
    0U,	// G_VECREDUCE_FADD
    0U,	// G_VECREDUCE_FMUL
    0U,	// G_VECREDUCE_FMAX
    0U,	// G_VECREDUCE_FMIN
    0U,	// G_VECREDUCE_ADD
    0U,	// G_VECREDUCE_MUL
    0U,	// G_VECREDUCE_AND
    0U,	// G_VECREDUCE_OR
    0U,	// G_VECREDUCE_XOR
    0U,	// G_VECREDUCE_SMAX
    0U,	// G_VECREDUCE_SMIN
    0U,	// G_VECREDUCE_UMAX
    0U,	// G_VECREDUCE_UMIN
    0U,	// G_SBFX
    0U,	// G_UBFX
    15832U,	// ATOMIC_CMP_SWAP_I128
    15747U,	// ATOMIC_LOAD_ADD_I128
    15792U,	// ATOMIC_LOAD_AND_I128
    15769U,	// ATOMIC_LOAD_NAND_I128
    15876U,	// ATOMIC_LOAD_OR_I128
    15725U,	// ATOMIC_LOAD_SUB_I128
    15854U,	// ATOMIC_LOAD_XOR_I128
    15814U,	// ATOMIC_SWAP_I128
    16603U,	// BUILD_QUADWORD
    35105U,	// BUILD_UACC
    15921U,	// CFENCE8
    1073779538U,	// CLRLSLDI
    1073775471U,	// CLRLSLDI_rec
    1073780049U,	// CLRLSLWI
    1073775580U,	// CLRLSLWI_rec
    1073779573U,	// CLRRDI
    1073775498U,	// CLRRDI_rec
    1073780090U,	// CLRRWI
    1073775609U,	// CLRRWI_rec
    1119747U,	// DCBFL
    1122154U,	// DCBFLP
    1124430U,	// DCBFPS
    1118383U,	// DCBFx
    1124438U,	// DCBSTPS
    33630700U,	// DCBTCT
    33629980U,	// DCBTDS
    33630708U,	// DCBTSTCT
    33629988U,	// DCBTSTDS
    1125082U,	// DCBTSTT
    1125054U,	// DCBTSTx
    1125069U,	// DCBTT
    1124832U,	// DCBTx
    14874U,	// DFLOADf32
    15295U,	// DFLOADf64
    14896U,	// DFSTOREf32
    15317U,	// DFSTOREf64
    1073779548U,	// EXTLDI
    1073775482U,	// EXTLDI_rec
    1073780075U,	// EXTLWI
    1073775600U,	// EXTLWI_rec
    1073779597U,	// EXTRDI
    1073775525U,	// EXTRDI_rec
    1073780114U,	// EXTRWI
    1073775636U,	// EXTRWI_rec
    1073780059U,	// INSLWI
    1073775591U,	// INSLWI_rec
    1073779581U,	// INSRDI
    1073775507U,	// INSRDI_rec
    1073780098U,	// INSRWI
    1073775618U,	// INSRWI_rec
    17030U,	// KILL_PAIR
    67144354U,	// LAx
    17249U,	// LIWAX
    17337U,	// LIWZX
    1073779716U,	// RLWIMIbm
    1073775563U,	// RLWIMIbm_rec
    1073780692U,	// RLWINMbm
    1073775714U,	// RLWINMbm_rec
    1073780709U,	// RLWNMbm
    1073775723U,	// RLWNMbm_rec
    1073779589U,	// ROTRDI
    1073775516U,	// ROTRDI_rec
    1073780106U,	// ROTRWI
    1073775627U,	// ROTRWI_rec
    1073779542U,	// SLDI
    1073775475U,	// SLDI_rec
    1073780053U,	// SLWI
    1073775584U,	// SLWI_rec
    16567U,	// SPILLTOVSR_LD
    17256U,	// SPILLTOVSR_LDX
    17234U,	// SPILLTOVSR_ST
    17314U,	// SPILLTOVSR_STX
    1073779583U,	// SRDI
    1073775509U,	// SRDI_rec
    1073780100U,	// SRWI
    1073775620U,	// SRWI_rec
    17330U,	// STIWX
    1073779496U,	// SUBI
    1073777901U,	// SUBIC
    1073775037U,	// SUBIC_rec
    1073784833U,	// SUBIS
    100706312U,	// SUBPCIS
    14885U,	// XFLOADf32
    15306U,	// XFLOADf64
    14908U,	// XFSTOREf32
    15329U,	// XFSTOREf64
    1073778093U,	// ADD4
    1073781251U,	// ADD4O
    1073775814U,	// ADD4O_rec
    1073778093U,	// ADD4TLS
    1073775111U,	// ADD4_rec
    1073778093U,	// ADD8
    1073781251U,	// ADD8O
    1073775814U,	// ADD8O_rec
    1073778093U,	// ADD8TLS
    1073778093U,	// ADD8TLS_
    1073775111U,	// ADD8_rec
    1073777863U,	// ADDC
    1073777863U,	// ADDC8
    1073781236U,	// ADDC8O
    1073775797U,	// ADDC8O_rec
    1073775004U,	// ADDC8_rec
    1073781236U,	// ADDCO
    1073775797U,	// ADDCO_rec
    1073775004U,	// ADDC_rec
    1073778714U,	// ADDE
    1073778714U,	// ADDE8
    1073781272U,	// ADDE8O
    1073775838U,	// ADDE8O_rec
    1073775257U,	// ADDE8_rec
    1073781272U,	// ADDEO
    1073775838U,	// ADDEO_rec
    1073787323U,	// ADDEX
    1073787323U,	// ADDEX8
    1073775257U,	// ADDE_rec
    1073779524U,	// ADDI
    1073779524U,	// ADDI8
    1073777908U,	// ADDIC
    1073777908U,	// ADDIC8
    1073775045U,	// ADDIC_rec
    1073784858U,	// ADDIS
    1073784858U,	// ADDIS8
    16364U,	// ADDISdtprelHA
    14360U,	// ADDISdtprelHA32
    16347U,	// ADDISgotTprelHA
    16319U,	// ADDIStlsgdHA
    16333U,	// ADDIStlsldHA
    16307U,	// ADDIStocHA
    15897U,	// ADDIStocHA8
    16868U,	// ADDIdtprelL
    14649U,	// ADDIdtprelL32
    16831U,	// ADDItlsgdL
    14606U,	// ADDItlsgdL32
    16972U,	// ADDItlsgdLADDR
    14701U,	// ADDItlsgdLADDR32
    16843U,	// ADDItlsldL
    14620U,	// ADDItlsldL32
    16988U,	// ADDItlsldLADDR
    14719U,	// ADDItlsldLADDR32
    17419U,	// ADDItoc
    16281U,	// ADDItoc8
    16812U,	// ADDItocL
    36957U,	// ADDME
    36957U,	// ADDME8
    39471U,	// ADDME8O
    34040U,	// ADDME8O_rec
    33465U,	// ADDME8_rec
    39471U,	// ADDMEO
    34040U,	// ADDMEO_rec
    33465U,	// ADDME_rec
    43025U,	// ADDPCIS
    37024U,	// ADDZE
    37024U,	// ADDZE8
    39496U,	// ADDZE8O
    34068U,	// ADDZE8O_rec
    33514U,	// ADDZE8_rec
    39496U,	// ADDZEO
    34068U,	// ADDZEO_rec
    33514U,	// ADDZE_rec
    100654U,	// ADJCALLSTACKDOWN
    100673U,	// ADJCALLSTACKUP
    1073778318U,	// AND
    1073778318U,	// AND8
    1073775180U,	// AND8_rec
    1073777872U,	// ANDC
    1073777872U,	// ANDC8
    1073775011U,	// ANDC8_rec
    1073775011U,	// ANDC_rec
    1073775491U,	// ANDI8_rec
    1073776350U,	// ANDIS8_rec
    1073776350U,	// ANDIS_rec
    1073775491U,	// ANDI_rec
    17133U,	// ANDI_rec_1_EQ_BIT
    16230U,	// ANDI_rec_1_EQ_BIT8
    17152U,	// ANDI_rec_1_GT_BIT
    16250U,	// ANDI_rec_1_GT_BIT8
    1073775180U,	// AND_rec
    2283833545U,	// ATOMIC_CMP_SWAP_I16
    2283833471U,	// ATOMIC_CMP_SWAP_I32
    15044U,	// ATOMIC_CMP_SWAP_I64
    16091U,	// ATOMIC_CMP_SWAP_I8
    15517U,	// ATOMIC_LOAD_ADD_I16
    14398U,	// ATOMIC_LOAD_ADD_I32
    14941U,	// ATOMIC_LOAD_ADD_I64
    15989U,	// ATOMIC_LOAD_ADD_I8
    15560U,	// ATOMIC_LOAD_AND_I16
    14441U,	// ATOMIC_LOAD_AND_I32
    15341U,	// ATOMIC_LOAD_AND_I64
    16030U,	// ATOMIC_LOAD_AND_I8
    15704U,	// ATOMIC_LOAD_MAX_I16
    14585U,	// ATOMIC_LOAD_MAX_I32
    15128U,	// ATOMIC_LOAD_MAX_I64
    16181U,	// ATOMIC_LOAD_MAX_I8
    15603U,	// ATOMIC_LOAD_MIN_I16
    14484U,	// ATOMIC_LOAD_MIN_I32
    15006U,	// ATOMIC_LOAD_MIN_I64
    16071U,	// ATOMIC_LOAD_MIN_I8
    15538U,	// ATOMIC_LOAD_NAND_I16
    14419U,	// ATOMIC_LOAD_NAND_I32
    14962U,	// ATOMIC_LOAD_NAND_I64
    16009U,	// ATOMIC_LOAD_NAND_I8
    15662U,	// ATOMIC_LOAD_OR_I16
    14543U,	// ATOMIC_LOAD_OR_I32
    15086U,	// ATOMIC_LOAD_OR_I64
    16130U,	// ATOMIC_LOAD_OR_I8
    15496U,	// ATOMIC_LOAD_SUB_I16
    14377U,	// ATOMIC_LOAD_SUB_I32
    14920U,	// ATOMIC_LOAD_SUB_I64
    15955U,	// ATOMIC_LOAD_SUB_I8
    15682U,	// ATOMIC_LOAD_UMAX_I16
    14563U,	// ATOMIC_LOAD_UMAX_I32
    15106U,	// ATOMIC_LOAD_UMAX_I64
    16160U,	// ATOMIC_LOAD_UMAX_I8
    15581U,	// ATOMIC_LOAD_UMIN_I16
    14462U,	// ATOMIC_LOAD_UMIN_I32
    14984U,	// ATOMIC_LOAD_UMIN_I64
    16050U,	// ATOMIC_LOAD_UMIN_I8
    15641U,	// ATOMIC_LOAD_XOR_I16
    14522U,	// ATOMIC_LOAD_XOR_I32
    15065U,	// ATOMIC_LOAD_XOR_I64
    16111U,	// ATOMIC_LOAD_XOR_I8
    15624U,	// ATOMIC_SWAP_I16
    14505U,	// ATOMIC_SWAP_I32
    15027U,	// ATOMIC_SWAP_I64
    16291U,	// ATOMIC_SWAP_I8
    17547U,	// ATTN
    1182434U,	// B
    1214939U,	// BA
    167805047U,	// BC
    3359707U,	// BCC
    4408283U,	// BCCA
    5456859U,	// BCCCTR
    5456859U,	// BCCCTR8
    6505435U,	// BCCCTRL
    6505435U,	// BCCCTRL8
    7554011U,	// BCCL
    8602587U,	// BCCLA
    9651163U,	// BCCLR
    10699739U,	// BCCLRL
    11567273U,	// BCCTR
    11567273U,	// BCCTR8
    11567339U,	// BCCTR8n
    11567251U,	// BCCTRL
    11567251U,	// BCCTRL8
    11567319U,	// BCCTRL8n
    11567319U,	// BCCTRLn
    11567339U,	// BCCTRn
    1073775108U,	// BCDADD_rec
    1073775731U,	// BCDCFN_rec
    1073776118U,	// BCDCFSQ_rec
    1073776697U,	// BCDCFZ_rec
    1073775740U,	// BCDCPSGN_rec
    33964U,	// BCDCTN_rec
    34304U,	// BCDCTSQ_rec
    1073776713U,	// BCDCTZ_rec
    1073775760U,	// BCDSETSGN_rec
    1073776226U,	// BCDSR_rec
    1073774949U,	// BCDSUB_rec
    1073776282U,	// BCDS_rec
    1073775061U,	// BCDTRUNC_rec
    1073776375U,	// BCDUS_rec
    1073775072U,	// BCDUTRUNC_rec
    167805055U,	// BCL
    11567263U,	// BCLR
    11567240U,	// BCLRL
    11567309U,	// BCLRLn
    11567330U,	// BCLRn
    1179725U,	// BCLalways
    167805125U,	// BCLn
    17659U,	// BCTR
    17659U,	// BCTR8
    17541U,	// BCTRL
    17541U,	// BCTRL8
    229466U,	// BCTRL8_LDinto_toc
    229466U,	// BCTRL8_LDinto_toc_RM
    17541U,	// BCTRL8_RM
    229480U,	// BCTRL_LWZinto_toc
    229480U,	// BCTRL_LWZinto_toc_RM
    17541U,	// BCTRL_RM
    167805118U,	// BCn
    1193651U,	// BDNZ
    1193651U,	// BDNZ8
    1215191U,	// BDNZA
    1212697U,	// BDNZAm
    1212457U,	// BDNZAp
    1185412U,	// BDNZL
    1215155U,	// BDNZLA
    1212681U,	// BDNZLAm
    1212441U,	// BDNZLAp
    17652U,	// BDNZLR
    17652U,	// BDNZLR8
    17533U,	// BDNZLRL
    14154U,	// BDNZLRLm
    14111U,	// BDNZLRLp
    14170U,	// BDNZLRm
    14127U,	// BDNZLRp
    1179944U,	// BDNZLm
    1179704U,	// BDNZLp
    1179958U,	// BDNZm
    1179718U,	// BDNZp
    1193497U,	// BDZ
    1193497U,	// BDZ8
    1215185U,	// BDZA
    1212690U,	// BDZAm
    1212450U,	// BDZAp
    1185406U,	// BDZL
    1215148U,	// BDZLA
    1212673U,	// BDZLAm
    1212433U,	// BDZLAp
    17646U,	// BDZLR
    17646U,	// BDZLR8
    17526U,	// BDZLRL
    14146U,	// BDZLRLm
    14103U,	// BDZLRLp
    14163U,	// BDZLRm
    14120U,	// BDZLRp
    1179937U,	// BDZLm
    1179697U,	// BDZLp
    1179952U,	// BDZm
    1179712U,	// BDZp
    1185226U,	// BL
    1185226U,	// BL8
    12719562U,	// BL8_NOP
    12719562U,	// BL8_NOP_RM
    12850634U,	// BL8_NOP_TLS
    1185226U,	// BL8_NOTOC
    1185226U,	// BL8_NOTOC_RM
    1316298U,	// BL8_NOTOC_TLS
    1185226U,	// BL8_RM
    1316298U,	// BL8_TLS
    1316298U,	// BL8_TLS_
    1215137U,	// BLA
    1215137U,	// BLA8
    12749473U,	// BLA8_NOP
    12749473U,	// BLA8_NOP_RM
    1215137U,	// BLA8_RM
    1215137U,	// BLA_RM
    17642U,	// BLR
    17642U,	// BLR8
    17521U,	// BLRL
    12719562U,	// BL_NOP
    12719562U,	// BL_NOP_RM
    1185226U,	// BL_RM
    1316298U,	// BL_TLS
    1073778298U,	// BPERMD
    1073777964U,	// BRINC
    1073778161U,	// CFUGED
    17365U,	// CLRBHRB
    1073777496U,	// CMPB
    1073777496U,	// CMPB8
    1073778370U,	// CMPD
    1073779566U,	// CMPDI
    1073777502U,	// CMPEQB
    1073778269U,	// CMPLD
    1073779530U,	// CMPLDI
    1073786407U,	// CMPLW
    1073780033U,	// CMPLWI
    1275104102U,	// CMPRB
    1275104102U,	// CMPRB8
    1073786664U,	// CMPW
    1073780083U,	// CMPWI
    36850U,	// CNTLZD
    1073780525U,	// CNTLZDM
    33415U,	// CNTLZD_rec
    45235U,	// CNTLZW
    45235U,	// CNTLZW8
    34798U,	// CNTLZW8_rec
    34798U,	// CNTLZW_rec
    36865U,	// CNTTZD
    1073780542U,	// CNTTZDM
    33424U,	// CNTTZD_rec
    45250U,	// CNTTZW
    45250U,	// CNTTZW8
    34807U,	// CNTTZW8_rec
    34807U,	// CNTTZW_rec
    17664U,	// CP_ABORT
    46588U,	// CP_COPY
    46588U,	// CP_COPY8
    1073775322U,	// CP_PASTE8_rec
    1073775322U,	// CP_PASTE_rec
    15455U,	// CR6SET
    15441U,	// CR6UNSET
    1073778348U,	// CRAND
    1073777878U,	// CRANDC
    1073785853U,	// CREQV
    1073778332U,	// CRNAND
    1073784280U,	// CRNOR
    1073784294U,	// CROR
    1073777985U,	// CRORC
    1308666877U,	// CRSET
    1308665348U,	// CRUNSET
    1073784324U,	// CRXOR
    3359707U,	// CTRL_DEP
    268474843U,	// DARN
    1116633U,	// DCBA
    13930671U,	// DCBF
    1121897U,	// DCBFEP
    1118988U,	// DCBI
    1125034U,	// DCBST
    1121930U,	// DCBSTEP
    14985696U,	// DCBT
    335490U,	// DCBTEP
    14985918U,	// DCBTST
    335507U,	// DCBTSTEP
    1127938U,	// DCBZ
    1121949U,	// DCBZEP
    1119863U,	// DCBZL
    1121913U,	// DCBZLEP
    37678U,	// DCCCI
    1073778661U,	// DIVD
    1073778720U,	// DIVDE
    1073781279U,	// DIVDEO
    1073775846U,	// DIVDEO_rec
    1073785655U,	// DIVDEU
    1073781518U,	// DIVDEUO
    1073775935U,	// DIVDEUO_rec
    1073776453U,	// DIVDEU_rec
    1073775264U,	// DIVDE_rec
    1073781265U,	// DIVDO
    1073775830U,	// DIVDO_rec
    1073785648U,	// DIVDU
    1073781510U,	// DIVDUO
    1073775926U,	// DIVDUO_rec
    1073776445U,	// DIVDU_rec
    1073775232U,	// DIVD_rec
    1073787034U,	// DIVW
    1073778832U,	// DIVWE
    1073781312U,	// DIVWEO
    1073775883U,	// DIVWEO_rec
    1073785663U,	// DIVWEU
    1073781527U,	// DIVWEUO
    1073775945U,	// DIVWEUO_rec
    1073776462U,	// DIVWEU_rec
    1073775330U,	// DIVWE_rec
    1073781552U,	// DIVWO
    1073775973U,	// DIVWO_rec
    1073785767U,	// DIVWU
    1073781536U,	// DIVWUO
    1073775955U,	// DIVWUO_rec
    1073776489U,	// DIVWU_rec
    1073776604U,	// DIVW_rec
    1419363U,	// DSS
    17514U,	// DSSALL
    1376135857U,	// DST
    1376135857U,	// DST64
    1376135878U,	// DSTST
    1376135878U,	// DSTST64
    1376135907U,	// DSTSTT
    1376135907U,	// DSTSTT64
    1376135892U,	// DSTT
    1376135892U,	// DSTT64
    16437U,	// DYNALLOC
    15910U,	// DYNALLOC8
    17090U,	// DYNAREAOFFSET
    16214U,	// DYNAREAOFFSET8
    17566U,	// DecreaseCTR8Pseudo
    17599U,	// DecreaseCTRPseudo
    42595U,	// EFDABS
    1073778090U,	// EFDADD
    42886U,	// EFDCFS
    37119U,	// EFDCFSF
    38071U,	// EFDCFSI
    36395U,	// EFDCFSID
    37221U,	// EFDCFUF
    38137U,	// EFDCFUI
    36412U,	// EFDCFUID
    1073783768U,	// EFDCMPEQ
    1073785342U,	// EFDCMPGT
    1073785410U,	// EFDCMPLT
    37193U,	// EFDCTSF
    38099U,	// EFDCTSI
    46622U,	// EFDCTSIDZ
    46720U,	// EFDCTSIZ
    37249U,	// EFDCTUF
    38165U,	// EFDCTUI
    46641U,	// EFDCTUIDZ
    46751U,	// EFDCTUIZ
    1073785801U,	// EFDDIV
    1073780286U,	// EFDMUL
    42609U,	// EFDNABS
    37275U,	// EFDNEG
    1073777719U,	// EFDSUB
    1073783808U,	// EFDTSTEQ
    1073785373U,	// EFDTSTGT
    1073785441U,	// EFDTSTLT
    42644U,	// EFSABS
    1073778119U,	// EFSADD
    36345U,	// EFSCFD
    37128U,	// EFSCFSF
    38080U,	// EFSCFSI
    37230U,	// EFSCFUF
    38146U,	// EFSCFUI
    1073783778U,	// EFSCMPEQ
    1073785352U,	// EFSCMPGT
    1073785420U,	// EFSCMPLT
    37202U,	// EFSCTSF
    38108U,	// EFSCTSI
    46730U,	// EFSCTSIZ
    37258U,	// EFSCTUF
    38174U,	// EFSCTUI
    46761U,	// EFSCTUIZ
    1073785815U,	// EFSDIV
    1073780300U,	// EFSMUL
    42625U,	// EFSNABS
    37289U,	// EFSNEG
    1073777748U,	// EFSSUB
    1073783818U,	// EFSTSTEQ
    1073785383U,	// EFSTSTGT
    1073785451U,	// EFSTSTLT
    14664U,	// EH_SjLj_LongJmp32
    15149U,	// EH_SjLj_LongJmp64
    14683U,	// EH_SjLj_SetJmp32
    15168U,	// EH_SjLj_SetJmp64
    1179649U,	// EH_SjLj_Setup
    1073785848U,	// EQV
    1073785848U,	// EQV8
    1073776504U,	// EQV8_rec
    1073776504U,	// EQV_rec
    42661U,	// EVABS
    1107340789U,	// EVADDIW
    44134U,	// EVADDSMIAAW
    44266U,	// EVADDSSIAAW
    44200U,	// EVADDUMIAAW
    44332U,	// EVADDUSIAAW
    1073786259U,	// EVADDW
    1073778355U,	// EVAND
    1073777886U,	// EVANDC
    1073783799U,	// EVCMPEQ
    1073784954U,	// EVCMPGTS
    1073785715U,	// EVCMPGTU
    1073784964U,	// EVCMPLTS
    1073785725U,	// EVCMPLTU
    44930U,	// EVCNTLSW
    45233U,	// EVCNTLZW
    1073785124U,	// EVDIVWS
    1073785765U,	// EVDIVWU
    1073785860U,	// EVEQV
    35779U,	// EVEXTSB
    37475U,	// EVEXTSH
    42652U,	// EVFSABS
    1073778127U,	// EVFSADD
    37137U,	// EVFSCFSF
    38089U,	// EVFSCFSI
    37239U,	// EVFSCFUF
    38155U,	// EVFSCFUI
    1073783788U,	// EVFSCMPEQ
    1073785362U,	// EVFSCMPGT
    1073785430U,	// EVFSCMPLT
    37211U,	// EVFSCTSF
    38117U,	// EVFSCTSI
    46740U,	// EVFSCTSIZ
    37211U,	// EVFSCTUF
    38183U,	// EVFSCTUI
    46740U,	// EVFSCTUIZ
    1073785823U,	// EVFSDIV
    1073780308U,	// EVFSMUL
    42634U,	// EVFSNABS
    37297U,	// EVFSNEG
    1073777756U,	// EVFSSUB
    1073783828U,	// EVFSTSTEQ
    1073785393U,	// EVFSTSTGT
    1073785461U,	// EVFSTSTLT
    67145176U,	// EVLDD
    134263154U,	// EVLDDX
    67146193U,	// EVLDH
    134263263U,	// EVLDHX
    67153307U,	// EVLDW
    134264191U,	// EVLDWX
    67152274U,	// EVLHHESPLAT
    134263981U,	// EVLHHESPLATX
    67152299U,	// EVLHHOSSPLAT
    134264008U,	// EVLHHOSSPLATX
    67152313U,	// EVLHHOUSPLAT
    134264023U,	// EVLHHOUSPLATX
    67145790U,	// EVLWHE
    134263234U,	// EVLWHEX
    67151941U,	// EVLWHOS
    134263963U,	// EVLWHOSX
    67152726U,	// EVLWHOU
    134264114U,	// EVLWHOUX
    67152287U,	// EVLWHSPLAT
    134263995U,	// EVLWHSPLATX
    67152327U,	// EVLWWSPLAT
    134264038U,	// EVLWWSPLATX
    1073779637U,	// EVMERGEHI
    1073781370U,	// EVMERGEHILO
    1073781359U,	// EVMERGELO
    1073779648U,	// EVMERGELOHI
    1073776991U,	// EVMHEGSMFAA
    1073780899U,	// EVMHEGSMFAN
    1073777039U,	// EVMHEGSMIAA
    1073780947U,	// EVMHEGSMIAN
    1073777076U,	// EVMHEGUMIAA
    1073780984U,	// EVMHEGUMIAN
    1073778875U,	// EVMHESMF
    1073777124U,	// EVMHESMFA
    1073785906U,	// EVMHESMFAAW
    1073786448U,	// EVMHESMFANW
    1073779732U,	// EVMHESMI
    1073777216U,	// EVMHESMIA
    1073785971U,	// EVMHESMIAAW
    1073786500U,	// EVMHESMIANW
    1073778978U,	// EVMHESSF
    1073777167U,	// EVMHESSFA
    1073785932U,	// EVMHESSFAAW
    1073786474U,	// EVMHESSFANW
    1073786103U,	// EVMHESSIAAW
    1073786578U,	// EVMHESSIANW
    1073779771U,	// EVMHEUMI
    1073777259U,	// EVMHEUMIA
    1073786037U,	// EVMHEUMIAAW
    1073786539U,	// EVMHEUMIANW
    1073786169U,	// EVMHEUSIAAW
    1073786617U,	// EVMHEUSIANW
    1073777004U,	// EVMHOGSMFAA
    1073780912U,	// EVMHOGSMFAN
    1073777052U,	// EVMHOGSMIAA
    1073780960U,	// EVMHOGSMIAN
    1073777089U,	// EVMHOGUMIAA
    1073780997U,	// EVMHOGUMIAN
    1073778895U,	// EVMHOSMF
    1073777146U,	// EVMHOSMFA
    1073785919U,	// EVMHOSMFAAW
    1073786461U,	// EVMHOSMFANW
    1073779752U,	// EVMHOSMI
    1073777238U,	// EVMHOSMIA
    1073786011U,	// EVMHOSMIAAW
    1073786526U,	// EVMHOSMIANW
    1073778998U,	// EVMHOSSF
    1073777189U,	// EVMHOSSFA
    1073785945U,	// EVMHOSSFAAW
    1073786487U,	// EVMHOSSFANW
    1073786143U,	// EVMHOSSIAAW
    1073786604U,	// EVMHOSSIANW
    1073779801U,	// EVMHOUMI
    1073777292U,	// EVMHOUMIA
    1073786077U,	// EVMHOUMIAAW
    1073786565U,	// EVMHOUMIANW
    1073786209U,	// EVMHOUSIAAW
    1073786643U,	// EVMHOUSIANW
    35515U,	// EVMRA
    1073778885U,	// EVMWHSMF
    1073777135U,	// EVMWHSMFA
    1073779742U,	// EVMWHSMI
    1073777227U,	// EVMWHSMIA
    1073778988U,	// EVMWHSSF
    1073777178U,	// EVMWHSSFA
    1073779781U,	// EVMWHUMI
    1073777270U,	// EVMWHUMIA
    1073785998U,	// EVMWLSMIAAW
    1073786513U,	// EVMWLSMIANW
    1073786130U,	// EVMWLSSIAAW
    1073786591U,	// EVMWLSSIANW
    1073779791U,	// EVMWLUMI
    1073777281U,	// EVMWLUMIA
    1073786064U,	// EVMWLUMIAAW
    1073786552U,	// EVMWLUMIANW
    1073786196U,	// EVMWLUSIAAW
    1073786630U,	// EVMWLUSIANW
    1073778905U,	// EVMWSMF
    1073777157U,	// EVMWSMFA
    1073777017U,	// EVMWSMFAA
    1073780925U,	// EVMWSMFAN
    1073779762U,	// EVMWSMI
    1073777249U,	// EVMWSMIA
    1073777065U,	// EVMWSMIAA
    1073780973U,	// EVMWSMIAN
    1073779008U,	// EVMWSSF
    1073777200U,	// EVMWSSFA
    1073777028U,	// EVMWSSFAA
    1073780936U,	// EVMWSSFAN
    1073779811U,	// EVMWUMI
    1073777303U,	// EVMWUMIA
    1073777102U,	// EVMWUMIAA
    1073781010U,	// EVMWUMIAN
    1073778340U,	// EVNAND
    37306U,	// EVNEG
    1073784287U,	// EVNOR
    1073784300U,	// EVOR
    1073777992U,	// EVORC
    1073786414U,	// EVRLW
    1073780041U,	// EVRLWI
    44450U,	// EVRNDW
    3237001015U,	// EVSEL
    1073786421U,	// EVSLW
    1073780067U,	// EVSLWI
    335582122U,	// EVSPLATFI
    335582447U,	// EVSPLATI
    1073784877U,	// EVSRWIS
    1073785677U,	// EVSRWIU
    1073785052U,	// EVSRWS
    1073785751U,	// EVSRWU
    67145192U,	// EVSTDD
    134263162U,	// EVSTDDX
    67146200U,	// EVSTDH
    134263271U,	// EVSTDHX
    67153322U,	// EVSTDW
    134264199U,	// EVSTDWX
    67145798U,	// EVSTWHE
    134263243U,	// EVSTWHEX
    67148390U,	// EVSTWHO
    134263558U,	// EVSTWHOX
    67145879U,	// EVSTWWE
    134263253U,	// EVSTWWEX
    67148599U,	// EVSTWWO
    134263568U,	// EVSTWWOX
    44160U,	// EVSUBFSMIAAW
    44292U,	// EVSUBFSSIAAW
    44226U,	// EVSUBFUMIAAW
    44358U,	// EVSUBFUSIAAW
    1073786307U,	// EVSUBFW
    1442885068U,	// EVSUBIFW
    1073784331U,	// EVXOR
    35781U,	// EXTSB
    35781U,	// EXTSB8
    35781U,	// EXTSB8_32_64
    33106U,	// EXTSB8_rec
    33106U,	// EXTSB_rec
    37477U,	// EXTSH
    37477U,	// EXTSH8
    37477U,	// EXTSH8_32_64
    33574U,	// EXTSH8_rec
    33574U,	// EXTSH_rec
    44974U,	// EXTSW
    1073779680U,	// EXTSWSLI
    1073779680U,	// EXTSWSLI_32_64
    1073775543U,	// EXTSWSLI_32_64_rec
    1073775543U,	// EXTSWSLI_rec
    44974U,	// EXTSW_32
    44974U,	// EXTSW_32_64
    34750U,	// EXTSW_32_64_rec
    34750U,	// EXTSW_rec
    17618U,	// EnforceIEIO
    42603U,	// FABSD
    34416U,	// FABSD_rec
    42603U,	// FABSS
    34416U,	// FABSS_rec
    1073778098U,	// FADD
    1073784572U,	// FADDS
    1073776289U,	// FADDS_rec
    1073775117U,	// FADD_rec
    0U,	// FADDrtz
    36388U,	// FCFID
    42772U,	// FCFIDS
    34492U,	// FCFIDS_rec
    43797U,	// FCFIDU
    43158U,	// FCFIDUS
    34559U,	// FCFIDUS_rec
    34603U,	// FCFIDU_rec
    33325U,	// FCFID_rec
    1073781400U,	// FCMPOD
    1073781400U,	// FCMPOS
    1073785695U,	// FCMPUD
    1073785695U,	// FCMPUS
    1073781021U,	// FCPSGND
    1073775751U,	// FCPSGND_rec
    1073781021U,	// FCPSGNS
    1073775751U,	// FCPSGNS_rec
    36405U,	// FCTID
    43805U,	// FCTIDU
    46799U,	// FCTIDUZ
    34898U,	// FCTIDUZ_rec
    34612U,	// FCTIDU_rec
    46633U,	// FCTIDZ
    34864U,	// FCTIDZ_rec
    33333U,	// FCTID_rec
    44542U,	// FCTIW
    43919U,	// FCTIWU
    46808U,	// FCTIWUZ
    34908U,	// FCTIWUZ_rec
    34656U,	// FCTIWU_rec
    46817U,	// FCTIWZ
    34918U,	// FCTIWZ_rec
    34711U,	// FCTIW_rec
    1073785809U,	// FDIV
    1073785045U,	// FDIVS
    1073776393U,	// FDIVS_rec
    1073776497U,	// FDIV_rec
    1073778104U,	// FMADD
    1073784579U,	// FMADDS
    1073776297U,	// FMADDS_rec
    1073775124U,	// FMADD_rec
    42405U,	// FMR
    34384U,	// FMR_rec
    1073777733U,	// FMSUB
    1073784555U,	// FMSUBS
    1073776263U,	// FMSUBS_rec
    1073774965U,	// FMSUB_rec
    1073780294U,	// FMUL
    1073784894U,	// FMULS
    1073776358U,	// FMULS_rec
    1073775689U,	// FMUL_rec
    42618U,	// FNABSD
    34423U,	// FNABSD_rec
    42618U,	// FNABSS
    34423U,	// FNABSS_rec
    37283U,	// FNEGD
    33546U,	// FNEGD_rec
    37283U,	// FNEGS
    33546U,	// FNEGS_rec
    1073778111U,	// FNMADD
    1073784587U,	// FNMADDS
    1073776306U,	// FNMADDS_rec
    1073775132U,	// FNMADD_rec
    1073777740U,	// FNMSUB
    1073784563U,	// FNMSUBS
    1073776272U,	// FNMSUBS_rec
    1073774973U,	// FNMSUB_rec
    36979U,	// FRE
    42870U,	// FRES
    34501U,	// FRES_rec
    33482U,	// FRE_rec
    38854U,	// FRIMD
    33883U,	// FRIMD_rec
    38854U,	// FRIMS
    33883U,	// FRIMS_rec
    39212U,	// FRIND
    33957U,	// FRIND_rec
    39212U,	// FRINS
    33957U,	// FRINS_rec
    40794U,	// FRIPD
    34236U,	// FRIPD_rec
    40794U,	// FRIPS
    34236U,	// FRIPS_rec
    46714U,	// FRIZD
    34882U,	// FRIZD_rec
    46714U,	// FRIZS
    34882U,	// FRIZS_rec
    41735U,	// FRSP
    34267U,	// FRSP_rec
    36992U,	// FRSQRTE
    42876U,	// FRSQRTES
    34508U,	// FRSQRTES_rec
    33488U,	// FRSQRTE_rec
    1073780202U,	// FSELD
    1073775672U,	// FSELD_rec
    1073780202U,	// FSELS
    1073775672U,	// FSELS_rec
    43648U,	// FSQRT
    43150U,	// FSQRTS
    34542U,	// FSQRTS_rec
    34586U,	// FSQRT_rec
    1073777727U,	// FSUB
    1073784548U,	// FSUBS
    1073776255U,	// FSUBS_rec
    1073774958U,	// FSUB_rec
    1073785832U,	// FTDIV
    43655U,	// FTSQRT
    17018U,	// GETtlsADDR
    14752U,	// GETtlsADDR32
    17272U,	// GETtlsADDR32AIX
    17288U,	// GETtlsADDR64AIX
    16787U,	// GETtlsADDRPCREL
    17004U,	// GETtlsldADDR
    14737U,	// GETtlsldADDR32
    16768U,	// GETtlsldADDRPCREL
    402691508U,	// HASHCHK
    402691508U,	// HASHCHK8
    402693984U,	// HASHCHKP
    402693984U,	// HASHCHKP8
    402696886U,	// HASHST
    402696886U,	// HASHST8
    402695069U,	// HASHSTP
    402695069U,	// HASHSTP8
    17436U,	// HRFID
    1118994U,	// ICBI
    1121905U,	// ICBIEP
    429349U,	// ICBLC
    427502U,	// ICBLQ
    436710U,	// ICBT
    436278U,	// ICBTLS
    37685U,	// ICCCI
    1073780208U,	// ISEL
    1073780208U,	// ISEL8
    17400U,	// ISYNC
    436243106U,	// LA
    436243106U,	// LA8
    134263697U,	// LBARX
    134263697U,	// LBARXL
    134263578U,	// LBEPX
    67155465U,	// LBZ
    67155465U,	// LBZ8
    1073787462U,	// LBZCIX
    469805998U,	// LBZU
    469805998U,	// LBZU8
    503362898U,	// LBZUX
    503362898U,	// LBZUX8
    134264272U,	// LBZX
    134264272U,	// LBZX8
    1073788368U,	// LBZXTLS
    1073788368U,	// LBZXTLS_
    1073788368U,	// LBZXTLS_32
    67145289U,	// LD
    134263704U,	// LDARX
    134263704U,	// LDARXL
    1073785221U,	// LDAT
    134263732U,	// LDBRX
    1073787431U,	// LDCIX
    469805861U,	// LDU
    503362839U,	// LDUX
    134263184U,	// LDX
    1073787280U,	// LDXTLS
    1073787280U,	// LDXTLS_
    16855U,	// LDgotTprelL
    14634U,	// LDgotTprelL32
    17412U,	// LDtoc
    17194U,	// LDtocBA
    17194U,	// LDtocCPT
    16748U,	// LDtocJTI
    16804U,	// LDtocL
    67145218U,	// LFD
    134263593U,	// LFDEPX
    469805815U,	// LFDU
    503362824U,	// LFDUX
    134263171U,	// LFDX
    134263071U,	// LFIWAX
    134264293U,	// LFIWZX
    67151765U,	// LFS
    469805926U,	// LFSU
    503362876U,	// LFSUX
    134263950U,	// LFSX
    67144251U,	// LHA
    67144251U,	// LHA8
    134263711U,	// LHARX
    134263711U,	// LHARXL
    469805803U,	// LHAU
    469805803U,	// LHAU8
    503362803U,	// LHAUX
    503362803U,	// LHAUX8
    134263056U,	// LHAX
    134263056U,	// LHAX8
    134263747U,	// LHBRX
    134263747U,	// LHBRX8
    134263610U,	// LHEPX
    67155539U,	// LHZ
    67155539U,	// LHZ8
    1073787470U,	// LHZCIX
    469806004U,	// LHZU
    469806004U,	// LHZU8
    503362905U,	// LHZUX
    503362905U,	// LHZUX8
    134264287U,	// LHZX
    134264287U,	// LHZX8
    1073788383U,	// LHZXTLS
    1073788383U,	// LHZXTLS_
    1073788383U,	// LHZXTLS_32
    100701136U,	// LI
    100701136U,	// LI8
    100706337U,	// LIS
    100706337U,	// LIS8
    67153468U,	// LMW
    67150888U,	// LQ
    134263718U,	// LQARX
    134263718U,	// LQARXL
    16889U,	// LQX_PSEUDO
    1073780122U,	// LSWI
    134263094U,	// LVEBX
    134263280U,	// LVEHX
    134264208U,	// LVEWX
    134256184U,	// LVSL
    134260282U,	// LVSR
    134264167U,	// LVX
    134256234U,	// LVXL
    67144387U,	// LWA
    134263725U,	// LWARX
    134263725U,	// LWARXL
    1073785299U,	// LWAT
    503362810U,	// LWAUX
    134263088U,	// LWAX
    134263088U,	// LWAX_32
    67144387U,	// LWA_32
    134263781U,	// LWBRX
    134263781U,	// LWBRX8
    134263625U,	// LWEPX
    67155690U,	// LWZ
    67155690U,	// LWZ8
    1073787478U,	// LWZCIX
    469806010U,	// LWZU
    469806010U,	// LWZU8
    503362912U,	// LWZUX
    503362912U,	// LWZUX8
    134264310U,	// LWZX
    134264310U,	// LWZX8
    1073788406U,	// LWZXTLS
    1073788406U,	// LWZXTLS_
    1073788406U,	// LWZXTLS_32
    17428U,	// LWZtoc
    16822U,	// LWZtocL
    67145533U,	// LXSD
    134263206U,	// LXSDX
    134264263U,	// LXSIBZX
    134264278U,	// LXSIHZX
    134263079U,	// LXSIWAX
    134264301U,	// LXSIWZX
    67150632U,	// LXSSP
    134263665U,	// LXSSPX
    67152914U,	// LXV
    134263020U,	// LXVB16X
    134262986U,	// LXVD2X
    134263935U,	// LXVDSX
    134263039U,	// LXVH8X
    369140767U,	// LXVKQ
    1073780317U,	// LXVL
    1073780243U,	// LXVLL
    67150759U,	// LXVP
    134263682U,	// LXVPX
    134263118U,	// LXVRBX
    134263189U,	// LXVRDX
    134263304U,	// LXVRHX
    134264240U,	// LXVRWX
    134263003U,	// LXVW4X
    134263973U,	// LXVWSX
    134264178U,	// LXVX
    1073778197U,	// MADDHD
    1073785604U,	// MADDHDU
    1073778253U,	// MADDLD
    1073778253U,	// MADDLD8
    1418508U,	// MBAR
    37090U,	// MCRF
    42906U,	// MCRFS
    1094768U,	// MCRXRX
    536907785U,	// MFBHRBE
    1090881U,	// MFCR
    1090881U,	// MFCR8
    1091143U,	// MFCTR
    1091143U,	// MFCTR8
    42284U,	// MFDCR
    1091470U,	// MFFS
    39402U,	// MFFSCDRN
    570463358U,	// MFFSCDRNI
    1085458U,	// MFFSCE
    39393U,	// MFFSCRN
    268473460U,	// MFFSCRNI
    1087025U,	// MFFSL
    1083095U,	// MFFS_rec
    1090969U,	// MFLR
    1090969U,	// MFLR8
    1091110U,	// MFMSR
    604016872U,	// MFOCRF
    604016872U,	// MFOCRF8
    42410U,	// MFPMR
    42514U,	// MFSPR
    42514U,	// MFSPR8
    637576736U,	// MFSR
    39218U,	// MFSRIN
    35802U,	// MFTB
    16819730U,	// MFTB8
    17868306U,	// MFUDSCR
    36567U,	// MFVRD
    18916882U,	// MFVRSAVE
    18916882U,	// MFVRSAVEv
    46831U,	// MFVRWZ
    1090895U,	// MFVSCR
    36567U,	// MFVSRD
    36452U,	// MFVSRLD
    46831U,	// MFVSRWZ
    1073778408U,	// MODSD
    1073786684U,	// MODSW
    1073778563U,	// MODUD
    1073786894U,	// MODUW
    17392U,	// MSGSYNC
    17406U,	// MSYNC
    37112U,	// MTCRF
    37112U,	// MTCRF8
    1091150U,	// MTCTR
    1091150U,	// MTCTR8
    17552U,	// MTCTR8Pseudo
    1091150U,	// MTCTR8loop
    17586U,	// MTCTRPseudo
    1091150U,	// MTCTRloop
    235283770U,	// MTDCR
    1411183U,	// MTFSB0
    1411191U,	// MTFSB1
    1073778971U,	// MTFSF
    302453666U,	// MTFSFI
    671548334U,	// MTFSFI_rec
    1512354U,	// MTFSFIb
    1073775362U,	// MTFSF_rec
    37147U,	// MTFSFb
    1090975U,	// MTLR
    1090975U,	// MTLR8
    201369133U,	// MTMSR
    201363151U,	// MTMSRD
    495856U,	// MTOCRF
    495856U,	// MTOCRF8
    42417U,	// MTPMR
    42521U,	// MTSPR
    42521U,	// MTSPR8
    534068U,	// MTSR
    39226U,	// MTSRIN
    1081524U,	// MTUDSCR
    36575U,	// MTVRD
    1081589U,	// MTVRSAVE
    1442037U,	// MTVRSAVEv
    35528U,	// MTVRWA
    46840U,	// MTVRWZ
    1090903U,	// MTVSCR
    38560U,	// MTVSRBM
    704680938U,	// MTVSRBMI
    36575U,	// MTVSRD
    1073778143U,	// MTVSRDD
    38632U,	// MTVSRDM
    38738U,	// MTVSRHM
    38903U,	// MTVSRQM
    35528U,	// MTVSRWA
    39015U,	// MTVSRWM
    43236U,	// MTVSRWS
    46840U,	// MTVSRWZ
    1073778205U,	// MULHD
    1073785613U,	// MULHDU
    1073776418U,	// MULHDU_rec
    1073775141U,	// MULHD_rec
    1073786350U,	// MULHW
    1073785735U,	// MULHWU
    1073776471U,	// MULHWU_rec
    1073776527U,	// MULHW_rec
    1073778262U,	// MULLD
    1073781257U,	// MULLDO
    1073775821U,	// MULLDO_rec
    1073775165U,	// MULLD_rec
    1073779668U,	// MULLI
    1073779668U,	// MULLI8
    1073786400U,	// MULLW
    1073781544U,	// MULLWO
    1073775964U,	// MULLWO_rec
    1073776543U,	// MULLW_rec
    17053U,	// MoveGOTtoLR
    17041U,	// MovePCtoLR
    16201U,	// MovePCtoLR8
    1073778326U,	// NAND
    1073778326U,	// NAND8
    1073775179U,	// NAND8_rec
    1073775179U,	// NAND_rec
    17624U,	// NAP
    37278U,	// NEG
    37278U,	// NEG8
    39520U,	// NEG8O
    34095U,	// NEG8O_rec
    33547U,	// NEG8_rec
    39520U,	// NEGO
    34095U,	// NEGO_rec
    33547U,	// NEG_rec
    17633U,	// NOP
    14336U,	// NOP_GT_PWR6
    14348U,	// NOP_GT_PWR7
    1073784275U,	// NOR
    1073784275U,	// NOR8
    1073776214U,	// NOR8_rec
    1073776214U,	// NOR_rec
    1073784268U,	// OR
    1073784268U,	// OR8
    1073776215U,	// OR8_rec
    1073777980U,	// ORC
    1073777980U,	// ORC8
    1073775084U,	// ORC8_rec
    1073775084U,	// ORC_rec
    1073779890U,	// ORI
    1073779890U,	// ORI8
    1073784871U,	// ORIS
    1073784871U,	// ORIS8
    1073776215U,	// OR_rec
    1073779523U,	// PADDI
    1073779523U,	// PADDI8
    738235203U,	// PADDI8pc
    17487U,	// PADDIdtprel
    738235203U,	// PADDIpc
    1073778363U,	// PDEPD
    1073778545U,	// PEXTD
    771798536U,	// PLBZ
    771798536U,	// PLBZ8
    805352968U,	// PLBZ8pc
    805352968U,	// PLBZpc
    771788383U,	// PLD
    805342815U,	// PLDpc
    771788289U,	// PLFD
    805342721U,	// PLFDpc
    771794836U,	// PLFS
    805349268U,	// PLFSpc
    771787322U,	// PLHA
    771787322U,	// PLHA8
    805341754U,	// PLHA8pc
    805341754U,	// PLHApc
    771798610U,	// PLHZ
    771798610U,	// PLHZ8
    805353042U,	// PLHZ8pc
    805353042U,	// PLHZpc
    838898651U,	// PLI
    838898651U,	// PLI8
    771787458U,	// PLWA
    771787458U,	// PLWA8
    805341890U,	// PLWA8pc
    805341890U,	// PLWApc
    771798761U,	// PLWZ
    771798761U,	// PLWZ8
    805353193U,	// PLWZ8pc
    805353193U,	// PLWZpc
    771788604U,	// PLXSD
    805343036U,	// PLXSDpc
    771793703U,	// PLXSSP
    805348135U,	// PLXSSPpc
    771795985U,	// PLXV
    771793830U,	// PLXVP
    805348262U,	// PLXVPpc
    805350417U,	// PLXVpc
    1073776789U,	// PMXVBF16GER2
    1375770946U,	// PMXVBF16GER2NN
    1375772530U,	// PMXVBF16GER2NP
    1375771005U,	// PMXVBF16GER2PN
    1375772589U,	// PMXVBF16GER2PP
    1073776803U,	// PMXVF16GER2
    1375770962U,	// PMXVF16GER2NN
    1375772546U,	// PMXVF16GER2NP
    1375771021U,	// PMXVF16GER2PN
    1375772605U,	// PMXVF16GER2PP
    1073784159U,	// PMXVF32GER
    1375770977U,	// PMXVF32GERNN
    1375772561U,	// PMXVF32GERNP
    1375771047U,	// PMXVF32GERPN
    1375772663U,	// PMXVF32GERPP
    1073784171U,	// PMXVF64GER
    1375770991U,	// PMXVF64GERNN
    1375772575U,	// PMXVF64GERNP
    1375771061U,	// PMXVF64GERPN
    1375772677U,	// PMXVF64GERPP
    1073776816U,	// PMXVI16GER2
    1375772620U,	// PMXVI16GER2PP
    1073784405U,	// PMXVI16GER2S
    1375772691U,	// PMXVI16GER2SPP
    1073776917U,	// PMXVI4GER8
    1375772649U,	// PMXVI4GER8PP
    1073776829U,	// PMXVI8GER4
    1375772635U,	// PMXVI8GER4PP
    1375772707U,	// PMXVI8GER4SPP
    35817U,	// POPCNTB
    35817U,	// POPCNTB8
    36695U,	// POPCNTD
    45015U,	// POPCNTW
    17171U,	// PPC32GOT
    17181U,	// PPC32PICGOT
    14783U,	// PREPARE_PROBED_ALLOCA_32
    15204U,	// PREPARE_PROBED_ALLOCA_64
    14831U,	// PREPARE_PROBED_ALLOCA_NEGSIZE_SAME_REG_32
    15252U,	// PREPARE_PROBED_ALLOCA_NEGSIZE_SAME_REG_64
    14765U,	// PROBED_ALLOCA_32
    15186U,	// PROBED_ALLOCA_64
    14809U,	// PROBED_STACKALLOC_32
    15230U,	// PROBED_STACKALLOC_64
    771787772U,	// PSTB
    771787772U,	// PSTB8
    805342204U,	// PSTB8pc
    805342204U,	// PSTBpc
    771788650U,	// PSTD
    805343082U,	// PSTDpc
    771788295U,	// PSTFD
    805342727U,	// PSTFDpc
    771794849U,	// PSTFS
    805349281U,	// PSTFSpc
    771789456U,	// PSTH
    771789456U,	// PSTH8
    805343888U,	// PSTH8pc
    805343888U,	// PSTHpc
    771796981U,	// PSTW
    771796981U,	// PSTW8
    805351413U,	// PSTW8pc
    805351413U,	// PSTWpc
    771788611U,	// PSTXSD
    805343043U,	// PSTXSDpc
    771793711U,	// PSTXSSP
    805348143U,	// PSTXSSPpc
    771795991U,	// PSTXV
    771793837U,	// PSTXVP
    805348269U,	// PSTXVPpc
    805350423U,	// PSTXVpc
    16914U,	// PseudoEIEIO
    16413U,	// RESTORE_ACC
    16950U,	// RESTORE_CR
    17105U,	// RESTORE_CRBIT
    16619U,	// RESTORE_QUADWORD
    16387U,	// RESTORE_UACC
    17463U,	// RFCI
    17474U,	// RFDI
    559845U,	// RFEBB
    17479U,	// RFI
    17437U,	// RFID
    17468U,	// RFMCI
    1073780179U,	// RLDCL
    1073775655U,	// RLDCL_rec
    1073784115U,	// RLDCR
    1073776181U,	// RLDCR_rec
    1073777915U,	// RLDIC
    1073780186U,	// RLDICL
    1073780186U,	// RLDICL_32
    1073780186U,	// RLDICL_32_64
    1073775663U,	// RLDICL_32_rec
    1073775663U,	// RLDICL_rec
    1073784135U,	// RLDICR
    1073784135U,	// RLDICR_32
    1073776189U,	// RLDICR_rec
    1073775053U,	// RLDIC_rec
    1375769596U,	// RLDIMI
    1375765442U,	// RLDIMI_rec
    1375769604U,	// RLWIMI
    1375769604U,	// RLWIMI8
    1375765451U,	// RLWIMI8_rec
    1375765451U,	// RLWIMI_rec
    1073780692U,	// RLWINM
    1073780692U,	// RLWINM8
    1073775714U,	// RLWINM8_rec
    1073775714U,	// RLWINM_rec
    1073780709U,	// RLWNM
    1073780709U,	// RLWNM8
    1073775723U,	// RLWNM8_rec
    1073775723U,	// RLWNM_rec
    16379U,	// ReadTB
    1084751U,	// SC
    15469U,	// SELECT_CC_F16
    15391U,	// SELECT_CC_F4
    15930U,	// SELECT_CC_F8
    15416U,	// SELECT_CC_I4
    15975U,	// SELECT_CC_I8
    16689U,	// SELECT_CC_SPE
    15362U,	// SELECT_CC_SPE4
    16478U,	// SELECT_CC_VRRC
    16447U,	// SELECT_CC_VSFRC
    16538U,	// SELECT_CC_VSRC
    16507U,	// SELECT_CC_VSSRC
    15484U,	// SELECT_F16
    15405U,	// SELECT_F4
    15944U,	// SELECT_F8
    15430U,	// SELECT_I4
    16149U,	// SELECT_I8
    16704U,	// SELECT_SPE
    15378U,	// SELECT_SPE4
    16494U,	// SELECT_VRRC
    16464U,	// SELECT_VSFRC
    16554U,	// SELECT_VSRC
    16524U,	// SELECT_VSSRC
    35796U,	// SETB
    35796U,	// SETB8
    36014U,	// SETBC
    36014U,	// SETBC8
    42276U,	// SETBCR
    42276U,	// SETBCR8
    16881U,	// SETFLM
    36006U,	// SETNBC
    36006U,	// SETNBC8
    42267U,	// SETNBCR
    42267U,	// SETNBCR8
    16595U,	// SETRND
    17454U,	// SETRNDi
    33448U,	// SLBFEE_rec
    17348U,	// SLBIA
    1085519U,	// SLBIE
    37267U,	// SLBIEG
    36903U,	// SLBMFEE
    43968U,	// SLBMFEV
    36984U,	// SLBMTE
    17376U,	// SLBSYNC
    1073778292U,	// SLD
    1073775173U,	// SLD_rec
    1073786423U,	// SLW
    1073786423U,	// SLW8
    1073776551U,	// SLW8_rec
    1073776551U,	// SLW_rec
    67155690U,	// SPELWZ
    134264310U,	// SPELWZX
    67153910U,	// SPESTW
    134264257U,	// SPESTWX
    16426U,	// SPILL_ACC
    16962U,	// SPILL_CR
    17120U,	// SPILL_CRBIT
    16637U,	// SPILL_QUADWORD
    16401U,	// SPILL_UACC
    16653U,	// SPLIT_QUADWORD
    1073778059U,	// SRAD
    1073779516U,	// SRADI
    1073779516U,	// SRADI_32
    1073775463U,	// SRADI_rec
    1073775101U,	// SRAD_rec
    1073786235U,	// SRAW
    1073780017U,	// SRAWI
    1073775572U,	// SRAWI_rec
    1073776510U,	// SRAW_rec
    1073778386U,	// SRD
    1073775193U,	// SRD_rec
    1073786678U,	// SRW
    1073786678U,	// SRW8
    1073776557U,	// SRW8_rec
    1073776557U,	// SRW_rec
    67144701U,	// STB
    67144701U,	// STB8
    1073787423U,	// STBCIX
    134252544U,	// STBCX
    134263585U,	// STBEPX
    470166257U,	// STBU
    470166257U,	// STBU8
    503723265U,	// STBUX
    503723265U,	// STBUX8
    134263135U,	// STBX
    134263135U,	// STBX8
    1073787231U,	// STBXTLS
    1073787231U,	// STBXTLS_
    1073787231U,	// STBXTLS_32
    67145579U,	// STD
    1073785227U,	// STDAT
    134263739U,	// STDBRX
    1073787438U,	// STDCIX
    134252552U,	// STDCX
    470166314U,	// STDU
    503723293U,	// STDUX
    134263221U,	// STDX
    1073787317U,	// STDXTLS
    1073787317U,	// STDXTLS_
    67145224U,	// STFD
    134263601U,	// STFDEPX
    470166269U,	// STFDU
    503723279U,	// STFDUX
    134263177U,	// STFDX
    134264223U,	// STFIWX
    67151778U,	// STFS
    470166380U,	// STFSU
    503723331U,	// STFSUX
    134263956U,	// STFSX
    67146385U,	// STH
    67146385U,	// STH8
    134263754U,	// STHBRX
    1073787446U,	// STHCIX
    134252560U,	// STHCX
    134263617U,	// STHEPX
    470166343U,	// STHU
    470166343U,	// STHU8
    503723307U,	// STHUX
    503723307U,	// STHUX8
    134263321U,	// STHX
    134263321U,	// STHX8
    1073787417U,	// STHXTLS
    1073787417U,	// STHXTLS_
    1073787417U,	// STHXTLS_32
    67153473U,	// STMW
    17637U,	// STOP
    67150963U,	// STQ
    134252568U,	// STQCX
    16901U,	// STQX_PSEUDO
    1073780128U,	// STSWI
    134263101U,	// STVEBX
    134263287U,	// STVEHX
    134264215U,	// STVEWX
    134264172U,	// STVX
    134256240U,	// STVXL
    67153910U,	// STW
    67153910U,	// STW8
    1073785305U,	// STWAT
    134263788U,	// STWBRX
    1073787454U,	// STWCIX
    134252576U,	// STWCX
    134263632U,	// STWEPX
    470166431U,	// STWU
    470166431U,	// STWU8
    503723339U,	// STWUX
    503723339U,	// STWUX8
    134264257U,	// STWX
    134264257U,	// STWX8
    1073788353U,	// STWXTLS
    1073788353U,	// STWXTLS_
    1073788353U,	// STWXTLS_32
    67145540U,	// STXSD
    134263213U,	// STXSDX
    134263109U,	// STXSIBX
    134263109U,	// STXSIBXv
    134263295U,	// STXSIHX
    134263295U,	// STXSIHXv
    134264231U,	// STXSIWX
    67150640U,	// STXSSP
    134263673U,	// STXSSPX
    67152920U,	// STXV
    134263029U,	// STXVB16X
    134262994U,	// STXVD2X
    134263047U,	// STXVH8X
    1073780323U,	// STXVL
    1073780250U,	// STXVLL
    67150766U,	// STXVP
    134263689U,	// STXVPX
    134263126U,	// STXVRBX
    134263197U,	// STXVRDX
    134263312U,	// STXVRHX
    134264248U,	// STXVRWX
    134263011U,	// STXVW4X
    134264184U,	// STXVX
    1073778869U,	// SUBF
    1073778869U,	// SUBF8
    1073781337U,	// SUBF8O
    1073775911U,	// SUBF8O_rec
    1073775355U,	// SUBF8_rec
    1073777894U,	// SUBFC
    1073777894U,	// SUBFC8
    1073781243U,	// SUBFC8O
    1073775805U,	// SUBFC8O_rec
    1073775029U,	// SUBFC8_rec
    1073781243U,	// SUBFCO
    1073775805U,	// SUBFCO_rec
    1073775029U,	// SUBFC_rec
    1073778743U,	// SUBFE
    1073778743U,	// SUBFE8
    1073781287U,	// SUBFE8O
    1073775855U,	// SUBFE8O_rec
    1073775281U,	// SUBFE8_rec
    1073781287U,	// SUBFEO
    1073775855U,	// SUBFEO_rec
    1073775281U,	// SUBFE_rec
    1073777922U,	// SUBFIC
    1073777922U,	// SUBFIC8
    36964U,	// SUBFME
    36964U,	// SUBFME8
    39479U,	// SUBFME8O
    34049U,	// SUBFME8O_rec
    33473U,	// SUBFME8_rec
    39479U,	// SUBFMEO
    34049U,	// SUBFMEO_rec
    33473U,	// SUBFME_rec
    1073781337U,	// SUBFO
    1073775911U,	// SUBFO_rec
    37031U,	// SUBFZE
    37031U,	// SUBFZE8
    39504U,	// SUBFZE8O
    34077U,	// SUBFZE8O_rec
    33522U,	// SUBFZE8_rec
    39504U,	// SUBFZEO
    34077U,	// SUBFZEO_rec
    33522U,	// SUBFZE_rec
    1073775355U,	// SUBF_rec
    593203U,	// SYNC
    1083153U,	// TABORT
    1074102698U,	// TABORTDC
    1074103119U,	// TABORTDCI
    1074102770U,	// TABORTWC
    1074103131U,	// TABORTWCI
    1182434U,	// TAILB
    1182434U,	// TAILB8
    1214939U,	// TAILBA
    1214939U,	// TAILBA8
    17659U,	// TAILBCTR
    17659U,	// TAILBCTR8
    558236U,	// TBEGIN
    17078U,	// TBEGIN_RET
    1086892U,	// TCHECK
    17066U,	// TCHECK_RET
    2263378U,	// TCRETURNai
    2263275U,	// TCRETURNai8
    2231665U,	// TCRETURNdi
    2230521U,	// TCRETURNdi8
    2139391U,	// TCRETURNri
    2132231U,	// TCRETURNri8
    1074106194U,	// TD
    1074107285U,	// TDI
    557650U,	// TEND
    17354U,	// TLBIA
    251007062U,	// TLBIE
    1086946U,	// TLBIEL
    45334U,	// TLBIVAX
    1084998U,	// TLBLD
    1086413U,	// TLBLI
    17442U,	// TLBRE
    1073778796U,	// TLBRE2
    46200U,	// TLBSX
    1073788024U,	// TLBSX2
    1073776680U,	// TLBSX2D
    17384U,	// TLBSYNC
    17448U,	// TLBWE
    1073778825U,	// TLBWE2
    17304U,	// TLSGDAIX
    16270U,	// TLSGDAIX8
    17628U,	// TRAP
    14326U,	// TRECHKPT
    1082448U,	// TRECLAIM
    558698U,	// TSR
    1074114505U,	// TW
    1074107815U,	// TWI
    16924U,	// UNENCODED_NOP
    16939U,	// UpdateGBR
    1073777666U,	// VABSDUB
    1073779350U,	// VABSDUH
    1073786901U,	// VABSDUW
    1073783958U,	// VADDCUQ
    1073786884U,	// VADDCUW
    1073783989U,	// VADDECUQ
    1073780776U,	// VADDEUQM
    1073782473U,	// VADDFP
    1073784511U,	// VADDSBS
    1073784786U,	// VADDSHS
    1073785088U,	// VADDSWS
    1073780414U,	// VADDUBM
    1073784539U,	// VADDUBS
    1073780486U,	// VADDUDM
    1073780613U,	// VADDUHM
    1073784814U,	// VADDUHS
    1073780757U,	// VADDUQM
    1073780869U,	// VADDUWM
    1073785115U,	// VADDUWS
    1073778356U,	// VAND
    1073777887U,	// VANDC
    1073777540U,	// VAVGSB
    1073779236U,	// VAVGSH
    1073786709U,	// VAVGSW
    1073777684U,	// VAVGUB
    1073779368U,	// VAVGUH
    1073786928U,	// VAVGUW
    1073778297U,	// VBPERMD
    1073783858U,	// VBPERMQ
    1375777927U,	// VCFSX
    1073788039U,	// VCFSX_0
    1073778160U,	// VCFUGED
    1375778084U,	// VCFUX
    1073788196U,	// VCFUX_0
    1073784193U,	// VCIPHER
    1073785501U,	// VCIPHERLAST
    1073777461U,	// VCLRLB
    1073777517U,	// VCLRRB
    35992U,	// VCLZB
    36843U,	// VCLZD
    1073780517U,	// VCLZDM
    37630U,	// VCLZH
    35582U,	// VCLZLSBB
    45226U,	// VCLZW
    1073782437U,	// VCMPBFP
    1073776017U,	// VCMPBFP_rec
    1073782536U,	// VCMPEQFP
    1073776038U,	// VCMPEQFP_rec
    1073777709U,	// VCMPEQUB
    1073774938U,	// VCMPEQUB_rec
    1073778614U,	// VCMPEQUD
    1073775210U,	// VCMPEQUD_rec
    1073779393U,	// VCMPEQUH
    1073775406U,	// VCMPEQUH_rec
    1073784035U,	// VCMPEQUQ
    1073776149U,	// VCMPEQUQ_rec
    1073786962U,	// VCMPEQUW
    1073776582U,	// VCMPEQUW_rec
    1073782490U,	// VCMPGEFP
    1073776027U,	// VCMPGEFP_rec
    1073782546U,	// VCMPGTFP
    1073776049U,	// VCMPGTFP_rec
    1073777593U,	// VCMPGTSB
    1073774919U,	// VCMPGTSB_rec
    1073778466U,	// VCMPGTSD
    1073775199U,	// VCMPGTSD_rec
    1073779289U,	// VCMPGTSH
    1073775387U,	// VCMPGTSH_rec
    1073783905U,	// VCMPGTSQ
    1073776138U,	// VCMPGTSQ_rec
    1073786788U,	// VCMPGTSW
    1073776563U,	// VCMPGTSW_rec
    1073777777U,	// VCMPGTUB
    1073774982U,	// VCMPGTUB_rec
    1073778624U,	// VCMPGTUD
    1073775221U,	// VCMPGTUD_rec
    1073779415U,	// VCMPGTUH
    1073775417U,	// VCMPGTUH_rec
    1073784045U,	// VCMPGTUQ
    1073776160U,	// VCMPGTUQ_rec
    1073786997U,	// VCMPGTUW
    1073776593U,	// VCMPGTUW_rec
    1073777426U,	// VCMPNEB
    1073774909U,	// VCMPNEB_rec
    1073779168U,	// VCMPNEH
    1073775377U,	// VCMPNEH_rec
    1073786298U,	// VCMPNEW
    1073776517U,	// VCMPNEW_rec
    1073777806U,	// VCMPNEZB
    1073774993U,	// VCMPNEZB_rec
    1073779444U,	// VCMPNEZH
    1073775428U,	// VCMPNEZH_rec
    1073787040U,	// VCMPNEZW
    1073776611U,	// VCMPNEZW_rec
    1073783897U,	// VCMPSQ
    1073784027U,	// VCMPUQ
    1073777388U,	// VCNTMBB
    1073778072U,	// VCNTMBD
    1073779144U,	// VCNTMBH
    1073786241U,	// VCNTMBW
    1375775093U,	// VCTSXS
    1073785205U,	// VCTSXS_0
    1375775101U,	// VCTUXS
    1073785213U,	// VCTUXS_0
    35999U,	// VCTZB
    36858U,	// VCTZD
    1073780534U,	// VCTZDM
    37637U,	// VCTZH
    35592U,	// VCTZLSBB
    45243U,	// VCTZW
    1073778424U,	// VDIVESD
    1073783888U,	// VDIVESQ
    1073786700U,	// VDIVESW
    1073778579U,	// VDIVEUD
    1073784018U,	// VDIVEUQ
    1073786919U,	// VDIVEUW
    1073778476U,	// VDIVSD
    1073783915U,	// VDIVSQ
    1073786805U,	// VDIVSW
    1073778634U,	// VDIVUD
    1073784055U,	// VDIVUQ
    1073787007U,	// VDIVUW
    1073785861U,	// VEQV
    38539U,	// VEXPANDBM
    38621U,	// VEXPANDDM
    38727U,	// VEXPANDHM
    38892U,	// VEXPANDQM
    39004U,	// VEXPANDWM
    40683U,	// VEXPTEFP
    1073787564U,	// VEXTDDVLX
    1073787942U,	// VEXTDDVRX
    1073787552U,	// VEXTDUBVLX
    1073787930U,	// VEXTDUBVRX
    1073787585U,	// VEXTDUHVLX
    1073787963U,	// VEXTDUHVRX
    1073787607U,	// VEXTDUWVLX
    1073787985U,	// VEXTDUWVRX
    38569U,	// VEXTRACTBM
    1375768395U,	// VEXTRACTD
    38641U,	// VEXTRACTDM
    38757U,	// VEXTRACTHM
    38912U,	// VEXTRACTQM
    1375767653U,	// VEXTRACTUB
    1375769291U,	// VEXTRACTUH
    1375776860U,	// VEXTRACTUW
    39024U,	// VEXTRACTWM
    36179U,	// VEXTSB2D
    36179U,	// VEXTSB2Ds
    44062U,	// VEXTSB2W
    44062U,	// VEXTSB2Ws
    41918U,	// VEXTSD2Q
    36189U,	// VEXTSH2D
    36189U,	// VEXTSH2Ds
    44072U,	// VEXTSH2W
    44072U,	// VEXTSH2Ws
    36199U,	// VEXTSW2D
    36199U,	// VEXTSW2Ds
    1073787504U,	// VEXTUBLX
    1073787867U,	// VEXTUBRX
    1073787532U,	// VEXTUHLX
    1073787910U,	// VEXTUHRX
    1073787628U,	// VEXTUWLX
    1073788006U,	// VEXTUWRX
    36241U,	// VGBBD
    1073777490U,	// VGNB
    1375777383U,	// VINSBLX
    1375777746U,	// VINSBRX
    1375777430U,	// VINSBVLX
    1375777808U,	// VINSBVRX
    872451858U,	// VINSD
    1375777402U,	// VINSDLX
    1375777780U,	// VINSDRX
    872451058U,	// VINSERTB
    1375768416U,	// VINSERTD
    872452742U,	// VINSERTH
    1375776736U,	// VINSERTW
    1375777411U,	// VINSHLX
    1375777789U,	// VINSHRX
    1375777463U,	// VINSHVLX
    1375777841U,	// VINSHVRX
    872460180U,	// VINSW
    1375777507U,	// VINSWLX
    1375777885U,	// VINSWRX
    1375777485U,	// VINSWVLX
    1375777863U,	// VINSWVRX
    40657U,	// VLOGEFP
    1073782464U,	// VMADDFP
    1073782556U,	// VMAXFP
    1073777612U,	// VMAXSB
    1073778484U,	// VMAXSD
    1073779308U,	// VMAXSH
    1073786813U,	// VMAXSW
    1073777787U,	// VMAXUB
    1073778642U,	// VMAXUD
    1073779425U,	// VMAXUH
    1073787015U,	// VMAXUW
    1073784763U,	// VMHADDSHS
    1073784774U,	// VMHRADDSHS
    1073782528U,	// VMINFP
    1073777576U,	// VMINSB
    1073778442U,	// VMINSD
    1073779272U,	// VMINSH
    1073786764U,	// VMINSW
    1073777692U,	// VMINUB
    1073778597U,	// VMINUD
    1073779376U,	// VMINUH
    1073786945U,	// VMINUW
    1073780602U,	// VMLADDUHM
    1073778407U,	// VMODSD
    1073783880U,	// VMODSQ
    1073786683U,	// VMODSW
    1073778562U,	// VMODUD
    1073783999U,	// VMODUQ
    1073786893U,	// VMODUW
    1073786290U,	// VMRGEW
    1073777435U,	// VMRGHB
    1073779177U,	// VMRGHH
    1073786333U,	// VMRGHW
    1073777453U,	// VMRGLB
    1073779185U,	// VMRGLH
    1073786383U,	// VMRGLW
    1073786656U,	// VMRGOW
    1073778552U,	// VMSUMCUD
    1073780374U,	// VMSUMMBM
    1073780571U,	// VMSUMSHM
    1073784795U,	// VMSUMSHS
    1073780423U,	// VMSUMUBM
    1073780495U,	// VMSUMUDM
    1073780622U,	// VMSUMUHM
    1073784823U,	// VMSUMUHS
    42114U,	// VMUL10CUQ
    1073783967U,	// VMUL10ECUQ
    1073784007U,	// VMUL10EUQ
    42104U,	// VMUL10UQ
    1073777531U,	// VMULESB
    1073778415U,	// VMULESD
    1073779227U,	// VMULESH
    1073786691U,	// VMULESW
    1073777675U,	// VMULEUB
    1073778570U,	// VMULEUD
    1073779359U,	// VMULEUH
    1073786910U,	// VMULEUW
    1073778433U,	// VMULHSD
    1073786726U,	// VMULHSW
    1073778588U,	// VMULHUD
    1073786936U,	// VMULHUW
    1073778261U,	// VMULLD
    1073777584U,	// VMULOSB
    1073778457U,	// VMULOSD
    1073779280U,	// VMULOSH
    1073786779U,	// VMULOSW
    1073777700U,	// VMULOUB
    1073778605U,	// VMULOUD
    1073779384U,	// VMULOUH
    1073786953U,	// VMULOUW
    1073780878U,	// VMULUWM
    1073778341U,	// VNAND
    1073784183U,	// VNCIPHER
    1073785487U,	// VNCIPHERLAST
    36366U,	// VNEGD
    44502U,	// VNEGW
    1073782446U,	// VNMSUBFP
    1073784288U,	// VNOR
    1073784301U,	// VOR
    1073777993U,	// VORC
    1073778362U,	// VPDEPD
    1073780786U,	// VPERM
    1073784248U,	// VPERMR
    1073784314U,	// VPERMXOR
    1073778544U,	// VPEXTD
    1073787745U,	// VPKPX
    1073784927U,	// VPKSDSS
    1073784991U,	// VPKSDUS
    1073784936U,	// VPKSHSS
    1073785009U,	// VPKSHUS
    1073784945U,	// VPKSWSS
    1073785027U,	// VPKSWUS
    1073780801U,	// VPKUDUM
    1073785000U,	// VPKUDUS
    1073780810U,	// VPKUHUM
    1073785018U,	// VPKUHUS
    1073780819U,	// VPKUWUM
    1073785036U,	// VPKUWUS
    1073777481U,	// VPMSUMB
    1073778306U,	// VPMSUMD
    1073779205U,	// VPMSUMH
    1073786439U,	// VPMSUMW
    35816U,	// VPOPCNTB
    36694U,	// VPOPCNTD
    37500U,	// VPOPCNTH
    45014U,	// VPOPCNTW
    36257U,	// VPRTYBD
    41935U,	// VPRTYBQ
    44426U,	// VPRTYBW
    40676U,	// VREFP
    38820U,	// VRFIM
    39205U,	// VRFIN
    40760U,	// VRFIP
    46680U,	// VRFIZ
    1073777469U,	// VRLB
    1073778285U,	// VRLD
    1073779700U,	// VRLDMI
    1073780684U,	// VRLDNM
    1073779193U,	// VRLH
    1073783846U,	// VRLQ
    1073779724U,	// VRLQMI
    1073780700U,	// VRLQNM
    1073786415U,	// VRLW
    1073779820U,	// VRLWMI
    1073780708U,	// VRLWNM
    40693U,	// VRSQRTEFP
    45823U,	// VSBOX
    1073780214U,	// VSEL
    1073778046U,	// VSHASIGMAD
    1073786222U,	// VSHASIGMAW
    1073780281U,	// VSL
    1073777475U,	// VSLB
    1073778291U,	// VSLD
    1073779480U,	// VSLDBI
    1073779849U,	// VSLDOI
    1073779199U,	// VSLH
    1073781383U,	// VSLO
    1073783852U,	// VSLQ
    1073785839U,	// VSLV
    1073786422U,	// VSLW
    1375767520U,	// VSPLTB
    1375767520U,	// VSPLTBs
    1375769204U,	// VSPLTH
    1375769204U,	// VSPLTHs
    335580053U,	// VSPLTISB
    335581749U,	// VSPLTISH
    335589231U,	// VSPLTISW
    1375776709U,	// VSPLTW
    1073784379U,	// VSR
    1073777374U,	// VSRAB
    1073778058U,	// VSRAD
    1073779137U,	// VSRAH
    1073783752U,	// VSRAQ
    1073786234U,	// VSRAW
    1073777525U,	// VSRB
    1073778393U,	// VSRD
    1073779488U,	// VSRDBI
    1073779221U,	// VSRH
    1073781504U,	// VSRO
    1073783874U,	// VSRQ
    1073785867U,	// VSRV
    1073786677U,	// VSRW
    38341U,	// VSTRIBL
    33821U,	// VSTRIBL_rec
    42258U,	// VSTRIBR
    34347U,	// VSTRIBR_rec
    38410U,	// VSTRIHL
    33855U,	// VSTRIHL_rec
    42378U,	// VSTRIHR
    34374U,	// VSTRIHR_rec
    1073783949U,	// VSUBCUQ
    1073786875U,	// VSUBCUW
    1073783979U,	// VSUBECUQ
    1073780766U,	// VSUBEUQM
    1073782456U,	// VSUBFP
    1073784502U,	// VSUBSBS
    1073784754U,	// VSUBSHS
    1073785079U,	// VSUBSWS
    1073780405U,	// VSUBUBM
    1073784530U,	// VSUBUBS
    1073780477U,	// VSUBUDM
    1073780593U,	// VSUBUHM
    1073784805U,	// VSUBUHS
    1073780748U,	// VSUBUQM
    1073780860U,	// VSUBUWM
    1073785106U,	// VSUBUWS
    1073785069U,	// VSUM2SWS
    1073784492U,	// VSUM4SBS
    1073784744U,	// VSUM4SHS
    1073784520U,	// VSUM4UBS
    1073785097U,	// VSUMSWS
    45912U,	// VUPKHPX
    35724U,	// VUPKHSB
    37420U,	// VUPKHSH
    44893U,	// VUPKHSW
    45928U,	// VUPKLPX
    35743U,	// VUPKLSB
    37439U,	// VUPKLSH
    44921U,	// VUPKLSW
    1073784332U,	// VXOR
    1308665356U,	// V_SET0
    1308665356U,	// V_SET0B
    1308665356U,	// V_SET0H
    19967855U,	// V_SETALLONES
    19967855U,	// V_SETALLONESB
    19967855U,	// V_SETALLONESH
    600636U,	// WAIT
    1085488U,	// WRTEE
    1086362U,	// WRTEEI
    1073784309U,	// XOR
    1073784309U,	// XOR8
    1073776220U,	// XOR8_rec
    1073779889U,	// XORI
    1073779889U,	// XORI8
    1073784870U,	// XORIS
    1073784870U,	// XORIS8
    1073776220U,	// XOR_rec
    40383U,	// XSABSDP
    41242U,	// XSABSQP
    1073781720U,	// XSADDDP
    1073782916U,	// XSADDQP
    1073781463U,	// XSADDQPO
    1073783236U,	// XSADDSP
    1073782165U,	// XSCMPEQDP
    1073782133U,	// XSCMPEXPDP
    1073783014U,	// XSCMPEXPQP
    1073781782U,	// XSCMPGEDP
    1073782225U,	// XSCMPGTDP
    1073782063U,	// XSCMPODP
    1073782984U,	// XSCMPOQP
    1073782289U,	// XSCMPUDP
    1073783085U,	// XSCMPUQP
    1073782023U,	// XSCPSGNDP
    1073782973U,	// XSCPSGNQP
    40740U,	// XSCVDPHP
    41170U,	// XSCVDPQP
    41674U,	// XSCVDPSP
    39376U,	// XSCVDPSPN
    42798U,	// XSCVDPSXDS
    42798U,	// XSCVDPSXDSs
    43309U,	// XSCVDPSXWS
    43309U,	// XSCVDPSXWSs
    42834U,	// XSCVDPUXDS
    42834U,	// XSCVDPUXDSs
    43345U,	// XSCVDPUXWS
    43345U,	// XSCVDPUXWSs
    40249U,	// XSCVHPDP
    40259U,	// XSCVQPDP
    39565U,	// XSCVQPDPO
    46652U,	// XSCVQPSDZ
    46777U,	// XSCVQPSQZ
    46849U,	// XSCVQPSWZ
    46663U,	// XSCVQPUDZ
    46788U,	// XSCVQPUQZ
    46860U,	// XSCVQPUWZ
    41101U,	// XSCVSDQP
    40269U,	// XSCVSPDP
    39324U,	// XSCVSPDPN
    41212U,	// XSCVSQQP
    39914U,	// XSCVSXDDP
    41430U,	// XSCVSXDSP
    41111U,	// XSCVUDQP
    41222U,	// XSCVUQQP
    39936U,	// XSCVUXDDP
    41452U,	// XSCVUXDSP
    1073782299U,	// XSDIVDP
    1073783095U,	// XSDIVQP
    1073781494U,	// XSDIVQPO
    1073783650U,	// XSDIVSP
    1073782113U,	// XSIEXPDP
    1073783004U,	// XSIEXPQP
    1375771526U,	// XSMADDADP
    1375773062U,	// XSMADDASP
    1375771889U,	// XSMADDMDP
    1375773344U,	// XSMADDMSP
    1375772794U,	// XSMADDQP
    1375771340U,	// XSMADDQPO
    1073781710U,	// XSMAXCDP
    1073782885U,	// XSMAXCQP
    1073782359U,	// XSMAXDP
    1073781903U,	// XSMAXJDP
    1073781700U,	// XSMINCDP
    1073782875U,	// XSMINCQP
    1073782045U,	// XSMINDP
    1073781893U,	// XSMINJDP
    1375771480U,	// XSMSUBADP
    1375773016U,	// XSMSUBASP
    1375771843U,	// XSMSUBMDP
    1375773298U,	// XSMSUBMSP
    1375772733U,	// XSMSUBQP
    1375771307U,	// XSMSUBQPO
    1073781913U,	// XSMULDP
    1073782964U,	// XSMULQP
    1073781473U,	// XSMULQPO
    1073783368U,	// XSMULSP
    40363U,	// XSNABSDP
    40363U,	// XSNABSDPs
    41232U,	// XSNABSQP
    40020U,	// XSNEGDP
    41121U,	// XSNEGQP
    1375771502U,	// XSNMADDADP
    1375773038U,	// XSNMADDASP
    1375771865U,	// XSNMADDMDP
    1375773320U,	// XSNMADDMSP
    1375772783U,	// XSNMADDQP
    1375771328U,	// XSNMADDQPO
    1375771456U,	// XSNMSUBADP
    1375772992U,	// XSNMSUBASP
    1375771819U,	// XSNMSUBMDP
    1375773274U,	// XSNMSUBMSP
    1375772722U,	// XSNMSUBQP
    1375771295U,	// XSNMSUBQPO
    38033U,	// XSRDPI
    36106U,	// XSRDPIC
    38827U,	// XSRDPIM
    40767U,	// XSRDPIP
    46687U,	// XSRDPIZ
    39980U,	// XSREDP
    41485U,	// XSRESP
    627873U,	// XSRQPI
    635486U,	// XSRQPIX
    631733U,	// XSRQPXP
    41741U,	// XSRSP
    39996U,	// XSRSQRTEDP
    41501U,	// XSRSQRTESP
    40423U,	// XSSQRTDP
    41251U,	// XSSQRTQP
    39659U,	// XSSQRTQPO
    41795U,	// XSSQRTSP
    1073781660U,	// XSSUBDP
    1073782855U,	// XSSUBQP
    1073781430U,	// XSSUBQPO
    1073783196U,	// XSSUBSP
    1073782308U,	// XSTDIVDP
    40433U,	// XSTSQRTDP
    1375771566U,	// XSTSTDCDP
    1375772752U,	// XSTSTDCQP
    1375773102U,	// XSTSTDCSP
    40321U,	// XSXEXPDP
    41202U,	// XSXEXPQP
    40038U,	// XSXSIGDP
    41130U,	// XSXSIGQP
    40392U,	// XVABSDP
    41758U,	// XVABSSP
    1073781729U,	// XVADDDP
    1073783245U,	// XVADDSP
    1073776791U,	// XVBF16GER2
    1375770948U,	// XVBF16GER2NN
    1375772532U,	// XVBF16GER2NP
    1375771007U,	// XVBF16GER2PN
    1375772591U,	// XVBF16GER2PP
    1073782176U,	// XVCMPEQDP
    1073775993U,	// XVCMPEQDP_rec
    1073783548U,	// XVCMPEQSP
    1073776079U,	// XVCMPEQSP_rec
    1073781793U,	// XVCMPGEDP
    1073775981U,	// XVCMPGEDP_rec
    1073783298U,	// XVCMPGESP
    1073776067U,	// XVCMPGESP_rec
    1073782236U,	// XVCMPGTDP
    1073776005U,	// XVCMPGTDP_rec
    1073783608U,	// XVCMPGTSP
    1073776098U,	// XVCMPGTSP_rec
    1073782034U,	// XVCPSGNDP
    1073783478U,	// XVCPSGNSP
    39363U,	// XVCVBF16SPN
    41684U,	// XVCVDPSP
    42810U,	// XVCVDPSXDS
    43321U,	// XVCVDPSXWS
    42846U,	// XVCVDPUXDS
    43357U,	// XVCVDPUXWS
    41694U,	// XVCVHPSP
    35039U,	// XVCVSPBF16
    40279U,	// XVCVSPDP
    40750U,	// XVCVSPHP
    42822U,	// XVCVSPSXDS
    43333U,	// XVCVSPSXWS
    42858U,	// XVCVSPUXDS
    43369U,	// XVCVSPUXWS
    39925U,	// XVCVSXDDP
    41441U,	// XVCVSXDSP
    40513U,	// XVCVSXWDP
    41854U,	// XVCVSXWSP
    39947U,	// XVCVUXDDP
    41463U,	// XVCVUXDSP
    40524U,	// XVCVUXWDP
    41865U,	// XVCVUXWSP
    1073782328U,	// XVDIVDP
    1073783669U,	// XVDIVSP
    1073776805U,	// XVF16GER2
    1375770964U,	// XVF16GER2NN
    1375772548U,	// XVF16GER2NP
    1375771023U,	// XVF16GER2PN
    1375772607U,	// XVF16GER2PP
    1073784161U,	// XVF32GER
    1375770979U,	// XVF32GERNN
    1375772563U,	// XVF32GERNP
    1375771049U,	// XVF32GERPN
    1375772665U,	// XVF32GERPP
    1073784173U,	// XVF64GER
    1375770993U,	// XVF64GERNN
    1375772577U,	// XVF64GERNP
    1375771063U,	// XVF64GERPN
    1375772679U,	// XVF64GERPP
    1073776818U,	// XVI16GER2
    1375772622U,	// XVI16GER2PP
    1073784407U,	// XVI16GER2S
    1375772693U,	// XVI16GER2SPP
    1073776919U,	// XVI4GER8
    1375772651U,	// XVI4GER8PP
    1073776831U,	// XVI8GER4
    1375772637U,	// XVI8GER4PP
    1375772709U,	// XVI8GER4SPP
    1073782123U,	// XVIEXPDP
    1073783528U,	// XVIEXPSP
    1375771537U,	// XVMADDADP
    1375773073U,	// XVMADDASP
    1375771900U,	// XVMADDMDP
    1375773355U,	// XVMADDMSP
    1073782368U,	// XVMAXDP
    1073783700U,	// XVMAXSP
    1073782054U,	// XVMINDP
    1073783489U,	// XVMINSP
    1375771491U,	// XVMSUBADP
    1375773027U,	// XVMSUBASP
    1375771854U,	// XVMSUBMDP
    1375773309U,	// XVMSUBMSP
    1073781922U,	// XVMULDP
    1073783377U,	// XVMULSP
    40373U,	// XVNABSDP
    41748U,	// XVNABSSP
    40029U,	// XVNEGDP
    41525U,	// XVNEGSP
    1375771514U,	// XVNMADDADP
    1375773050U,	// XVNMADDASP
    1375771877U,	// XVNMADDMDP
    1375773332U,	// XVNMADDMSP
    1375771468U,	// XVNMSUBADP
    1375773004U,	// XVNMSUBASP
    1375771831U,	// XVNMSUBMDP
    1375773286U,	// XVNMSUBMSP
    38041U,	// XVRDPI
    36115U,	// XVRDPIC
    38836U,	// XVRDPIM
    40776U,	// XVRDPIP
    46696U,	// XVRDPIZ
    39988U,	// XVREDP
    41493U,	// XVRESP
    38057U,	// XVRSPI
    36124U,	// XVRSPIC
    38845U,	// XVRSPIM
    40785U,	// XVRSPIP
    46705U,	// XVRSPIZ
    40008U,	// XVRSQRTEDP
    41513U,	// XVRSQRTESP
    40455U,	// XVSQRTDP
    41816U,	// XVSQRTSP
    1073781669U,	// XVSUBDP
    1073783205U,	// XVSUBSP
    1073782318U,	// XVTDIVDP
    1073783659U,	// XVTDIVSP
    35573U,	// XVTLSBB
    40444U,	// XVTSQRTDP
    41805U,	// XVTSQRTSP
    1375771577U,	// XVTSTDCDP
    1375773113U,	// XVTSTDCSP
    40331U,	// XVXEXPDP
    41714U,	// XVXEXPSP
    40048U,	// XVXSIGDP
    41534U,	// XVXSIGSP
    1073777795U,	// XXBLENDVB
    1073778650U,	// XXBLENDVD
    1073779433U,	// XXBLENDVH
    1073787023U,	// XXBLENDVW
    36552U,	// XXBRD
    37390U,	// XXBRH
    42043U,	// XXBRQ
    44846U,	// XXBRW
    1073780157U,	// XXEVAL
    1073786984U,	// XXEXTRACTUW
    1073780433U,	// XXGENPCVBM
    1073780505U,	// XXGENPCVDM
    1073780632U,	// XXGENPCVHM
    1073780887U,	// XXGENPCVWM
    1375776746U,	// XXINSERTW
    1073778315U,	// XXLAND
    1073777869U,	// XXLANDC
    1073785845U,	// XXLEQV
    1308666869U,	// XXLEQVOnes
    1073778323U,	// XXLNAND
    1073784272U,	// XXLNOR
    1073784265U,	// XXLOR
    1073777977U,	// XXLORC
    1073784265U,	// XXLORf
    1073784306U,	// XXLXOR
    1308665330U,	// XXLXORdpz
    1308665330U,	// XXLXORspz
    1308665330U,	// XXLXORz
    1445045U,	// XXMFACC
    1073786341U,	// XXMRGHW
    1073786391U,	// XXMRGLW
    1084606U,	// XXMTACC
    1073780793U,	// XXPERM
    1073779556U,	// XXPERMDI
    1073779556U,	// XXPERMDIs
    1073784256U,	// XXPERMR
    1073787638U,	// XXPERMX
    1073780220U,	// XXSEL
    1095182U,	// XXSETACCZ
    1073780024U,	// XXSLDWI
    1073780024U,	// XXSLDWIs
    1744875877U,	// XXSPLTI32DX
    906005283U,	// XXSPLTIB
    40058U,	// XXSPLTIDP
    44549U,	// XXSPLTIW
    1073786829U,	// XXSPLTW
    1073786829U,	// XXSPLTWs
    1074105514U,	// gBC
    1074104799U,	// gBCA
    21644224U,	// gBCAat
    1074112064U,	// gBCCTR
    1074107945U,	// gBCCTRL
    1074107854U,	// gBCL
    1074104998U,	// gBCLA
    21644240U,	// gBCLAat
    1074111891U,	// gBCLR
    1074107938U,	// gBCLRL
    22692939U,	// gBCLat
    22692829U,	// gBCat
  };

  static const uint16_t OpInfo1[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    0U,	// DBG_VALUE
    0U,	// DBG_VALUE_LIST
    0U,	// DBG_INSTR_REF
    0U,	// DBG_PHI
    0U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    0U,	// BUNDLE
    0U,	// LIFETIME_START
    0U,	// LIFETIME_END
    0U,	// PSEUDO_PROBE
    0U,	// ARITH_FENCE
    0U,	// STACKMAP
    0U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// PREALLOCATED_SETUP
    0U,	// PREALLOCATED_ARG
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    0U,	// PATCHABLE_FUNCTION_ENTER
    0U,	// PATCHABLE_RET
    0U,	// PATCHABLE_FUNCTION_EXIT
    0U,	// PATCHABLE_TAIL_CALL
    0U,	// PATCHABLE_EVENT_CALL
    0U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// G_ASSERT_SEXT
    0U,	// G_ASSERT_ZEXT
    0U,	// G_ASSERT_ALIGN
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_SDIVREM
    0U,	// G_UDIVREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_FREEZE
    0U,	// G_INTRINSIC_FPTRUNC_ROUND
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_INTRINSIC_LRINT
    0U,	// G_INTRINSIC_ROUNDEVEN
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_ATOMICRMW_FMAX
    0U,	// G_ATOMICRMW_FMIN
    0U,	// G_FENCE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_FSHL
    0U,	// G_FSHR
    0U,	// G_ROTR
    0U,	// G_ROTL
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_UADDSAT
    0U,	// G_SADDSAT
    0U,	// G_USUBSAT
    0U,	// G_SSUBSAT
    0U,	// G_USHLSAT
    0U,	// G_SSHLSAT
    0U,	// G_SMULFIX
    0U,	// G_UMULFIX
    0U,	// G_SMULFIXSAT
    0U,	// G_UMULFIXSAT
    0U,	// G_SDIVFIX
    0U,	// G_UDIVFIX
    0U,	// G_SDIVFIXSAT
    0U,	// G_UDIVFIXSAT
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FPOWI
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_IS_FPCLASS
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_PTR_ADD
    0U,	// G_PTRMASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_ABS
    0U,	// G_LROUND
    0U,	// G_LLROUND
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// G_STRICT_FADD
    0U,	// G_STRICT_FSUB
    0U,	// G_STRICT_FMUL
    0U,	// G_STRICT_FDIV
    0U,	// G_STRICT_FREM
    0U,	// G_STRICT_FMA
    0U,	// G_STRICT_FSQRT
    0U,	// G_READ_REGISTER
    0U,	// G_WRITE_REGISTER
    0U,	// G_MEMCPY
    0U,	// G_MEMCPY_INLINE
    0U,	// G_MEMMOVE
    0U,	// G_MEMSET
    0U,	// G_BZERO
    0U,	// G_VECREDUCE_SEQ_FADD
    0U,	// G_VECREDUCE_SEQ_FMUL
    0U,	// G_VECREDUCE_FADD
    0U,	// G_VECREDUCE_FMUL
    0U,	// G_VECREDUCE_FMAX
    0U,	// G_VECREDUCE_FMIN
    0U,	// G_VECREDUCE_ADD
    0U,	// G_VECREDUCE_MUL
    0U,	// G_VECREDUCE_AND
    0U,	// G_VECREDUCE_OR
    0U,	// G_VECREDUCE_XOR
    0U,	// G_VECREDUCE_SMAX
    0U,	// G_VECREDUCE_SMIN
    0U,	// G_VECREDUCE_UMAX
    0U,	// G_VECREDUCE_UMIN
    0U,	// G_SBFX
    0U,	// G_UBFX
    0U,	// ATOMIC_CMP_SWAP_I128
    0U,	// ATOMIC_LOAD_ADD_I128
    0U,	// ATOMIC_LOAD_AND_I128
    0U,	// ATOMIC_LOAD_NAND_I128
    0U,	// ATOMIC_LOAD_OR_I128
    0U,	// ATOMIC_LOAD_SUB_I128
    0U,	// ATOMIC_LOAD_XOR_I128
    0U,	// ATOMIC_SWAP_I128
    0U,	// BUILD_QUADWORD
    0U,	// BUILD_UACC
    0U,	// CFENCE8
    0U,	// CLRLSLDI
    0U,	// CLRLSLDI_rec
    130U,	// CLRLSLWI
    130U,	// CLRLSLWI_rec
    64U,	// CLRRDI
    64U,	// CLRRDI_rec
    66U,	// CLRRWI
    66U,	// CLRRWI_rec
    0U,	// DCBFL
    0U,	// DCBFLP
    0U,	// DCBFPS
    0U,	// DCBFx
    0U,	// DCBSTPS
    0U,	// DCBTCT
    0U,	// DCBTDS
    0U,	// DCBTSTCT
    0U,	// DCBTSTDS
    0U,	// DCBTSTT
    0U,	// DCBTSTx
    0U,	// DCBTT
    0U,	// DCBTx
    0U,	// DFLOADf32
    0U,	// DFLOADf64
    0U,	// DFSTOREf32
    0U,	// DFSTOREf64
    0U,	// EXTLDI
    0U,	// EXTLDI_rec
    130U,	// EXTLWI
    130U,	// EXTLWI_rec
    0U,	// EXTRDI
    0U,	// EXTRDI_rec
    130U,	// EXTRWI
    130U,	// EXTRWI_rec
    130U,	// INSLWI
    130U,	// INSLWI_rec
    0U,	// INSRDI
    0U,	// INSRDI_rec
    130U,	// INSRWI
    130U,	// INSRWI_rec
    0U,	// KILL_PAIR
    0U,	// LAx
    0U,	// LIWAX
    0U,	// LIWZX
    258U,	// RLWIMIbm
    258U,	// RLWIMIbm_rec
    258U,	// RLWINMbm
    258U,	// RLWINMbm_rec
    258U,	// RLWNMbm
    258U,	// RLWNMbm_rec
    64U,	// ROTRDI
    64U,	// ROTRDI_rec
    66U,	// ROTRWI
    66U,	// ROTRWI_rec
    64U,	// SLDI
    64U,	// SLDI_rec
    66U,	// SLWI
    66U,	// SLWI_rec
    0U,	// SPILLTOVSR_LD
    0U,	// SPILLTOVSR_LDX
    0U,	// SPILLTOVSR_ST
    0U,	// SPILLTOVSR_STX
    64U,	// SRDI
    64U,	// SRDI_rec
    66U,	// SRWI
    66U,	// SRWI_rec
    0U,	// STIWX
    4U,	// SUBI
    4U,	// SUBIC
    4U,	// SUBIC_rec
    4U,	// SUBIS
    0U,	// SUBPCIS
    0U,	// XFLOADf32
    0U,	// XFLOADf64
    0U,	// XFSTOREf32
    0U,	// XFSTOREf64
    70U,	// ADD4
    70U,	// ADD4O
    70U,	// ADD4O_rec
    70U,	// ADD4TLS
    70U,	// ADD4_rec
    70U,	// ADD8
    70U,	// ADD8O
    70U,	// ADD8O_rec
    70U,	// ADD8TLS
    70U,	// ADD8TLS_
    70U,	// ADD8_rec
    70U,	// ADDC
    70U,	// ADDC8
    70U,	// ADDC8O
    70U,	// ADDC8O_rec
    70U,	// ADDC8_rec
    70U,	// ADDCO
    70U,	// ADDCO_rec
    70U,	// ADDC_rec
    70U,	// ADDE
    70U,	// ADDE8
    70U,	// ADDE8O
    70U,	// ADDE8O_rec
    70U,	// ADDE8_rec
    70U,	// ADDEO
    70U,	// ADDEO_rec
    390U,	// ADDEX
    390U,	// ADDEX8
    70U,	// ADDE_rec
    4U,	// ADDI
    4U,	// ADDI8
    4U,	// ADDIC
    4U,	// ADDIC8
    4U,	// ADDIC_rec
    4U,	// ADDIS
    4U,	// ADDIS8
    0U,	// ADDISdtprelHA
    0U,	// ADDISdtprelHA32
    0U,	// ADDISgotTprelHA
    0U,	// ADDIStlsgdHA
    0U,	// ADDIStlsldHA
    0U,	// ADDIStocHA
    0U,	// ADDIStocHA8
    0U,	// ADDIdtprelL
    0U,	// ADDIdtprelL32
    0U,	// ADDItlsgdL
    0U,	// ADDItlsgdL32
    0U,	// ADDItlsgdLADDR
    0U,	// ADDItlsgdLADDR32
    0U,	// ADDItlsldL
    0U,	// ADDItlsldL32
    0U,	// ADDItlsldLADDR
    0U,	// ADDItlsldLADDR32
    0U,	// ADDItoc
    0U,	// ADDItoc8
    0U,	// ADDItocL
    0U,	// ADDME
    0U,	// ADDME8
    0U,	// ADDME8O
    0U,	// ADDME8O_rec
    0U,	// ADDME8_rec
    0U,	// ADDMEO
    0U,	// ADDMEO_rec
    0U,	// ADDME_rec
    0U,	// ADDPCIS
    0U,	// ADDZE
    0U,	// ADDZE8
    0U,	// ADDZE8O
    0U,	// ADDZE8O_rec
    0U,	// ADDZE8_rec
    0U,	// ADDZEO
    0U,	// ADDZEO_rec
    0U,	// ADDZE_rec
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    70U,	// AND
    70U,	// AND8
    70U,	// AND8_rec
    70U,	// ANDC
    70U,	// ANDC8
    70U,	// ANDC8_rec
    70U,	// ANDC_rec
    8U,	// ANDI8_rec
    8U,	// ANDIS8_rec
    8U,	// ANDIS_rec
    8U,	// ANDI_rec
    0U,	// ANDI_rec_1_EQ_BIT
    0U,	// ANDI_rec_1_EQ_BIT8
    0U,	// ANDI_rec_1_GT_BIT
    0U,	// ANDI_rec_1_GT_BIT8
    70U,	// AND_rec
    0U,	// ATOMIC_CMP_SWAP_I16
    0U,	// ATOMIC_CMP_SWAP_I32
    0U,	// ATOMIC_CMP_SWAP_I64
    0U,	// ATOMIC_CMP_SWAP_I8
    0U,	// ATOMIC_LOAD_ADD_I16
    0U,	// ATOMIC_LOAD_ADD_I32
    0U,	// ATOMIC_LOAD_ADD_I64
    0U,	// ATOMIC_LOAD_ADD_I8
    0U,	// ATOMIC_LOAD_AND_I16
    0U,	// ATOMIC_LOAD_AND_I32
    0U,	// ATOMIC_LOAD_AND_I64
    0U,	// ATOMIC_LOAD_AND_I8
    0U,	// ATOMIC_LOAD_MAX_I16
    0U,	// ATOMIC_LOAD_MAX_I32
    0U,	// ATOMIC_LOAD_MAX_I64
    0U,	// ATOMIC_LOAD_MAX_I8
    0U,	// ATOMIC_LOAD_MIN_I16
    0U,	// ATOMIC_LOAD_MIN_I32
    0U,	// ATOMIC_LOAD_MIN_I64
    0U,	// ATOMIC_LOAD_MIN_I8
    0U,	// ATOMIC_LOAD_NAND_I16
    0U,	// ATOMIC_LOAD_NAND_I32
    0U,	// ATOMIC_LOAD_NAND_I64
    0U,	// ATOMIC_LOAD_NAND_I8
    0U,	// ATOMIC_LOAD_OR_I16
    0U,	// ATOMIC_LOAD_OR_I32
    0U,	// ATOMIC_LOAD_OR_I64
    0U,	// ATOMIC_LOAD_OR_I8
    0U,	// ATOMIC_LOAD_SUB_I16
    0U,	// ATOMIC_LOAD_SUB_I32
    0U,	// ATOMIC_LOAD_SUB_I64
    0U,	// ATOMIC_LOAD_SUB_I8
    0U,	// ATOMIC_LOAD_UMAX_I16
    0U,	// ATOMIC_LOAD_UMAX_I32
    0U,	// ATOMIC_LOAD_UMAX_I64
    0U,	// ATOMIC_LOAD_UMAX_I8
    0U,	// ATOMIC_LOAD_UMIN_I16
    0U,	// ATOMIC_LOAD_UMIN_I32
    0U,	// ATOMIC_LOAD_UMIN_I64
    0U,	// ATOMIC_LOAD_UMIN_I8
    0U,	// ATOMIC_LOAD_XOR_I16
    0U,	// ATOMIC_LOAD_XOR_I32
    0U,	// ATOMIC_LOAD_XOR_I64
    0U,	// ATOMIC_LOAD_XOR_I8
    0U,	// ATOMIC_SWAP_I16
    0U,	// ATOMIC_SWAP_I32
    0U,	// ATOMIC_SWAP_I64
    0U,	// ATOMIC_SWAP_I8
    0U,	// ATTN
    0U,	// B
    0U,	// BA
    0U,	// BC
    0U,	// BCC
    0U,	// BCCA
    0U,	// BCCCTR
    0U,	// BCCCTR8
    0U,	// BCCCTRL
    0U,	// BCCCTRL8
    0U,	// BCCL
    0U,	// BCCLA
    0U,	// BCCLR
    0U,	// BCCLRL
    0U,	// BCCTR
    0U,	// BCCTR8
    0U,	// BCCTR8n
    0U,	// BCCTRL
    0U,	// BCCTRL8
    0U,	// BCCTRL8n
    0U,	// BCCTRLn
    0U,	// BCCTRn
    518U,	// BCDADD_rec
    74U,	// BCDCFN_rec
    74U,	// BCDCFSQ_rec
    74U,	// BCDCFZ_rec
    70U,	// BCDCPSGN_rec
    0U,	// BCDCTN_rec
    0U,	// BCDCTSQ_rec
    74U,	// BCDCTZ_rec
    74U,	// BCDSETSGN_rec
    518U,	// BCDSR_rec
    518U,	// BCDSUB_rec
    518U,	// BCDS_rec
    518U,	// BCDTRUNC_rec
    70U,	// BCDUS_rec
    70U,	// BCDUTRUNC_rec
    0U,	// BCL
    0U,	// BCLR
    0U,	// BCLRL
    0U,	// BCLRLn
    0U,	// BCLRn
    0U,	// BCLalways
    0U,	// BCLn
    0U,	// BCTR
    0U,	// BCTR8
    0U,	// BCTRL
    0U,	// BCTRL8
    0U,	// BCTRL8_LDinto_toc
    0U,	// BCTRL8_LDinto_toc_RM
    0U,	// BCTRL8_RM
    0U,	// BCTRL_LWZinto_toc
    0U,	// BCTRL_LWZinto_toc_RM
    0U,	// BCTRL_RM
    0U,	// BCn
    0U,	// BDNZ
    0U,	// BDNZ8
    0U,	// BDNZA
    0U,	// BDNZAm
    0U,	// BDNZAp
    0U,	// BDNZL
    0U,	// BDNZLA
    0U,	// BDNZLAm
    0U,	// BDNZLAp
    0U,	// BDNZLR
    0U,	// BDNZLR8
    0U,	// BDNZLRL
    0U,	// BDNZLRLm
    0U,	// BDNZLRLp
    0U,	// BDNZLRm
    0U,	// BDNZLRp
    0U,	// BDNZLm
    0U,	// BDNZLp
    0U,	// BDNZm
    0U,	// BDNZp
    0U,	// BDZ
    0U,	// BDZ8
    0U,	// BDZA
    0U,	// BDZAm
    0U,	// BDZAp
    0U,	// BDZL
    0U,	// BDZLA
    0U,	// BDZLAm
    0U,	// BDZLAp
    0U,	// BDZLR
    0U,	// BDZLR8
    0U,	// BDZLRL
    0U,	// BDZLRLm
    0U,	// BDZLRLp
    0U,	// BDZLRm
    0U,	// BDZLRp
    0U,	// BDZLm
    0U,	// BDZLp
    0U,	// BDZm
    0U,	// BDZp
    0U,	// BL
    0U,	// BL8
    0U,	// BL8_NOP
    0U,	// BL8_NOP_RM
    0U,	// BL8_NOP_TLS
    0U,	// BL8_NOTOC
    0U,	// BL8_NOTOC_RM
    0U,	// BL8_NOTOC_TLS
    0U,	// BL8_RM
    0U,	// BL8_TLS
    0U,	// BL8_TLS_
    0U,	// BLA
    0U,	// BLA8
    0U,	// BLA8_NOP
    0U,	// BLA8_NOP_RM
    0U,	// BLA8_RM
    0U,	// BLA_RM
    0U,	// BLR
    0U,	// BLR8
    0U,	// BLRL
    0U,	// BL_NOP
    0U,	// BL_NOP_RM
    0U,	// BL_RM
    0U,	// BL_TLS
    70U,	// BPERMD
    70U,	// BRINC
    70U,	// CFUGED
    0U,	// CLRBHRB
    70U,	// CMPB
    70U,	// CMPB8
    70U,	// CMPD
    4U,	// CMPDI
    70U,	// CMPEQB
    70U,	// CMPLD
    8U,	// CMPLDI
    70U,	// CMPLW
    8U,	// CMPLWI
    262U,	// CMPRB
    262U,	// CMPRB8
    70U,	// CMPW
    4U,	// CMPWI
    0U,	// CNTLZD
    70U,	// CNTLZDM
    0U,	// CNTLZD_rec
    0U,	// CNTLZW
    0U,	// CNTLZW8
    0U,	// CNTLZW8_rec
    0U,	// CNTLZW_rec
    0U,	// CNTTZD
    70U,	// CNTTZDM
    0U,	// CNTTZD_rec
    0U,	// CNTTZW
    0U,	// CNTTZW8
    0U,	// CNTTZW8_rec
    0U,	// CNTTZW_rec
    0U,	// CP_ABORT
    0U,	// CP_COPY
    0U,	// CP_COPY8
    74U,	// CP_PASTE8_rec
    74U,	// CP_PASTE_rec
    0U,	// CR6SET
    0U,	// CR6UNSET
    70U,	// CRAND
    70U,	// CRANDC
    70U,	// CREQV
    70U,	// CRNAND
    70U,	// CRNOR
    70U,	// CROR
    70U,	// CRORC
    12U,	// CRSET
    12U,	// CRUNSET
    70U,	// CRXOR
    0U,	// CTRL_DEP
    0U,	// DARN
    0U,	// DCBA
    0U,	// DCBF
    0U,	// DCBFEP
    0U,	// DCBI
    0U,	// DCBST
    0U,	// DCBSTEP
    0U,	// DCBT
    0U,	// DCBTEP
    0U,	// DCBTST
    0U,	// DCBTSTEP
    0U,	// DCBZ
    0U,	// DCBZEP
    0U,	// DCBZL
    0U,	// DCBZLEP
    0U,	// DCCCI
    70U,	// DIVD
    70U,	// DIVDE
    70U,	// DIVDEO
    70U,	// DIVDEO_rec
    70U,	// DIVDEU
    70U,	// DIVDEUO
    70U,	// DIVDEUO_rec
    70U,	// DIVDEU_rec
    70U,	// DIVDE_rec
    70U,	// DIVDO
    70U,	// DIVDO_rec
    70U,	// DIVDU
    70U,	// DIVDUO
    70U,	// DIVDUO_rec
    70U,	// DIVDU_rec
    70U,	// DIVD_rec
    70U,	// DIVW
    70U,	// DIVWE
    70U,	// DIVWEO
    70U,	// DIVWEO_rec
    70U,	// DIVWEU
    70U,	// DIVWEUO
    70U,	// DIVWEUO_rec
    70U,	// DIVWEU_rec
    70U,	// DIVWE_rec
    70U,	// DIVWO
    70U,	// DIVWO_rec
    70U,	// DIVWU
    70U,	// DIVWUO
    70U,	// DIVWUO_rec
    70U,	// DIVWU_rec
    70U,	// DIVW_rec
    0U,	// DSS
    0U,	// DSSALL
    14U,	// DST
    14U,	// DST64
    14U,	// DSTST
    14U,	// DSTST64
    14U,	// DSTSTT
    14U,	// DSTSTT64
    14U,	// DSTT
    14U,	// DSTT64
    0U,	// DYNALLOC
    0U,	// DYNALLOC8
    0U,	// DYNAREAOFFSET
    0U,	// DYNAREAOFFSET8
    0U,	// DecreaseCTR8Pseudo
    0U,	// DecreaseCTRPseudo
    0U,	// EFDABS
    70U,	// EFDADD
    0U,	// EFDCFS
    0U,	// EFDCFSF
    0U,	// EFDCFSI
    0U,	// EFDCFSID
    0U,	// EFDCFUF
    0U,	// EFDCFUI
    0U,	// EFDCFUID
    70U,	// EFDCMPEQ
    70U,	// EFDCMPGT
    70U,	// EFDCMPLT
    0U,	// EFDCTSF
    0U,	// EFDCTSI
    0U,	// EFDCTSIDZ
    0U,	// EFDCTSIZ
    0U,	// EFDCTUF
    0U,	// EFDCTUI
    0U,	// EFDCTUIDZ
    0U,	// EFDCTUIZ
    70U,	// EFDDIV
    70U,	// EFDMUL
    0U,	// EFDNABS
    0U,	// EFDNEG
    70U,	// EFDSUB
    70U,	// EFDTSTEQ
    70U,	// EFDTSTGT
    70U,	// EFDTSTLT
    0U,	// EFSABS
    70U,	// EFSADD
    0U,	// EFSCFD
    0U,	// EFSCFSF
    0U,	// EFSCFSI
    0U,	// EFSCFUF
    0U,	// EFSCFUI
    70U,	// EFSCMPEQ
    70U,	// EFSCMPGT
    70U,	// EFSCMPLT
    0U,	// EFSCTSF
    0U,	// EFSCTSI
    0U,	// EFSCTSIZ
    0U,	// EFSCTUF
    0U,	// EFSCTUI
    0U,	// EFSCTUIZ
    70U,	// EFSDIV
    70U,	// EFSMUL
    0U,	// EFSNABS
    0U,	// EFSNEG
    70U,	// EFSSUB
    70U,	// EFSTSTEQ
    70U,	// EFSTSTGT
    70U,	// EFSTSTLT
    0U,	// EH_SjLj_LongJmp32
    0U,	// EH_SjLj_LongJmp64
    0U,	// EH_SjLj_SetJmp32
    0U,	// EH_SjLj_SetJmp64
    0U,	// EH_SjLj_Setup
    70U,	// EQV
    70U,	// EQV8
    70U,	// EQV8_rec
    70U,	// EQV_rec
    0U,	// EVABS
    80U,	// EVADDIW
    0U,	// EVADDSMIAAW
    0U,	// EVADDSSIAAW
    0U,	// EVADDUMIAAW
    0U,	// EVADDUSIAAW
    70U,	// EVADDW
    70U,	// EVAND
    70U,	// EVANDC
    70U,	// EVCMPEQ
    70U,	// EVCMPGTS
    70U,	// EVCMPGTU
    70U,	// EVCMPLTS
    70U,	// EVCMPLTU
    0U,	// EVCNTLSW
    0U,	// EVCNTLZW
    70U,	// EVDIVWS
    70U,	// EVDIVWU
    70U,	// EVEQV
    0U,	// EVEXTSB
    0U,	// EVEXTSH
    0U,	// EVFSABS
    70U,	// EVFSADD
    0U,	// EVFSCFSF
    0U,	// EVFSCFSI
    0U,	// EVFSCFUF
    0U,	// EVFSCFUI
    70U,	// EVFSCMPEQ
    70U,	// EVFSCMPGT
    70U,	// EVFSCMPLT
    0U,	// EVFSCTSF
    0U,	// EVFSCTSI
    0U,	// EVFSCTSIZ
    0U,	// EVFSCTUF
    0U,	// EVFSCTUI
    0U,	// EVFSCTUIZ
    70U,	// EVFSDIV
    70U,	// EVFSMUL
    0U,	// EVFSNABS
    0U,	// EVFSNEG
    70U,	// EVFSSUB
    70U,	// EVFSTSTEQ
    70U,	// EVFSTSTGT
    70U,	// EVFSTSTLT
    0U,	// EVLDD
    0U,	// EVLDDX
    0U,	// EVLDH
    0U,	// EVLDHX
    0U,	// EVLDW
    0U,	// EVLDWX
    0U,	// EVLHHESPLAT
    0U,	// EVLHHESPLATX
    0U,	// EVLHHOSSPLAT
    0U,	// EVLHHOSSPLATX
    0U,	// EVLHHOUSPLAT
    0U,	// EVLHHOUSPLATX
    0U,	// EVLWHE
    0U,	// EVLWHEX
    0U,	// EVLWHOS
    0U,	// EVLWHOSX
    0U,	// EVLWHOU
    0U,	// EVLWHOUX
    0U,	// EVLWHSPLAT
    0U,	// EVLWHSPLATX
    0U,	// EVLWWSPLAT
    0U,	// EVLWWSPLATX
    70U,	// EVMERGEHI
    70U,	// EVMERGEHILO
    70U,	// EVMERGELO
    70U,	// EVMERGELOHI
    70U,	// EVMHEGSMFAA
    70U,	// EVMHEGSMFAN
    70U,	// EVMHEGSMIAA
    70U,	// EVMHEGSMIAN
    70U,	// EVMHEGUMIAA
    70U,	// EVMHEGUMIAN
    70U,	// EVMHESMF
    70U,	// EVMHESMFA
    70U,	// EVMHESMFAAW
    70U,	// EVMHESMFANW
    70U,	// EVMHESMI
    70U,	// EVMHESMIA
    70U,	// EVMHESMIAAW
    70U,	// EVMHESMIANW
    70U,	// EVMHESSF
    70U,	// EVMHESSFA
    70U,	// EVMHESSFAAW
    70U,	// EVMHESSFANW
    70U,	// EVMHESSIAAW
    70U,	// EVMHESSIANW
    70U,	// EVMHEUMI
    70U,	// EVMHEUMIA
    70U,	// EVMHEUMIAAW
    70U,	// EVMHEUMIANW
    70U,	// EVMHEUSIAAW
    70U,	// EVMHEUSIANW
    70U,	// EVMHOGSMFAA
    70U,	// EVMHOGSMFAN
    70U,	// EVMHOGSMIAA
    70U,	// EVMHOGSMIAN
    70U,	// EVMHOGUMIAA
    70U,	// EVMHOGUMIAN
    70U,	// EVMHOSMF
    70U,	// EVMHOSMFA
    70U,	// EVMHOSMFAAW
    70U,	// EVMHOSMFANW
    70U,	// EVMHOSMI
    70U,	// EVMHOSMIA
    70U,	// EVMHOSMIAAW
    70U,	// EVMHOSMIANW
    70U,	// EVMHOSSF
    70U,	// EVMHOSSFA
    70U,	// EVMHOSSFAAW
    70U,	// EVMHOSSFANW
    70U,	// EVMHOSSIAAW
    70U,	// EVMHOSSIANW
    70U,	// EVMHOUMI
    70U,	// EVMHOUMIA
    70U,	// EVMHOUMIAAW
    70U,	// EVMHOUMIANW
    70U,	// EVMHOUSIAAW
    70U,	// EVMHOUSIANW
    0U,	// EVMRA
    70U,	// EVMWHSMF
    70U,	// EVMWHSMFA
    70U,	// EVMWHSMI
    70U,	// EVMWHSMIA
    70U,	// EVMWHSSF
    70U,	// EVMWHSSFA
    70U,	// EVMWHUMI
    70U,	// EVMWHUMIA
    70U,	// EVMWLSMIAAW
    70U,	// EVMWLSMIANW
    70U,	// EVMWLSSIAAW
    70U,	// EVMWLSSIANW
    70U,	// EVMWLUMI
    70U,	// EVMWLUMIA
    70U,	// EVMWLUMIAAW
    70U,	// EVMWLUMIANW
    70U,	// EVMWLUSIAAW
    70U,	// EVMWLUSIANW
    70U,	// EVMWSMF
    70U,	// EVMWSMFA
    70U,	// EVMWSMFAA
    70U,	// EVMWSMFAN
    70U,	// EVMWSMI
    70U,	// EVMWSMIA
    70U,	// EVMWSMIAA
    70U,	// EVMWSMIAN
    70U,	// EVMWSSF
    70U,	// EVMWSSFA
    70U,	// EVMWSSFAA
    70U,	// EVMWSSFAN
    70U,	// EVMWUMI
    70U,	// EVMWUMIA
    70U,	// EVMWUMIAA
    70U,	// EVMWUMIAN
    70U,	// EVNAND
    0U,	// EVNEG
    70U,	// EVNOR
    70U,	// EVOR
    70U,	// EVORC
    70U,	// EVRLW
    66U,	// EVRLWI
    0U,	// EVRNDW
    0U,	// EVSEL
    70U,	// EVSLW
    66U,	// EVSLWI
    0U,	// EVSPLATFI
    0U,	// EVSPLATI
    66U,	// EVSRWIS
    66U,	// EVSRWIU
    70U,	// EVSRWS
    70U,	// EVSRWU
    0U,	// EVSTDD
    0U,	// EVSTDDX
    0U,	// EVSTDH
    0U,	// EVSTDHX
    0U,	// EVSTDW
    0U,	// EVSTDWX
    0U,	// EVSTWHE
    0U,	// EVSTWHEX
    0U,	// EVSTWHO
    0U,	// EVSTWHOX
    0U,	// EVSTWWE
    0U,	// EVSTWWEX
    0U,	// EVSTWWO
    0U,	// EVSTWWOX
    0U,	// EVSUBFSMIAAW
    0U,	// EVSUBFSSIAAW
    0U,	// EVSUBFUMIAAW
    0U,	// EVSUBFUSIAAW
    70U,	// EVSUBFW
    70U,	// EVSUBIFW
    70U,	// EVXOR
    0U,	// EXTSB
    0U,	// EXTSB8
    0U,	// EXTSB8_32_64
    0U,	// EXTSB8_rec
    0U,	// EXTSB_rec
    0U,	// EXTSH
    0U,	// EXTSH8
    0U,	// EXTSH8_32_64
    0U,	// EXTSH8_rec
    0U,	// EXTSH_rec
    0U,	// EXTSW
    64U,	// EXTSWSLI
    64U,	// EXTSWSLI_32_64
    64U,	// EXTSWSLI_32_64_rec
    64U,	// EXTSWSLI_rec
    0U,	// EXTSW_32
    0U,	// EXTSW_32_64
    0U,	// EXTSW_32_64_rec
    0U,	// EXTSW_rec
    0U,	// EnforceIEIO
    0U,	// FABSD
    0U,	// FABSD_rec
    0U,	// FABSS
    0U,	// FABSS_rec
    70U,	// FADD
    70U,	// FADDS
    70U,	// FADDS_rec
    70U,	// FADD_rec
    0U,	// FADDrtz
    0U,	// FCFID
    0U,	// FCFIDS
    0U,	// FCFIDS_rec
    0U,	// FCFIDU
    0U,	// FCFIDUS
    0U,	// FCFIDUS_rec
    0U,	// FCFIDU_rec
    0U,	// FCFID_rec
    70U,	// FCMPOD
    70U,	// FCMPOS
    70U,	// FCMPUD
    70U,	// FCMPUS
    70U,	// FCPSGND
    70U,	// FCPSGND_rec
    70U,	// FCPSGNS
    70U,	// FCPSGNS_rec
    0U,	// FCTID
    0U,	// FCTIDU
    0U,	// FCTIDUZ
    0U,	// FCTIDUZ_rec
    0U,	// FCTIDU_rec
    0U,	// FCTIDZ
    0U,	// FCTIDZ_rec
    0U,	// FCTID_rec
    0U,	// FCTIW
    0U,	// FCTIWU
    0U,	// FCTIWUZ
    0U,	// FCTIWUZ_rec
    0U,	// FCTIWU_rec
    0U,	// FCTIWZ
    0U,	// FCTIWZ_rec
    0U,	// FCTIW_rec
    70U,	// FDIV
    70U,	// FDIVS
    70U,	// FDIVS_rec
    70U,	// FDIV_rec
    262U,	// FMADD
    262U,	// FMADDS
    262U,	// FMADDS_rec
    262U,	// FMADD_rec
    0U,	// FMR
    0U,	// FMR_rec
    262U,	// FMSUB
    262U,	// FMSUBS
    262U,	// FMSUBS_rec
    262U,	// FMSUB_rec
    70U,	// FMUL
    70U,	// FMULS
    70U,	// FMULS_rec
    70U,	// FMUL_rec
    0U,	// FNABSD
    0U,	// FNABSD_rec
    0U,	// FNABSS
    0U,	// FNABSS_rec
    0U,	// FNEGD
    0U,	// FNEGD_rec
    0U,	// FNEGS
    0U,	// FNEGS_rec
    262U,	// FNMADD
    262U,	// FNMADDS
    262U,	// FNMADDS_rec
    262U,	// FNMADD_rec
    262U,	// FNMSUB
    262U,	// FNMSUBS
    262U,	// FNMSUBS_rec
    262U,	// FNMSUB_rec
    0U,	// FRE
    0U,	// FRES
    0U,	// FRES_rec
    0U,	// FRE_rec
    0U,	// FRIMD
    0U,	// FRIMD_rec
    0U,	// FRIMS
    0U,	// FRIMS_rec
    0U,	// FRIND
    0U,	// FRIND_rec
    0U,	// FRINS
    0U,	// FRINS_rec
    0U,	// FRIPD
    0U,	// FRIPD_rec
    0U,	// FRIPS
    0U,	// FRIPS_rec
    0U,	// FRIZD
    0U,	// FRIZD_rec
    0U,	// FRIZS
    0U,	// FRIZS_rec
    0U,	// FRSP
    0U,	// FRSP_rec
    0U,	// FRSQRTE
    0U,	// FRSQRTES
    0U,	// FRSQRTES_rec
    0U,	// FRSQRTE_rec
    262U,	// FSELD
    262U,	// FSELD_rec
    262U,	// FSELS
    262U,	// FSELS_rec
    0U,	// FSQRT
    0U,	// FSQRTS
    0U,	// FSQRTS_rec
    0U,	// FSQRT_rec
    70U,	// FSUB
    70U,	// FSUBS
    70U,	// FSUBS_rec
    70U,	// FSUB_rec
    70U,	// FTDIV
    0U,	// FTSQRT
    0U,	// GETtlsADDR
    0U,	// GETtlsADDR32
    0U,	// GETtlsADDR32AIX
    0U,	// GETtlsADDR64AIX
    0U,	// GETtlsADDRPCREL
    0U,	// GETtlsldADDR
    0U,	// GETtlsldADDR32
    0U,	// GETtlsldADDRPCREL
    0U,	// HASHCHK
    0U,	// HASHCHK8
    0U,	// HASHCHKP
    0U,	// HASHCHKP8
    0U,	// HASHST
    0U,	// HASHST8
    0U,	// HASHSTP
    0U,	// HASHSTP8
    0U,	// HRFID
    0U,	// ICBI
    0U,	// ICBIEP
    0U,	// ICBLC
    0U,	// ICBLQ
    0U,	// ICBT
    0U,	// ICBTLS
    0U,	// ICCCI
    262U,	// ISEL
    262U,	// ISEL8
    0U,	// ISYNC
    0U,	// LA
    0U,	// LA8
    0U,	// LBARX
    1U,	// LBARXL
    0U,	// LBEPX
    0U,	// LBZ
    0U,	// LBZ8
    70U,	// LBZCIX
    0U,	// LBZU
    0U,	// LBZU8
    0U,	// LBZUX
    0U,	// LBZUX8
    0U,	// LBZX
    0U,	// LBZX8
    70U,	// LBZXTLS
    70U,	// LBZXTLS_
    70U,	// LBZXTLS_32
    0U,	// LD
    0U,	// LDARX
    1U,	// LDARXL
    66U,	// LDAT
    0U,	// LDBRX
    70U,	// LDCIX
    0U,	// LDU
    0U,	// LDUX
    0U,	// LDX
    70U,	// LDXTLS
    70U,	// LDXTLS_
    0U,	// LDgotTprelL
    0U,	// LDgotTprelL32
    0U,	// LDtoc
    0U,	// LDtocBA
    0U,	// LDtocCPT
    0U,	// LDtocJTI
    0U,	// LDtocL
    0U,	// LFD
    0U,	// LFDEPX
    0U,	// LFDU
    0U,	// LFDUX
    0U,	// LFDX
    0U,	// LFIWAX
    0U,	// LFIWZX
    0U,	// LFS
    0U,	// LFSU
    0U,	// LFSUX
    0U,	// LFSX
    0U,	// LHA
    0U,	// LHA8
    0U,	// LHARX
    1U,	// LHARXL
    0U,	// LHAU
    0U,	// LHAU8
    0U,	// LHAUX
    0U,	// LHAUX8
    0U,	// LHAX
    0U,	// LHAX8
    0U,	// LHBRX
    0U,	// LHBRX8
    0U,	// LHEPX
    0U,	// LHZ
    0U,	// LHZ8
    70U,	// LHZCIX
    0U,	// LHZU
    0U,	// LHZU8
    0U,	// LHZUX
    0U,	// LHZUX8
    0U,	// LHZX
    0U,	// LHZX8
    70U,	// LHZXTLS
    70U,	// LHZXTLS_
    70U,	// LHZXTLS_32
    0U,	// LI
    0U,	// LI8
    0U,	// LIS
    0U,	// LIS8
    0U,	// LMW
    0U,	// LQ
    0U,	// LQARX
    1U,	// LQARXL
    0U,	// LQX_PSEUDO
    66U,	// LSWI
    0U,	// LVEBX
    0U,	// LVEHX
    0U,	// LVEWX
    0U,	// LVSL
    0U,	// LVSR
    0U,	// LVX
    0U,	// LVXL
    0U,	// LWA
    0U,	// LWARX
    1U,	// LWARXL
    66U,	// LWAT
    0U,	// LWAUX
    0U,	// LWAX
    0U,	// LWAX_32
    0U,	// LWA_32
    0U,	// LWBRX
    0U,	// LWBRX8
    0U,	// LWEPX
    0U,	// LWZ
    0U,	// LWZ8
    70U,	// LWZCIX
    0U,	// LWZU
    0U,	// LWZU8
    0U,	// LWZUX
    0U,	// LWZUX8
    0U,	// LWZX
    0U,	// LWZX8
    70U,	// LWZXTLS
    70U,	// LWZXTLS_
    70U,	// LWZXTLS_32
    0U,	// LWZtoc
    0U,	// LWZtocL
    0U,	// LXSD
    0U,	// LXSDX
    0U,	// LXSIBZX
    0U,	// LXSIHZX
    0U,	// LXSIWAX
    0U,	// LXSIWZX
    0U,	// LXSSP
    0U,	// LXSSPX
    0U,	// LXV
    0U,	// LXVB16X
    0U,	// LXVD2X
    0U,	// LXVDSX
    0U,	// LXVH8X
    0U,	// LXVKQ
    70U,	// LXVL
    70U,	// LXVLL
    0U,	// LXVP
    0U,	// LXVPX
    0U,	// LXVRBX
    0U,	// LXVRDX
    0U,	// LXVRHX
    0U,	// LXVRWX
    0U,	// LXVW4X
    0U,	// LXVWSX
    0U,	// LXVX
    262U,	// MADDHD
    262U,	// MADDHDU
    262U,	// MADDLD
    262U,	// MADDLD8
    0U,	// MBAR
    0U,	// MCRF
    0U,	// MCRFS
    0U,	// MCRXRX
    0U,	// MFBHRBE
    0U,	// MFCR
    0U,	// MFCR8
    0U,	// MFCTR
    0U,	// MFCTR8
    0U,	// MFDCR
    0U,	// MFFS
    0U,	// MFFSCDRN
    0U,	// MFFSCDRNI
    0U,	// MFFSCE
    0U,	// MFFSCRN
    0U,	// MFFSCRNI
    0U,	// MFFSL
    0U,	// MFFS_rec
    0U,	// MFLR
    0U,	// MFLR8
    0U,	// MFMSR
    0U,	// MFOCRF
    0U,	// MFOCRF8
    0U,	// MFPMR
    0U,	// MFSPR
    0U,	// MFSPR8
    0U,	// MFSR
    0U,	// MFSRIN
    0U,	// MFTB
    0U,	// MFTB8
    0U,	// MFUDSCR
    0U,	// MFVRD
    0U,	// MFVRSAVE
    0U,	// MFVRSAVEv
    0U,	// MFVRWZ
    0U,	// MFVSCR
    0U,	// MFVSRD
    0U,	// MFVSRLD
    0U,	// MFVSRWZ
    70U,	// MODSD
    70U,	// MODSW
    70U,	// MODUD
    70U,	// MODUW
    0U,	// MSGSYNC
    0U,	// MSYNC
    0U,	// MTCRF
    0U,	// MTCRF8
    0U,	// MTCTR
    0U,	// MTCTR8
    0U,	// MTCTR8Pseudo
    0U,	// MTCTR8loop
    0U,	// MTCTRPseudo
    0U,	// MTCTRloop
    0U,	// MTDCR
    0U,	// MTFSB0
    0U,	// MTFSB1
    266U,	// MTFSF
    0U,	// MTFSFI
    0U,	// MTFSFI_rec
    0U,	// MTFSFIb
    266U,	// MTFSF_rec
    0U,	// MTFSFb
    0U,	// MTLR
    0U,	// MTLR8
    0U,	// MTMSR
    0U,	// MTMSRD
    0U,	// MTOCRF
    0U,	// MTOCRF8
    0U,	// MTPMR
    0U,	// MTSPR
    0U,	// MTSPR8
    0U,	// MTSR
    0U,	// MTSRIN
    0U,	// MTUDSCR
    0U,	// MTVRD
    0U,	// MTVRSAVE
    0U,	// MTVRSAVEv
    0U,	// MTVRWA
    0U,	// MTVRWZ
    0U,	// MTVSCR
    0U,	// MTVSRBM
    0U,	// MTVSRBMI
    0U,	// MTVSRD
    70U,	// MTVSRDD
    0U,	// MTVSRDM
    0U,	// MTVSRHM
    0U,	// MTVSRQM
    0U,	// MTVSRWA
    0U,	// MTVSRWM
    0U,	// MTVSRWS
    0U,	// MTVSRWZ
    70U,	// MULHD
    70U,	// MULHDU
    70U,	// MULHDU_rec
    70U,	// MULHD_rec
    70U,	// MULHW
    70U,	// MULHWU
    70U,	// MULHWU_rec
    70U,	// MULHW_rec
    70U,	// MULLD
    70U,	// MULLDO
    70U,	// MULLDO_rec
    70U,	// MULLD_rec
    4U,	// MULLI
    4U,	// MULLI8
    70U,	// MULLW
    70U,	// MULLWO
    70U,	// MULLWO_rec
    70U,	// MULLW_rec
    0U,	// MoveGOTtoLR
    0U,	// MovePCtoLR
    0U,	// MovePCtoLR8
    70U,	// NAND
    70U,	// NAND8
    70U,	// NAND8_rec
    70U,	// NAND_rec
    0U,	// NAP
    0U,	// NEG
    0U,	// NEG8
    0U,	// NEG8O
    0U,	// NEG8O_rec
    0U,	// NEG8_rec
    0U,	// NEGO
    0U,	// NEGO_rec
    0U,	// NEG_rec
    0U,	// NOP
    0U,	// NOP_GT_PWR6
    0U,	// NOP_GT_PWR7
    70U,	// NOR
    70U,	// NOR8
    70U,	// NOR8_rec
    70U,	// NOR_rec
    70U,	// OR
    70U,	// OR8
    70U,	// OR8_rec
    70U,	// ORC
    70U,	// ORC8
    70U,	// ORC8_rec
    70U,	// ORC_rec
    8U,	// ORI
    8U,	// ORI8
    8U,	// ORIS
    8U,	// ORIS8
    70U,	// OR_rec
    18U,	// PADDI
    18U,	// PADDI8
    0U,	// PADDI8pc
    0U,	// PADDIdtprel
    0U,	// PADDIpc
    70U,	// PDEPD
    70U,	// PEXTD
    0U,	// PLBZ
    0U,	// PLBZ8
    0U,	// PLBZ8pc
    0U,	// PLBZpc
    0U,	// PLD
    0U,	// PLDpc
    0U,	// PLFD
    0U,	// PLFDpc
    0U,	// PLFS
    0U,	// PLFSpc
    0U,	// PLHA
    0U,	// PLHA8
    0U,	// PLHA8pc
    0U,	// PLHApc
    0U,	// PLHZ
    0U,	// PLHZ8
    0U,	// PLHZ8pc
    0U,	// PLHZpc
    0U,	// PLI
    0U,	// PLI8
    0U,	// PLWA
    0U,	// PLWA8
    0U,	// PLWA8pc
    0U,	// PLWApc
    0U,	// PLWZ
    0U,	// PLWZ8
    0U,	// PLWZ8pc
    0U,	// PLWZpc
    0U,	// PLXSD
    0U,	// PLXSDpc
    0U,	// PLXSSP
    0U,	// PLXSSPpc
    0U,	// PLXV
    0U,	// PLXVP
    0U,	// PLXVPpc
    0U,	// PLXVpc
    2694U,	// PMXVBF16GER2
    13076U,	// PMXVBF16GER2NN
    13076U,	// PMXVBF16GER2NP
    13076U,	// PMXVBF16GER2PN
    13076U,	// PMXVBF16GER2PP
    2694U,	// PMXVF16GER2
    13076U,	// PMXVF16GER2NN
    13076U,	// PMXVF16GER2NP
    13076U,	// PMXVF16GER2PN
    13076U,	// PMXVF16GER2PP
    2694U,	// PMXVF32GER
    21268U,	// PMXVF32GERNN
    21268U,	// PMXVF32GERNP
    21268U,	// PMXVF32GERPN
    21268U,	// PMXVF32GERPP
    27270U,	// PMXVF64GER
    6932U,	// PMXVF64GERNN
    6932U,	// PMXVF64GERNP
    6932U,	// PMXVF64GERPN
    6932U,	// PMXVF64GERPP
    2694U,	// PMXVI16GER2
    13076U,	// PMXVI16GER2PP
    2694U,	// PMXVI16GER2S
    13076U,	// PMXVI16GER2SPP
    2694U,	// PMXVI4GER8
    13076U,	// PMXVI4GER8PP
    2694U,	// PMXVI8GER4
    13076U,	// PMXVI8GER4PP
    13076U,	// PMXVI8GER4SPP
    0U,	// POPCNTB
    0U,	// POPCNTB8
    0U,	// POPCNTD
    0U,	// POPCNTW
    0U,	// PPC32GOT
    0U,	// PPC32PICGOT
    0U,	// PREPARE_PROBED_ALLOCA_32
    0U,	// PREPARE_PROBED_ALLOCA_64
    0U,	// PREPARE_PROBED_ALLOCA_NEGSIZE_SAME_REG_32
    0U,	// PREPARE_PROBED_ALLOCA_NEGSIZE_SAME_REG_64
    0U,	// PROBED_ALLOCA_32
    0U,	// PROBED_ALLOCA_64
    0U,	// PROBED_STACKALLOC_32
    0U,	// PROBED_STACKALLOC_64
    0U,	// PSTB
    0U,	// PSTB8
    0U,	// PSTB8pc
    0U,	// PSTBpc
    0U,	// PSTD
    0U,	// PSTDpc
    0U,	// PSTFD
    0U,	// PSTFDpc
    0U,	// PSTFS
    0U,	// PSTFSpc
    0U,	// PSTH
    0U,	// PSTH8
    0U,	// PSTH8pc
    0U,	// PSTHpc
    0U,	// PSTW
    0U,	// PSTW8
    0U,	// PSTW8pc
    0U,	// PSTWpc
    0U,	// PSTXSD
    0U,	// PSTXSDpc
    0U,	// PSTXSSP
    0U,	// PSTXSSPpc
    0U,	// PSTXV
    0U,	// PSTXVP
    0U,	// PSTXVPpc
    0U,	// PSTXVpc
    0U,	// PseudoEIEIO
    0U,	// RESTORE_ACC
    0U,	// RESTORE_CR
    0U,	// RESTORE_CRBIT
    0U,	// RESTORE_QUADWORD
    0U,	// RESTORE_UACC
    0U,	// RFCI
    0U,	// RFDI
    0U,	// RFEBB
    0U,	// RFI
    0U,	// RFID
    0U,	// RFMCI
    6U,	// RLDCL
    6U,	// RLDCL_rec
    6U,	// RLDCR
    6U,	// RLDCR_rec
    0U,	// RLDIC
    0U,	// RLDICL
    0U,	// RLDICL_32
    0U,	// RLDICL_32_64
    0U,	// RLDICL_32_rec
    0U,	// RLDICL_rec
    0U,	// RLDICR
    0U,	// RLDICR_32
    0U,	// RLDICR_rec
    0U,	// RLDIC_rec
    22U,	// RLDIMI
    22U,	// RLDIMI_rec
    24U,	// RLWIMI
    24U,	// RLWIMI8
    24U,	// RLWIMI8_rec
    24U,	// RLWIMI_rec
    34946U,	// RLWINM
    34946U,	// RLWINM8
    34946U,	// RLWINM8_rec
    34946U,	// RLWINM_rec
    34950U,	// RLWNM
    34950U,	// RLWNM8
    34950U,	// RLWNM8_rec
    34950U,	// RLWNM_rec
    0U,	// ReadTB
    0U,	// SC
    0U,	// SELECT_CC_F16
    0U,	// SELECT_CC_F4
    0U,	// SELECT_CC_F8
    0U,	// SELECT_CC_I4
    0U,	// SELECT_CC_I8
    0U,	// SELECT_CC_SPE
    0U,	// SELECT_CC_SPE4
    0U,	// SELECT_CC_VRRC
    0U,	// SELECT_CC_VSFRC
    0U,	// SELECT_CC_VSRC
    0U,	// SELECT_CC_VSSRC
    0U,	// SELECT_F16
    0U,	// SELECT_F4
    0U,	// SELECT_F8
    0U,	// SELECT_I4
    0U,	// SELECT_I8
    0U,	// SELECT_SPE
    0U,	// SELECT_SPE4
    0U,	// SELECT_VRRC
    0U,	// SELECT_VSFRC
    0U,	// SELECT_VSRC
    0U,	// SELECT_VSSRC
    0U,	// SETB
    0U,	// SETB8
    0U,	// SETBC
    0U,	// SETBC8
    0U,	// SETBCR
    0U,	// SETBCR8
    0U,	// SETFLM
    0U,	// SETNBC
    0U,	// SETNBC8
    0U,	// SETNBCR
    0U,	// SETNBCR8
    0U,	// SETRND
    0U,	// SETRNDi
    0U,	// SLBFEE_rec
    0U,	// SLBIA
    0U,	// SLBIE
    0U,	// SLBIEG
    0U,	// SLBMFEE
    0U,	// SLBMFEV
    0U,	// SLBMTE
    0U,	// SLBSYNC
    70U,	// SLD
    70U,	// SLD_rec
    70U,	// SLW
    70U,	// SLW8
    70U,	// SLW8_rec
    70U,	// SLW_rec
    0U,	// SPELWZ
    0U,	// SPELWZX
    0U,	// SPESTW
    0U,	// SPESTWX
    0U,	// SPILL_ACC
    0U,	// SPILL_CR
    0U,	// SPILL_CRBIT
    0U,	// SPILL_QUADWORD
    0U,	// SPILL_UACC
    0U,	// SPLIT_QUADWORD
    70U,	// SRAD
    64U,	// SRADI
    64U,	// SRADI_32
    64U,	// SRADI_rec
    70U,	// SRAD_rec
    70U,	// SRAW
    66U,	// SRAWI
    66U,	// SRAWI_rec
    70U,	// SRAW_rec
    70U,	// SRD
    70U,	// SRD_rec
    70U,	// SRW
    70U,	// SRW8
    70U,	// SRW8_rec
    70U,	// SRW_rec
    0U,	// STB
    0U,	// STB8
    70U,	// STBCIX
    0U,	// STBCX
    0U,	// STBEPX
    0U,	// STBU
    0U,	// STBU8
    0U,	// STBUX
    0U,	// STBUX8
    0U,	// STBX
    0U,	// STBX8
    70U,	// STBXTLS
    70U,	// STBXTLS_
    70U,	// STBXTLS_32
    0U,	// STD
    66U,	// STDAT
    0U,	// STDBRX
    70U,	// STDCIX
    0U,	// STDCX
    0U,	// STDU
    0U,	// STDUX
    0U,	// STDX
    70U,	// STDXTLS
    70U,	// STDXTLS_
    0U,	// STFD
    0U,	// STFDEPX
    0U,	// STFDU
    0U,	// STFDUX
    0U,	// STFDX
    0U,	// STFIWX
    0U,	// STFS
    0U,	// STFSU
    0U,	// STFSUX
    0U,	// STFSX
    0U,	// STH
    0U,	// STH8
    0U,	// STHBRX
    70U,	// STHCIX
    0U,	// STHCX
    0U,	// STHEPX
    0U,	// STHU
    0U,	// STHU8
    0U,	// STHUX
    0U,	// STHUX8
    0U,	// STHX
    0U,	// STHX8
    70U,	// STHXTLS
    70U,	// STHXTLS_
    70U,	// STHXTLS_32
    0U,	// STMW
    0U,	// STOP
    0U,	// STQ
    0U,	// STQCX
    0U,	// STQX_PSEUDO
    66U,	// STSWI
    0U,	// STVEBX
    0U,	// STVEHX
    0U,	// STVEWX
    0U,	// STVX
    0U,	// STVXL
    0U,	// STW
    0U,	// STW8
    66U,	// STWAT
    0U,	// STWBRX
    70U,	// STWCIX
    0U,	// STWCX
    0U,	// STWEPX
    0U,	// STWU
    0U,	// STWU8
    0U,	// STWUX
    0U,	// STWUX8
    0U,	// STWX
    0U,	// STWX8
    70U,	// STWXTLS
    70U,	// STWXTLS_
    70U,	// STWXTLS_32
    0U,	// STXSD
    0U,	// STXSDX
    0U,	// STXSIBX
    0U,	// STXSIBXv
    0U,	// STXSIHX
    0U,	// STXSIHXv
    0U,	// STXSIWX
    0U,	// STXSSP
    0U,	// STXSSPX
    0U,	// STXV
    0U,	// STXVB16X
    0U,	// STXVD2X
    0U,	// STXVH8X
    70U,	// STXVL
    70U,	// STXVLL
    0U,	// STXVP
    0U,	// STXVPX
    0U,	// STXVRBX
    0U,	// STXVRDX
    0U,	// STXVRHX
    0U,	// STXVRWX
    0U,	// STXVW4X
    0U,	// STXVX
    70U,	// SUBF
    70U,	// SUBF8
    70U,	// SUBF8O
    70U,	// SUBF8O_rec
    70U,	// SUBF8_rec
    70U,	// SUBFC
    70U,	// SUBFC8
    70U,	// SUBFC8O
    70U,	// SUBFC8O_rec
    70U,	// SUBFC8_rec
    70U,	// SUBFCO
    70U,	// SUBFCO_rec
    70U,	// SUBFC_rec
    70U,	// SUBFE
    70U,	// SUBFE8
    70U,	// SUBFE8O
    70U,	// SUBFE8O_rec
    70U,	// SUBFE8_rec
    70U,	// SUBFEO
    70U,	// SUBFEO_rec
    70U,	// SUBFE_rec
    4U,	// SUBFIC
    4U,	// SUBFIC8
    0U,	// SUBFME
    0U,	// SUBFME8
    0U,	// SUBFME8O
    0U,	// SUBFME8O_rec
    0U,	// SUBFME8_rec
    0U,	// SUBFMEO
    0U,	// SUBFMEO_rec
    0U,	// SUBFME_rec
    70U,	// SUBFO
    70U,	// SUBFO_rec
    0U,	// SUBFZE
    0U,	// SUBFZE8
    0U,	// SUBFZE8O
    0U,	// SUBFZE8O_rec
    0U,	// SUBFZE8_rec
    0U,	// SUBFZEO
    0U,	// SUBFZEO_rec
    0U,	// SUBFZE_rec
    70U,	// SUBF_rec
    0U,	// SYNC
    0U,	// TABORT
    70U,	// TABORTDC
    66U,	// TABORTDCI
    70U,	// TABORTWC
    66U,	// TABORTWCI
    0U,	// TAILB
    0U,	// TAILB8
    0U,	// TAILBA
    0U,	// TAILBA8
    0U,	// TAILBCTR
    0U,	// TAILBCTR8
    0U,	// TBEGIN
    0U,	// TBEGIN_RET
    0U,	// TCHECK
    0U,	// TCHECK_RET
    0U,	// TCRETURNai
    0U,	// TCRETURNai8
    0U,	// TCRETURNdi
    0U,	// TCRETURNdi8
    0U,	// TCRETURNri
    0U,	// TCRETURNri8
    70U,	// TD
    4U,	// TDI
    0U,	// TEND
    0U,	// TLBIA
    0U,	// TLBIE
    0U,	// TLBIEL
    0U,	// TLBIVAX
    0U,	// TLBLD
    0U,	// TLBLI
    0U,	// TLBRE
    70U,	// TLBRE2
    0U,	// TLBSX
    70U,	// TLBSX2
    70U,	// TLBSX2D
    0U,	// TLBSYNC
    0U,	// TLBWE
    70U,	// TLBWE2
    0U,	// TLSGDAIX
    0U,	// TLSGDAIX8
    0U,	// TRAP
    0U,	// TRECHKPT
    0U,	// TRECLAIM
    0U,	// TSR
    70U,	// TW
    4U,	// TWI
    0U,	// UNENCODED_NOP
    0U,	// UpdateGBR
    70U,	// VABSDUB
    70U,	// VABSDUH
    70U,	// VABSDUW
    70U,	// VADDCUQ
    70U,	// VADDCUW
    262U,	// VADDECUQ
    262U,	// VADDEUQM
    70U,	// VADDFP
    70U,	// VADDSBS
    70U,	// VADDSHS
    70U,	// VADDSWS
    70U,	// VADDUBM
    70U,	// VADDUBS
    70U,	// VADDUDM
    70U,	// VADDUHM
    70U,	// VADDUHS
    70U,	// VADDUQM
    70U,	// VADDUWM
    70U,	// VADDUWS
    70U,	// VAND
    70U,	// VANDC
    70U,	// VAVGSB
    70U,	// VAVGSH
    70U,	// VAVGSW
    70U,	// VAVGUB
    70U,	// VAVGUH
    70U,	// VAVGUW
    70U,	// VBPERMD
    70U,	// VBPERMQ
    26U,	// VCFSX
    1U,	// VCFSX_0
    70U,	// VCFUGED
    26U,	// VCFUX
    1U,	// VCFUX_0
    70U,	// VCIPHER
    70U,	// VCIPHERLAST
    70U,	// VCLRLB
    70U,	// VCLRRB
    0U,	// VCLZB
    0U,	// VCLZD
    70U,	// VCLZDM
    0U,	// VCLZH
    0U,	// VCLZLSBB
    0U,	// VCLZW
    70U,	// VCMPBFP
    70U,	// VCMPBFP_rec
    70U,	// VCMPEQFP
    70U,	// VCMPEQFP_rec
    70U,	// VCMPEQUB
    70U,	// VCMPEQUB_rec
    70U,	// VCMPEQUD
    70U,	// VCMPEQUD_rec
    70U,	// VCMPEQUH
    70U,	// VCMPEQUH_rec
    70U,	// VCMPEQUQ
    70U,	// VCMPEQUQ_rec
    70U,	// VCMPEQUW
    70U,	// VCMPEQUW_rec
    70U,	// VCMPGEFP
    70U,	// VCMPGEFP_rec
    70U,	// VCMPGTFP
    70U,	// VCMPGTFP_rec
    70U,	// VCMPGTSB
    70U,	// VCMPGTSB_rec
    70U,	// VCMPGTSD
    70U,	// VCMPGTSD_rec
    70U,	// VCMPGTSH
    70U,	// VCMPGTSH_rec
    70U,	// VCMPGTSQ
    70U,	// VCMPGTSQ_rec
    70U,	// VCMPGTSW
    70U,	// VCMPGTSW_rec
    70U,	// VCMPGTUB
    70U,	// VCMPGTUB_rec
    70U,	// VCMPGTUD
    70U,	// VCMPGTUD_rec
    70U,	// VCMPGTUH
    70U,	// VCMPGTUH_rec
    70U,	// VCMPGTUQ
    70U,	// VCMPGTUQ_rec
    70U,	// VCMPGTUW
    70U,	// VCMPGTUW_rec
    70U,	// VCMPNEB
    70U,	// VCMPNEB_rec
    70U,	// VCMPNEH
    70U,	// VCMPNEH_rec
    70U,	// VCMPNEW
    70U,	// VCMPNEW_rec
    70U,	// VCMPNEZB
    70U,	// VCMPNEZB_rec
    70U,	// VCMPNEZH
    70U,	// VCMPNEZH_rec
    70U,	// VCMPNEZW
    70U,	// VCMPNEZW_rec
    70U,	// VCMPSQ
    70U,	// VCMPUQ
    74U,	// VCNTMBB
    74U,	// VCNTMBD
    74U,	// VCNTMBH
    74U,	// VCNTMBW
    26U,	// VCTSXS
    1U,	// VCTSXS_0
    26U,	// VCTUXS
    1U,	// VCTUXS_0
    0U,	// VCTZB
    0U,	// VCTZD
    70U,	// VCTZDM
    0U,	// VCTZH
    0U,	// VCTZLSBB
    0U,	// VCTZW
    70U,	// VDIVESD
    70U,	// VDIVESQ
    70U,	// VDIVESW
    70U,	// VDIVEUD
    70U,	// VDIVEUQ
    70U,	// VDIVEUW
    70U,	// VDIVSD
    70U,	// VDIVSQ
    70U,	// VDIVSW
    70U,	// VDIVUD
    70U,	// VDIVUQ
    70U,	// VDIVUW
    70U,	// VEQV
    0U,	// VEXPANDBM
    0U,	// VEXPANDDM
    0U,	// VEXPANDHM
    0U,	// VEXPANDQM
    0U,	// VEXPANDWM
    0U,	// VEXPTEFP
    262U,	// VEXTDDVLX
    262U,	// VEXTDDVRX
    262U,	// VEXTDUBVLX
    262U,	// VEXTDUBVRX
    262U,	// VEXTDUHVLX
    262U,	// VEXTDUHVRX
    262U,	// VEXTDUWVLX
    262U,	// VEXTDUWVRX
    0U,	// VEXTRACTBM
    28U,	// VEXTRACTD
    0U,	// VEXTRACTDM
    0U,	// VEXTRACTHM
    0U,	// VEXTRACTQM
    28U,	// VEXTRACTUB
    28U,	// VEXTRACTUH
    28U,	// VEXTRACTUW
    0U,	// VEXTRACTWM
    0U,	// VEXTSB2D
    0U,	// VEXTSB2Ds
    0U,	// VEXTSB2W
    0U,	// VEXTSB2Ws
    0U,	// VEXTSD2Q
    0U,	// VEXTSH2D
    0U,	// VEXTSH2Ds
    0U,	// VEXTSH2W
    0U,	// VEXTSH2Ws
    0U,	// VEXTSW2D
    0U,	// VEXTSW2Ds
    70U,	// VEXTUBLX
    70U,	// VEXTUBRX
    70U,	// VEXTUHLX
    70U,	// VEXTUHRX
    70U,	// VEXTUWLX
    70U,	// VEXTUWRX
    0U,	// VGBBD
    30U,	// VGNB
    84U,	// VINSBLX
    84U,	// VINSBRX
    84U,	// VINSBVLX
    84U,	// VINSBVRX
    0U,	// VINSD
    84U,	// VINSDLX
    84U,	// VINSDRX
    0U,	// VINSERTB
    28U,	// VINSERTD
    0U,	// VINSERTH
    28U,	// VINSERTW
    84U,	// VINSHLX
    84U,	// VINSHRX
    84U,	// VINSHVLX
    84U,	// VINSHVRX
    0U,	// VINSW
    84U,	// VINSWLX
    84U,	// VINSWRX
    84U,	// VINSWVLX
    84U,	// VINSWVRX
    0U,	// VLOGEFP
    262U,	// VMADDFP
    70U,	// VMAXFP
    70U,	// VMAXSB
    70U,	// VMAXSD
    70U,	// VMAXSH
    70U,	// VMAXSW
    70U,	// VMAXUB
    70U,	// VMAXUD
    70U,	// VMAXUH
    70U,	// VMAXUW
    262U,	// VMHADDSHS
    262U,	// VMHRADDSHS
    70U,	// VMINFP
    70U,	// VMINSB
    70U,	// VMINSD
    70U,	// VMINSH
    70U,	// VMINSW
    70U,	// VMINUB
    70U,	// VMINUD
    70U,	// VMINUH
    70U,	// VMINUW
    262U,	// VMLADDUHM
    70U,	// VMODSD
    70U,	// VMODSQ
    70U,	// VMODSW
    70U,	// VMODUD
    70U,	// VMODUQ
    70U,	// VMODUW
    70U,	// VMRGEW
    70U,	// VMRGHB
    70U,	// VMRGHH
    70U,	// VMRGHW
    70U,	// VMRGLB
    70U,	// VMRGLH
    70U,	// VMRGLW
    70U,	// VMRGOW
    262U,	// VMSUMCUD
    262U,	// VMSUMMBM
    262U,	// VMSUMSHM
    262U,	// VMSUMSHS
    262U,	// VMSUMUBM
    262U,	// VMSUMUDM
    262U,	// VMSUMUHM
    262U,	// VMSUMUHS
    0U,	// VMUL10CUQ
    70U,	// VMUL10ECUQ
    70U,	// VMUL10EUQ
    0U,	// VMUL10UQ
    70U,	// VMULESB
    70U,	// VMULESD
    70U,	// VMULESH
    70U,	// VMULESW
    70U,	// VMULEUB
    70U,	// VMULEUD
    70U,	// VMULEUH
    70U,	// VMULEUW
    70U,	// VMULHSD
    70U,	// VMULHSW
    70U,	// VMULHUD
    70U,	// VMULHUW
    70U,	// VMULLD
    70U,	// VMULOSB
    70U,	// VMULOSD
    70U,	// VMULOSH
    70U,	// VMULOSW
    70U,	// VMULOUB
    70U,	// VMULOUD
    70U,	// VMULOUH
    70U,	// VMULOUW
    70U,	// VMULUWM
    70U,	// VNAND
    70U,	// VNCIPHER
    70U,	// VNCIPHERLAST
    0U,	// VNEGD
    0U,	// VNEGW
    262U,	// VNMSUBFP
    70U,	// VNOR
    70U,	// VOR
    70U,	// VORC
    70U,	// VPDEPD
    262U,	// VPERM
    262U,	// VPERMR
    262U,	// VPERMXOR
    70U,	// VPEXTD
    70U,	// VPKPX
    70U,	// VPKSDSS
    70U,	// VPKSDUS
    70U,	// VPKSHSS
    70U,	// VPKSHUS
    70U,	// VPKSWSS
    70U,	// VPKSWUS
    70U,	// VPKUDUM
    70U,	// VPKUDUS
    70U,	// VPKUHUM
    70U,	// VPKUHUS
    70U,	// VPKUWUM
    70U,	// VPKUWUS
    70U,	// VPMSUMB
    70U,	// VPMSUMD
    70U,	// VPMSUMH
    70U,	// VPMSUMW
    0U,	// VPOPCNTB
    0U,	// VPOPCNTD
    0U,	// VPOPCNTH
    0U,	// VPOPCNTW
    0U,	// VPRTYBD
    0U,	// VPRTYBQ
    0U,	// VPRTYBW
    0U,	// VREFP
    0U,	// VRFIM
    0U,	// VRFIN
    0U,	// VRFIP
    0U,	// VRFIZ
    70U,	// VRLB
    70U,	// VRLD
    70U,	// VRLDMI
    70U,	// VRLDNM
    70U,	// VRLH
    70U,	// VRLQ
    70U,	// VRLQMI
    70U,	// VRLQNM
    70U,	// VRLW
    70U,	// VRLWMI
    70U,	// VRLWNM
    0U,	// VRSQRTEFP
    0U,	// VSBOX
    262U,	// VSEL
    650U,	// VSHASIGMAD
    650U,	// VSHASIGMAW
    70U,	// VSL
    70U,	// VSLB
    70U,	// VSLD
    902U,	// VSLDBI
    646U,	// VSLDOI
    70U,	// VSLH
    70U,	// VSLO
    70U,	// VSLQ
    70U,	// VSLV
    70U,	// VSLW
    26U,	// VSPLTB
    26U,	// VSPLTBs
    26U,	// VSPLTH
    26U,	// VSPLTHs
    0U,	// VSPLTISB
    0U,	// VSPLTISH
    0U,	// VSPLTISW
    26U,	// VSPLTW
    70U,	// VSR
    70U,	// VSRAB
    70U,	// VSRAD
    70U,	// VSRAH
    70U,	// VSRAQ
    70U,	// VSRAW
    70U,	// VSRB
    70U,	// VSRD
    902U,	// VSRDBI
    70U,	// VSRH
    70U,	// VSRO
    70U,	// VSRQ
    70U,	// VSRV
    70U,	// VSRW
    0U,	// VSTRIBL
    0U,	// VSTRIBL_rec
    0U,	// VSTRIBR
    0U,	// VSTRIBR_rec
    0U,	// VSTRIHL
    0U,	// VSTRIHL_rec
    0U,	// VSTRIHR
    0U,	// VSTRIHR_rec
    70U,	// VSUBCUQ
    70U,	// VSUBCUW
    262U,	// VSUBECUQ
    262U,	// VSUBEUQM
    70U,	// VSUBFP
    70U,	// VSUBSBS
    70U,	// VSUBSHS
    70U,	// VSUBSWS
    70U,	// VSUBUBM
    70U,	// VSUBUBS
    70U,	// VSUBUDM
    70U,	// VSUBUHM
    70U,	// VSUBUHS
    70U,	// VSUBUQM
    70U,	// VSUBUWM
    70U,	// VSUBUWS
    70U,	// VSUM2SWS
    70U,	// VSUM4SBS
    70U,	// VSUM4SHS
    70U,	// VSUM4UBS
    70U,	// VSUMSWS
    0U,	// VUPKHPX
    0U,	// VUPKHSB
    0U,	// VUPKHSH
    0U,	// VUPKHSW
    0U,	// VUPKLPX
    0U,	// VUPKLSB
    0U,	// VUPKLSH
    0U,	// VUPKLSW
    70U,	// VXOR
    12U,	// V_SET0
    12U,	// V_SET0B
    12U,	// V_SET0H
    0U,	// V_SETALLONES
    0U,	// V_SETALLONESB
    0U,	// V_SETALLONESH
    0U,	// WAIT
    0U,	// WRTEE
    0U,	// WRTEEI
    70U,	// XOR
    70U,	// XOR8
    70U,	// XOR8_rec
    8U,	// XORI
    8U,	// XORI8
    8U,	// XORIS
    8U,	// XORIS8
    70U,	// XOR_rec
    0U,	// XSABSDP
    0U,	// XSABSQP
    70U,	// XSADDDP
    70U,	// XSADDQP
    70U,	// XSADDQPO
    70U,	// XSADDSP
    70U,	// XSCMPEQDP
    70U,	// XSCMPEXPDP
    70U,	// XSCMPEXPQP
    70U,	// XSCMPGEDP
    70U,	// XSCMPGTDP
    70U,	// XSCMPODP
    70U,	// XSCMPOQP
    70U,	// XSCMPUDP
    70U,	// XSCMPUQP
    70U,	// XSCPSGNDP
    70U,	// XSCPSGNQP
    0U,	// XSCVDPHP
    0U,	// XSCVDPQP
    0U,	// XSCVDPSP
    0U,	// XSCVDPSPN
    0U,	// XSCVDPSXDS
    0U,	// XSCVDPSXDSs
    0U,	// XSCVDPSXWS
    0U,	// XSCVDPSXWSs
    0U,	// XSCVDPUXDS
    0U,	// XSCVDPUXDSs
    0U,	// XSCVDPUXWS
    0U,	// XSCVDPUXWSs
    0U,	// XSCVHPDP
    0U,	// XSCVQPDP
    0U,	// XSCVQPDPO
    0U,	// XSCVQPSDZ
    0U,	// XSCVQPSQZ
    0U,	// XSCVQPSWZ
    0U,	// XSCVQPUDZ
    0U,	// XSCVQPUQZ
    0U,	// XSCVQPUWZ
    0U,	// XSCVSDQP
    0U,	// XSCVSPDP
    0U,	// XSCVSPDPN
    0U,	// XSCVSQQP
    0U,	// XSCVSXDDP
    0U,	// XSCVSXDSP
    0U,	// XSCVUDQP
    0U,	// XSCVUQQP
    0U,	// XSCVUXDDP
    0U,	// XSCVUXDSP
    70U,	// XSDIVDP
    70U,	// XSDIVQP
    70U,	// XSDIVQPO
    70U,	// XSDIVSP
    70U,	// XSIEXPDP
    70U,	// XSIEXPQP
    84U,	// XSMADDADP
    84U,	// XSMADDASP
    84U,	// XSMADDMDP
    84U,	// XSMADDMSP
    84U,	// XSMADDQP
    84U,	// XSMADDQPO
    70U,	// XSMAXCDP
    70U,	// XSMAXCQP
    70U,	// XSMAXDP
    70U,	// XSMAXJDP
    70U,	// XSMINCDP
    70U,	// XSMINCQP
    70U,	// XSMINDP
    70U,	// XSMINJDP
    84U,	// XSMSUBADP
    84U,	// XSMSUBASP
    84U,	// XSMSUBMDP
    84U,	// XSMSUBMSP
    84U,	// XSMSUBQP
    84U,	// XSMSUBQPO
    70U,	// XSMULDP
    70U,	// XSMULQP
    70U,	// XSMULQPO
    70U,	// XSMULSP
    0U,	// XSNABSDP
    0U,	// XSNABSDPs
    0U,	// XSNABSQP
    0U,	// XSNEGDP
    0U,	// XSNEGQP
    84U,	// XSNMADDADP
    84U,	// XSNMADDASP
    84U,	// XSNMADDMDP
    84U,	// XSNMADDMSP
    84U,	// XSNMADDQP
    84U,	// XSNMADDQPO
    84U,	// XSNMSUBADP
    84U,	// XSNMSUBASP
    84U,	// XSNMSUBMDP
    84U,	// XSNMSUBMSP
    84U,	// XSNMSUBQP
    84U,	// XSNMSUBQPO
    0U,	// XSRDPI
    0U,	// XSRDPIC
    0U,	// XSRDPIM
    0U,	// XSRDPIP
    0U,	// XSRDPIZ
    0U,	// XSREDP
    0U,	// XSRESP
    0U,	// XSRQPI
    0U,	// XSRQPIX
    0U,	// XSRQPXP
    0U,	// XSRSP
    0U,	// XSRSQRTEDP
    0U,	// XSRSQRTESP
    0U,	// XSSQRTDP
    0U,	// XSSQRTQP
    0U,	// XSSQRTQPO
    0U,	// XSSQRTSP
    70U,	// XSSUBDP
    70U,	// XSSUBQP
    70U,	// XSSUBQPO
    70U,	// XSSUBSP
    70U,	// XSTDIVDP
    0U,	// XSTSQRTDP
    32U,	// XSTSTDCDP
    32U,	// XSTSTDCQP
    32U,	// XSTSTDCSP
    0U,	// XSXEXPDP
    0U,	// XSXEXPQP
    0U,	// XSXSIGDP
    0U,	// XSXSIGQP
    0U,	// XVABSDP
    0U,	// XVABSSP
    70U,	// XVADDDP
    70U,	// XVADDSP
    70U,	// XVBF16GER2
    84U,	// XVBF16GER2NN
    84U,	// XVBF16GER2NP
    84U,	// XVBF16GER2PN
    84U,	// XVBF16GER2PP
    70U,	// XVCMPEQDP
    70U,	// XVCMPEQDP_rec
    70U,	// XVCMPEQSP
    70U,	// XVCMPEQSP_rec
    70U,	// XVCMPGEDP
    70U,	// XVCMPGEDP_rec
    70U,	// XVCMPGESP
    70U,	// XVCMPGESP_rec
    70U,	// XVCMPGTDP
    70U,	// XVCMPGTDP_rec
    70U,	// XVCMPGTSP
    70U,	// XVCMPGTSP_rec
    70U,	// XVCPSGNDP
    70U,	// XVCPSGNSP
    0U,	// XVCVBF16SPN
    0U,	// XVCVDPSP
    0U,	// XVCVDPSXDS
    0U,	// XVCVDPSXWS
    0U,	// XVCVDPUXDS
    0U,	// XVCVDPUXWS
    0U,	// XVCVHPSP
    0U,	// XVCVSPBF16
    0U,	// XVCVSPDP
    0U,	// XVCVSPHP
    0U,	// XVCVSPSXDS
    0U,	// XVCVSPSXWS
    0U,	// XVCVSPUXDS
    0U,	// XVCVSPUXWS
    0U,	// XVCVSXDDP
    0U,	// XVCVSXDSP
    0U,	// XVCVSXWDP
    0U,	// XVCVSXWSP
    0U,	// XVCVUXDDP
    0U,	// XVCVUXDSP
    0U,	// XVCVUXWDP
    0U,	// XVCVUXWSP
    70U,	// XVDIVDP
    70U,	// XVDIVSP
    70U,	// XVF16GER2
    84U,	// XVF16GER2NN
    84U,	// XVF16GER2NP
    84U,	// XVF16GER2PN
    84U,	// XVF16GER2PP
    70U,	// XVF32GER
    84U,	// XVF32GERNN
    84U,	// XVF32GERNP
    84U,	// XVF32GERPN
    84U,	// XVF32GERPP
    70U,	// XVF64GER
    84U,	// XVF64GERNN
    84U,	// XVF64GERNP
    84U,	// XVF64GERPN
    84U,	// XVF64GERPP
    70U,	// XVI16GER2
    84U,	// XVI16GER2PP
    70U,	// XVI16GER2S
    84U,	// XVI16GER2SPP
    70U,	// XVI4GER8
    84U,	// XVI4GER8PP
    70U,	// XVI8GER4
    84U,	// XVI8GER4PP
    84U,	// XVI8GER4SPP
    70U,	// XVIEXPDP
    70U,	// XVIEXPSP
    84U,	// XVMADDADP
    84U,	// XVMADDASP
    84U,	// XVMADDMDP
    84U,	// XVMADDMSP
    70U,	// XVMAXDP
    70U,	// XVMAXSP
    70U,	// XVMINDP
    70U,	// XVMINSP
    84U,	// XVMSUBADP
    84U,	// XVMSUBASP
    84U,	// XVMSUBMDP
    84U,	// XVMSUBMSP
    70U,	// XVMULDP
    70U,	// XVMULSP
    0U,	// XVNABSDP
    0U,	// XVNABSSP
    0U,	// XVNEGDP
    0U,	// XVNEGSP
    84U,	// XVNMADDADP
    84U,	// XVNMADDASP
    84U,	// XVNMADDMDP
    84U,	// XVNMADDMSP
    84U,	// XVNMSUBADP
    84U,	// XVNMSUBASP
    84U,	// XVNMSUBMDP
    84U,	// XVNMSUBMSP
    0U,	// XVRDPI
    0U,	// XVRDPIC
    0U,	// XVRDPIM
    0U,	// XVRDPIP
    0U,	// XVRDPIZ
    0U,	// XVREDP
    0U,	// XVRESP
    0U,	// XVRSPI
    0U,	// XVRSPIC
    0U,	// XVRSPIM
    0U,	// XVRSPIP
    0U,	// XVRSPIZ
    0U,	// XVRSQRTEDP
    0U,	// XVRSQRTESP
    0U,	// XVSQRTDP
    0U,	// XVSQRTSP
    70U,	// XVSUBDP
    70U,	// XVSUBSP
    70U,	// XVTDIVDP
    70U,	// XVTDIVSP
    0U,	// XVTLSBB
    0U,	// XVTSQRTDP
    0U,	// XVTSQRTSP
    32U,	// XVTSTDCDP
    32U,	// XVTSTDCSP
    0U,	// XVXEXPDP
    0U,	// XVXEXPSP
    0U,	// XVXSIGDP
    0U,	// XVXSIGSP
    262U,	// XXBLENDVB
    262U,	// XXBLENDVD
    262U,	// XXBLENDVH
    262U,	// XXBLENDVW
    0U,	// XXBRD
    0U,	// XXBRH
    0U,	// XXBRQ
    0U,	// XXBRW
    43270U,	// XXEVAL
    34U,	// XXEXTRACTUW
    36U,	// XXGENPCVBM
    36U,	// XXGENPCVDM
    36U,	// XXGENPCVHM
    36U,	// XXGENPCVWM
    38U,	// XXINSERTW
    70U,	// XXLAND
    70U,	// XXLANDC
    70U,	// XXLEQV
    12U,	// XXLEQVOnes
    70U,	// XXLNAND
    70U,	// XXLNOR
    70U,	// XXLOR
    70U,	// XXLORC
    70U,	// XXLORf
    70U,	// XXLXOR
    12U,	// XXLXORdpz
    12U,	// XXLXORspz
    12U,	// XXLXORz
    0U,	// XXMFACC
    70U,	// XXMRGHW
    70U,	// XXMRGLW
    0U,	// XXMTACC
    70U,	// XXPERM
    390U,	// XXPERMDI
    1040U,	// XXPERMDIs
    70U,	// XXPERMR
    51462U,	// XXPERMX
    262U,	// XXSEL
    0U,	// XXSETACCZ
    390U,	// XXSLDWI
    1040U,	// XXSLDWIs
    84U,	// XXSPLTI32DX
    0U,	// XXSPLTIB
    0U,	// XXSPLTIDP
    0U,	// XXSPLTIW
    40U,	// XXSPLTW
    40U,	// XXSPLTWs
    42U,	// gBC
    44U,	// gBCA
    0U,	// gBCAat
    70U,	// gBCCTR
    70U,	// gBCCTRL
    42U,	// gBCL
    44U,	// gBCLA
    0U,	// gBCLAat
    70U,	// gBCLR
    70U,	// gBCLRL
    0U,	// gBCLat
    0U,	// gBCat
  };

  static const uint8_t OpInfo2[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// INLINEASM_BR
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// ANNOTATION_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    0U,	// DBG_VALUE
    0U,	// DBG_VALUE_LIST
    0U,	// DBG_INSTR_REF
    0U,	// DBG_PHI
    0U,	// DBG_LABEL
    0U,	// REG_SEQUENCE
    0U,	// COPY
    0U,	// BUNDLE
    0U,	// LIFETIME_START
    0U,	// LIFETIME_END
    0U,	// PSEUDO_PROBE
    0U,	// ARITH_FENCE
    0U,	// STACKMAP
    0U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// PREALLOCATED_SETUP
    0U,	// PREALLOCATED_ARG
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    0U,	// PATCHABLE_FUNCTION_ENTER
    0U,	// PATCHABLE_RET
    0U,	// PATCHABLE_FUNCTION_EXIT
    0U,	// PATCHABLE_TAIL_CALL
    0U,	// PATCHABLE_EVENT_CALL
    0U,	// PATCHABLE_TYPED_EVENT_CALL
    0U,	// ICALL_BRANCH_FUNNEL
    0U,	// G_ASSERT_SEXT
    0U,	// G_ASSERT_ZEXT
    0U,	// G_ASSERT_ALIGN
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_SDIVREM
    0U,	// G_UDIVREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_IMPLICIT_DEF
    0U,	// G_PHI
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_MERGE_VALUES
    0U,	// G_BUILD_VECTOR
    0U,	// G_BUILD_VECTOR_TRUNC
    0U,	// G_CONCAT_VECTORS
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_FREEZE
    0U,	// G_INTRINSIC_FPTRUNC_ROUND
    0U,	// G_INTRINSIC_TRUNC
    0U,	// G_INTRINSIC_ROUND
    0U,	// G_INTRINSIC_LRINT
    0U,	// G_INTRINSIC_ROUNDEVEN
    0U,	// G_READCYCLECOUNTER
    0U,	// G_LOAD
    0U,	// G_SEXTLOAD
    0U,	// G_ZEXTLOAD
    0U,	// G_INDEXED_LOAD
    0U,	// G_INDEXED_SEXTLOAD
    0U,	// G_INDEXED_ZEXTLOAD
    0U,	// G_STORE
    0U,	// G_INDEXED_STORE
    0U,	// G_ATOMIC_CMPXCHG_WITH_SUCCESS
    0U,	// G_ATOMIC_CMPXCHG
    0U,	// G_ATOMICRMW_XCHG
    0U,	// G_ATOMICRMW_ADD
    0U,	// G_ATOMICRMW_SUB
    0U,	// G_ATOMICRMW_AND
    0U,	// G_ATOMICRMW_NAND
    0U,	// G_ATOMICRMW_OR
    0U,	// G_ATOMICRMW_XOR
    0U,	// G_ATOMICRMW_MAX
    0U,	// G_ATOMICRMW_MIN
    0U,	// G_ATOMICRMW_UMAX
    0U,	// G_ATOMICRMW_UMIN
    0U,	// G_ATOMICRMW_FADD
    0U,	// G_ATOMICRMW_FSUB
    0U,	// G_ATOMICRMW_FMAX
    0U,	// G_ATOMICRMW_FMIN
    0U,	// G_FENCE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_SEXT_INREG
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_FSHL
    0U,	// G_FSHR
    0U,	// G_ROTR
    0U,	// G_ROTL
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDO
    0U,	// G_UADDE
    0U,	// G_USUBO
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SADDE
    0U,	// G_SSUBO
    0U,	// G_SSUBE
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_UADDSAT
    0U,	// G_SADDSAT
    0U,	// G_USUBSAT
    0U,	// G_SSUBSAT
    0U,	// G_USHLSAT
    0U,	// G_SSHLSAT
    0U,	// G_SMULFIX
    0U,	// G_UMULFIX
    0U,	// G_SMULFIXSAT
    0U,	// G_UMULFIXSAT
    0U,	// G_SDIVFIX
    0U,	// G_UDIVFIX
    0U,	// G_SDIVFIXSAT
    0U,	// G_UDIVFIXSAT
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FMA
    0U,	// G_FMAD
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FPOWI
    0U,	// G_FEXP
    0U,	// G_FEXP2
    0U,	// G_FLOG
    0U,	// G_FLOG2
    0U,	// G_FLOG10
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_FABS
    0U,	// G_FCOPYSIGN
    0U,	// G_IS_FPCLASS
    0U,	// G_FCANONICALIZE
    0U,	// G_FMINNUM
    0U,	// G_FMAXNUM
    0U,	// G_FMINNUM_IEEE
    0U,	// G_FMAXNUM_IEEE
    0U,	// G_FMINIMUM
    0U,	// G_FMAXIMUM
    0U,	// G_PTR_ADD
    0U,	// G_PTRMASK
    0U,	// G_SMIN
    0U,	// G_SMAX
    0U,	// G_UMIN
    0U,	// G_UMAX
    0U,	// G_ABS
    0U,	// G_LROUND
    0U,	// G_LLROUND
    0U,	// G_BR
    0U,	// G_BRJT
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// G_SHUFFLE_VECTOR
    0U,	// G_CTTZ
    0U,	// G_CTTZ_ZERO_UNDEF
    0U,	// G_CTLZ
    0U,	// G_CTLZ_ZERO_UNDEF
    0U,	// G_CTPOP
    0U,	// G_BSWAP
    0U,	// G_BITREVERSE
    0U,	// G_FCEIL
    0U,	// G_FCOS
    0U,	// G_FSIN
    0U,	// G_FSQRT
    0U,	// G_FFLOOR
    0U,	// G_FRINT
    0U,	// G_FNEARBYINT
    0U,	// G_ADDRSPACE_CAST
    0U,	// G_BLOCK_ADDR
    0U,	// G_JUMP_TABLE
    0U,	// G_DYN_STACKALLOC
    0U,	// G_STRICT_FADD
    0U,	// G_STRICT_FSUB
    0U,	// G_STRICT_FMUL
    0U,	// G_STRICT_FDIV
    0U,	// G_STRICT_FREM
    0U,	// G_STRICT_FMA
    0U,	// G_STRICT_FSQRT
    0U,	// G_READ_REGISTER
    0U,	// G_WRITE_REGISTER
    0U,	// G_MEMCPY
    0U,	// G_MEMCPY_INLINE
    0U,	// G_MEMMOVE
    0U,	// G_MEMSET
    0U,	// G_BZERO
    0U,	// G_VECREDUCE_SEQ_FADD
    0U,	// G_VECREDUCE_SEQ_FMUL
    0U,	// G_VECREDUCE_FADD
    0U,	// G_VECREDUCE_FMUL
    0U,	// G_VECREDUCE_FMAX
    0U,	// G_VECREDUCE_FMIN
    0U,	// G_VECREDUCE_ADD
    0U,	// G_VECREDUCE_MUL
    0U,	// G_VECREDUCE_AND
    0U,	// G_VECREDUCE_OR
    0U,	// G_VECREDUCE_XOR
    0U,	// G_VECREDUCE_SMAX
    0U,	// G_VECREDUCE_SMIN
    0U,	// G_VECREDUCE_UMAX
    0U,	// G_VECREDUCE_UMIN
    0U,	// G_SBFX
    0U,	// G_UBFX
    0U,	// ATOMIC_CMP_SWAP_I128
    0U,	// ATOMIC_LOAD_ADD_I128
    0U,	// ATOMIC_LOAD_AND_I128
    0U,	// ATOMIC_LOAD_NAND_I128
    0U,	// ATOMIC_LOAD_OR_I128
    0U,	// ATOMIC_LOAD_SUB_I128
    0U,	// ATOMIC_LOAD_XOR_I128
    0U,	// ATOMIC_SWAP_I128
    0U,	// BUILD_QUADWORD
    0U,	// BUILD_UACC
    0U,	// CFENCE8
    0U,	// CLRLSLDI
    0U,	// CLRLSLDI_rec
    0U,	// CLRLSLWI
    0U,	// CLRLSLWI_rec
    0U,	// CLRRDI
    0U,	// CLRRDI_rec
    0U,	// CLRRWI
    0U,	// CLRRWI_rec
    0U,	// DCBFL
    0U,	// DCBFLP
    0U,	// DCBFPS
    0U,	// DCBFx
    0U,	// DCBSTPS
    0U,	// DCBTCT
    0U,	// DCBTDS
    0U,	// DCBTSTCT
    0U,	// DCBTSTDS
    0U,	// DCBTSTT
    0U,	// DCBTSTx
    0U,	// DCBTT
    0U,	// DCBTx
    0U,	// DFLOADf32
    0U,	// DFLOADf64
    0U,	// DFSTOREf32
    0U,	// DFSTOREf64
    0U,	// EXTLDI
    0U,	// EXTLDI_rec
    0U,	// EXTLWI
    0U,	// EXTLWI_rec
    0U,	// EXTRDI
    0U,	// EXTRDI_rec
    0U,	// EXTRWI
    0U,	// EXTRWI_rec
    0U,	// INSLWI
    0U,	// INSLWI_rec
    0U,	// INSRDI
    0U,	// INSRDI_rec
    0U,	// INSRWI
    0U,	// INSRWI_rec
    0U,	// KILL_PAIR
    0U,	// LAx
    0U,	// LIWAX
    0U,	// LIWZX
    0U,	// RLWIMIbm
    0U,	// RLWIMIbm_rec
    0U,	// RLWINMbm
    0U,	// RLWINMbm_rec
    0U,	// RLWNMbm
    0U,	// RLWNMbm_rec
    0U,	// ROTRDI
    0U,	// ROTRDI_rec
    0U,	// ROTRWI
    0U,	// ROTRWI_rec
    0U,	// SLDI
    0U,	// SLDI_rec
    0U,	// SLWI
    0U,	// SLWI_rec
    0U,	// SPILLTOVSR_LD
    0U,	// SPILLTOVSR_LDX
    0U,	// SPILLTOVSR_ST
    0U,	// SPILLTOVSR_STX
    0U,	// SRDI
    0U,	// SRDI_rec
    0U,	// SRWI
    0U,	// SRWI_rec
    0U,	// STIWX
    0U,	// SUBI
    0U,	// SUBIC
    0U,	// SUBIC_rec
    0U,	// SUBIS
    0U,	// SUBPCIS
    0U,	// XFLOADf32
    0U,	// XFLOADf64
    0U,	// XFSTOREf32
    0U,	// XFSTOREf64
    0U,	// ADD4
    0U,	// ADD4O
    0U,	// ADD4O_rec
    0U,	// ADD4TLS
    0U,	// ADD4_rec
    0U,	// ADD8
    0U,	// ADD8O
    0U,	// ADD8O_rec
    0U,	// ADD8TLS
    0U,	// ADD8TLS_
    0U,	// ADD8_rec
    0U,	// ADDC
    0U,	// ADDC8
    0U,	// ADDC8O
    0U,	// ADDC8O_rec
    0U,	// ADDC8_rec
    0U,	// ADDCO
    0U,	// ADDCO_rec
    0U,	// ADDC_rec
    0U,	// ADDE
    0U,	// ADDE8
    0U,	// ADDE8O
    0U,	// ADDE8O_rec
    0U,	// ADDE8_rec
    0U,	// ADDEO
    0U,	// ADDEO_rec
    0U,	// ADDEX
    0U,	// ADDEX8
    0U,	// ADDE_rec
    0U,	// ADDI
    0U,	// ADDI8
    0U,	// ADDIC
    0U,	// ADDIC8
    0U,	// ADDIC_rec
    0U,	// ADDIS
    0U,	// ADDIS8
    0U,	// ADDISdtprelHA
    0U,	// ADDISdtprelHA32
    0U,	// ADDISgotTprelHA
    0U,	// ADDIStlsgdHA
    0U,	// ADDIStlsldHA
    0U,	// ADDIStocHA
    0U,	// ADDIStocHA8
    0U,	// ADDIdtprelL
    0U,	// ADDIdtprelL32
    0U,	// ADDItlsgdL
    0U,	// ADDItlsgdL32
    0U,	// ADDItlsgdLADDR
    0U,	// ADDItlsgdLADDR32
    0U,	// ADDItlsldL
    0U,	// ADDItlsldL32
    0U,	// ADDItlsldLADDR
    0U,	// ADDItlsldLADDR32
    0U,	// ADDItoc
    0U,	// ADDItoc8
    0U,	// ADDItocL
    0U,	// ADDME
    0U,	// ADDME8
    0U,	// ADDME8O
    0U,	// ADDME8O_rec
    0U,	// ADDME8_rec
    0U,	// ADDMEO
    0U,	// ADDMEO_rec
    0U,	// ADDME_rec
    0U,	// ADDPCIS
    0U,	// ADDZE
    0U,	// ADDZE8
    0U,	// ADDZE8O
    0U,	// ADDZE8O_rec
    0U,	// ADDZE8_rec
    0U,	// ADDZEO
    0U,	// ADDZEO_rec
    0U,	// ADDZE_rec
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    0U,	// AND
    0U,	// AND8
    0U,	// AND8_rec
    0U,	// ANDC
    0U,	// ANDC8
    0U,	// ANDC8_rec
    0U,	// ANDC_rec
    0U,	// ANDI8_rec
    0U,	// ANDIS8_rec
    0U,	// ANDIS_rec
    0U,	// ANDI_rec
    0U,	// ANDI_rec_1_EQ_BIT
    0U,	// ANDI_rec_1_EQ_BIT8
    0U,	// ANDI_rec_1_GT_BIT
    0U,	// ANDI_rec_1_GT_BIT8
    0U,	// AND_rec
    0U,	// ATOMIC_CMP_SWAP_I16
    0U,	// ATOMIC_CMP_SWAP_I32
    0U,	// ATOMIC_CMP_SWAP_I64
    0U,	// ATOMIC_CMP_SWAP_I8
    0U,	// ATOMIC_LOAD_ADD_I16
    0U,	// ATOMIC_LOAD_ADD_I32
    0U,	// ATOMIC_LOAD_ADD_I64
    0U,	// ATOMIC_LOAD_ADD_I8
    0U,	// ATOMIC_LOAD_AND_I16
    0U,	// ATOMIC_LOAD_AND_I32
    0U,	// ATOMIC_LOAD_AND_I64
    0U,	// ATOMIC_LOAD_AND_I8
    0U,	// ATOMIC_LOAD_MAX_I16
    0U,	// ATOMIC_LOAD_MAX_I32
    0U,	// ATOMIC_LOAD_MAX_I64
    0U,	// ATOMIC_LOAD_MAX_I8
    0U,	// ATOMIC_LOAD_MIN_I16
    0U,	// ATOMIC_LOAD_MIN_I32
    0U,	// ATOMIC_LOAD_MIN_I64
    0U,	// ATOMIC_LOAD_MIN_I8
    0U,	// ATOMIC_LOAD_NAND_I16
    0U,	// ATOMIC_LOAD_NAND_I32
    0U,	// ATOMIC_LOAD_NAND_I64
    0U,	// ATOMIC_LOAD_NAND_I8
    0U,	// ATOMIC_LOAD_OR_I16
    0U,	// ATOMIC_LOAD_OR_I32
    0U,	// ATOMIC_LOAD_OR_I64
    0U,	// ATOMIC_LOAD_OR_I8
    0U,	// ATOMIC_LOAD_SUB_I16
    0U,	// ATOMIC_LOAD_SUB_I32
    0U,	// ATOMIC_LOAD_SUB_I64
    0U,	// ATOMIC_LOAD_SUB_I8
    0U,	// ATOMIC_LOAD_UMAX_I16
    0U,	// ATOMIC_LOAD_UMAX_I32
    0U,	// ATOMIC_LOAD_UMAX_I64
    0U,	// ATOMIC_LOAD_UMAX_I8
    0U,	// ATOMIC_LOAD_UMIN_I16
    0U,	// ATOMIC_LOAD_UMIN_I32
    0U,	// ATOMIC_LOAD_UMIN_I64
    0U,	// ATOMIC_LOAD_UMIN_I8
    0U,	// ATOMIC_LOAD_XOR_I16
    0U,	// ATOMIC_LOAD_XOR_I32
    0U,	// ATOMIC_LOAD_XOR_I64
    0U,	// ATOMIC_LOAD_XOR_I8
    0U,	// ATOMIC_SWAP_I16
    0U,	// ATOMIC_SWAP_I32
    0U,	// ATOMIC_SWAP_I64
    0U,	// ATOMIC_SWAP_I8
    0U,	// ATTN
    0U,	// B
    0U,	// BA
    0U,	// BC
    0U,	// BCC
    0U,	// BCCA
    0U,	// BCCCTR
    0U,	// BCCCTR8
    0U,	// BCCCTRL
    0U,	// BCCCTRL8
    0U,	// BCCL
    0U,	// BCCLA
    0U,	// BCCLR
    0U,	// BCCLRL
    0U,	// BCCTR
    0U,	// BCCTR8
    0U,	// BCCTR8n
    0U,	// BCCTRL
    0U,	// BCCTRL8
    0U,	// BCCTRL8n
    0U,	// BCCTRLn
    0U,	// BCCTRn
    0U,	// BCDADD_rec
    0U,	// BCDCFN_rec
    0U,	// BCDCFSQ_rec
    0U,	// BCDCFZ_rec
    0U,	// BCDCPSGN_rec
    0U,	// BCDCTN_rec
    0U,	// BCDCTSQ_rec
    0U,	// BCDCTZ_rec
    0U,	// BCDSETSGN_rec
    0U,	// BCDSR_rec
    0U,	// BCDSUB_rec
    0U,	// BCDS_rec
    0U,	// BCDTRUNC_rec
    0U,	// BCDUS_rec
    0U,	// BCDUTRUNC_rec
    0U,	// BCL
    0U,	// BCLR
    0U,	// BCLRL
    0U,	// BCLRLn
    0U,	// BCLRn
    0U,	// BCLalways
    0U,	// BCLn
    0U,	// BCTR
    0U,	// BCTR8
    0U,	// BCTRL
    0U,	// BCTRL8
    0U,	// BCTRL8_LDinto_toc
    0U,	// BCTRL8_LDinto_toc_RM
    0U,	// BCTRL8_RM
    0U,	// BCTRL_LWZinto_toc
    0U,	// BCTRL_LWZinto_toc_RM
    0U,	// BCTRL_RM
    0U,	// BCn
    0U,	// BDNZ
    0U,	// BDNZ8
    0U,	// BDNZA
    0U,	// BDNZAm
    0U,	// BDNZAp
    0U,	// BDNZL
    0U,	// BDNZLA
    0U,	// BDNZLAm
    0U,	// BDNZLAp
    0U,	// BDNZLR
    0U,	// BDNZLR8
    0U,	// BDNZLRL
    0U,	// BDNZLRLm
    0U,	// BDNZLRLp
    0U,	// BDNZLRm
    0U,	// BDNZLRp
    0U,	// BDNZLm
    0U,	// BDNZLp
    0U,	// BDNZm
    0U,	// BDNZp
    0U,	// BDZ
    0U,	// BDZ8
    0U,	// BDZA
    0U,	// BDZAm
    0U,	// BDZAp
    0U,	// BDZL
    0U,	// BDZLA
    0U,	// BDZLAm
    0U,	// BDZLAp
    0U,	// BDZLR
    0U,	// BDZLR8
    0U,	// BDZLRL
    0U,	// BDZLRLm
    0U,	// BDZLRLp
    0U,	// BDZLRm
    0U,	// BDZLRp
    0U,	// BDZLm
    0U,	// BDZLp
    0U,	// BDZm
    0U,	// BDZp
    0U,	// BL
    0U,	// BL8
    0U,	// BL8_NOP
    0U,	// BL8_NOP_RM
    0U,	// BL8_NOP_TLS
    0U,	// BL8_NOTOC
    0U,	// BL8_NOTOC_RM
    0U,	// BL8_NOTOC_TLS
    0U,	// BL8_RM
    0U,	// BL8_TLS
    0U,	// BL8_TLS_
    0U,	// BLA
    0U,	// BLA8
    0U,	// BLA8_NOP
    0U,	// BLA8_NOP_RM
    0U,	// BLA8_RM
    0U,	// BLA_RM
    0U,	// BLR
    0U,	// BLR8
    0U,	// BLRL
    0U,	// BL_NOP
    0U,	// BL_NOP_RM
    0U,	// BL_RM
    0U,	// BL_TLS
    0U,	// BPERMD
    0U,	// BRINC
    0U,	// CFUGED
    0U,	// CLRBHRB
    0U,	// CMPB
    0U,	// CMPB8
    0U,	// CMPD
    0U,	// CMPDI
    0U,	// CMPEQB
    0U,	// CMPLD
    0U,	// CMPLDI
    0U,	// CMPLW
    0U,	// CMPLWI
    0U,	// CMPRB
    0U,	// CMPRB8
    0U,	// CMPW
    0U,	// CMPWI
    0U,	// CNTLZD
    0U,	// CNTLZDM
    0U,	// CNTLZD_rec
    0U,	// CNTLZW
    0U,	// CNTLZW8
    0U,	// CNTLZW8_rec
    0U,	// CNTLZW_rec
    0U,	// CNTTZD
    0U,	// CNTTZDM
    0U,	// CNTTZD_rec
    0U,	// CNTTZW
    0U,	// CNTTZW8
    0U,	// CNTTZW8_rec
    0U,	// CNTTZW_rec
    0U,	// CP_ABORT
    0U,	// CP_COPY
    0U,	// CP_COPY8
    0U,	// CP_PASTE8_rec
    0U,	// CP_PASTE_rec
    0U,	// CR6SET
    0U,	// CR6UNSET
    0U,	// CRAND
    0U,	// CRANDC
    0U,	// CREQV
    0U,	// CRNAND
    0U,	// CRNOR
    0U,	// CROR
    0U,	// CRORC
    0U,	// CRSET
    0U,	// CRUNSET
    0U,	// CRXOR
    0U,	// CTRL_DEP
    0U,	// DARN
    0U,	// DCBA
    0U,	// DCBF
    0U,	// DCBFEP
    0U,	// DCBI
    0U,	// DCBST
    0U,	// DCBSTEP
    0U,	// DCBT
    0U,	// DCBTEP
    0U,	// DCBTST
    0U,	// DCBTSTEP
    0U,	// DCBZ
    0U,	// DCBZEP
    0U,	// DCBZL
    0U,	// DCBZLEP
    0U,	// DCCCI
    0U,	// DIVD
    0U,	// DIVDE
    0U,	// DIVDEO
    0U,	// DIVDEO_rec
    0U,	// DIVDEU
    0U,	// DIVDEUO
    0U,	// DIVDEUO_rec
    0U,	// DIVDEU_rec
    0U,	// DIVDE_rec
    0U,	// DIVDO
    0U,	// DIVDO_rec
    0U,	// DIVDU
    0U,	// DIVDUO
    0U,	// DIVDUO_rec
    0U,	// DIVDU_rec
    0U,	// DIVD_rec
    0U,	// DIVW
    0U,	// DIVWE
    0U,	// DIVWEO
    0U,	// DIVWEO_rec
    0U,	// DIVWEU
    0U,	// DIVWEUO
    0U,	// DIVWEUO_rec
    0U,	// DIVWEU_rec
    0U,	// DIVWE_rec
    0U,	// DIVWO
    0U,	// DIVWO_rec
    0U,	// DIVWU
    0U,	// DIVWUO
    0U,	// DIVWUO_rec
    0U,	// DIVWU_rec
    0U,	// DIVW_rec
    0U,	// DSS
    0U,	// DSSALL
    0U,	// DST
    0U,	// DST64
    0U,	// DSTST
    0U,	// DSTST64
    0U,	// DSTSTT
    0U,	// DSTSTT64
    0U,	// DSTT
    0U,	// DSTT64
    0U,	// DYNALLOC
    0U,	// DYNALLOC8
    0U,	// DYNAREAOFFSET
    0U,	// DYNAREAOFFSET8
    0U,	// DecreaseCTR8Pseudo
    0U,	// DecreaseCTRPseudo
    0U,	// EFDABS
    0U,	// EFDADD
    0U,	// EFDCFS
    0U,	// EFDCFSF
    0U,	// EFDCFSI
    0U,	// EFDCFSID
    0U,	// EFDCFUF
    0U,	// EFDCFUI
    0U,	// EFDCFUID
    0U,	// EFDCMPEQ
    0U,	// EFDCMPGT
    0U,	// EFDCMPLT
    0U,	// EFDCTSF
    0U,	// EFDCTSI
    0U,	// EFDCTSIDZ
    0U,	// EFDCTSIZ
    0U,	// EFDCTUF
    0U,	// EFDCTUI
    0U,	// EFDCTUIDZ
    0U,	// EFDCTUIZ
    0U,	// EFDDIV
    0U,	// EFDMUL
    0U,	// EFDNABS
    0U,	// EFDNEG
    0U,	// EFDSUB
    0U,	// EFDTSTEQ
    0U,	// EFDTSTGT
    0U,	// EFDTSTLT
    0U,	// EFSABS
    0U,	// EFSADD
    0U,	// EFSCFD
    0U,	// EFSCFSF
    0U,	// EFSCFSI
    0U,	// EFSCFUF
    0U,	// EFSCFUI
    0U,	// EFSCMPEQ
    0U,	// EFSCMPGT
    0U,	// EFSCMPLT
    0U,	// EFSCTSF
    0U,	// EFSCTSI
    0U,	// EFSCTSIZ
    0U,	// EFSCTUF
    0U,	// EFSCTUI
    0U,	// EFSCTUIZ
    0U,	// EFSDIV
    0U,	// EFSMUL
    0U,	// EFSNABS
    0U,	// EFSNEG
    0U,	// EFSSUB
    0U,	// EFSTSTEQ
    0U,	// EFSTSTGT
    0U,	// EFSTSTLT
    0U,	// EH_SjLj_LongJmp32
    0U,	// EH_SjLj_LongJmp64
    0U,	// EH_SjLj_SetJmp32
    0U,	// EH_SjLj_SetJmp64
    0U,	// EH_SjLj_Setup
    0U,	// EQV
    0U,	// EQV8
    0U,	// EQV8_rec
    0U,	// EQV_rec
    0U,	// EVABS
    0U,	// EVADDIW
    0U,	// EVADDSMIAAW
    0U,	// EVADDSSIAAW
    0U,	// EVADDUMIAAW
    0U,	// EVADDUSIAAW
    0U,	// EVADDW
    0U,	// EVAND
    0U,	// EVANDC
    0U,	// EVCMPEQ
    0U,	// EVCMPGTS
    0U,	// EVCMPGTU
    0U,	// EVCMPLTS
    0U,	// EVCMPLTU
    0U,	// EVCNTLSW
    0U,	// EVCNTLZW
    0U,	// EVDIVWS
    0U,	// EVDIVWU
    0U,	// EVEQV
    0U,	// EVEXTSB
    0U,	// EVEXTSH
    0U,	// EVFSABS
    0U,	// EVFSADD
    0U,	// EVFSCFSF
    0U,	// EVFSCFSI
    0U,	// EVFSCFUF
    0U,	// EVFSCFUI
    0U,	// EVFSCMPEQ
    0U,	// EVFSCMPGT
    0U,	// EVFSCMPLT
    0U,	// EVFSCTSF
    0U,	// EVFSCTSI
    0U,	// EVFSCTSIZ
    0U,	// EVFSCTUF
    0U,	// EVFSCTUI
    0U,	// EVFSCTUIZ
    0U,	// EVFSDIV
    0U,	// EVFSMUL
    0U,	// EVFSNABS
    0U,	// EVFSNEG
    0U,	// EVFSSUB
    0U,	// EVFSTSTEQ
    0U,	// EVFSTSTGT
    0U,	// EVFSTSTLT
    0U,	// EVLDD
    0U,	// EVLDDX
    0U,	// EVLDH
    0U,	// EVLDHX
    0U,	// EVLDW
    0U,	// EVLDWX
    0U,	// EVLHHESPLAT
    0U,	// EVLHHESPLATX
    0U,	// EVLHHOSSPLAT
    0U,	// EVLHHOSSPLATX
    0U,	// EVLHHOUSPLAT
    0U,	// EVLHHOUSPLATX
    0U,	// EVLWHE
    0U,	// EVLWHEX
    0U,	// EVLWHOS
    0U,	// EVLWHOSX
    0U,	// EVLWHOU
    0U,	// EVLWHOUX
    0U,	// EVLWHSPLAT
    0U,	// EVLWHSPLATX
    0U,	// EVLWWSPLAT
    0U,	// EVLWWSPLATX
    0U,	// EVMERGEHI
    0U,	// EVMERGEHILO
    0U,	// EVMERGELO
    0U,	// EVMERGELOHI
    0U,	// EVMHEGSMFAA
    0U,	// EVMHEGSMFAN
    0U,	// EVMHEGSMIAA
    0U,	// EVMHEGSMIAN
    0U,	// EVMHEGUMIAA
    0U,	// EVMHEGUMIAN
    0U,	// EVMHESMF
    0U,	// EVMHESMFA
    0U,	// EVMHESMFAAW
    0U,	// EVMHESMFANW
    0U,	// EVMHESMI
    0U,	// EVMHESMIA
    0U,	// EVMHESMIAAW
    0U,	// EVMHESMIANW
    0U,	// EVMHESSF
    0U,	// EVMHESSFA
    0U,	// EVMHESSFAAW
    0U,	// EVMHESSFANW
    0U,	// EVMHESSIAAW
    0U,	// EVMHESSIANW
    0U,	// EVMHEUMI
    0U,	// EVMHEUMIA
    0U,	// EVMHEUMIAAW
    0U,	// EVMHEUMIANW
    0U,	// EVMHEUSIAAW
    0U,	// EVMHEUSIANW
    0U,	// EVMHOGSMFAA
    0U,	// EVMHOGSMFAN
    0U,	// EVMHOGSMIAA
    0U,	// EVMHOGSMIAN
    0U,	// EVMHOGUMIAA
    0U,	// EVMHOGUMIAN
    0U,	// EVMHOSMF
    0U,	// EVMHOSMFA
    0U,	// EVMHOSMFAAW
    0U,	// EVMHOSMFANW
    0U,	// EVMHOSMI
    0U,	// EVMHOSMIA
    0U,	// EVMHOSMIAAW
    0U,	// EVMHOSMIANW
    0U,	// EVMHOSSF
    0U,	// EVMHOSSFA
    0U,	// EVMHOSSFAAW
    0U,	// EVMHOSSFANW
    0U,	// EVMHOSSIAAW
    0U,	// EVMHOSSIANW
    0U,	// EVMHOUMI
    0U,	// EVMHOUMIA
    0U,	// EVMHOUMIAAW
    0U,	// EVMHOUMIANW
    0U,	// EVMHOUSIAAW
    0U,	// EVMHOUSIANW
    0U,	// EVMRA
    0U,	// EVMWHSMF
    0U,	// EVMWHSMFA
    0U,	// EVMWHSMI
    0U,	// EVMWHSMIA
    0U,	// EVMWHSSF
    0U,	// EVMWHSSFA
    0U,	// EVMWHUMI
    0U,	// EVMWHUMIA
    0U,	// EVMWLSMIAAW
    0U,	// EVMWLSMIANW
    0U,	// EVMWLSSIAAW
    0U,	// EVMWLSSIANW
    0U,	// EVMWLUMI
    0U,	// EVMWLUMIA
    0U,	// EVMWLUMIAAW
    0U,	// EVMWLUMIANW
    0U,	// EVMWLUSIAAW
    0U,	// EVMWLUSIANW
    0U,	// EVMWSMF
    0U,	// EVMWSMFA
    0U,	// EVMWSMFAA
    0U,	// EVMWSMFAN
    0U,	// EVMWSMI
    0U,	// EVMWSMIA
    0U,	// EVMWSMIAA
    0U,	// EVMWSMIAN
    0U,	// EVMWSSF
    0U,	// EVMWSSFA
    0U,	// EVMWSSFAA
    0U,	// EVMWSSFAN
    0U,	// EVMWUMI
    0U,	// EVMWUMIA
    0U,	// EVMWUMIAA
    0U,	// EVMWUMIAN
    0U,	// EVNAND
    0U,	// EVNEG
    0U,	// EVNOR
    0U,	// EVOR
    0U,	// EVORC
    0U,	// EVRLW
    0U,	// EVRLWI
    0U,	// EVRNDW
    0U,	// EVSEL
    0U,	// EVSLW
    0U,	// EVSLWI
    0U,	// EVSPLATFI
    0U,	// EVSPLATI
    0U,	// EVSRWIS
    0U,	// EVSRWIU
    0U,	// EVSRWS
    0U,	// EVSRWU
    0U,	// EVSTDD
    0U,	// EVSTDDX
    0U,	// EVSTDH
    0U,	// EVSTDHX
    0U,	// EVSTDW
    0U,	// EVSTDWX
    0U,	// EVSTWHE
    0U,	// EVSTWHEX
    0U,	// EVSTWHO
    0U,	// EVSTWHOX
    0U,	// EVSTWWE
    0U,	// EVSTWWEX
    0U,	// EVSTWWO
    0U,	// EVSTWWOX
    0U,	// EVSUBFSMIAAW
    0U,	// EVSUBFSSIAAW
    0U,	// EVSUBFUMIAAW
    0U,	// EVSUBFUSIAAW
    0U,	// EVSUBFW
    0U,	// EVSUBIFW
    0U,	// EVXOR
    0U,	// EXTSB
    0U,	// EXTSB8
    0U,	// EXTSB8_32_64
    0U,	// EXTSB8_rec
    0U,	// EXTSB_rec
    0U,	// EXTSH
    0U,	// EXTSH8
    0U,	// EXTSH8_32_64
    0U,	// EXTSH8_rec
    0U,	// EXTSH_rec
    0U,	// EXTSW
    0U,	// EXTSWSLI
    0U,	// EXTSWSLI_32_64
    0U,	// EXTSWSLI_32_64_rec
    0U,	// EXTSWSLI_rec
    0U,	// EXTSW_32
    0U,	// EXTSW_32_64
    0U,	// EXTSW_32_64_rec
    0U,	// EXTSW_rec
    0U,	// EnforceIEIO
    0U,	// FABSD
    0U,	// FABSD_rec
    0U,	// FABSS
    0U,	// FABSS_rec
    0U,	// FADD
    0U,	// FADDS
    0U,	// FADDS_rec
    0U,	// FADD_rec
    0U,	// FADDrtz
    0U,	// FCFID
    0U,	// FCFIDS
    0U,	// FCFIDS_rec
    0U,	// FCFIDU
    0U,	// FCFIDUS
    0U,	// FCFIDUS_rec
    0U,	// FCFIDU_rec
    0U,	// FCFID_rec
    0U,	// FCMPOD
    0U,	// FCMPOS
    0U,	// FCMPUD
    0U,	// FCMPUS
    0U,	// FCPSGND
    0U,	// FCPSGND_rec
    0U,	// FCPSGNS
    0U,	// FCPSGNS_rec
    0U,	// FCTID
    0U,	// FCTIDU
    0U,	// FCTIDUZ
    0U,	// FCTIDUZ_rec
    0U,	// FCTIDU_rec
    0U,	// FCTIDZ
    0U,	// FCTIDZ_rec
    0U,	// FCTID_rec
    0U,	// FCTIW
    0U,	// FCTIWU
    0U,	// FCTIWUZ
    0U,	// FCTIWUZ_rec
    0U,	// FCTIWU_rec
    0U,	// FCTIWZ
    0U,	// FCTIWZ_rec
    0U,	// FCTIW_rec
    0U,	// FDIV
    0U,	// FDIVS
    0U,	// FDIVS_rec
    0U,	// FDIV_rec
    0U,	// FMADD
    0U,	// FMADDS
    0U,	// FMADDS_rec
    0U,	// FMADD_rec
    0U,	// FMR
    0U,	// FMR_rec
    0U,	// FMSUB
    0U,	// FMSUBS
    0U,	// FMSUBS_rec
    0U,	// FMSUB_rec
    0U,	// FMUL
    0U,	// FMULS
    0U,	// FMULS_rec
    0U,	// FMUL_rec
    0U,	// FNABSD
    0U,	// FNABSD_rec
    0U,	// FNABSS
    0U,	// FNABSS_rec
    0U,	// FNEGD
    0U,	// FNEGD_rec
    0U,	// FNEGS
    0U,	// FNEGS_rec
    0U,	// FNMADD
    0U,	// FNMADDS
    0U,	// FNMADDS_rec
    0U,	// FNMADD_rec
    0U,	// FNMSUB
    0U,	// FNMSUBS
    0U,	// FNMSUBS_rec
    0U,	// FNMSUB_rec
    0U,	// FRE
    0U,	// FRES
    0U,	// FRES_rec
    0U,	// FRE_rec
    0U,	// FRIMD
    0U,	// FRIMD_rec
    0U,	// FRIMS
    0U,	// FRIMS_rec
    0U,	// FRIND
    0U,	// FRIND_rec
    0U,	// FRINS
    0U,	// FRINS_rec
    0U,	// FRIPD
    0U,	// FRIPD_rec
    0U,	// FRIPS
    0U,	// FRIPS_rec
    0U,	// FRIZD
    0U,	// FRIZD_rec
    0U,	// FRIZS
    0U,	// FRIZS_rec
    0U,	// FRSP
    0U,	// FRSP_rec
    0U,	// FRSQRTE
    0U,	// FRSQRTES
    0U,	// FRSQRTES_rec
    0U,	// FRSQRTE_rec
    0U,	// FSELD
    0U,	// FSELD_rec
    0U,	// FSELS
    0U,	// FSELS_rec
    0U,	// FSQRT
    0U,	// FSQRTS
    0U,	// FSQRTS_rec
    0U,	// FSQRT_rec
    0U,	// FSUB
    0U,	// FSUBS
    0U,	// FSUBS_rec
    0U,	// FSUB_rec
    0U,	// FTDIV
    0U,	// FTSQRT
    0U,	// GETtlsADDR
    0U,	// GETtlsADDR32
    0U,	// GETtlsADDR32AIX
    0U,	// GETtlsADDR64AIX
    0U,	// GETtlsADDRPCREL
    0U,	// GETtlsldADDR
    0U,	// GETtlsldADDR32
    0U,	// GETtlsldADDRPCREL
    0U,	// HASHCHK
    0U,	// HASHCHK8
    0U,	// HASHCHKP
    0U,	// HASHCHKP8
    0U,	// HASHST
    0U,	// HASHST8
    0U,	// HASHSTP
    0U,	// HASHSTP8
    0U,	// HRFID
    0U,	// ICBI
    0U,	// ICBIEP
    0U,	// ICBLC
    0U,	// ICBLQ
    0U,	// ICBT
    0U,	// ICBTLS
    0U,	// ICCCI
    0U,	// ISEL
    0U,	// ISEL8
    0U,	// ISYNC
    0U,	// LA
    0U,	// LA8
    0U,	// LBARX
    0U,	// LBARXL
    0U,	// LBEPX
    0U,	// LBZ
    0U,	// LBZ8
    0U,	// LBZCIX
    0U,	// LBZU
    0U,	// LBZU8
    0U,	// LBZUX
    0U,	// LBZUX8
    0U,	// LBZX
    0U,	// LBZX8
    0U,	// LBZXTLS
    0U,	// LBZXTLS_
    0U,	// LBZXTLS_32
    0U,	// LD
    0U,	// LDARX
    0U,	// LDARXL
    0U,	// LDAT
    0U,	// LDBRX
    0U,	// LDCIX
    0U,	// LDU
    0U,	// LDUX
    0U,	// LDX
    0U,	// LDXTLS
    0U,	// LDXTLS_
    0U,	// LDgotTprelL
    0U,	// LDgotTprelL32
    0U,	// LDtoc
    0U,	// LDtocBA
    0U,	// LDtocCPT
    0U,	// LDtocJTI
    0U,	// LDtocL
    0U,	// LFD
    0U,	// LFDEPX
    0U,	// LFDU
    0U,	// LFDUX
    0U,	// LFDX
    0U,	// LFIWAX
    0U,	// LFIWZX
    0U,	// LFS
    0U,	// LFSU
    0U,	// LFSUX
    0U,	// LFSX
    0U,	// LHA
    0U,	// LHA8
    0U,	// LHARX
    0U,	// LHARXL
    0U,	// LHAU
    0U,	// LHAU8
    0U,	// LHAUX
    0U,	// LHAUX8
    0U,	// LHAX
    0U,	// LHAX8
    0U,	// LHBRX
    0U,	// LHBRX8
    0U,	// LHEPX
    0U,	// LHZ
    0U,	// LHZ8
    0U,	// LHZCIX
    0U,	// LHZU
    0U,	// LHZU8
    0U,	// LHZUX
    0U,	// LHZUX8
    0U,	// LHZX
    0U,	// LHZX8
    0U,	// LHZXTLS
    0U,	// LHZXTLS_
    0U,	// LHZXTLS_32
    0U,	// LI
    0U,	// LI8
    0U,	// LIS
    0U,	// LIS8
    0U,	// LMW
    0U,	// LQ
    0U,	// LQARX
    0U,	// LQARXL
    0U,	// LQX_PSEUDO
    0U,	// LSWI
    0U,	// LVEBX
    0U,	// LVEHX
    0U,	// LVEWX
    0U,	// LVSL
    0U,	// LVSR
    0U,	// LVX
    0U,	// LVXL
    0U,	// LWA
    0U,	// LWARX
    0U,	// LWARXL
    0U,	// LWAT
    0U,	// LWAUX
    0U,	// LWAX
    0U,	// LWAX_32
    0U,	// LWA_32
    0U,	// LWBRX
    0U,	// LWBRX8
    0U,	// LWEPX
    0U,	// LWZ
    0U,	// LWZ8
    0U,	// LWZCIX
    0U,	// LWZU
    0U,	// LWZU8
    0U,	// LWZUX
    0U,	// LWZUX8
    0U,	// LWZX
    0U,	// LWZX8
    0U,	// LWZXTLS
    0U,	// LWZXTLS_
    0U,	// LWZXTLS_32
    0U,	// LWZtoc
    0U,	// LWZtocL
    0U,	// LXSD
    0U,	// LXSDX
    0U,	// LXSIBZX
    0U,	// LXSIHZX
    0U,	// LXSIWAX
    0U,	// LXSIWZX
    0U,	// LXSSP
    0U,	// LXSSPX
    0U,	// LXV
    0U,	// LXVB16X
    0U,	// LXVD2X
    0U,	// LXVDSX
    0U,	// LXVH8X
    0U,	// LXVKQ
    0U,	// LXVL
    0U,	// LXVLL
    0U,	// LXVP
    0U,	// LXVPX
    0U,	// LXVRBX
    0U,	// LXVRDX
    0U,	// LXVRHX
    0U,	// LXVRWX
    0U,	// LXVW4X
    0U,	// LXVWSX
    0U,	// LXVX
    0U,	// MADDHD
    0U,	// MADDHDU
    0U,	// MADDLD
    0U,	// MADDLD8
    0U,	// MBAR
    0U,	// MCRF
    0U,	// MCRFS
    0U,	// MCRXRX
    0U,	// MFBHRBE
    0U,	// MFCR
    0U,	// MFCR8
    0U,	// MFCTR
    0U,	// MFCTR8
    0U,	// MFDCR
    0U,	// MFFS
    0U,	// MFFSCDRN
    0U,	// MFFSCDRNI
    0U,	// MFFSCE
    0U,	// MFFSCRN
    0U,	// MFFSCRNI
    0U,	// MFFSL
    0U,	// MFFS_rec
    0U,	// MFLR
    0U,	// MFLR8
    0U,	// MFMSR
    0U,	// MFOCRF
    0U,	// MFOCRF8
    0U,	// MFPMR
    0U,	// MFSPR
    0U,	// MFSPR8
    0U,	// MFSR
    0U,	// MFSRIN
    0U,	// MFTB
    0U,	// MFTB8
    0U,	// MFUDSCR
    0U,	// MFVRD
    0U,	// MFVRSAVE
    0U,	// MFVRSAVEv
    0U,	// MFVRWZ
    0U,	// MFVSCR
    0U,	// MFVSRD
    0U,	// MFVSRLD
    0U,	// MFVSRWZ
    0U,	// MODSD
    0U,	// MODSW
    0U,	// MODUD
    0U,	// MODUW
    0U,	// MSGSYNC
    0U,	// MSYNC
    0U,	// MTCRF
    0U,	// MTCRF8
    0U,	// MTCTR
    0U,	// MTCTR8
    0U,	// MTCTR8Pseudo
    0U,	// MTCTR8loop
    0U,	// MTCTRPseudo
    0U,	// MTCTRloop
    0U,	// MTDCR
    0U,	// MTFSB0
    0U,	// MTFSB1
    0U,	// MTFSF
    0U,	// MTFSFI
    0U,	// MTFSFI_rec
    0U,	// MTFSFIb
    0U,	// MTFSF_rec
    0U,	// MTFSFb
    0U,	// MTLR
    0U,	// MTLR8
    0U,	// MTMSR
    0U,	// MTMSRD
    0U,	// MTOCRF
    0U,	// MTOCRF8
    0U,	// MTPMR
    0U,	// MTSPR
    0U,	// MTSPR8
    0U,	// MTSR
    0U,	// MTSRIN
    0U,	// MTUDSCR
    0U,	// MTVRD
    0U,	// MTVRSAVE
    0U,	// MTVRSAVEv
    0U,	// MTVRWA
    0U,	// MTVRWZ
    0U,	// MTVSCR
    0U,	// MTVSRBM
    0U,	// MTVSRBMI
    0U,	// MTVSRD
    0U,	// MTVSRDD
    0U,	// MTVSRDM
    0U,	// MTVSRHM
    0U,	// MTVSRQM
    0U,	// MTVSRWA
    0U,	// MTVSRWM
    0U,	// MTVSRWS
    0U,	// MTVSRWZ
    0U,	// MULHD
    0U,	// MULHDU
    0U,	// MULHDU_rec
    0U,	// MULHD_rec
    0U,	// MULHW
    0U,	// MULHWU
    0U,	// MULHWU_rec
    0U,	// MULHW_rec
    0U,	// MULLD
    0U,	// MULLDO
    0U,	// MULLDO_rec
    0U,	// MULLD_rec
    0U,	// MULLI
    0U,	// MULLI8
    0U,	// MULLW
    0U,	// MULLWO
    0U,	// MULLWO_rec
    0U,	// MULLW_rec
    0U,	// MoveGOTtoLR
    0U,	// MovePCtoLR
    0U,	// MovePCtoLR8
    0U,	// NAND
    0U,	// NAND8
    0U,	// NAND8_rec
    0U,	// NAND_rec
    0U,	// NAP
    0U,	// NEG
    0U,	// NEG8
    0U,	// NEG8O
    0U,	// NEG8O_rec
    0U,	// NEG8_rec
    0U,	// NEGO
    0U,	// NEGO_rec
    0U,	// NEG_rec
    0U,	// NOP
    0U,	// NOP_GT_PWR6
    0U,	// NOP_GT_PWR7
    0U,	// NOR
    0U,	// NOR8
    0U,	// NOR8_rec
    0U,	// NOR_rec
    0U,	// OR
    0U,	// OR8
    0U,	// OR8_rec
    0U,	// ORC
    0U,	// ORC8
    0U,	// ORC8_rec
    0U,	// ORC_rec
    0U,	// ORI
    0U,	// ORI8
    0U,	// ORIS
    0U,	// ORIS8
    0U,	// OR_rec
    0U,	// PADDI
    0U,	// PADDI8
    0U,	// PADDI8pc
    0U,	// PADDIdtprel
    0U,	// PADDIpc
    0U,	// PDEPD
    0U,	// PEXTD
    0U,	// PLBZ
    0U,	// PLBZ8
    0U,	// PLBZ8pc
    0U,	// PLBZpc
    0U,	// PLD
    0U,	// PLDpc
    0U,	// PLFD
    0U,	// PLFDpc
    0U,	// PLFS
    0U,	// PLFSpc
    0U,	// PLHA
    0U,	// PLHA8
    0U,	// PLHA8pc
    0U,	// PLHApc
    0U,	// PLHZ
    0U,	// PLHZ8
    0U,	// PLHZ8pc
    0U,	// PLHZpc
    0U,	// PLI
    0U,	// PLI8
    0U,	// PLWA
    0U,	// PLWA8
    0U,	// PLWA8pc
    0U,	// PLWApc
    0U,	// PLWZ
    0U,	// PLWZ8
    0U,	// PLWZ8pc
    0U,	// PLWZpc
    0U,	// PLXSD
    0U,	// PLXSDpc
    0U,	// PLXSSP
    0U,	// PLXSSPpc
    0U,	// PLXV
    0U,	// PLXVP
    0U,	// PLXVPpc
    0U,	// PLXVpc
    0U,	// PMXVBF16GER2
    1U,	// PMXVBF16GER2NN
    1U,	// PMXVBF16GER2NP
    1U,	// PMXVBF16GER2PN
    1U,	// PMXVBF16GER2PP
    0U,	// PMXVF16GER2
    1U,	// PMXVF16GER2NN
    1U,	// PMXVF16GER2NP
    1U,	// PMXVF16GER2PN
    1U,	// PMXVF16GER2PP
    2U,	// PMXVF32GER
    0U,	// PMXVF32GERNN
    0U,	// PMXVF32GERNP
    0U,	// PMXVF32GERPN
    0U,	// PMXVF32GERPP
    0U,	// PMXVF64GER
    0U,	// PMXVF64GERNN
    0U,	// PMXVF64GERNP
    0U,	// PMXVF64GERPN
    0U,	// PMXVF64GERPP
    0U,	// PMXVI16GER2
    1U,	// PMXVI16GER2PP
    0U,	// PMXVI16GER2S
    1U,	// PMXVI16GER2SPP
    8U,	// PMXVI4GER8
    3U,	// PMXVI4GER8PP
    16U,	// PMXVI8GER4
    4U,	// PMXVI8GER4PP
    4U,	// PMXVI8GER4SPP
    0U,	// POPCNTB
    0U,	// POPCNTB8
    0U,	// POPCNTD
    0U,	// POPCNTW
    0U,	// PPC32GOT
    0U,	// PPC32PICGOT
    0U,	// PREPARE_PROBED_ALLOCA_32
    0U,	// PREPARE_PROBED_ALLOCA_64
    0U,	// PREPARE_PROBED_ALLOCA_NEGSIZE_SAME_REG_32
    0U,	// PREPARE_PROBED_ALLOCA_NEGSIZE_SAME_REG_64
    0U,	// PROBED_ALLOCA_32
    0U,	// PROBED_ALLOCA_64
    0U,	// PROBED_STACKALLOC_32
    0U,	// PROBED_STACKALLOC_64
    0U,	// PSTB
    0U,	// PSTB8
    0U,	// PSTB8pc
    0U,	// PSTBpc
    0U,	// PSTD
    0U,	// PSTDpc
    0U,	// PSTFD
    0U,	// PSTFDpc
    0U,	// PSTFS
    0U,	// PSTFSpc
    0U,	// PSTH
    0U,	// PSTH8
    0U,	// PSTH8pc
    0U,	// PSTHpc
    0U,	// PSTW
    0U,	// PSTW8
    0U,	// PSTW8pc
    0U,	// PSTWpc
    0U,	// PSTXSD
    0U,	// PSTXSDpc
    0U,	// PSTXSSP
    0U,	// PSTXSSPpc
    0U,	// PSTXV
    0U,	// PSTXVP
    0U,	// PSTXVPpc
    0U,	// PSTXVpc
    0U,	// PseudoEIEIO
    0U,	// RESTORE_ACC
    0U,	// RESTORE_CR
    0U,	// RESTORE_CRBIT
    0U,	// RESTORE_QUADWORD
    0U,	// RESTORE_UACC
    0U,	// RFCI
    0U,	// RFDI
    0U,	// RFEBB
    0U,	// RFI
    0U,	// RFID
    0U,	// RFMCI
    0U,	// RLDCL
    0U,	// RLDCL_rec
    0U,	// RLDCR
    0U,	// RLDCR_rec
    0U,	// RLDIC
    0U,	// RLDICL
    0U,	// RLDICL_32
    0U,	// RLDICL_32_64
    0U,	// RLDICL_32_rec
    0U,	// RLDICL_rec
    0U,	// RLDICR
    0U,	// RLDICR_32
    0U,	// RLDICR_rec
    0U,	// RLDIC_rec
    0U,	// RLDIMI
    0U,	// RLDIMI_rec
    0U,	// RLWIMI
    0U,	// RLWIMI8
    0U,	// RLWIMI8_rec
    0U,	// RLWIMI_rec
    0U,	// RLWINM
    0U,	// RLWINM8
    0U,	// RLWINM8_rec
    0U,	// RLWINM_rec
    0U,	// RLWNM
    0U,	// RLWNM8
    0U,	// RLWNM8_rec
    0U,	// RLWNM_rec
    0U,	// ReadTB
    0U,	// SC
    0U,	// SELECT_CC_F16
    0U,	// SELECT_CC_F4
    0U,	// SELECT_CC_F8
    0U,	// SELECT_CC_I4
    0U,	// SELECT_CC_I8
    0U,	// SELECT_CC_SPE
    0U,	// SELECT_CC_SPE4
    0U,	// SELECT_CC_VRRC
    0U,	// SELECT_CC_VSFRC
    0U,	// SELECT_CC_VSRC
    0U,	// SELECT_CC_VSSRC
    0U,	// SELECT_F16
    0U,	// SELECT_F4
    0U,	// SELECT_F8
    0U,	// SELECT_I4
    0U,	// SELECT_I8
    0U,	// SELECT_SPE
    0U,	// SELECT_SPE4
    0U,	// SELECT_VRRC
    0U,	// SELECT_VSFRC
    0U,	// SELECT_VSRC
    0U,	// SELECT_VSSRC
    0U,	// SETB
    0U,	// SETB8
    0U,	// SETBC
    0U,	// SETBC8
    0U,	// SETBCR
    0U,	// SETBCR8
    0U,	// SETFLM
    0U,	// SETNBC
    0U,	// SETNBC8
    0U,	// SETNBCR
    0U,	// SETNBCR8
    0U,	// SETRND
    0U,	// SETRNDi
    0U,	// SLBFEE_rec
    0U,	// SLBIA
    0U,	// SLBIE
    0U,	// SLBIEG
    0U,	// SLBMFEE
    0U,	// SLBMFEV
    0U,	// SLBMTE
    0U,	// SLBSYNC
    0U,	// SLD
    0U,	// SLD_rec
    0U,	// SLW
    0U,	// SLW8
    0U,	// SLW8_rec
    0U,	// SLW_rec
    0U,	// SPELWZ
    0U,	// SPELWZX
    0U,	// SPESTW
    0U,	// SPESTWX
    0U,	// SPILL_ACC
    0U,	// SPILL_CR
    0U,	// SPILL_CRBIT
    0U,	// SPILL_QUADWORD
    0U,	// SPILL_UACC
    0U,	// SPLIT_QUADWORD
    0U,	// SRAD
    0U,	// SRADI
    0U,	// SRADI_32
    0U,	// SRADI_rec
    0U,	// SRAD_rec
    0U,	// SRAW
    0U,	// SRAWI
    0U,	// SRAWI_rec
    0U,	// SRAW_rec
    0U,	// SRD
    0U,	// SRD_rec
    0U,	// SRW
    0U,	// SRW8
    0U,	// SRW8_rec
    0U,	// SRW_rec
    0U,	// STB
    0U,	// STB8
    0U,	// STBCIX
    0U,	// STBCX
    0U,	// STBEPX
    0U,	// STBU
    0U,	// STBU8
    0U,	// STBUX
    0U,	// STBUX8
    0U,	// STBX
    0U,	// STBX8
    0U,	// STBXTLS
    0U,	// STBXTLS_
    0U,	// STBXTLS_32
    0U,	// STD
    0U,	// STDAT
    0U,	// STDBRX
    0U,	// STDCIX
    0U,	// STDCX
    0U,	// STDU
    0U,	// STDUX
    0U,	// STDX
    0U,	// STDXTLS
    0U,	// STDXTLS_
    0U,	// STFD
    0U,	// STFDEPX
    0U,	// STFDU
    0U,	// STFDUX
    0U,	// STFDX
    0U,	// STFIWX
    0U,	// STFS
    0U,	// STFSU
    0U,	// STFSUX
    0U,	// STFSX
    0U,	// STH
    0U,	// STH8
    0U,	// STHBRX
    0U,	// STHCIX
    0U,	// STHCX
    0U,	// STHEPX
    0U,	// STHU
    0U,	// STHU8
    0U,	// STHUX
    0U,	// STHUX8
    0U,	// STHX
    0U,	// STHX8
    0U,	// STHXTLS
    0U,	// STHXTLS_
    0U,	// STHXTLS_32
    0U,	// STMW
    0U,	// STOP
    0U,	// STQ
    0U,	// STQCX
    0U,	// STQX_PSEUDO
    0U,	// STSWI
    0U,	// STVEBX
    0U,	// STVEHX
    0U,	// STVEWX
    0U,	// STVX
    0U,	// STVXL
    0U,	// STW
    0U,	// STW8
    0U,	// STWAT
    0U,	// STWBRX
    0U,	// STWCIX
    0U,	// STWCX
    0U,	// STWEPX
    0U,	// STWU
    0U,	// STWU8
    0U,	// STWUX
    0U,	// STWUX8
    0U,	// STWX
    0U,	// STWX8
    0U,	// STWXTLS
    0U,	// STWXTLS_
    0U,	// STWXTLS_32
    0U,	// STXSD
    0U,	// STXSDX
    0U,	// STXSIBX
    0U,	// STXSIBXv
    0U,	// STXSIHX
    0U,	// STXSIHXv
    0U,	// STXSIWX
    0U,	// STXSSP
    0U,	// STXSSPX
    0U,	// STXV
    0U,	// STXVB16X
    0U,	// STXVD2X
    0U,	// STXVH8X
    0U,	// STXVL
    0U,	// STXVLL
    0U,	// STXVP
    0U,	// STXVPX
    0U,	// STXVRBX
    0U,	// STXVRDX
    0U,	// STXVRHX
    0U,	// STXVRWX
    0U,	// STXVW4X
    0U,	// STXVX
    0U,	// SUBF
    0U,	// SUBF8
    0U,	// SUBF8O
    0U,	// SUBF8O_rec
    0U,	// SUBF8_rec
    0U,	// SUBFC
    0U,	// SUBFC8
    0U,	// SUBFC8O
    0U,	// SUBFC8O_rec
    0U,	// SUBFC8_rec
    0U,	// SUBFCO
    0U,	// SUBFCO_rec
    0U,	// SUBFC_rec
    0U,	// SUBFE
    0U,	// SUBFE8
    0U,	// SUBFE8O
    0U,	// SUBFE8O_rec
    0U,	// SUBFE8_rec
    0U,	// SUBFEO
    0U,	// SUBFEO_rec
    0U,	// SUBFE_rec
    0U,	// SUBFIC
    0U,	// SUBFIC8
    0U,	// SUBFME
    0U,	// SUBFME8
    0U,	// SUBFME8O
    0U,	// SUBFME8O_rec
    0U,	// SUBFME8_rec
    0U,	// SUBFMEO
    0U,	// SUBFMEO_rec
    0U,	// SUBFME_rec
    0U,	// SUBFO
    0U,	// SUBFO_rec
    0U,	// SUBFZE
    0U,	// SUBFZE8
    0U,	// SUBFZE8O
    0U,	// SUBFZE8O_rec
    0U,	// SUBFZE8_rec
    0U,	// SUBFZEO
    0U,	// SUBFZEO_rec
    0U,	// SUBFZE_rec
    0U,	// SUBF_rec
    0U,	// SYNC
    0U,	// TABORT
    0U,	// TABORTDC
    0U,	// TABORTDCI
    0U,	// TABORTWC
    0U,	// TABORTWCI
    0U,	// TAILB
    0U,	// TAILB8
    0U,	// TAILBA
    0U,	// TAILBA8
    0U,	// TAILBCTR
    0U,	// TAILBCTR8
    0U,	// TBEGIN
    0U,	// TBEGIN_RET
    0U,	// TCHECK
    0U,	// TCHECK_RET
    0U,	// TCRETURNai
    0U,	// TCRETURNai8
    0U,	// TCRETURNdi
    0U,	// TCRETURNdi8
    0U,	// TCRETURNri
    0U,	// TCRETURNri8
    0U,	// TD
    0U,	// TDI
    0U,	// TEND
    0U,	// TLBIA
    0U,	// TLBIE
    0U,	// TLBIEL
    0U,	// TLBIVAX
    0U,	// TLBLD
    0U,	// TLBLI
    0U,	// TLBRE
    0U,	// TLBRE2
    0U,	// TLBSX
    0U,	// TLBSX2
    0U,	// TLBSX2D
    0U,	// TLBSYNC
    0U,	// TLBWE
    0U,	// TLBWE2
    0U,	// TLSGDAIX
    0U,	// TLSGDAIX8
    0U,	// TRAP
    0U,	// TRECHKPT
    0U,	// TRECLAIM
    0U,	// TSR
    0U,	// TW
    0U,	// TWI
    0U,	// UNENCODED_NOP
    0U,	// UpdateGBR
    0U,	// VABSDUB
    0U,	// VABSDUH
    0U,	// VABSDUW
    0U,	// VADDCUQ
    0U,	// VADDCUW
    0U,	// VADDECUQ
    0U,	// VADDEUQM
    0U,	// VADDFP
    0U,	// VADDSBS
    0U,	// VADDSHS
    0U,	// VADDSWS
    0U,	// VADDUBM
    0U,	// VADDUBS
    0U,	// VADDUDM
    0U,	// VADDUHM
    0U,	// VADDUHS
    0U,	// VADDUQM
    0U,	// VADDUWM
    0U,	// VADDUWS
    0U,	// VAND
    0U,	// VANDC
    0U,	// VAVGSB
    0U,	// VAVGSH
    0U,	// VAVGSW
    0U,	// VAVGUB
    0U,	// VAVGUH
    0U,	// VAVGUW
    0U,	// VBPERMD
    0U,	// VBPERMQ
    0U,	// VCFSX
    0U,	// VCFSX_0
    0U,	// VCFUGED
    0U,	// VCFUX
    0U,	// VCFUX_0
    0U,	// VCIPHER
    0U,	// VCIPHERLAST
    0U,	// VCLRLB
    0U,	// VCLRRB
    0U,	// VCLZB
    0U,	// VCLZD
    0U,	// VCLZDM
    0U,	// VCLZH
    0U,	// VCLZLSBB
    0U,	// VCLZW
    0U,	// VCMPBFP
    0U,	// VCMPBFP_rec
    0U,	// VCMPEQFP
    0U,	// VCMPEQFP_rec
    0U,	// VCMPEQUB
    0U,	// VCMPEQUB_rec
    0U,	// VCMPEQUD
    0U,	// VCMPEQUD_rec
    0U,	// VCMPEQUH
    0U,	// VCMPEQUH_rec
    0U,	// VCMPEQUQ
    0U,	// VCMPEQUQ_rec
    0U,	// VCMPEQUW
    0U,	// VCMPEQUW_rec
    0U,	// VCMPGEFP
    0U,	// VCMPGEFP_rec
    0U,	// VCMPGTFP
    0U,	// VCMPGTFP_rec
    0U,	// VCMPGTSB
    0U,	// VCMPGTSB_rec
    0U,	// VCMPGTSD
    0U,	// VCMPGTSD_rec
    0U,	// VCMPGTSH
    0U,	// VCMPGTSH_rec
    0U,	// VCMPGTSQ
    0U,	// VCMPGTSQ_rec
    0U,	// VCMPGTSW
    0U,	// VCMPGTSW_rec
    0U,	// VCMPGTUB
    0U,	// VCMPGTUB_rec
    0U,	// VCMPGTUD
    0U,	// VCMPGTUD_rec
    0U,	// VCMPGTUH
    0U,	// VCMPGTUH_rec
    0U,	// VCMPGTUQ
    0U,	// VCMPGTUQ_rec
    0U,	// VCMPGTUW
    0U,	// VCMPGTUW_rec
    0U,	// VCMPNEB
    0U,	// VCMPNEB_rec
    0U,	// VCMPNEH
    0U,	// VCMPNEH_rec
    0U,	// VCMPNEW
    0U,	// VCMPNEW_rec
    0U,	// VCMPNEZB
    0U,	// VCMPNEZB_rec
    0U,	// VCMPNEZH
    0U,	// VCMPNEZH_rec
    0U,	// VCMPNEZW
    0U,	// VCMPNEZW_rec
    0U,	// VCMPSQ
    0U,	// VCMPUQ
    0U,	// VCNTMBB
    0U,	// VCNTMBD
    0U,	// VCNTMBH
    0U,	// VCNTMBW
    0U,	// VCTSXS
    0U,	// VCTSXS_0
    0U,	// VCTUXS
    0U,	// VCTUXS_0
    0U,	// VCTZB
    0U,	// VCTZD
    0U,	// VCTZDM
    0U,	// VCTZH
    0U,	// VCTZLSBB
    0U,	// VCTZW
    0U,	// VDIVESD
    0U,	// VDIVESQ
    0U,	// VDIVESW
    0U,	// VDIVEUD
    0U,	// VDIVEUQ
    0U,	// VDIVEUW
    0U,	// VDIVSD
    0U,	// VDIVSQ
    0U,	// VDIVSW
    0U,	// VDIVUD
    0U,	// VDIVUQ
    0U,	// VDIVUW
    0U,	// VEQV
    0U,	// VEXPANDBM
    0U,	// VEXPANDDM
    0U,	// VEXPANDHM
    0U,	// VEXPANDQM
    0U,	// VEXPANDWM
    0U,	// VEXPTEFP
    0U,	// VEXTDDVLX
    0U,	// VEXTDDVRX
    0U,	// VEXTDUBVLX
    0U,	// VEXTDUBVRX
    0U,	// VEXTDUHVLX
    0U,	// VEXTDUHVRX
    0U,	// VEXTDUWVLX
    0U,	// VEXTDUWVRX
    0U,	// VEXTRACTBM
    0U,	// VEXTRACTD
    0U,	// VEXTRACTDM
    0U,	// VEXTRACTHM
    0U,	// VEXTRACTQM
    0U,	// VEXTRACTUB
    0U,	// VEXTRACTUH
    0U,	// VEXTRACTUW
    0U,	// VEXTRACTWM
    0U,	// VEXTSB2D
    0U,	// VEXTSB2Ds
    0U,	// VEXTSB2W
    0U,	// VEXTSB2Ws
    0U,	// VEXTSD2Q
    0U,	// VEXTSH2D
    0U,	// VEXTSH2Ds
    0U,	// VEXTSH2W
    0U,	// VEXTSH2Ws
    0U,	// VEXTSW2D
    0U,	// VEXTSW2Ds
    0U,	// VEXTUBLX
    0U,	// VEXTUBRX
    0U,	// VEXTUHLX
    0U,	// VEXTUHRX
    0U,	// VEXTUWLX
    0U,	// VEXTUWRX
    0U,	// VGBBD
    0U,	// VGNB
    0U,	// VINSBLX
    0U,	// VINSBRX
    0U,	// VINSBVLX
    0U,	// VINSBVRX
    0U,	// VINSD
    0U,	// VINSDLX
    0U,	// VINSDRX
    0U,	// VINSERTB
    0U,	// VINSERTD
    0U,	// VINSERTH
    0U,	// VINSERTW
    0U,	// VINSHLX
    0U,	// VINSHRX
    0U,	// VINSHVLX
    0U,	// VINSHVRX
    0U,	// VINSW
    0U,	// VINSWLX
    0U,	// VINSWRX
    0U,	// VINSWVLX
    0U,	// VINSWVRX
    0U,	// VLOGEFP
    0U,	// VMADDFP
    0U,	// VMAXFP
    0U,	// VMAXSB
    0U,	// VMAXSD
    0U,	// VMAXSH
    0U,	// VMAXSW
    0U,	// VMAXUB
    0U,	// VMAXUD
    0U,	// VMAXUH
    0U,	// VMAXUW
    0U,	// VMHADDSHS
    0U,	// VMHRADDSHS
    0U,	// VMINFP
    0U,	// VMINSB
    0U,	// VMINSD
    0U,	// VMINSH
    0U,	// VMINSW
    0U,	// VMINUB
    0U,	// VMINUD
    0U,	// VMINUH
    0U,	// VMINUW
    0U,	// VMLADDUHM
    0U,	// VMODSD
    0U,	// VMODSQ
    0U,	// VMODSW
    0U,	// VMODUD
    0U,	// VMODUQ
    0U,	// VMODUW
    0U,	// VMRGEW
    0U,	// VMRGHB
    0U,	// VMRGHH
    0U,	// VMRGHW
    0U,	// VMRGLB
    0U,	// VMRGLH
    0U,	// VMRGLW
    0U,	// VMRGOW
    0U,	// VMSUMCUD
    0U,	// VMSUMMBM
    0U,	// VMSUMSHM
    0U,	// VMSUMSHS
    0U,	// VMSUMUBM
    0U,	// VMSUMUDM
    0U,	// VMSUMUHM
    0U,	// VMSUMUHS
    0U,	// VMUL10CUQ
    0U,	// VMUL10ECUQ
    0U,	// VMUL10EUQ
    0U,	// VMUL10UQ
    0U,	// VMULESB
    0U,	// VMULESD
    0U,	// VMULESH
    0U,	// VMULESW
    0U,	// VMULEUB
    0U,	// VMULEUD
    0U,	// VMULEUH
    0U,	// VMULEUW
    0U,	// VMULHSD
    0U,	// VMULHSW
    0U,	// VMULHUD
    0U,	// VMULHUW
    0U,	// VMULLD
    0U,	// VMULOSB
    0U,	// VMULOSD
    0U,	// VMULOSH
    0U,	// VMULOSW
    0U,	// VMULOUB
    0U,	// VMULOUD
    0U,	// VMULOUH
    0U,	// VMULOUW
    0U,	// VMULUWM
    0U,	// VNAND
    0U,	// VNCIPHER
    0U,	// VNCIPHERLAST
    0U,	// VNEGD
    0U,	// VNEGW
    0U,	// VNMSUBFP
    0U,	// VNOR
    0U,	// VOR
    0U,	// VORC
    0U,	// VPDEPD
    0U,	// VPERM
    0U,	// VPERMR
    0U,	// VPERMXOR
    0U,	// VPEXTD
    0U,	// VPKPX
    0U,	// VPKSDSS
    0U,	// VPKSDUS
    0U,	// VPKSHSS
    0U,	// VPKSHUS
    0U,	// VPKSWSS
    0U,	// VPKSWUS
    0U,	// VPKUDUM
    0U,	// VPKUDUS
    0U,	// VPKUHUM
    0U,	// VPKUHUS
    0U,	// VPKUWUM
    0U,	// VPKUWUS
    0U,	// VPMSUMB
    0U,	// VPMSUMD
    0U,	// VPMSUMH
    0U,	// VPMSUMW
    0U,	// VPOPCNTB
    0U,	// VPOPCNTD
    0U,	// VPOPCNTH
    0U,	// VPOPCNTW
    0U,	// VPRTYBD
    0U,	// VPRTYBQ
    0U,	// VPRTYBW
    0U,	// VREFP
    0U,	// VRFIM
    0U,	// VRFIN
    0U,	// VRFIP
    0U,	// VRFIZ
    0U,	// VRLB
    0U,	// VRLD
    0U,	// VRLDMI
    0U,	// VRLDNM
    0U,	// VRLH
    0U,	// VRLQ
    0U,	// VRLQMI
    0U,	// VRLQNM
    0U,	// VRLW
    0U,	// VRLWMI
    0U,	// VRLWNM
    0U,	// VRSQRTEFP
    0U,	// VSBOX
    0U,	// VSEL
    0U,	// VSHASIGMAD
    0U,	// VSHASIGMAW
    0U,	// VSL
    0U,	// VSLB
    0U,	// VSLD
    0U,	// VSLDBI
    0U,	// VSLDOI
    0U,	// VSLH
    0U,	// VSLO
    0U,	// VSLQ
    0U,	// VSLV
    0U,	// VSLW
    0U,	// VSPLTB
    0U,	// VSPLTBs
    0U,	// VSPLTH
    0U,	// VSPLTHs
    0U,	// VSPLTISB
    0U,	// VSPLTISH
    0U,	// VSPLTISW
    0U,	// VSPLTW
    0U,	// VSR
    0U,	// VSRAB
    0U,	// VSRAD
    0U,	// VSRAH
    0U,	// VSRAQ
    0U,	// VSRAW
    0U,	// VSRB
    0U,	// VSRD
    0U,	// VSRDBI
    0U,	// VSRH
    0U,	// VSRO
    0U,	// VSRQ
    0U,	// VSRV
    0U,	// VSRW
    0U,	// VSTRIBL
    0U,	// VSTRIBL_rec
    0U,	// VSTRIBR
    0U,	// VSTRIBR_rec
    0U,	// VSTRIHL
    0U,	// VSTRIHL_rec
    0U,	// VSTRIHR
    0U,	// VSTRIHR_rec
    0U,	// VSUBCUQ
    0U,	// VSUBCUW
    0U,	// VSUBECUQ
    0U,	// VSUBEUQM
    0U,	// VSUBFP
    0U,	// VSUBSBS
    0U,	// VSUBSHS
    0U,	// VSUBSWS
    0U,	// VSUBUBM
    0U,	// VSUBUBS
    0U,	// VSUBUDM
    0U,	// VSUBUHM
    0U,	// VSUBUHS
    0U,	// VSUBUQM
    0U,	// VSUBUWM
    0U,	// VSUBUWS
    0U,	// VSUM2SWS
    0U,	// VSUM4SBS
    0U,	// VSUM4SHS
    0U,	// VSUM4UBS
    0U,	// VSUMSWS
    0U,	// VUPKHPX
    0U,	// VUPKHSB
    0U,	// VUPKHSH
    0U,	// VUPKHSW
    0U,	// VUPKLPX
    0U,	// VUPKLSB
    0U,	// VUPKLSH
    0U,	// VUPKLSW
    0U,	// VXOR
    0U,	// V_SET0
    0U,	// V_SET0B
    0U,	// V_SET0H
    0U,	// V_SETALLONES
    0U,	// V_SETALLONESB
    0U,	// V_SETALLONESH
    0U,	// WAIT
    0U,	// WRTEE
    0U,	// WRTEEI
    0U,	// XOR
    0U,	// XOR8
    0U,	// XOR8_rec
    0U,	// XORI
    0U,	// XORI8
    0U,	// XORIS
    0U,	// XORIS8
    0U,	// XOR_rec
    0U,	// XSABSDP
    0U,	// XSABSQP
    0U,	// XSADDDP
    0U,	// XSADDQP
    0U,	// XSADDQPO
    0U,	// XSADDSP
    0U,	// XSCMPEQDP
    0U,	// XSCMPEXPDP
    0U,	// XSCMPEXPQP
    0U,	// XSCMPGEDP
    0U,	// XSCMPGTDP
    0U,	// XSCMPODP
    0U,	// XSCMPOQP
    0U,	// XSCMPUDP
    0U,	// XSCMPUQP
    0U,	// XSCPSGNDP
    0U,	// XSCPSGNQP
    0U,	// XSCVDPHP
    0U,	// XSCVDPQP
    0U,	// XSCVDPSP
    0U,	// XSCVDPSPN
    0U,	// XSCVDPSXDS
    0U,	// XSCVDPSXDSs
    0U,	// XSCVDPSXWS
    0U,	// XSCVDPSXWSs
    0U,	// XSCVDPUXDS
    0U,	// XSCVDPUXDSs
    0U,	// XSCVDPUXWS
    0U,	// XSCVDPUXWSs
    0U,	// XSCVHPDP
    0U,	// XSCVQPDP
    0U,	// XSCVQPDPO
    0U,	// XSCVQPSDZ
    0U,	// XSCVQPSQZ
    0U,	// XSCVQPSWZ
    0U,	// XSCVQPUDZ
    0U,	// XSCVQPUQZ
    0U,	// XSCVQPUWZ
    0U,	// XSCVSDQP
    0U,	// XSCVSPDP
    0U,	// XSCVSPDPN
    0U,	// XSCVSQQP
    0U,	// XSCVSXDDP
    0U,	// XSCVSXDSP
    0U,	// XSCVUDQP
    0U,	// XSCVUQQP
    0U,	// XSCVUXDDP
    0U,	// XSCVUXDSP
    0U,	// XSDIVDP
    0U,	// XSDIVQP
    0U,	// XSDIVQPO
    0U,	// XSDIVSP
    0U,	// XSIEXPDP
    0U,	// XSIEXPQP
    0U,	// XSMADDADP
    0U,	// XSMADDASP
    0U,	// XSMADDMDP
    0U,	// XSMADDMSP
    0U,	// XSMADDQP
    0U,	// XSMADDQPO
    0U,	// XSMAXCDP
    0U,	// XSMAXCQP
    0U,	// XSMAXDP
    0U,	// XSMAXJDP
    0U,	// XSMINCDP
    0U,	// XSMINCQP
    0U,	// XSMINDP
    0U,	// XSMINJDP
    0U,	// XSMSUBADP
    0U,	// XSMSUBASP
    0U,	// XSMSUBMDP
    0U,	// XSMSUBMSP
    0U,	// XSMSUBQP
    0U,	// XSMSUBQPO
    0U,	// XSMULDP
    0U,	// XSMULQP
    0U,	// XSMULQPO
    0U,	// XSMULSP
    0U,	// XSNABSDP
    0U,	// XSNABSDPs
    0U,	// XSNABSQP
    0U,	// XSNEGDP
    0U,	// XSNEGQP
    0U,	// XSNMADDADP
    0U,	// XSNMADDASP
    0U,	// XSNMADDMDP
    0U,	// XSNMADDMSP
    0U,	// XSNMADDQP
    0U,	// XSNMADDQPO
    0U,	// XSNMSUBADP
    0U,	// XSNMSUBASP
    0U,	// XSNMSUBMDP
    0U,	// XSNMSUBMSP
    0U,	// XSNMSUBQP
    0U,	// XSNMSUBQPO
    0U,	// XSRDPI
    0U,	// XSRDPIC
    0U,	// XSRDPIM
    0U,	// XSRDPIP
    0U,	// XSRDPIZ
    0U,	// XSREDP
    0U,	// XSRESP
    0U,	// XSRQPI
    0U,	// XSRQPIX
    0U,	// XSRQPXP
    0U,	// XSRSP
    0U,	// XSRSQRTEDP
    0U,	// XSRSQRTESP
    0U,	// XSSQRTDP
    0U,	// XSSQRTQP
    0U,	// XSSQRTQPO
    0U,	// XSSQRTSP
    0U,	// XSSUBDP
    0U,	// XSSUBQP
    0U,	// XSSUBQPO
    0U,	// XSSUBSP
    0U,	// XSTDIVDP
    0U,	// XSTSQRTDP
    0U,	// XSTSTDCDP
    0U,	// XSTSTDCQP
    0U,	// XSTSTDCSP
    0U,	// XSXEXPDP
    0U,	// XSXEXPQP
    0U,	// XSXSIGDP
    0U,	// XSXSIGQP
    0U,	// XVABSDP
    0U,	// XVABSSP
    0U,	// XVADDDP
    0U,	// XVADDSP
    0U,	// XVBF16GER2
    0U,	// XVBF16GER2NN
    0U,	// XVBF16GER2NP
    0U,	// XVBF16GER2PN
    0U,	// XVBF16GER2PP
    0U,	// XVCMPEQDP
    0U,	// XVCMPEQDP_rec
    0U,	// XVCMPEQSP
    0U,	// XVCMPEQSP_rec
    0U,	// XVCMPGEDP
    0U,	// XVCMPGEDP_rec
    0U,	// XVCMPGESP
    0U,	// XVCMPGESP_rec
    0U,	// XVCMPGTDP
    0U,	// XVCMPGTDP_rec
    0U,	// XVCMPGTSP
    0U,	// XVCMPGTSP_rec
    0U,	// XVCPSGNDP
    0U,	// XVCPSGNSP
    0U,	// XVCVBF16SPN
    0U,	// XVCVDPSP
    0U,	// XVCVDPSXDS
    0U,	// XVCVDPSXWS
    0U,	// XVCVDPUXDS
    0U,	// XVCVDPUXWS
    0U,	// XVCVHPSP
    0U,	// XVCVSPBF16
    0U,	// XVCVSPDP
    0U,	// XVCVSPHP
    0U,	// XVCVSPSXDS
    0U,	// XVCVSPSXWS
    0U,	// XVCVSPUXDS
    0U,	// XVCVSPUXWS
    0U,	// XVCVSXDDP
    0U,	// XVCVSXDSP
    0U,	// XVCVSXWDP
    0U,	// XVCVSXWSP
    0U,	// XVCVUXDDP
    0U,	// XVCVUXDSP
    0U,	// XVCVUXWDP
    0U,	// XVCVUXWSP
    0U,	// XVDIVDP
    0U,	// XVDIVSP
    0U,	// XVF16GER2
    0U,	// XVF16GER2NN
    0U,	// XVF16GER2NP
    0U,	// XVF16GER2PN
    0U,	// XVF16GER2PP
    0U,	// XVF32GER
    0U,	// XVF32GERNN
    0U,	// XVF32GERNP
    0U,	// XVF32GERPN
    0U,	// XVF32GERPP
    0U,	// XVF64GER
    0U,	// XVF64GERNN
    0U,	// XVF64GERNP
    0U,	// XVF64GERPN
    0U,	// XVF64GERPP
    0U,	// XVI16GER2
    0U,	// XVI16GER2PP
    0U,	// XVI16GER2S
    0U,	// XVI16GER2SPP
    0U,	// XVI4GER8
    0U,	// XVI4GER8PP
    0U,	// XVI8GER4
    0U,	// XVI8GER4PP
    0U,	// XVI8GER4SPP
    0U,	// XVIEXPDP
    0U,	// XVIEXPSP
    0U,	// XVMADDADP
    0U,	// XVMADDASP
    0U,	// XVMADDMDP
    0U,	// XVMADDMSP
    0U,	// XVMAXDP
    0U,	// XVMAXSP
    0U,	// XVMINDP
    0U,	// XVMINSP
    0U,	// XVMSUBADP
    0U,	// XVMSUBASP
    0U,	// XVMSUBMDP
    0U,	// XVMSUBMSP
    0U,	// XVMULDP
    0U,	// XVMULSP
    0U,	// XVNABSDP
    0U,	// XVNABSSP
    0U,	// XVNEGDP
    0U,	// XVNEGSP
    0U,	// XVNMADDADP
    0U,	// XVNMADDASP
    0U,	// XVNMADDMDP
    0U,	// XVNMADDMSP
    0U,	// XVNMSUBADP
    0U,	// XVNMSUBASP
    0U,	// XVNMSUBMDP
    0U,	// XVNMSUBMSP
    0U,	// XVRDPI
    0U,	// XVRDPIC
    0U,	// XVRDPIM
    0U,	// XVRDPIP
    0U,	// XVRDPIZ
    0U,	// XVREDP
    0U,	// XVRESP
    0U,	// XVRSPI
    0U,	// XVRSPIC
    0U,	// XVRSPIM
    0U,	// XVRSPIP
    0U,	// XVRSPIZ
    0U,	// XVRSQRTEDP
    0U,	// XVRSQRTESP
    0U,	// XVSQRTDP
    0U,	// XVSQRTSP
    0U,	// XVSUBDP
    0U,	// XVSUBSP
    0U,	// XVTDIVDP
    0U,	// XVTDIVSP
    0U,	// XVTLSBB
    0U,	// XVTSQRTDP
    0U,	// XVTSQRTSP
    0U,	// XVTSTDCDP
    0U,	// XVTSTDCSP
    0U,	// XVXEXPDP
    0U,	// XVXEXPSP
    0U,	// XVXSIGDP
    0U,	// XVXSIGSP
    0U,	// XXBLENDVB
    0U,	// XXBLENDVD
    0U,	// XXBLENDVH
    0U,	// XXBLENDVW
    0U,	// XXBRD
    0U,	// XXBRH
    0U,	// XXBRQ
    0U,	// XXBRW
    0U,	// XXEVAL
    0U,	// XXEXTRACTUW
    0U,	// XXGENPCVBM
    0U,	// XXGENPCVDM
    0U,	// XXGENPCVHM
    0U,	// XXGENPCVWM
    0U,	// XXINSERTW
    0U,	// XXLAND
    0U,	// XXLANDC
    0U,	// XXLEQV
    0U,	// XXLEQVOnes
    0U,	// XXLNAND
    0U,	// XXLNOR
    0U,	// XXLOR
    0U,	// XXLORC
    0U,	// XXLORf
    0U,	// XXLXOR
    0U,	// XXLXORdpz
    0U,	// XXLXORspz
    0U,	// XXLXORz
    0U,	// XXMFACC
    0U,	// XXMRGHW
    0U,	// XXMRGLW
    0U,	// XXMTACC
    0U,	// XXPERM
    0U,	// XXPERMDI
    0U,	// XXPERMDIs
    0U,	// XXPERMR
    0U,	// XXPERMX
    0U,	// XXSEL
    0U,	// XXSETACCZ
    0U,	// XXSLDWI
    0U,	// XXSLDWIs
    0U,	// XXSPLTI32DX
    0U,	// XXSPLTIB
    0U,	// XXSPLTIDP
    0U,	// XXSPLTIW
    0U,	// XXSPLTW
    0U,	// XXSPLTWs
    0U,	// gBC
    0U,	// gBCA
    0U,	// gBCAat
    0U,	// gBCCTR
    0U,	// gBCCTRL
    0U,	// gBCL
    0U,	// gBCLA
    0U,	// gBCLAat
    0U,	// gBCLR
    0U,	// gBCLRL
    0U,	// gBCLat
    0U,	// gBCat
  };

  // Emit the opcode for the instruction.
  uint64_t Bits = 0;
  Bits |= (uint64_t)OpInfo0[MI->getOpcode()] << 0;
  Bits |= (uint64_t)OpInfo1[MI->getOpcode()] << 32;
  Bits |= (uint64_t)OpInfo2[MI->getOpcode()] << 48;
  return {AsmStrs+(Bits & 32767)-1, Bits};

}
/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
LLVM_NO_PROFILE_INSTRUMENT_FUNCTION
void PPCInstPrinter::printInstruction(const MCInst *MI, uint64_t Address, const MCSubtargetInfo &STI, raw_ostream &O) {
  O << "\t";

  auto MnemonicInfo = getMnemonic(MI);

  O << MnemonicInfo.first;

  uint64_t Bits = MnemonicInfo.second;
  assert(Bits != 0 && "Cannot print this instruction.");

  // Fragment 0 encoded into 5 bits for 21 unique commands.
  switch ((Bits >> 15) & 31) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // DBG_VALUE, DBG_VALUE_LIST, DBG_INSTR_REF, DBG_PHI, DBG_LABEL, BUNDLE, ...
    return;
    break;
  case 1:
    // BUILD_UACC, CLRLSLDI, CLRLSLDI_rec, CLRLSLWI, CLRLSLWI_rec, CLRRDI, CL...
    printOperand(MI, 0, STI, O);
    break;
  case 2:
    // DCBFL, DCBFLP, DCBFPS, DCBFx, DCBSTPS, DCBTCT, DCBTDS, DCBTSTCT, DCBTS...
    printMemRegReg(MI, 0, STI, O);
    break;
  case 3:
    // ADJCALLSTACKDOWN, ADJCALLSTACKUP
    printU16ImmOperand(MI, 0, STI, O);
    O << ' ';
    printU16ImmOperand(MI, 1, STI, O);
    return;
    break;
  case 4:
    // B, BCLalways, BDNZ, BDNZ8, BDNZL, BDNZLm, BDNZLp, BDNZm, BDNZp, BDZ, B...
    printBranchOperand(MI, Address, 0, STI, O);
    break;
  case 5:
    // BA, BDNZA, BDNZAm, BDNZAp, BDNZLA, BDNZLAm, BDNZLAp, BDZA, BDZAm, BDZA...
    printAbsBranchOperand(MI, 0, STI, O);
    break;
  case 6:
    // BCC, BCCA, BCCCTR, BCCCTR8, BCCCTRL, BCCCTRL8, BCCL, BCCLA, BCCLR, BCC...
    printPredicateOperand(MI, 0, STI, O, "cc");
    break;
  case 7:
    // BCTRL8_LDinto_toc, BCTRL8_LDinto_toc_RM, BCTRL_LWZinto_toc, BCTRL_LWZi...
    printMemRegImm(MI, 0, STI, O);
    return;
    break;
  case 8:
    // BL8_NOP_TLS, BL8_NOTOC_TLS, BL8_TLS, BL8_TLS_, BL_TLS
    printTLSCall(MI, 0, STI, O);
    break;
  case 9:
    // DCBF, DCBT, DCBTST
    printMemRegReg(MI, 1, STI, O);
    O << ", ";
    break;
  case 10:
    // DCBTEP, DCBTSTEP
    printU5ImmOperand(MI, 2, STI, O);
    O << ", ";
    printMemRegReg(MI, 0, STI, O);
    return;
    break;
  case 11:
    // DSS, MBAR, MTFSB0, MTFSB1, TABORTDC, TABORTDCI, TABORTWC, TABORTWCI, T...
    printU5ImmOperand(MI, 0, STI, O);
    break;
  case 12:
    // DST, DST64, DSTST, DSTST64, DSTSTT, DSTSTT64, DSTT, DSTT64, MTDCR, MTV...
    printOperand(MI, 1, STI, O);
    break;
  case 13:
    // ICBLC, ICBLQ, ICBT, ICBTLS
    printU4ImmOperand(MI, 0, STI, O);
    O << ", ";
    printMemRegReg(MI, 1, STI, O);
    return;
    break;
  case 14:
    // MTFSFI, MTFSFI_rec, MTFSFIb
    printU3ImmOperand(MI, 0, STI, O);
    O << ", ";
    printU4ImmOperand(MI, 1, STI, O);
    break;
  case 15:
    // MTOCRF, MTOCRF8
    printcrbitm(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    return;
    break;
  case 16:
    // MTSR
    printU4ImmOperand(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 0, STI, O);
    return;
    break;
  case 17:
    // RFEBB, TBEGIN, TEND, TSR
    printU1ImmOperand(MI, 0, STI, O);
    return;
    break;
  case 18:
    // SYNC, WAIT
    printU2ImmOperand(MI, 0, STI, O);
    return;
    break;
  case 19:
    // XSRQPI, XSRQPIX, XSRQPXP
    printU1ImmOperand(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    O << ", ";
    printU2ImmOperand(MI, 3, STI, O);
    return;
    break;
  case 20:
    // gBCAat, gBCLAat, gBCLat, gBCat
    printATBitsAsHint(MI, 1, STI, O);
    O << ' ';
    printU5ImmOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    O << ", ";
    break;
  }


  // Fragment 1 encoded into 5 bits for 22 unique commands.
  switch ((Bits >> 20) & 31) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // BUILD_UACC, CLRLSLDI, CLRLSLDI_rec, CLRLSLWI, CLRLSLWI_rec, CLRRDI, CL...
    O << ", ";
    break;
  case 1:
    // DCBFL, DCBFLP, DCBFPS, DCBFx, DCBSTPS, DCBTSTT, DCBTSTx, DCBTT, DCBTx,...
    return;
    break;
  case 2:
    // ATOMIC_CMP_SWAP_I16, ATOMIC_CMP_SWAP_I32, TCRETURNai, TCRETURNai8, TCR...
    O << ' ';
    break;
  case 3:
    // BCC, CTRL_DEP
    printPredicateOperand(MI, 0, STI, O, "pm");
    O << ' ';
    printPredicateOperand(MI, 0, STI, O, "reg");
    O << ", ";
    printBranchOperand(MI, Address, 2, STI, O);
    return;
    break;
  case 4:
    // BCCA
    O << 'a';
    printPredicateOperand(MI, 0, STI, O, "pm");
    O << ' ';
    printPredicateOperand(MI, 0, STI, O, "reg");
    O << ", ";
    printAbsBranchOperand(MI, 2, STI, O);
    return;
    break;
  case 5:
    // BCCCTR, BCCCTR8
    O << "ctr";
    printPredicateOperand(MI, 0, STI, O, "pm");
    O << ' ';
    printPredicateOperand(MI, 0, STI, O, "reg");
    return;
    break;
  case 6:
    // BCCCTRL, BCCCTRL8
    O << "ctrl";
    printPredicateOperand(MI, 0, STI, O, "pm");
    O << ' ';
    printPredicateOperand(MI, 0, STI, O, "reg");
    return;
    break;
  case 7:
    // BCCL
    O << 'l';
    printPredicateOperand(MI, 0, STI, O, "pm");
    O << ' ';
    printPredicateOperand(MI, 0, STI, O, "reg");
    O << ", ";
    printBranchOperand(MI, Address, 2, STI, O);
    return;
    break;
  case 8:
    // BCCLA
    O << "la";
    printPredicateOperand(MI, 0, STI, O, "pm");
    O << ' ';
    printPredicateOperand(MI, 0, STI, O, "reg");
    O << ", ";
    printAbsBranchOperand(MI, 2, STI, O);
    return;
    break;
  case 9:
    // BCCLR
    O << "lr";
    printPredicateOperand(MI, 0, STI, O, "pm");
    O << ' ';
    printPredicateOperand(MI, 0, STI, O, "reg");
    return;
    break;
  case 10:
    // BCCLRL
    O << "lrl";
    printPredicateOperand(MI, 0, STI, O, "pm");
    O << ' ';
    printPredicateOperand(MI, 0, STI, O, "reg");
    return;
    break;
  case 11:
    // BCCTR, BCCTR8, BCCTR8n, BCCTRL, BCCTRL8, BCCTRL8n, BCCTRLn, BCCTRn, BC...
    O << ", 0";
    return;
    break;
  case 12:
    // BL8_NOP, BL8_NOP_RM, BL8_NOP_TLS, BLA8_NOP, BLA8_NOP_RM, BL_NOP, BL_NO...
    O << "\n\tnop";
    return;
    break;
  case 13:
    // DCBF
    printU3ImmOperand(MI, 0, STI, O);
    return;
    break;
  case 14:
    // DCBT, DCBTST
    printU5ImmOperand(MI, 0, STI, O);
    return;
    break;
  case 15:
    // EVSEL, TLBIE
    O << ',';
    break;
  case 16:
    // MFTB8
    O << ", 268";
    return;
    break;
  case 17:
    // MFUDSCR
    O << ", 3";
    return;
    break;
  case 18:
    // MFVRSAVE, MFVRSAVEv
    O << ", 256";
    return;
    break;
  case 19:
    // V_SETALLONES, V_SETALLONESB, V_SETALLONESH
    O << ", -1";
    return;
    break;
  case 20:
    // gBCAat, gBCLAat
    printAbsBranchOperand(MI, 3, STI, O);
    return;
    break;
  case 21:
    // gBCLat, gBCat
    printBranchOperand(MI, Address, 3, STI, O);
    return;
    break;
  }


  // Fragment 2 encoded into 5 bits for 28 unique commands.
  switch ((Bits >> 25) & 31) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // BUILD_UACC, CLRLSLDI, CLRLSLDI_rec, CLRLSLWI, CLRLSLWI_rec, CLRRDI, CL...
    printOperand(MI, 1, STI, O);
    break;
  case 1:
    // DCBTCT, DCBTDS, DCBTSTCT, DCBTSTDS, EVADDIW
    printU5ImmOperand(MI, 2, STI, O);
    break;
  case 2:
    // LAx, EVLDD, EVLDH, EVLDW, EVLHHESPLAT, EVLHHOSSPLAT, EVLHHOUSPLAT, EVL...
    printMemRegImm(MI, 1, STI, O);
    return;
    break;
  case 3:
    // SUBPCIS, LI, LI8, LIS, LIS8
    printS16ImmOperand(MI, 1, STI, O);
    return;
    break;
  case 4:
    // ATOMIC_CMP_SWAP_I16, ATOMIC_CMP_SWAP_I32, EVLDDX, EVLDHX, EVLDWX, EVLH...
    printMemRegReg(MI, 1, STI, O);
    break;
  case 5:
    // BC, BCL, BCLn, BCn
    printBranchOperand(MI, Address, 1, STI, O);
    return;
    break;
  case 6:
    // CMPRB, CMPRB8, MTMSR, MTMSRD
    printU1ImmOperand(MI, 1, STI, O);
    break;
  case 7:
    // CRSET, CRUNSET, MTDCR, TLBIE, V_SET0, V_SET0B, V_SET0H, XXLEQVOnes, XX...
    printOperand(MI, 0, STI, O);
    break;
  case 8:
    // DARN, MFFSCRNI
    printU2ImmOperand(MI, 1, STI, O);
    return;
    break;
  case 9:
    // DST, DST64, DSTST, DSTST64, DSTSTT, DSTSTT64, DSTT, DSTT64, MTFSFI, PM...
    printOperand(MI, 2, STI, O);
    break;
  case 10:
    // EVSPLATFI, EVSPLATI, VSPLTISB, VSPLTISH, VSPLTISW
    printS5ImmOperand(MI, 1, STI, O);
    return;
    break;
  case 11:
    // EVSUBIFW, LXVKQ
    printU5ImmOperand(MI, 1, STI, O);
    break;
  case 12:
    // HASHCHK, HASHCHK8, HASHCHKP, HASHCHKP8, HASHST, HASHST8, HASHSTP, HASH...
    printMemRegImmHash(MI, 1, STI, O);
    return;
    break;
  case 13:
    // LA, LA8
    printS16ImmOperand(MI, 2, STI, O);
    O << '(';
    printOperand(MI, 1, STI, O);
    O << ')';
    return;
    break;
  case 14:
    // LBZU, LBZU8, LDU, LFDU, LFSU, LHAU, LHAU8, LHZU, LHZU8, LWZU, LWZU8, S...
    printMemRegImm(MI, 2, STI, O);
    return;
    break;
  case 15:
    // LBZUX, LBZUX8, LDUX, LFDUX, LFSUX, LHAUX, LHAUX8, LHZUX, LHZUX8, LWAUX...
    printMemRegReg(MI, 2, STI, O);
    return;
    break;
  case 16:
    // MFBHRBE
    printU10ImmOperand(MI, 1, STI, O);
    return;
    break;
  case 17:
    // MFFSCDRNI
    printU3ImmOperand(MI, 1, STI, O);
    return;
    break;
  case 18:
    // MFOCRF, MFOCRF8
    printcrbitm(MI, 1, STI, O);
    return;
    break;
  case 19:
    // MFSR
    printU4ImmOperand(MI, 1, STI, O);
    return;
    break;
  case 20:
    // MTFSFI_rec, XXSPLTI32DX
    printU1ImmOperand(MI, 2, STI, O);
    break;
  case 21:
    // MTVSRBMI
    printU16ImmOperand(MI, 1, STI, O);
    return;
    break;
  case 22:
    // PADDI8pc, PADDIpc
    printImmZeroOperand(MI, 1, STI, O);
    O << ", ";
    printS34ImmOperand(MI, 2, STI, O);
    O << ", 1";
    return;
    break;
  case 23:
    // PLBZ, PLBZ8, PLD, PLFD, PLFS, PLHA, PLHA8, PLHZ, PLHZ8, PLWA, PLWA8, P...
    printMemRegImm34(MI, 1, STI, O);
    O << ", 0";
    return;
    break;
  case 24:
    // PLBZ8pc, PLBZpc, PLDpc, PLFDpc, PLFSpc, PLHA8pc, PLHApc, PLHZ8pc, PLHZ...
    printMemRegImm34PCRel(MI, 1, STI, O);
    O << ", 1";
    return;
    break;
  case 25:
    // PLI, PLI8
    printS34ImmOperand(MI, 1, STI, O);
    return;
    break;
  case 26:
    // VINSD, VINSERTB, VINSERTH, VINSW
    printOperand(MI, 3, STI, O);
    O << ", ";
    printU4ImmOperand(MI, 2, STI, O);
    return;
    break;
  case 27:
    // XXSPLTIB
    printU8ImmOperand(MI, 1, STI, O);
    return;
    break;
  }


  // Fragment 3 encoded into 3 bits for 6 unique commands.
  switch ((Bits >> 30) & 7) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // BUILD_UACC, DCBTCT, DCBTDS, DCBTSTCT, DCBTSTDS, ADDME, ADDME8, ADDME8O...
    return;
    break;
  case 1:
    // CLRLSLDI, CLRLSLDI_rec, CLRLSLWI, CLRLSLWI_rec, CLRRDI, CLRRDI_rec, CL...
    O << ", ";
    break;
  case 2:
    // ATOMIC_CMP_SWAP_I16, ATOMIC_CMP_SWAP_I32
    O << ' ';
    printOperand(MI, 3, STI, O);
    O << ' ';
    printOperand(MI, 4, STI, O);
    return;
    break;
  case 3:
    // EVSEL
    O << ',';
    printOperand(MI, 2, STI, O);
    return;
    break;
  case 4:
    // LBARXL, LDARXL, LHARXL, LQARXL, LWARXL
    O << ", 1";
    return;
    break;
  case 5:
    // VCFSX_0, VCFUX_0, VCTSXS_0, VCTUXS_0
    O << ", 0";
    return;
    break;
  }


  // Fragment 4 encoded into 5 bits for 23 unique commands.
  switch ((Bits >> 33) & 31) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // CLRLSLDI, CLRLSLDI_rec, CLRRDI, CLRRDI_rec, EXTLDI, EXTLDI_rec, EXTRDI...
    printU6ImmOperand(MI, 2, STI, O);
    break;
  case 1:
    // CLRLSLWI, CLRLSLWI_rec, CLRRWI, CLRRWI_rec, EXTLWI, EXTLWI_rec, EXTRWI...
    printU5ImmOperand(MI, 2, STI, O);
    break;
  case 2:
    // SUBI, SUBIC, SUBIC_rec, SUBIS, ADDI, ADDI8, ADDIC, ADDIC8, ADDIC_rec, ...
    printS16ImmOperand(MI, 2, STI, O);
    return;
    break;
  case 3:
    // ADD4, ADD4O, ADD4O_rec, ADD4TLS, ADD4_rec, ADD8, ADD8O, ADD8O_rec, ADD...
    printOperand(MI, 2, STI, O);
    break;
  case 4:
    // ANDI8_rec, ANDIS8_rec, ANDIS_rec, ANDI_rec, CMPLDI, CMPLWI, ORI, ORI8,...
    printU16ImmOperand(MI, 2, STI, O);
    return;
    break;
  case 5:
    // BCDCFN_rec, BCDCFSQ_rec, BCDCFZ_rec, BCDCTZ_rec, BCDSETSGN_rec, CP_PAS...
    printU1ImmOperand(MI, 2, STI, O);
    break;
  case 6:
    // CRSET, CRUNSET, V_SET0, V_SET0B, V_SET0H, XXLEQVOnes, XXLXORdpz, XXLXO...
    printOperand(MI, 0, STI, O);
    return;
    break;
  case 7:
    // DST, DST64, DSTST, DSTST64, DSTSTT, DSTSTT64, DSTT, DSTT64
    printU5ImmOperand(MI, 0, STI, O);
    return;
    break;
  case 8:
    // EVADDIW, XXPERMDIs, XXSLDWIs
    printOperand(MI, 1, STI, O);
    break;
  case 9:
    // PADDI, PADDI8
    printS34ImmOperand(MI, 2, STI, O);
    O << ", 0";
    return;
    break;
  case 10:
    // PMXVBF16GER2NN, PMXVBF16GER2NP, PMXVBF16GER2PN, PMXVBF16GER2PP, PMXVF1...
    printOperand(MI, 3, STI, O);
    break;
  case 11:
    // RLDIMI, RLDIMI_rec
    printU6ImmOperand(MI, 3, STI, O);
    O << ", ";
    printU6ImmOperand(MI, 4, STI, O);
    return;
    break;
  case 12:
    // RLWIMI, RLWIMI8, RLWIMI8_rec, RLWIMI_rec
    printU5ImmOperand(MI, 3, STI, O);
    O << ", ";
    printU5ImmOperand(MI, 4, STI, O);
    O << ", ";
    printU5ImmOperand(MI, 5, STI, O);
    return;
    break;
  case 13:
    // VCFSX, VCFUX, VCTSXS, VCTUXS, VSPLTB, VSPLTBs, VSPLTH, VSPLTHs, VSPLTW
    printU5ImmOperand(MI, 1, STI, O);
    return;
    break;
  case 14:
    // VEXTRACTD, VEXTRACTUB, VEXTRACTUH, VEXTRACTUW, VINSERTD, VINSERTW
    printU4ImmOperand(MI, 1, STI, O);
    return;
    break;
  case 15:
    // VGNB
    printU3ImmOperand(MI, 2, STI, O);
    return;
    break;
  case 16:
    // XSTSTDCDP, XSTSTDCQP, XSTSTDCSP, XVTSTDCDP, XVTSTDCSP
    printU7ImmOperand(MI, 1, STI, O);
    return;
    break;
  case 17:
    // XXEXTRACTUW
    printU4ImmOperand(MI, 2, STI, O);
    return;
    break;
  case 18:
    // XXGENPCVBM, XXGENPCVDM, XXGENPCVHM, XXGENPCVWM
    printS5ImmOperand(MI, 2, STI, O);
    return;
    break;
  case 19:
    // XXINSERTW
    printU4ImmOperand(MI, 3, STI, O);
    return;
    break;
  case 20:
    // XXSPLTW, XXSPLTWs
    printU2ImmOperand(MI, 2, STI, O);
    return;
    break;
  case 21:
    // gBC, gBCL
    printBranchOperand(MI, Address, 2, STI, O);
    return;
    break;
  case 22:
    // gBCA, gBCLA
    printAbsBranchOperand(MI, 2, STI, O);
    return;
    break;
  }


  // Fragment 5 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 38) & 1) {
    // CLRRDI, CLRRDI_rec, CLRRWI, CLRRWI_rec, ROTRDI, ROTRDI_rec, ROTRWI, RO...
    return;
  } else {
    // CLRLSLDI, CLRLSLDI_rec, CLRLSLWI, CLRLSLWI_rec, EXTLDI, EXTLDI_rec, EX...
    O << ", ";
  }


  // Fragment 6 encoded into 4 bits for 9 unique commands.
  switch ((Bits >> 39) & 15) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // CLRLSLDI, CLRLSLDI_rec, EXTLDI, EXTLDI_rec, EXTRDI, EXTRDI_rec, INSRDI...
    printU6ImmOperand(MI, 3, STI, O);
    return;
    break;
  case 1:
    // CLRLSLWI, CLRLSLWI_rec, EXTLWI, EXTLWI_rec, EXTRWI, EXTRWI_rec, INSLWI...
    printU5ImmOperand(MI, 3, STI, O);
    break;
  case 2:
    // RLWIMIbm, RLWIMIbm_rec, RLWINMbm, RLWINMbm_rec, RLWNMbm, RLWNMbm_rec, ...
    printOperand(MI, 3, STI, O);
    break;
  case 3:
    // ADDEX, ADDEX8, XXPERMDI, XXSLDWI
    printU2ImmOperand(MI, 3, STI, O);
    return;
    break;
  case 4:
    // BCDADD_rec, BCDSR_rec, BCDSUB_rec, BCDS_rec, BCDTRUNC_rec
    printU1ImmOperand(MI, 3, STI, O);
    return;
    break;
  case 5:
    // PMXVBF16GER2, PMXVF16GER2, PMXVF32GER, PMXVF64GER, PMXVI16GER2, PMXVI1...
    printU4ImmOperand(MI, 3, STI, O);
    break;
  case 6:
    // PMXVBF16GER2NN, PMXVBF16GER2NP, PMXVBF16GER2PN, PMXVBF16GER2PP, PMXVF1...
    printU4ImmOperand(MI, 4, STI, O);
    O << ", ";
    break;
  case 7:
    // VSLDBI, VSRDBI
    printU3ImmOperand(MI, 3, STI, O);
    return;
    break;
  case 8:
    // XXPERMDIs, XXSLDWIs
    printU2ImmOperand(MI, 2, STI, O);
    return;
    break;
  }


  // Fragment 7 encoded into 2 bits for 4 unique commands.
  switch ((Bits >> 43) & 3) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // CLRLSLWI, CLRLSLWI_rec, EXTLWI, EXTLWI_rec, EXTRWI, EXTRWI_rec, INSLWI...
    return;
    break;
  case 1:
    // PMXVBF16GER2, PMXVF16GER2, PMXVF32GER, PMXVF64GER, PMXVI16GER2, PMXVI1...
    O << ", ";
    break;
  case 2:
    // PMXVBF16GER2NN, PMXVBF16GER2NP, PMXVBF16GER2PN, PMXVBF16GER2PP, PMXVF1...
    printU4ImmOperand(MI, 5, STI, O);
    break;
  case 3:
    // PMXVF64GERNN, PMXVF64GERNP, PMXVF64GERPN, PMXVF64GERPP
    printU2ImmOperand(MI, 5, STI, O);
    return;
    break;
  }


  // Fragment 8 encoded into 3 bits for 7 unique commands.
  switch ((Bits >> 45) & 7) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // PMXVBF16GER2, PMXVF16GER2, PMXVF32GER, PMXVI16GER2, PMXVI16GER2S, PMXV...
    printU4ImmOperand(MI, 4, STI, O);
    break;
  case 1:
    // PMXVBF16GER2NN, PMXVBF16GER2NP, PMXVBF16GER2PN, PMXVBF16GER2PP, PMXVF1...
    O << ", ";
    break;
  case 2:
    // PMXVF32GERNN, PMXVF32GERNP, PMXVF32GERPN, PMXVF32GERPP
    return;
    break;
  case 3:
    // PMXVF64GER
    printU2ImmOperand(MI, 4, STI, O);
    return;
    break;
  case 4:
    // RLWINM, RLWINM8, RLWINM8_rec, RLWINM_rec, RLWNM, RLWNM8, RLWNM8_rec, R...
    printU5ImmOperand(MI, 4, STI, O);
    return;
    break;
  case 5:
    // XXEVAL
    printU8ImmOperand(MI, 4, STI, O);
    return;
    break;
  case 6:
    // XXPERMX
    printU3ImmOperand(MI, 4, STI, O);
    return;
    break;
  }


  // Fragment 9 encoded into 3 bits for 5 unique commands.
  switch ((Bits >> 48) & 7) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // PMXVBF16GER2, PMXVF16GER2, PMXVI16GER2, PMXVI16GER2S, PMXVI4GER8, PMXV...
    O << ", ";
    break;
  case 1:
    // PMXVBF16GER2NN, PMXVBF16GER2NP, PMXVBF16GER2PN, PMXVBF16GER2PP, PMXVF1...
    printU2ImmOperand(MI, 6, STI, O);
    return;
    break;
  case 2:
    // PMXVF32GER
    return;
    break;
  case 3:
    // PMXVI4GER8PP
    printU8ImmOperand(MI, 6, STI, O);
    return;
    break;
  case 4:
    // PMXVI8GER4PP, PMXVI8GER4SPP
    printU4ImmOperand(MI, 6, STI, O);
    return;
    break;
  }


  // Fragment 10 encoded into 2 bits for 3 unique commands.
  switch ((Bits >> 51) & 3) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // PMXVBF16GER2, PMXVF16GER2, PMXVI16GER2, PMXVI16GER2S
    printU2ImmOperand(MI, 5, STI, O);
    return;
    break;
  case 1:
    // PMXVI4GER8
    printU8ImmOperand(MI, 5, STI, O);
    return;
    break;
  case 2:
    // PMXVI8GER4
    printU4ImmOperand(MI, 5, STI, O);
    return;
    break;
  }

}


/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
const char *PPCInstPrinter::getRegisterName(unsigned RegNo) {
  assert(RegNo && RegNo < 376 && "Invalid register number!");

  static const char AsmStrs[] = {
  /* 0 */ '*', '*', 'R', 'O', 'U', 'N', 'D', 'I', 'N', 'G', 32, 'M', 'O', 'D', 'E', '*', '*', 0,
  /* 18 */ '*', '*', 'F', 'R', 'A', 'M', 'E', 32, 'P', 'O', 'I', 'N', 'T', 'E', 'R', '*', '*', 0,
  /* 36 */ '*', '*', 'B', 'A', 'S', 'E', 32, 'P', 'O', 'I', 'N', 'T', 'E', 'R', '*', '*', 0,
  /* 53 */ 'f', '1', '0', 0,
  /* 57 */ 'v', 's', 'p', '1', '0', 0,
  /* 63 */ 'r', '1', '0', 0,
  /* 67 */ 'v', 's', '1', '0', 0,
  /* 72 */ 'v', '1', '0', 0,
  /* 76 */ 'f', '2', '0', 0,
  /* 80 */ 'v', 's', 'p', '2', '0', 0,
  /* 86 */ 'r', '2', '0', 0,
  /* 90 */ 'v', 's', '2', '0', 0,
  /* 95 */ 'v', '2', '0', 0,
  /* 99 */ 'f', '3', '0', 0,
  /* 103 */ 'v', 's', 'p', '3', '0', 0,
  /* 109 */ 'r', '3', '0', 0,
  /* 113 */ 'v', 's', '3', '0', 0,
  /* 118 */ 'v', '3', '0', 0,
  /* 122 */ 'v', 's', 'p', '4', '0', 0,
  /* 128 */ 'v', 's', '4', '0', 0,
  /* 133 */ 'v', 's', 'p', '5', '0', 0,
  /* 139 */ 'v', 's', '5', '0', 0,
  /* 144 */ 'v', 's', 'p', '6', '0', 0,
  /* 150 */ 'v', 's', '6', '0', 0,
  /* 155 */ 'a', 'c', 'c', '0', 0,
  /* 160 */ 'f', '0', 0,
  /* 163 */ 'v', 's', 'p', '0', 0,
  /* 168 */ 'c', 'r', '0', 0,
  /* 172 */ 'v', 's', '0', 0,
  /* 176 */ 'v', '0', 0,
  /* 179 */ 'f', '1', '1', 0,
  /* 183 */ 'r', '1', '1', 0,
  /* 187 */ 'v', 's', '1', '1', 0,
  /* 192 */ 'v', '1', '1', 0,
  /* 196 */ 'f', '2', '1', 0,
  /* 200 */ 'r', '2', '1', 0,
  /* 204 */ 'v', 's', '2', '1', 0,
  /* 209 */ 'v', '2', '1', 0,
  /* 213 */ 'f', '3', '1', 0,
  /* 217 */ 'r', '3', '1', 0,
  /* 221 */ 'v', 's', '3', '1', 0,
  /* 226 */ 'v', '3', '1', 0,
  /* 230 */ 'v', 's', '4', '1', 0,
  /* 235 */ 'v', 's', '5', '1', 0,
  /* 240 */ 'v', 's', '6', '1', 0,
  /* 245 */ 'a', 'c', 'c', '1', 0,
  /* 250 */ 'f', '1', 0,
  /* 253 */ 'c', 'r', '1', 0,
  /* 257 */ 'v', 's', '1', 0,
  /* 261 */ 'v', '1', 0,
  /* 264 */ 'f', '1', '2', 0,
  /* 268 */ 'v', 's', 'p', '1', '2', 0,
  /* 274 */ 'r', '1', '2', 0,
  /* 278 */ 'v', 's', '1', '2', 0,
  /* 283 */ 'v', '1', '2', 0,
  /* 287 */ 'f', '2', '2', 0,
  /* 291 */ 'v', 's', 'p', '2', '2', 0,
  /* 297 */ 'r', '2', '2', 0,
  /* 301 */ 'v', 's', '2', '2', 0,
  /* 306 */ 'v', '2', '2', 0,
  /* 310 */ 'v', 's', 'p', '3', '2', 0,
  /* 316 */ 'v', 's', '3', '2', 0,
  /* 321 */ 'v', 's', 'p', '4', '2', 0,
  /* 327 */ 'v', 's', '4', '2', 0,
  /* 332 */ 'v', 's', 'p', '5', '2', 0,
  /* 338 */ 'v', 's', '5', '2', 0,
  /* 343 */ 'v', 's', 'p', '6', '2', 0,
  /* 349 */ 'v', 's', '6', '2', 0,
  /* 354 */ 'a', 'c', 'c', '2', 0,
  /* 359 */ 'f', '2', 0,
  /* 362 */ 'v', 's', 'p', '2', 0,
  /* 367 */ 'c', 'r', '2', 0,
  /* 371 */ 'v', 's', '2', 0,
  /* 375 */ 'v', '2', 0,
  /* 378 */ 'f', '1', '3', 0,
  /* 382 */ 'r', '1', '3', 0,
  /* 386 */ 'v', 's', '1', '3', 0,
  /* 391 */ 'v', '1', '3', 0,
  /* 395 */ 'f', '2', '3', 0,
  /* 399 */ 'r', '2', '3', 0,
  /* 403 */ 'v', 's', '2', '3', 0,
  /* 408 */ 'v', '2', '3', 0,
  /* 412 */ 'v', 's', '3', '3', 0,
  /* 417 */ 'v', 's', '4', '3', 0,
  /* 422 */ 'v', 's', '5', '3', 0,
  /* 427 */ 'v', 's', '6', '3', 0,
  /* 432 */ 'a', 'c', 'c', '3', 0,
  /* 437 */ 'f', '3', 0,
  /* 440 */ 'c', 'r', '3', 0,
  /* 444 */ 'v', 's', '3', 0,
  /* 448 */ 'v', '3', 0,
  /* 451 */ 'f', '1', '4', 0,
  /* 455 */ 'v', 's', 'p', '1', '4', 0,
  /* 461 */ 'r', '1', '4', 0,
  /* 465 */ 'v', 's', '1', '4', 0,
  /* 470 */ 'v', '1', '4', 0,
  /* 474 */ 'f', '2', '4', 0,
  /* 478 */ 'v', 's', 'p', '2', '4', 0,
  /* 484 */ 'r', '2', '4', 0,
  /* 488 */ 'v', 's', '2', '4', 0,
  /* 493 */ 'v', '2', '4', 0,
  /* 497 */ 'v', 's', 'p', '3', '4', 0,
  /* 503 */ 'v', 's', '3', '4', 0,
  /* 508 */ 'v', 's', 'p', '4', '4', 0,
  /* 514 */ 'v', 's', '4', '4', 0,
  /* 519 */ 'v', 's', 'p', '5', '4', 0,
  /* 525 */ 'v', 's', '5', '4', 0,
  /* 530 */ 'a', 'c', 'c', '4', 0,
  /* 535 */ 'f', '4', 0,
  /* 538 */ 'v', 's', 'p', '4', 0,
  /* 543 */ 'c', 'r', '4', 0,
  /* 547 */ 'v', 's', '4', 0,
  /* 551 */ 'v', '4', 0,
  /* 554 */ 'f', '1', '5', 0,
  /* 558 */ 'r', '1', '5', 0,
  /* 562 */ 'v', 's', '1', '5', 0,
  /* 567 */ 'v', '1', '5', 0,
  /* 571 */ 'f', '2', '5', 0,
  /* 575 */ 'r', '2', '5', 0,
  /* 579 */ 'v', 's', '2', '5', 0,
  /* 584 */ 'v', '2', '5', 0,
  /* 588 */ 'v', 's', '3', '5', 0,
  /* 593 */ 'v', 's', '4', '5', 0,
  /* 598 */ 'v', 's', '5', '5', 0,
  /* 603 */ 'a', 'c', 'c', '5', 0,
  /* 608 */ 'f', '5', 0,
  /* 611 */ 'c', 'r', '5', 0,
  /* 615 */ 'v', 's', '5', 0,
  /* 619 */ 'v', '5', 0,
  /* 622 */ 'f', '1', '6', 0,
  /* 626 */ 'v', 's', 'p', '1', '6', 0,
  /* 632 */ 'r', '1', '6', 0,
  /* 636 */ 'v', 's', '1', '6', 0,
  /* 641 */ 'v', '1', '6', 0,
  /* 645 */ 'f', '2', '6', 0,
  /* 649 */ 'v', 's', 'p', '2', '6', 0,
  /* 655 */ 'r', '2', '6', 0,
  /* 659 */ 'v', 's', '2', '6', 0,
  /* 664 */ 'v', '2', '6', 0,
  /* 668 */ 'v', 's', 'p', '3', '6', 0,
  /* 674 */ 'v', 's', '3', '6', 0,
  /* 679 */ 'v', 's', 'p', '4', '6', 0,
  /* 685 */ 'v', 's', '4', '6', 0,
  /* 690 */ 'v', 's', 'p', '5', '6', 0,
  /* 696 */ 'v', 's', '5', '6', 0,
  /* 701 */ 'a', 'c', 'c', '6', 0,
  /* 706 */ 'f', '6', 0,
  /* 709 */ 'v', 's', 'p', '6', 0,
  /* 714 */ 'c', 'r', '6', 0,
  /* 718 */ 'v', 's', '6', 0,
  /* 722 */ 'v', '6', 0,
  /* 725 */ 'f', '1', '7', 0,
  /* 729 */ 'r', '1', '7', 0,
  /* 733 */ 'v', 's', '1', '7', 0,
  /* 738 */ 'v', '1', '7', 0,
  /* 742 */ 'f', '2', '7', 0,
  /* 746 */ 'r', '2', '7', 0,
  /* 750 */ 'v', 's', '2', '7', 0,
  /* 755 */ 'v', '2', '7', 0,
  /* 759 */ 'v', 's', '3', '7', 0,
  /* 764 */ 'v', 's', '4', '7', 0,
  /* 769 */ 'v', 's', '5', '7', 0,
  /* 774 */ 'a', 'c', 'c', '7', 0,
  /* 779 */ 'f', '7', 0,
  /* 782 */ 'c', 'r', '7', 0,
  /* 786 */ 'v', 's', '7', 0,
  /* 790 */ 'v', '7', 0,
  /* 793 */ 'f', '1', '8', 0,
  /* 797 */ 'v', 's', 'p', '1', '8', 0,
  /* 803 */ 'r', '1', '8', 0,
  /* 807 */ 'v', 's', '1', '8', 0,
  /* 812 */ 'v', '1', '8', 0,
  /* 816 */ 'f', '2', '8', 0,
  /* 820 */ 'v', 's', 'p', '2', '8', 0,
  /* 826 */ 'r', '2', '8', 0,
  /* 830 */ 'v', 's', '2', '8', 0,
  /* 835 */ 'v', '2', '8', 0,
  /* 839 */ 'v', 's', 'p', '3', '8', 0,
  /* 845 */ 'v', 's', '3', '8', 0,
  /* 850 */ 'v', 's', 'p', '4', '8', 0,
  /* 856 */ 'v', 's', '4', '8', 0,
  /* 861 */ 'v', 's', 'p', '5', '8', 0,
  /* 867 */ 'v', 's', '5', '8', 0,
  /* 872 */ 'f', '8', 0,
  /* 875 */ 'v', 's', 'p', '8', 0,
  /* 880 */ 'r', '8', 0,
  /* 883 */ 'v', 's', '8', 0,
  /* 887 */ 'v', '8', 0,
  /* 890 */ 'f', '1', '9', 0,
  /* 894 */ 'r', '1', '9', 0,
  /* 898 */ 'v', 's', '1', '9', 0,
  /* 903 */ 'v', '1', '9', 0,
  /* 907 */ 'f', '2', '9', 0,
  /* 911 */ 'r', '2', '9', 0,
  /* 915 */ 'v', 's', '2', '9', 0,
  /* 920 */ 'v', '2', '9', 0,
  /* 924 */ 'v', 's', '3', '9', 0,
  /* 929 */ 'v', 's', '4', '9', 0,
  /* 934 */ 'v', 's', '5', '9', 0,
  /* 939 */ 'f', '9', 0,
  /* 942 */ 'r', '9', 0,
  /* 945 */ 'v', 's', '9', 0,
  /* 949 */ 'v', '9', 0,
  /* 952 */ 'v', 'r', 's', 'a', 'v', 'e', 0,
  /* 959 */ 's', 'p', 'e', 'f', 's', 'c', 'r', 0,
  /* 967 */ 'x', 'e', 'r', 0,
  /* 971 */ 'l', 'r', 0,
  /* 974 */ 'c', 't', 'r', 0,
  0
};

  static const uint16_t RegAsmOffset[] = {
    36, 967, 974, 18, 971, 0, 959, 952, 967, 55, 155, 245, 354, 432, 
    530, 603, 701, 774, 36, 168, 253, 367, 440, 543, 611, 714, 782, 974, 
    160, 250, 359, 437, 535, 608, 706, 779, 872, 939, 53, 179, 264, 378, 
    451, 554, 622, 725, 793, 890, 76, 196, 287, 395, 474, 571, 645, 742, 
    816, 907, 99, 213, 18, 971, 169, 254, 368, 441, 544, 612, 715, 783, 
    880, 942, 63, 183, 274, 382, 461, 558, 632, 729, 803, 894, 86, 200, 
    297, 399, 484, 575, 655, 746, 826, 911, 109, 217, 169, 254, 368, 441, 
    544, 612, 715, 783, 880, 942, 63, 183, 274, 382, 461, 558, 632, 729, 
    803, 894, 86, 200, 297, 399, 484, 575, 655, 746, 826, 911, 109, 217, 
    155, 245, 354, 432, 530, 603, 701, 774, 176, 261, 375, 448, 551, 619, 
    722, 790, 887, 949, 72, 192, 283, 391, 470, 567, 641, 738, 812, 903, 
    95, 209, 306, 408, 493, 584, 664, 755, 835, 920, 118, 226, 176, 261, 
    375, 448, 551, 619, 722, 790, 887, 949, 72, 192, 283, 391, 470, 567, 
    641, 738, 812, 903, 95, 209, 306, 408, 493, 584, 664, 755, 835, 920, 
    118, 226, 172, 257, 371, 444, 547, 615, 718, 786, 883, 945, 67, 187, 
    278, 386, 465, 562, 636, 733, 807, 898, 90, 204, 301, 403, 488, 579, 
    659, 750, 830, 915, 113, 221, 163, 362, 538, 709, 875, 57, 268, 455, 
    626, 797, 80, 291, 478, 649, 820, 103, 310, 497, 668, 839, 122, 321, 
    508, 679, 850, 133, 332, 519, 690, 861, 144, 343, 316, 412, 503, 588, 
    674, 759, 845, 924, 128, 230, 327, 417, 514, 593, 685, 764, 856, 929, 
    139, 235, 338, 422, 525, 598, 696, 769, 867, 934, 150, 240, 349, 427, 
    169, 254, 368, 441, 544, 612, 715, 783, 880, 942, 63, 183, 274, 382, 
    461, 558, 632, 729, 803, 894, 86, 200, 297, 399, 484, 575, 655, 746, 
    826, 911, 109, 217, 55, 266, 624, 54, 452, 794, 288, 646, 100, 181, 
    556, 892, 379, 726, 197, 572, 908, 55, 453, 795, 265, 623, 77, 475, 
    817, 380, 727, 180, 555, 891, 396, 743, 214, 169, 368, 544, 715, 880, 
    63, 274, 461, 632, 803, 86, 297, 484, 655, 826, 109, 
  };

  assert (*(AsmStrs+RegAsmOffset[RegNo-1]) &&
          "Invalid alt name index for register!");
  return AsmStrs+RegAsmOffset[RegNo-1];
}

#ifdef PRINT_ALIAS_INSTR
#undef PRINT_ALIAS_INSTR

bool PPCInstPrinter::printAliasInstr(const MCInst *MI, uint64_t Address, const MCSubtargetInfo &STI, raw_ostream &OS) {
  static const PatternsForOpcode OpToPatterns[] = {
    {PPC::ADDI, 0, 1 },
    {PPC::ADDI8, 1, 1 },
    {PPC::ADDIS, 2, 1 },
    {PPC::ADDIS8, 3, 1 },
    {PPC::ADDPCIS, 4, 1 },
    {PPC::BCC, 5, 24 },
    {PPC::BCCA, 29, 24 },
    {PPC::BCCCTR, 53, 24 },
    {PPC::BCCCTRL, 77, 24 },
    {PPC::BCCL, 101, 24 },
    {PPC::BCCLA, 125, 24 },
    {PPC::BCCLR, 149, 24 },
    {PPC::BCCLRL, 173, 24 },
    {PPC::CMPD, 197, 1 },
    {PPC::CMPDI, 198, 1 },
    {PPC::CMPLD, 199, 1 },
    {PPC::CMPLDI, 200, 1 },
    {PPC::CMPLW, 201, 1 },
    {PPC::CMPLWI, 202, 1 },
    {PPC::CMPW, 203, 1 },
    {PPC::CMPWI, 204, 1 },
    {PPC::CNTLZW, 205, 1 },
    {PPC::CNTLZW8, 206, 1 },
    {PPC::CNTLZW8_rec, 207, 1 },
    {PPC::CNTLZW_rec, 208, 1 },
    {PPC::CP_PASTE_rec, 209, 1 },
    {PPC::CREQV, 210, 1 },
    {PPC::CRNOR, 211, 1 },
    {PPC::CROR, 212, 1 },
    {PPC::CRXOR, 213, 1 },
    {PPC::ISEL, 214, 3 },
    {PPC::ISEL8, 217, 3 },
    {PPC::MBAR, 220, 1 },
    {PPC::MFDCR, 221, 8 },
    {PPC::MFSPR, 229, 46 },
    {PPC::MFSPR8, 275, 19 },
    {PPC::MFTB, 294, 1 },
    {PPC::MFUDSCR, 295, 1 },
    {PPC::MFVRSAVE, 296, 1 },
    {PPC::MFVSRD, 297, 1 },
    {PPC::MFVSRWZ, 298, 1 },
    {PPC::MTCRF, 299, 1 },
    {PPC::MTCRF8, 300, 1 },
    {PPC::MTDCR, 301, 8 },
    {PPC::MTFSF, 309, 1 },
    {PPC::MTFSFI, 310, 1 },
    {PPC::MTFSFI_rec, 311, 1 },
    {PPC::MTFSF_rec, 312, 1 },
    {PPC::MTMSR, 313, 1 },
    {PPC::MTMSRD, 314, 1 },
    {PPC::MTSPR, 315, 45 },
    {PPC::MTSPR8, 360, 18 },
    {PPC::MTUDSCR, 378, 1 },
    {PPC::MTVRSAVE, 379, 1 },
    {PPC::MTVSRD, 380, 1 },
    {PPC::MTVSRWA, 381, 1 },
    {PPC::MTVSRWZ, 382, 1 },
    {PPC::NOR, 383, 1 },
    {PPC::NOR8, 384, 1 },
    {PPC::NOR8_rec, 385, 1 },
    {PPC::NOR_rec, 386, 1 },
    {PPC::OR, 387, 1 },
    {PPC::OR8, 388, 1 },
    {PPC::OR8_rec, 389, 1 },
    {PPC::ORI, 390, 1 },
    {PPC::ORI8, 391, 1 },
    {PPC::OR_rec, 392, 1 },
    {PPC::RFEBB, 393, 1 },
    {PPC::RLDCL, 394, 1 },
    {PPC::RLDCL_rec, 395, 1 },
    {PPC::RLDICL, 396, 2 },
    {PPC::RLDICL_32_64, 398, 2 },
    {PPC::RLDICL_rec, 400, 2 },
    {PPC::RLWINM, 402, 2 },
    {PPC::RLWINM8, 404, 2 },
    {PPC::RLWINM8_rec, 406, 2 },
    {PPC::RLWINM_rec, 408, 2 },
    {PPC::RLWNM, 410, 1 },
    {PPC::RLWNM8, 411, 1 },
    {PPC::RLWNM8_rec, 412, 1 },
    {PPC::RLWNM_rec, 413, 1 },
    {PPC::SC, 414, 1 },
    {PPC::SUBF, 415, 1 },
    {PPC::SUBF8, 416, 1 },
    {PPC::SUBF8_rec, 417, 1 },
    {PPC::SUBFC, 418, 1 },
    {PPC::SUBFC8, 419, 1 },
    {PPC::SUBFC8_rec, 420, 1 },
    {PPC::SUBFC_rec, 421, 1 },
    {PPC::SUBF_rec, 422, 1 },
    {PPC::SYNC, 423, 3 },
    {PPC::TD, 426, 7 },
    {PPC::TDI, 433, 7 },
    {PPC::TEND, 440, 2 },
    {PPC::TLBIE, 442, 1 },
    {PPC::TLBRE2, 443, 2 },
    {PPC::TLBWE2, 445, 2 },
    {PPC::TSR, 447, 2 },
    {PPC::TW, 449, 8 },
    {PPC::TWI, 457, 7 },
    {PPC::VNOR, 464, 1 },
    {PPC::VOR, 465, 1 },
    {PPC::WAIT, 466, 3 },
    {PPC::XORI, 469, 1 },
    {PPC::XORI8, 470, 1 },
    {PPC::XVCPSGNDP, 471, 1 },
    {PPC::XVCPSGNSP, 472, 1 },
    {PPC::XXPERMDI, 473, 5 },
    {PPC::XXPERMDIs, 478, 3 },
    {PPC::gBC, 481, 10 },
    {PPC::gBCA, 491, 10 },
    {PPC::gBCAat, 501, 2 },
    {PPC::gBCCTR, 503, 7 },
    {PPC::gBCCTRL, 510, 7 },
    {PPC::gBCL, 517, 10 },
    {PPC::gBCLA, 527, 10 },
    {PPC::gBCLAat, 537, 2 },
    {PPC::gBCLR, 539, 11 },
    {PPC::gBCLRL, 550, 11 },
    {PPC::gBCLat, 561, 2 },
    {PPC::gBCat, 563, 2 },
  };

  static const AliasPattern Patterns[] = {
    // PPC::ADDI - 0
    {0, 0, 3, 2 },
    // PPC::ADDI8 - 1
    {0, 2, 3, 2 },
    // PPC::ADDIS - 2
    {12, 4, 3, 2 },
    // PPC::ADDIS8 - 3
    {12, 6, 3, 2 },
    // PPC::ADDPCIS - 4
    {25, 8, 2, 2 },
    // PPC::BCC - 5
    {33, 10, 3, 2 },
    {46, 12, 3, 2 },
    {55, 14, 3, 2 },
    {69, 16, 3, 2 },
    {79, 18, 3, 2 },
    {93, 20, 3, 2 },
    {103, 22, 3, 2 },
    {116, 24, 3, 2 },
    {125, 26, 3, 2 },
    {139, 28, 3, 2 },
    {149, 30, 3, 2 },
    {163, 32, 3, 2 },
    {173, 34, 3, 2 },
    {186, 36, 3, 2 },
    {195, 38, 3, 2 },
    {209, 40, 3, 2 },
    {219, 42, 3, 2 },
    {233, 44, 3, 2 },
    {243, 46, 3, 2 },
    {256, 48, 3, 2 },
    {265, 50, 3, 2 },
    {279, 52, 3, 2 },
    {289, 54, 3, 2 },
    {303, 56, 3, 2 },
    // PPC::BCCA - 29
    {313, 58, 3, 2 },
    {327, 60, 3, 2 },
    {337, 62, 3, 2 },
    {352, 64, 3, 2 },
    {363, 66, 3, 2 },
    {378, 68, 3, 2 },
    {389, 70, 3, 2 },
    {403, 72, 3, 2 },
    {413, 74, 3, 2 },
    {428, 76, 3, 2 },
    {439, 78, 3, 2 },
    {454, 80, 3, 2 },
    {465, 82, 3, 2 },
    {479, 84, 3, 2 },
    {489, 86, 3, 2 },
    {504, 88, 3, 2 },
    {515, 90, 3, 2 },
    {530, 92, 3, 2 },
    {541, 94, 3, 2 },
    {555, 96, 3, 2 },
    {565, 98, 3, 2 },
    {580, 100, 3, 2 },
    {591, 102, 3, 2 },
    {606, 104, 3, 2 },
    // PPC::BCCCTR - 53
    {617, 106, 2, 2 },
    {627, 108, 2, 2 },
    {634, 110, 2, 2 },
    {645, 112, 2, 2 },
    {653, 114, 2, 2 },
    {664, 116, 2, 2 },
    {672, 118, 2, 2 },
    {682, 120, 2, 2 },
    {689, 122, 2, 2 },
    {700, 124, 2, 2 },
    {708, 126, 2, 2 },
    {719, 128, 2, 2 },
    {727, 130, 2, 2 },
    {737, 132, 2, 2 },
    {744, 134, 2, 2 },
    {755, 136, 2, 2 },
    {763, 138, 2, 2 },
    {774, 140, 2, 2 },
    {782, 142, 2, 2 },
    {792, 144, 2, 2 },
    {799, 146, 2, 2 },
    {810, 148, 2, 2 },
    {818, 150, 2, 2 },
    {829, 152, 2, 2 },
    // PPC::BCCCTRL - 77
    {837, 154, 2, 2 },
    {848, 156, 2, 2 },
    {856, 158, 2, 2 },
    {868, 160, 2, 2 },
    {877, 162, 2, 2 },
    {889, 164, 2, 2 },
    {898, 166, 2, 2 },
    {909, 168, 2, 2 },
    {917, 170, 2, 2 },
    {929, 172, 2, 2 },
    {938, 174, 2, 2 },
    {950, 176, 2, 2 },
    {959, 178, 2, 2 },
    {970, 180, 2, 2 },
    {978, 182, 2, 2 },
    {990, 184, 2, 2 },
    {999, 186, 2, 2 },
    {1011, 188, 2, 2 },
    {1020, 190, 2, 2 },
    {1031, 192, 2, 2 },
    {1039, 194, 2, 2 },
    {1051, 196, 2, 2 },
    {1060, 198, 2, 2 },
    {1072, 200, 2, 2 },
    // PPC::BCCL - 101
    {1081, 202, 3, 2 },
    {1095, 204, 3, 2 },
    {1105, 206, 3, 2 },
    {1120, 208, 3, 2 },
    {1131, 210, 3, 2 },
    {1146, 212, 3, 2 },
    {1157, 214, 3, 2 },
    {1171, 216, 3, 2 },
    {1181, 218, 3, 2 },
    {1196, 220, 3, 2 },
    {1207, 222, 3, 2 },
    {1222, 224, 3, 2 },
    {1233, 226, 3, 2 },
    {1247, 228, 3, 2 },
    {1257, 230, 3, 2 },
    {1272, 232, 3, 2 },
    {1283, 234, 3, 2 },
    {1298, 236, 3, 2 },
    {1309, 238, 3, 2 },
    {1323, 240, 3, 2 },
    {1333, 242, 3, 2 },
    {1348, 244, 3, 2 },
    {1359, 246, 3, 2 },
    {1374, 248, 3, 2 },
    // PPC::BCCLA - 125
    {1385, 250, 3, 2 },
    {1400, 252, 3, 2 },
    {1411, 254, 3, 2 },
    {1427, 256, 3, 2 },
    {1439, 258, 3, 2 },
    {1455, 260, 3, 2 },
    {1467, 262, 3, 2 },
    {1482, 264, 3, 2 },
    {1493, 266, 3, 2 },
    {1509, 268, 3, 2 },
    {1521, 270, 3, 2 },
    {1537, 272, 3, 2 },
    {1549, 274, 3, 2 },
    {1564, 276, 3, 2 },
    {1575, 278, 3, 2 },
    {1591, 280, 3, 2 },
    {1603, 282, 3, 2 },
    {1619, 284, 3, 2 },
    {1631, 286, 3, 2 },
    {1646, 288, 3, 2 },
    {1657, 290, 3, 2 },
    {1673, 292, 3, 2 },
    {1685, 294, 3, 2 },
    {1701, 296, 3, 2 },
    // PPC::BCCLR - 149
    {1713, 298, 2, 2 },
    {1722, 300, 2, 2 },
    {1728, 302, 2, 2 },
    {1738, 304, 2, 2 },
    {1745, 306, 2, 2 },
    {1755, 308, 2, 2 },
    {1762, 310, 2, 2 },
    {1771, 312, 2, 2 },
    {1777, 314, 2, 2 },
    {1787, 316, 2, 2 },
    {1794, 318, 2, 2 },
    {1804, 320, 2, 2 },
    {1811, 322, 2, 2 },
    {1820, 324, 2, 2 },
    {1826, 326, 2, 2 },
    {1836, 328, 2, 2 },
    {1843, 330, 2, 2 },
    {1853, 332, 2, 2 },
    {1860, 334, 2, 2 },
    {1869, 336, 2, 2 },
    {1875, 338, 2, 2 },
    {1885, 340, 2, 2 },
    {1892, 342, 2, 2 },
    {1902, 344, 2, 2 },
    // PPC::BCCLRL - 173
    {1909, 346, 2, 2 },
    {1919, 348, 2, 2 },
    {1926, 350, 2, 2 },
    {1937, 352, 2, 2 },
    {1945, 354, 2, 2 },
    {1956, 356, 2, 2 },
    {1964, 358, 2, 2 },
    {1974, 360, 2, 2 },
    {1981, 362, 2, 2 },
    {1992, 364, 2, 2 },
    {2000, 366, 2, 2 },
    {2011, 368, 2, 2 },
    {2019, 370, 2, 2 },
    {2029, 372, 2, 2 },
    {2036, 374, 2, 2 },
    {2047, 376, 2, 2 },
    {2055, 378, 2, 2 },
    {2066, 380, 2, 2 },
    {2074, 382, 2, 2 },
    {2084, 384, 2, 2 },
    {2091, 386, 2, 2 },
    {2102, 388, 2, 2 },
    {2110, 390, 2, 2 },
    {2121, 392, 2, 2 },
    // PPC::CMPD - 197
    {2129, 394, 3, 3 },
    // PPC::CMPDI - 198
    {2141, 397, 3, 2 },
    // PPC::CMPLD - 199
    {2156, 399, 3, 3 },
    // PPC::CMPLDI - 200
    {2169, 402, 3, 2 },
    // PPC::CMPLW - 201
    {2185, 404, 3, 3 },
    // PPC::CMPLWI - 202
    {2198, 407, 3, 2 },
    // PPC::CMPW - 203
    {2214, 409, 3, 3 },
    // PPC::CMPWI - 204
    {2226, 412, 3, 2 },
    // PPC::CNTLZW - 205
    {2241, 414, 2, 2 },
    // PPC::CNTLZW8 - 206
    {2241, 416, 2, 2 },
    // PPC::CNTLZW8_rec - 207
    {2255, 418, 2, 2 },
    // PPC::CNTLZW_rec - 208
    {2255, 420, 2, 2 },
    // PPC::CP_PASTE_rec - 209
    {2270, 422, 3, 3 },
    // PPC::CREQV - 210
    {2284, 425, 3, 3 },
    // PPC::CRNOR - 211
    {2293, 428, 3, 3 },
    // PPC::CROR - 212
    {2306, 431, 3, 3 },
    // PPC::CRXOR - 213
    {2320, 434, 3, 3 },
    // PPC::ISEL - 214
    {2329, 437, 4, 4 },
    {2347, 441, 4, 4 },
    {2365, 445, 4, 4 },
    // PPC::ISEL8 - 217
    {2329, 449, 4, 4 },
    {2347, 453, 4, 4 },
    {2365, 457, 4, 4 },
    // PPC::MBAR - 220
    {2383, 461, 1, 1 },
    // PPC::MFDCR - 221
    {2388, 462, 2, 5 },
    {2397, 467, 2, 5 },
    {2406, 472, 2, 5 },
    {2415, 477, 2, 5 },
    {2424, 482, 2, 5 },
    {2433, 487, 2, 5 },
    {2442, 492, 2, 5 },
    {2451, 497, 2, 5 },
    // PPC::MFSPR - 229
    {2460, 502, 2, 2 },
    {2469, 504, 2, 5 },
    {2480, 509, 2, 5 },
    {2490, 514, 2, 5 },
    {2500, 519, 2, 5 },
    {2508, 524, 2, 5 },
    {2517, 529, 2, 5 },
    {2527, 534, 2, 5 },
    {2537, 539, 2, 5 },
    {2548, 544, 2, 5 },
    {2557, 549, 2, 5 },
    {2566, 554, 2, 5 },
    {2576, 559, 2, 5 },
    {2586, 564, 2, 5 },
    {2596, 569, 2, 5 },
    {2606, 574, 2, 5 },
    {2615, 579, 2, 5 },
    {2624, 584, 2, 5 },
    {2633, 589, 2, 5 },
    {2642, 594, 2, 5 },
    {2655, 599, 2, 5 },
    {2669, 604, 2, 5 },
    {2683, 609, 2, 5 },
    {2697, 614, 2, 5 },
    {2711, 619, 2, 5 },
    {2725, 624, 2, 5 },
    {2739, 629, 2, 5 },
    {2753, 634, 2, 5 },
    {2767, 639, 2, 5 },
    {2781, 644, 2, 5 },
    {2795, 649, 2, 5 },
    {2809, 654, 2, 5 },
    {2823, 659, 2, 5 },
    {2837, 664, 2, 5 },
    {2851, 669, 2, 5 },
    {2865, 674, 2, 5 },
    {2879, 679, 2, 5 },
    {2888, 684, 2, 5 },
    {2897, 689, 2, 5 },
    {2907, 694, 2, 5 },
    {2916, 699, 2, 5 },
    {2926, 704, 2, 5 },
    {2936, 709, 2, 5 },
    {2946, 714, 2, 5 },
    {2956, 719, 2, 5 },
    {2966, 724, 2, 5 },
    // PPC::MFSPR8 - 275
    {2460, 729, 2, 2 },
    {2469, 731, 2, 5 },
    {2480, 736, 2, 5 },
    {2490, 741, 2, 5 },
    {2500, 746, 2, 5 },
    {2508, 751, 2, 5 },
    {2517, 756, 2, 5 },
    {2527, 761, 2, 5 },
    {2537, 766, 2, 5 },
    {2548, 771, 2, 5 },
    {2557, 776, 2, 5 },
    {2566, 781, 2, 5 },
    {2576, 786, 2, 5 },
    {2586, 791, 2, 5 },
    {2596, 796, 2, 5 },
    {2606, 801, 2, 5 },
    {2624, 806, 2, 5 },
    {2633, 811, 2, 5 },
    {2642, 816, 2, 5 },
    // PPC::MFTB - 294
    {2976, 821, 2, 2 },
    // PPC::MFUDSCR - 295
    {2469, 823, 1, 4 },
    // PPC::MFVRSAVE - 296
    {2985, 827, 1, 1 },
    // PPC::MFVSRD - 297
    {2997, 828, 2, 2 },
    // PPC::MFVSRWZ - 298
    {3011, 830, 2, 2 },
    // PPC::MTCRF - 299
    {3026, 832, 2, 2 },
    // PPC::MTCRF8 - 300
    {3026, 834, 2, 2 },
    // PPC::MTDCR - 301
    {3034, 836, 2, 5 },
    {3043, 841, 2, 5 },
    {3052, 846, 2, 5 },
    {3061, 851, 2, 5 },
    {3070, 856, 2, 5 },
    {3079, 861, 2, 5 },
    {3088, 866, 2, 5 },
    {3097, 871, 2, 5 },
    // PPC::MTFSF - 309
    {3106, 876, 4, 4 },
    // PPC::MTFSFI - 310
    {3119, 880, 3, 3 },
    // PPC::MTFSFI_rec - 311
    {3137, 883, 3, 3 },
    // PPC::MTFSF_rec - 312
    {3156, 886, 4, 4 },
    // PPC::MTMSR - 313
    {3170, 890, 2, 5 },
    // PPC::MTMSRD - 314
    {3179, 895, 2, 5 },
    // PPC::MTSPR - 315
    {3189, 900, 2, 2 },
    {3198, 902, 2, 5 },
    {3209, 907, 2, 5 },
    {3217, 912, 2, 5 },
    {3226, 917, 2, 5 },
    {3236, 922, 2, 5 },
    {3246, 927, 2, 5 },
    {3257, 932, 2, 5 },
    {3266, 937, 2, 5 },
    {3275, 942, 2, 5 },
    {3285, 947, 2, 5 },
    {3295, 952, 2, 5 },
    {3305, 957, 2, 5 },
    {3315, 962, 2, 5 },
    {3324, 967, 2, 5 },
    {3333, 972, 2, 5 },
    {3342, 977, 2, 5 },
    {3351, 982, 2, 5 },
    {3360, 987, 2, 5 },
    {3373, 992, 2, 5 },
    {3387, 997, 2, 5 },
    {3401, 1002, 2, 5 },
    {3415, 1007, 2, 5 },
    {3429, 1012, 2, 5 },
    {3443, 1017, 2, 5 },
    {3457, 1022, 2, 5 },
    {3471, 1027, 2, 5 },
    {3485, 1032, 2, 5 },
    {3499, 1037, 2, 5 },
    {3513, 1042, 2, 5 },
    {3527, 1047, 2, 5 },
    {3541, 1052, 2, 5 },
    {3555, 1057, 2, 5 },
    {3569, 1062, 2, 5 },
    {3583, 1067, 2, 5 },
    {3597, 1072, 2, 5 },
    {3606, 1077, 2, 5 },
    {3615, 1082, 2, 5 },
    {3625, 1087, 2, 5 },
    {3634, 1092, 2, 5 },
    {3644, 1097, 2, 5 },
    {3654, 1102, 2, 5 },
    {3664, 1107, 2, 5 },
    {3674, 1112, 2, 5 },
    {3684, 1117, 2, 5 },
    // PPC::MTSPR8 - 360
    {3189, 1122, 2, 2 },
    {3198, 1124, 2, 5 },
    {3209, 1129, 2, 5 },
    {3217, 1134, 2, 5 },
    {3226, 1139, 2, 5 },
    {3236, 1144, 2, 5 },
    {3246, 1149, 2, 5 },
    {3257, 1154, 2, 5 },
    {3266, 1159, 2, 5 },
    {3275, 1164, 2, 5 },
    {3285, 1169, 2, 5 },
    {3295, 1174, 2, 5 },
    {3305, 1179, 2, 5 },
    {3315, 1184, 2, 5 },
    {3333, 1189, 2, 5 },
    {3342, 1194, 2, 5 },
    {3351, 1199, 2, 5 },
    {3360, 1204, 2, 5 },
    // PPC::MTUDSCR - 378
    {3694, 1209, 1, 4 },
    // PPC::MTVRSAVE - 379
    {3705, 1213, 1, 1 },
    // PPC::MTVSRD - 380
    {3717, 1214, 2, 2 },
    // PPC::MTVSRWA - 381
    {3731, 1216, 2, 2 },
    // PPC::MTVSRWZ - 382
    {3746, 1218, 2, 2 },
    // PPC::NOR - 383
    {3761, 1220, 3, 3 },
    // PPC::NOR8 - 384
    {3761, 1223, 3, 3 },
    // PPC::NOR8_rec - 385
    {3772, 1226, 3, 3 },
    // PPC::NOR_rec - 386
    {3772, 1229, 3, 3 },
    // PPC::OR - 387
    {3784, 1232, 3, 3 },
    // PPC::OR8 - 388
    {3784, 1235, 3, 3 },
    // PPC::OR8_rec - 389
    {3794, 1238, 3, 3 },
    // PPC::ORI - 390
    {3805, 1241, 3, 3 },
    // PPC::ORI8 - 391
    {3805, 1244, 3, 3 },
    // PPC::OR_rec - 392
    {3794, 1247, 3, 3 },
    // PPC::RFEBB - 393
    {3809, 1250, 1, 1 },
    // PPC::RLDCL - 394
    {3815, 1251, 4, 4 },
    // PPC::RLDCL_rec - 395
    {3832, 1255, 4, 4 },
    // PPC::RLDICL - 396
    {3850, 1259, 4, 4 },
    {3870, 1263, 4, 3 },
    // PPC::RLDICL_32_64 - 398
    {3850, 1266, 4, 4 },
    {3870, 1270, 4, 3 },
    // PPC::RLDICL_rec - 400
    {3890, 1273, 4, 4 },
    {3911, 1277, 4, 3 },
    // PPC::RLWINM - 402
    {3932, 1280, 5, 5 },
    {3952, 1285, 5, 5 },
    // PPC::RLWINM8 - 404
    {3932, 1290, 5, 5 },
    {3952, 1295, 5, 5 },
    // PPC::RLWINM8_rec - 406
    {3972, 1300, 5, 5 },
    {3993, 1305, 5, 5 },
    // PPC::RLWINM_rec - 408
    {3972, 1310, 5, 5 },
    {3993, 1315, 5, 5 },
    // PPC::RLWNM - 410
    {4014, 1320, 5, 5 },
    // PPC::RLWNM8 - 411
    {4014, 1325, 5, 5 },
    // PPC::RLWNM8_rec - 412
    {4031, 1330, 5, 5 },
    // PPC::RLWNM_rec - 413
    {4031, 1335, 5, 5 },
    // PPC::SC - 414
    {4049, 1340, 1, 1 },
    // PPC::SUBF - 415
    {4052, 1341, 3, 3 },
    // PPC::SUBF8 - 416
    {4052, 1344, 3, 3 },
    // PPC::SUBF8_rec - 417
    {4067, 1347, 3, 3 },
    // PPC::SUBFC - 418
    {4083, 1350, 3, 3 },
    // PPC::SUBFC8 - 419
    {4083, 1353, 3, 3 },
    // PPC::SUBFC8_rec - 420
    {4099, 1356, 3, 3 },
    // PPC::SUBFC_rec - 421
    {4099, 1359, 3, 3 },
    // PPC::SUBF_rec - 422
    {4067, 1362, 3, 3 },
    // PPC::SYNC - 423
    {4116, 1365, 1, 1 },
    {4121, 1366, 1, 1 },
    {4128, 1367, 1, 1 },
    // PPC::TD - 426
    {4136, 1368, 3, 3 },
    {4148, 1371, 3, 3 },
    {4160, 1374, 3, 3 },
    {4172, 1377, 3, 3 },
    {4184, 1380, 3, 3 },
    {4197, 1383, 3, 3 },
    {4210, 1386, 3, 3 },
    // PPC::TDI - 433
    {4221, 1389, 3, 2 },
    {4236, 1391, 3, 2 },
    {4251, 1393, 3, 2 },
    {4266, 1395, 3, 2 },
    {4281, 1397, 3, 2 },
    {4297, 1399, 3, 2 },
    {4313, 1401, 3, 2 },
    // PPC::TEND - 440
    {4327, 1403, 1, 1 },
    {4333, 1404, 1, 1 },
    // PPC::TLBIE - 442
    {4342, 1405, 2, 2 },
    // PPC::TLBRE2 - 443
    {4351, 1407, 3, 3 },
    {4366, 1410, 3, 3 },
    // PPC::TLBWE2 - 445
    {4381, 1413, 3, 3 },
    {4396, 1416, 3, 3 },
    // PPC::TSR - 447
    {4411, 1419, 1, 1 },
    {4421, 1420, 1, 1 },
    // PPC::TW - 449
    {4430, 1421, 3, 3 },
    {4435, 1424, 3, 3 },
    {4447, 1427, 3, 3 },
    {4459, 1430, 3, 3 },
    {4471, 1433, 3, 3 },
    {4483, 1436, 3, 3 },
    {4496, 1439, 3, 3 },
    {4509, 1442, 3, 3 },
    // PPC::TWI - 457
    {4520, 1445, 3, 2 },
    {4535, 1447, 3, 2 },
    {4550, 1449, 3, 2 },
    {4565, 1451, 3, 2 },
    {4580, 1453, 3, 2 },
    {4596, 1455, 3, 2 },
    {4612, 1457, 3, 2 },
    // PPC::VNOR - 464
    {4626, 1459, 3, 3 },
    // PPC::VOR - 465
    {4638, 1462, 3, 3 },
    // PPC::WAIT - 466
    {4649, 1465, 1, 1 },
    {4654, 1466, 1, 1 },
    {4662, 1467, 1, 1 },
    // PPC::XORI - 469
    {4671, 1468, 3, 3 },
    // PPC::XORI8 - 470
    {4671, 1471, 3, 3 },
    // PPC::XVCPSGNDP - 471
    {4676, 1474, 3, 3 },
    // PPC::XVCPSGNSP - 472
    {4691, 1477, 3, 3 },
    // PPC::XXPERMDI - 473
    {4706, 1480, 4, 7 },
    {4724, 1487, 4, 7 },
    {4742, 1494, 4, 4 },
    {4761, 1498, 4, 4 },
    {4780, 1502, 4, 4 },
    // PPC::XXPERMDIs - 478
    {4706, 1506, 3, 6 },
    {4724, 1512, 3, 6 },
    {4780, 1518, 3, 3 },
    // PPC::gBC - 481
    {4795, 1521, 3, 2 },
    {4807, 1523, 3, 2 },
    {4819, 1525, 3, 2 },
    {4832, 1527, 3, 2 },
    {4845, 1529, 3, 2 },
    {4858, 1531, 3, 2 },
    {4871, 1533, 3, 2 },
    {4886, 1535, 3, 2 },
    {4901, 1537, 3, 2 },
    {4915, 1539, 3, 2 },
    // PPC::gBCA - 491
    {4929, 1541, 3, 2 },
    {4942, 1543, 3, 2 },
    {4955, 1545, 3, 2 },
    {4969, 1547, 3, 2 },
    {4983, 1549, 3, 2 },
    {4997, 1551, 3, 2 },
    {5011, 1553, 3, 2 },
    {5027, 1555, 3, 2 },
    {5043, 1557, 3, 2 },
    {5058, 1559, 3, 2 },
    // PPC::gBCAat - 501
    {5073, 1561, 4, 3 },
    {5093, 1564, 4, 3 },
    // PPC::gBCCTR - 503
    {5113, 1567, 3, 3 },
    {5128, 1570, 3, 3 },
    {5137, 1573, 3, 3 },
    {5146, 1576, 3, 3 },
    {5156, 1579, 3, 3 },
    {5166, 1582, 3, 3 },
    {5176, 1585, 3, 3 },
    // PPC::gBCCTRL - 510
    {5186, 1588, 3, 3 },
    {5202, 1591, 3, 3 },
    {5212, 1594, 3, 3 },
    {5222, 1597, 3, 3 },
    {5233, 1600, 3, 3 },
    {5244, 1603, 3, 3 },
    {5255, 1606, 3, 3 },
    // PPC::gBCL - 517
    {5266, 1609, 3, 2 },
    {5279, 1611, 3, 2 },
    {5292, 1613, 3, 2 },
    {5306, 1615, 3, 2 },
    {5320, 1617, 3, 2 },
    {5334, 1619, 3, 2 },
    {5348, 1621, 3, 2 },
    {5364, 1623, 3, 2 },
    {5380, 1625, 3, 2 },
    {5395, 1627, 3, 2 },
    // PPC::gBCLA - 527
    {5410, 1629, 3, 2 },
    {5424, 1631, 3, 2 },
    {5438, 1633, 3, 2 },
    {5453, 1635, 3, 2 },
    {5468, 1637, 3, 2 },
    {5483, 1639, 3, 2 },
    {5498, 1641, 3, 2 },
    {5515, 1643, 3, 2 },
    {5532, 1645, 3, 2 },
    {5548, 1647, 3, 2 },
    // PPC::gBCLAat - 537
    {5564, 1649, 4, 3 },
    {5585, 1652, 4, 3 },
    // PPC::gBCLR - 539
    {5606, 1655, 3, 3 },
    {5620, 1658, 3, 3 },
    {5628, 1661, 3, 3 },
    {5636, 1664, 3, 3 },
    {5645, 1667, 3, 3 },
    {5654, 1670, 3, 3 },
    {5663, 1673, 3, 3 },
    {5672, 1676, 3, 3 },
    {5683, 1679, 3, 3 },
    {5694, 1682, 3, 3 },
    {5704, 1685, 3, 3 },
    // PPC::gBCLRL - 550
    {5714, 1688, 3, 3 },
    {5729, 1691, 3, 3 },
    {5738, 1694, 3, 3 },
    {5747, 1697, 3, 3 },
    {5757, 1700, 3, 3 },
    {5767, 1703, 3, 3 },
    {5777, 1706, 3, 3 },
    {5787, 1709, 3, 3 },
    {5799, 1712, 3, 3 },
    {5811, 1715, 3, 3 },
    {5822, 1718, 3, 3 },
    // PPC::gBCLat - 561
    {5833, 1721, 4, 3 },
    {5853, 1724, 4, 3 },
    // PPC::gBCat - 563
    {5873, 1727, 4, 3 },
    {5892, 1730, 4, 3 },
  };

  static const AliasPatternCond Conds[] = {
    // (ADDI gprc:$rD, ZERO, s16imm:$imm) - 0
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Reg, PPC::ZERO},
    // (ADDI8 g8rc:$rD, ZERO8, s16imm64:$imm) - 2
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Reg, PPC::ZERO8},
    // (ADDIS gprc:$rD, ZERO, s17imm:$imm) - 4
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Reg, PPC::ZERO},
    // (ADDIS8 g8rc:$rD, ZERO8, s17imm64:$imm) - 6
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Reg, PPC::ZERO8},
    // (ADDPCIS g8rc:$RT, 0) - 8
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (BCC 12, crrc:$cc, condbrtarget:$dst) - 10
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCC 12, CR0, condbrtarget:$dst) - 12
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCC 14, crrc:$cc, condbrtarget:$dst) - 14
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCC 14, CR0, condbrtarget:$dst) - 16
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCC 15, crrc:$cc, condbrtarget:$dst) - 18
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCC 15, CR0, condbrtarget:$dst) - 20
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCC 44, crrc:$cc, condbrtarget:$dst) - 22
    {AliasPatternCond::K_Imm, uint32_t(44)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCC 44, CR0, condbrtarget:$dst) - 24
    {AliasPatternCond::K_Imm, uint32_t(44)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCC 46, crrc:$cc, condbrtarget:$dst) - 26
    {AliasPatternCond::K_Imm, uint32_t(46)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCC 46, CR0, condbrtarget:$dst) - 28
    {AliasPatternCond::K_Imm, uint32_t(46)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCC 47, crrc:$cc, condbrtarget:$dst) - 30
    {AliasPatternCond::K_Imm, uint32_t(47)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCC 47, CR0, condbrtarget:$dst) - 32
    {AliasPatternCond::K_Imm, uint32_t(47)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCC 76, crrc:$cc, condbrtarget:$dst) - 34
    {AliasPatternCond::K_Imm, uint32_t(76)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCC 76, CR0, condbrtarget:$dst) - 36
    {AliasPatternCond::K_Imm, uint32_t(76)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCC 78, crrc:$cc, condbrtarget:$dst) - 38
    {AliasPatternCond::K_Imm, uint32_t(78)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCC 78, CR0, condbrtarget:$dst) - 40
    {AliasPatternCond::K_Imm, uint32_t(78)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCC 79, crrc:$cc, condbrtarget:$dst) - 42
    {AliasPatternCond::K_Imm, uint32_t(79)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCC 79, CR0, condbrtarget:$dst) - 44
    {AliasPatternCond::K_Imm, uint32_t(79)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCC 68, crrc:$cc, condbrtarget:$dst) - 46
    {AliasPatternCond::K_Imm, uint32_t(68)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCC 68, CR0, condbrtarget:$dst) - 48
    {AliasPatternCond::K_Imm, uint32_t(68)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCC 70, crrc:$cc, condbrtarget:$dst) - 50
    {AliasPatternCond::K_Imm, uint32_t(70)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCC 70, CR0, condbrtarget:$dst) - 52
    {AliasPatternCond::K_Imm, uint32_t(70)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCC 71, crrc:$cc, condbrtarget:$dst) - 54
    {AliasPatternCond::K_Imm, uint32_t(71)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCC 71, CR0, condbrtarget:$dst) - 56
    {AliasPatternCond::K_Imm, uint32_t(71)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCA 12, crrc:$cc, abscondbrtarget:$dst) - 58
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCA 12, CR0, abscondbrtarget:$dst) - 60
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCA 14, crrc:$cc, abscondbrtarget:$dst) - 62
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCA 14, CR0, abscondbrtarget:$dst) - 64
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCA 15, crrc:$cc, abscondbrtarget:$dst) - 66
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCA 15, CR0, abscondbrtarget:$dst) - 68
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCA 44, crrc:$cc, abscondbrtarget:$dst) - 70
    {AliasPatternCond::K_Imm, uint32_t(44)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCA 44, CR0, abscondbrtarget:$dst) - 72
    {AliasPatternCond::K_Imm, uint32_t(44)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCA 46, crrc:$cc, abscondbrtarget:$dst) - 74
    {AliasPatternCond::K_Imm, uint32_t(46)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCA 46, CR0, abscondbrtarget:$dst) - 76
    {AliasPatternCond::K_Imm, uint32_t(46)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCA 47, crrc:$cc, abscondbrtarget:$dst) - 78
    {AliasPatternCond::K_Imm, uint32_t(47)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCA 47, CR0, abscondbrtarget:$dst) - 80
    {AliasPatternCond::K_Imm, uint32_t(47)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCA 76, crrc:$cc, abscondbrtarget:$dst) - 82
    {AliasPatternCond::K_Imm, uint32_t(76)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCA 76, CR0, abscondbrtarget:$dst) - 84
    {AliasPatternCond::K_Imm, uint32_t(76)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCA 78, crrc:$cc, abscondbrtarget:$dst) - 86
    {AliasPatternCond::K_Imm, uint32_t(78)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCA 78, CR0, abscondbrtarget:$dst) - 88
    {AliasPatternCond::K_Imm, uint32_t(78)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCA 79, crrc:$cc, abscondbrtarget:$dst) - 90
    {AliasPatternCond::K_Imm, uint32_t(79)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCA 79, CR0, abscondbrtarget:$dst) - 92
    {AliasPatternCond::K_Imm, uint32_t(79)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCA 68, crrc:$cc, abscondbrtarget:$dst) - 94
    {AliasPatternCond::K_Imm, uint32_t(68)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCA 68, CR0, abscondbrtarget:$dst) - 96
    {AliasPatternCond::K_Imm, uint32_t(68)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCA 70, crrc:$cc, abscondbrtarget:$dst) - 98
    {AliasPatternCond::K_Imm, uint32_t(70)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCA 70, CR0, abscondbrtarget:$dst) - 100
    {AliasPatternCond::K_Imm, uint32_t(70)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCA 71, crrc:$cc, abscondbrtarget:$dst) - 102
    {AliasPatternCond::K_Imm, uint32_t(71)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCA 71, CR0, abscondbrtarget:$dst) - 104
    {AliasPatternCond::K_Imm, uint32_t(71)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTR 12, crrc:$cc) - 106
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTR 12, CR0) - 108
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTR 14, crrc:$cc) - 110
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTR 14, CR0) - 112
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTR 15, crrc:$cc) - 114
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTR 15, CR0) - 116
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTR 44, crrc:$cc) - 118
    {AliasPatternCond::K_Imm, uint32_t(44)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTR 44, CR0) - 120
    {AliasPatternCond::K_Imm, uint32_t(44)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTR 46, crrc:$cc) - 122
    {AliasPatternCond::K_Imm, uint32_t(46)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTR 46, CR0) - 124
    {AliasPatternCond::K_Imm, uint32_t(46)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTR 47, crrc:$cc) - 126
    {AliasPatternCond::K_Imm, uint32_t(47)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTR 47, CR0) - 128
    {AliasPatternCond::K_Imm, uint32_t(47)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTR 76, crrc:$cc) - 130
    {AliasPatternCond::K_Imm, uint32_t(76)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTR 76, CR0) - 132
    {AliasPatternCond::K_Imm, uint32_t(76)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTR 78, crrc:$cc) - 134
    {AliasPatternCond::K_Imm, uint32_t(78)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTR 78, CR0) - 136
    {AliasPatternCond::K_Imm, uint32_t(78)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTR 79, crrc:$cc) - 138
    {AliasPatternCond::K_Imm, uint32_t(79)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTR 79, CR0) - 140
    {AliasPatternCond::K_Imm, uint32_t(79)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTR 68, crrc:$cc) - 142
    {AliasPatternCond::K_Imm, uint32_t(68)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTR 68, CR0) - 144
    {AliasPatternCond::K_Imm, uint32_t(68)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTR 70, crrc:$cc) - 146
    {AliasPatternCond::K_Imm, uint32_t(70)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTR 70, CR0) - 148
    {AliasPatternCond::K_Imm, uint32_t(70)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTR 71, crrc:$cc) - 150
    {AliasPatternCond::K_Imm, uint32_t(71)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTR 71, CR0) - 152
    {AliasPatternCond::K_Imm, uint32_t(71)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTRL 12, crrc:$cc) - 154
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTRL 12, CR0) - 156
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTRL 14, crrc:$cc) - 158
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTRL 14, CR0) - 160
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTRL 15, crrc:$cc) - 162
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTRL 15, CR0) - 164
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTRL 44, crrc:$cc) - 166
    {AliasPatternCond::K_Imm, uint32_t(44)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTRL 44, CR0) - 168
    {AliasPatternCond::K_Imm, uint32_t(44)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTRL 46, crrc:$cc) - 170
    {AliasPatternCond::K_Imm, uint32_t(46)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTRL 46, CR0) - 172
    {AliasPatternCond::K_Imm, uint32_t(46)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTRL 47, crrc:$cc) - 174
    {AliasPatternCond::K_Imm, uint32_t(47)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTRL 47, CR0) - 176
    {AliasPatternCond::K_Imm, uint32_t(47)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTRL 76, crrc:$cc) - 178
    {AliasPatternCond::K_Imm, uint32_t(76)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTRL 76, CR0) - 180
    {AliasPatternCond::K_Imm, uint32_t(76)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTRL 78, crrc:$cc) - 182
    {AliasPatternCond::K_Imm, uint32_t(78)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTRL 78, CR0) - 184
    {AliasPatternCond::K_Imm, uint32_t(78)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTRL 79, crrc:$cc) - 186
    {AliasPatternCond::K_Imm, uint32_t(79)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTRL 79, CR0) - 188
    {AliasPatternCond::K_Imm, uint32_t(79)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTRL 68, crrc:$cc) - 190
    {AliasPatternCond::K_Imm, uint32_t(68)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTRL 68, CR0) - 192
    {AliasPatternCond::K_Imm, uint32_t(68)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTRL 70, crrc:$cc) - 194
    {AliasPatternCond::K_Imm, uint32_t(70)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTRL 70, CR0) - 196
    {AliasPatternCond::K_Imm, uint32_t(70)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCCTRL 71, crrc:$cc) - 198
    {AliasPatternCond::K_Imm, uint32_t(71)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCCTRL 71, CR0) - 200
    {AliasPatternCond::K_Imm, uint32_t(71)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCL 12, crrc:$cc, condbrtarget:$dst) - 202
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCL 12, CR0, condbrtarget:$dst) - 204
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCL 14, crrc:$cc, condbrtarget:$dst) - 206
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCL 14, CR0, condbrtarget:$dst) - 208
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCL 15, crrc:$cc, condbrtarget:$dst) - 210
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCL 15, CR0, condbrtarget:$dst) - 212
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCL 44, crrc:$cc, condbrtarget:$dst) - 214
    {AliasPatternCond::K_Imm, uint32_t(44)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCL 44, CR0, condbrtarget:$dst) - 216
    {AliasPatternCond::K_Imm, uint32_t(44)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCL 46, crrc:$cc, condbrtarget:$dst) - 218
    {AliasPatternCond::K_Imm, uint32_t(46)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCL 46, CR0, condbrtarget:$dst) - 220
    {AliasPatternCond::K_Imm, uint32_t(46)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCL 47, crrc:$cc, condbrtarget:$dst) - 222
    {AliasPatternCond::K_Imm, uint32_t(47)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCL 47, CR0, condbrtarget:$dst) - 224
    {AliasPatternCond::K_Imm, uint32_t(47)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCL 76, crrc:$cc, condbrtarget:$dst) - 226
    {AliasPatternCond::K_Imm, uint32_t(76)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCL 76, CR0, condbrtarget:$dst) - 228
    {AliasPatternCond::K_Imm, uint32_t(76)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCL 78, crrc:$cc, condbrtarget:$dst) - 230
    {AliasPatternCond::K_Imm, uint32_t(78)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCL 78, CR0, condbrtarget:$dst) - 232
    {AliasPatternCond::K_Imm, uint32_t(78)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCL 79, crrc:$cc, condbrtarget:$dst) - 234
    {AliasPatternCond::K_Imm, uint32_t(79)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCL 79, CR0, condbrtarget:$dst) - 236
    {AliasPatternCond::K_Imm, uint32_t(79)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCL 68, crrc:$cc, condbrtarget:$dst) - 238
    {AliasPatternCond::K_Imm, uint32_t(68)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCL 68, CR0, condbrtarget:$dst) - 240
    {AliasPatternCond::K_Imm, uint32_t(68)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCL 70, crrc:$cc, condbrtarget:$dst) - 242
    {AliasPatternCond::K_Imm, uint32_t(70)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCL 70, CR0, condbrtarget:$dst) - 244
    {AliasPatternCond::K_Imm, uint32_t(70)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCL 71, crrc:$cc, condbrtarget:$dst) - 246
    {AliasPatternCond::K_Imm, uint32_t(71)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCL 71, CR0, condbrtarget:$dst) - 248
    {AliasPatternCond::K_Imm, uint32_t(71)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLA 12, crrc:$cc, abscondbrtarget:$dst) - 250
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLA 12, CR0, abscondbrtarget:$dst) - 252
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLA 14, crrc:$cc, abscondbrtarget:$dst) - 254
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLA 14, CR0, abscondbrtarget:$dst) - 256
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLA 15, crrc:$cc, abscondbrtarget:$dst) - 258
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLA 15, CR0, abscondbrtarget:$dst) - 260
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLA 44, crrc:$cc, abscondbrtarget:$dst) - 262
    {AliasPatternCond::K_Imm, uint32_t(44)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLA 44, CR0, abscondbrtarget:$dst) - 264
    {AliasPatternCond::K_Imm, uint32_t(44)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLA 46, crrc:$cc, abscondbrtarget:$dst) - 266
    {AliasPatternCond::K_Imm, uint32_t(46)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLA 46, CR0, abscondbrtarget:$dst) - 268
    {AliasPatternCond::K_Imm, uint32_t(46)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLA 47, crrc:$cc, abscondbrtarget:$dst) - 270
    {AliasPatternCond::K_Imm, uint32_t(47)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLA 47, CR0, abscondbrtarget:$dst) - 272
    {AliasPatternCond::K_Imm, uint32_t(47)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLA 76, crrc:$cc, abscondbrtarget:$dst) - 274
    {AliasPatternCond::K_Imm, uint32_t(76)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLA 76, CR0, abscondbrtarget:$dst) - 276
    {AliasPatternCond::K_Imm, uint32_t(76)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLA 78, crrc:$cc, abscondbrtarget:$dst) - 278
    {AliasPatternCond::K_Imm, uint32_t(78)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLA 78, CR0, abscondbrtarget:$dst) - 280
    {AliasPatternCond::K_Imm, uint32_t(78)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLA 79, crrc:$cc, abscondbrtarget:$dst) - 282
    {AliasPatternCond::K_Imm, uint32_t(79)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLA 79, CR0, abscondbrtarget:$dst) - 284
    {AliasPatternCond::K_Imm, uint32_t(79)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLA 68, crrc:$cc, abscondbrtarget:$dst) - 286
    {AliasPatternCond::K_Imm, uint32_t(68)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLA 68, CR0, abscondbrtarget:$dst) - 288
    {AliasPatternCond::K_Imm, uint32_t(68)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLA 70, crrc:$cc, abscondbrtarget:$dst) - 290
    {AliasPatternCond::K_Imm, uint32_t(70)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLA 70, CR0, abscondbrtarget:$dst) - 292
    {AliasPatternCond::K_Imm, uint32_t(70)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLA 71, crrc:$cc, abscondbrtarget:$dst) - 294
    {AliasPatternCond::K_Imm, uint32_t(71)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLA 71, CR0, abscondbrtarget:$dst) - 296
    {AliasPatternCond::K_Imm, uint32_t(71)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLR 12, crrc:$cc) - 298
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLR 12, CR0) - 300
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLR 14, crrc:$cc) - 302
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLR 14, CR0) - 304
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLR 15, crrc:$cc) - 306
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLR 15, CR0) - 308
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLR 44, crrc:$cc) - 310
    {AliasPatternCond::K_Imm, uint32_t(44)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLR 44, CR0) - 312
    {AliasPatternCond::K_Imm, uint32_t(44)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLR 46, crrc:$cc) - 314
    {AliasPatternCond::K_Imm, uint32_t(46)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLR 46, CR0) - 316
    {AliasPatternCond::K_Imm, uint32_t(46)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLR 47, crrc:$cc) - 318
    {AliasPatternCond::K_Imm, uint32_t(47)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLR 47, CR0) - 320
    {AliasPatternCond::K_Imm, uint32_t(47)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLR 76, crrc:$cc) - 322
    {AliasPatternCond::K_Imm, uint32_t(76)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLR 76, CR0) - 324
    {AliasPatternCond::K_Imm, uint32_t(76)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLR 78, crrc:$cc) - 326
    {AliasPatternCond::K_Imm, uint32_t(78)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLR 78, CR0) - 328
    {AliasPatternCond::K_Imm, uint32_t(78)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLR 79, crrc:$cc) - 330
    {AliasPatternCond::K_Imm, uint32_t(79)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLR 79, CR0) - 332
    {AliasPatternCond::K_Imm, uint32_t(79)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLR 68, crrc:$cc) - 334
    {AliasPatternCond::K_Imm, uint32_t(68)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLR 68, CR0) - 336
    {AliasPatternCond::K_Imm, uint32_t(68)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLR 70, crrc:$cc) - 338
    {AliasPatternCond::K_Imm, uint32_t(70)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLR 70, CR0) - 340
    {AliasPatternCond::K_Imm, uint32_t(70)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLR 71, crrc:$cc) - 342
    {AliasPatternCond::K_Imm, uint32_t(71)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLR 71, CR0) - 344
    {AliasPatternCond::K_Imm, uint32_t(71)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLRL 12, crrc:$cc) - 346
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLRL 12, CR0) - 348
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLRL 14, crrc:$cc) - 350
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLRL 14, CR0) - 352
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLRL 15, crrc:$cc) - 354
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLRL 15, CR0) - 356
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLRL 44, crrc:$cc) - 358
    {AliasPatternCond::K_Imm, uint32_t(44)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLRL 44, CR0) - 360
    {AliasPatternCond::K_Imm, uint32_t(44)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLRL 46, crrc:$cc) - 362
    {AliasPatternCond::K_Imm, uint32_t(46)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLRL 46, CR0) - 364
    {AliasPatternCond::K_Imm, uint32_t(46)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLRL 47, crrc:$cc) - 366
    {AliasPatternCond::K_Imm, uint32_t(47)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLRL 47, CR0) - 368
    {AliasPatternCond::K_Imm, uint32_t(47)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLRL 76, crrc:$cc) - 370
    {AliasPatternCond::K_Imm, uint32_t(76)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLRL 76, CR0) - 372
    {AliasPatternCond::K_Imm, uint32_t(76)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLRL 78, crrc:$cc) - 374
    {AliasPatternCond::K_Imm, uint32_t(78)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLRL 78, CR0) - 376
    {AliasPatternCond::K_Imm, uint32_t(78)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLRL 79, crrc:$cc) - 378
    {AliasPatternCond::K_Imm, uint32_t(79)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLRL 79, CR0) - 380
    {AliasPatternCond::K_Imm, uint32_t(79)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLRL 68, crrc:$cc) - 382
    {AliasPatternCond::K_Imm, uint32_t(68)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLRL 68, CR0) - 384
    {AliasPatternCond::K_Imm, uint32_t(68)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLRL 70, crrc:$cc) - 386
    {AliasPatternCond::K_Imm, uint32_t(70)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLRL 70, CR0) - 388
    {AliasPatternCond::K_Imm, uint32_t(70)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (BCCLRL 71, crrc:$cc) - 390
    {AliasPatternCond::K_Imm, uint32_t(71)},
    {AliasPatternCond::K_RegClass, PPC::CRRCRegClassID},
    // (BCCLRL 71, CR0) - 392
    {AliasPatternCond::K_Imm, uint32_t(71)},
    {AliasPatternCond::K_Reg, PPC::CR0},
    // (CMPD CR0, g8rc:$rA, g8rc:$rB) - 394
    {AliasPatternCond::K_Reg, PPC::CR0},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (CMPDI CR0, g8rc:$rA, s16imm64:$imm) - 397
    {AliasPatternCond::K_Reg, PPC::CR0},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (CMPLD CR0, g8rc:$rA, g8rc:$rB) - 399
    {AliasPatternCond::K_Reg, PPC::CR0},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (CMPLDI CR0, g8rc:$rA, u16imm64:$imm) - 402
    {AliasPatternCond::K_Reg, PPC::CR0},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (CMPLW CR0, gprc:$rA, gprc:$rB) - 404
    {AliasPatternCond::K_Reg, PPC::CR0},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (CMPLWI CR0, gprc:$rA, u16imm:$imm) - 407
    {AliasPatternCond::K_Reg, PPC::CR0},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (CMPW CR0, gprc:$rA, gprc:$rB) - 409
    {AliasPatternCond::K_Reg, PPC::CR0},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (CMPWI CR0, gprc:$rA, s16imm:$imm) - 412
    {AliasPatternCond::K_Reg, PPC::CR0},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (CNTLZW gprc:$rA, gprc:$rS) - 414
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (CNTLZW8 g8rc:$rA, g8rc:$rS) - 416
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (CNTLZW8_rec g8rc:$rA, g8rc:$rS) - 418
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (CNTLZW_rec gprc:$rA, gprc:$rS) - 420
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (CP_PASTE_rec gprc:$RA, gprc:$RB, 1) - 422
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(1)},
    // (CREQV crbitrc:$bx, crbitrc:$bx, crbitrc:$bx) - 425
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_TiedReg, 0},
    {AliasPatternCond::K_TiedReg, 0},
    // (CRNOR crbitrc:$bx, crbitrc:$by, crbitrc:$by) - 428
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    // (CROR crbitrc:$bx, crbitrc:$by, crbitrc:$by) - 431
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    // (CRXOR crbitrc:$bx, crbitrc:$bx, crbitrc:$bx) - 434
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_TiedReg, 0},
    {AliasPatternCond::K_TiedReg, 0},
    // (ISEL gprc:$rT, gprc_nor0:$rA, gprc:$rB, CR0LT) - 437
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRC_NOR0RegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Reg, PPC::CR0LT},
    // (ISEL gprc:$rT, gprc_nor0:$rA, gprc:$rB, CR0GT) - 441
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRC_NOR0RegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Reg, PPC::CR0GT},
    // (ISEL gprc:$rT, gprc_nor0:$rA, gprc:$rB, CR0EQ) - 445
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRC_NOR0RegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Reg, PPC::CR0EQ},
    // (ISEL8 g8rc:$rT, g8rc_nox0:$rA, g8rc:$rB, CR0LT) - 449
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RC_NOX0RegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Reg, PPC::CR0LT},
    // (ISEL8 g8rc:$rT, g8rc_nox0:$rA, g8rc:$rB, CR0GT) - 453
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RC_NOX0RegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Reg, PPC::CR0GT},
    // (ISEL8 g8rc:$rT, g8rc_nox0:$rA, g8rc:$rB, CR0EQ) - 457
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RC_NOX0RegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Reg, PPC::CR0EQ},
    // (MBAR 0) - 461
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (MFDCR gprc:$Rx, 128) - 462
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(128)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFDCR gprc:$Rx, 129) - 467
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(129)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFDCR gprc:$Rx, 130) - 472
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(130)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFDCR gprc:$Rx, 131) - 477
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(131)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFDCR gprc:$Rx, 132) - 482
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(132)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFDCR gprc:$Rx, 133) - 487
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(133)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFDCR gprc:$Rx, 134) - 492
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(134)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFDCR gprc:$Rx, 135) - 497
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(135)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 1) - 502
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(1)},
    // (MFSPR gprc:$Rx, 3) - 504
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(3)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 4) - 509
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 5) - 514
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(5)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 8) - 519
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(8)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 9) - 524
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(9)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 13) - 529
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(13)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 17) - 534
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(17)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 18) - 539
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(18)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 19) - 544
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(19)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 22) - 549
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(22)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 25) - 554
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(25)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 26) - 559
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(26)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 27) - 564
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(27)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 28) - 569
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(28)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 29) - 574
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(29)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 48) - 579
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(48)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$RT, 280) - 584
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(280)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$RT, 287) - 589
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(287)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 512) - 594
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(512)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 536) - 599
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(536)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 537) - 604
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(537)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 528) - 609
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(528)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 529) - 614
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(529)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 538) - 619
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(538)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 539) - 624
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(539)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 530) - 629
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(530)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 531) - 634
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(531)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 540) - 639
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(540)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 541) - 644
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(541)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 532) - 649
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(532)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 533) - 654
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(533)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 542) - 659
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(542)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 543) - 664
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(543)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 534) - 669
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(534)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 535) - 674
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(535)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$RT, 896) - 679
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(896)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 980) - 684
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(980)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 981) - 689
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(981)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 986) - 694
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(986)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 988) - 699
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(988)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 989) - 704
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(989)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 990) - 709
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(990)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 991) - 714
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(991)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 1018) - 719
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(1018)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR gprc:$Rx, 1019) - 724
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(1019)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$Rx, 1) - 729
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(1)},
    // (MFSPR8 g8rc:$Rx, 3) - 731
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(3)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$Rx, 4) - 736
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$Rx, 5) - 741
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(5)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$Rx, 8) - 746
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(8)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$Rx, 9) - 751
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(9)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$Rx, 13) - 756
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(13)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$Rx, 17) - 761
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(17)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$Rx, 18) - 766
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(18)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$Rx, 19) - 771
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(19)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$Rx, 22) - 776
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(22)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$Rx, 25) - 781
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(25)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$Rx, 26) - 786
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(26)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$Rx, 27) - 791
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(27)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$Rx, 28) - 796
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(28)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$Rx, 29) - 801
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(29)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$RT, 280) - 806
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(280)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$RT, 287) - 811
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(287)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFSPR8 g8rc:$Rx, 512) - 816
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(512)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFTB gprc:$Rx, 269) - 821
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(269)},
    // (MFUDSCR gprc:$Rx) - 823
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MFVRSAVE gprc:$rS) - 827
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MFVSRD g8rc:$rA, f8rc:$src) - 828
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::F8RCRegClassID},
    // (MFVSRWZ gprc:$rA, f8rc:$src) - 830
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::F8RCRegClassID},
    // (MTCRF 255, gprc:$rA) - 832
    {AliasPatternCond::K_Imm, uint32_t(255)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTCRF8 255, g8rc:$rA) - 834
    {AliasPatternCond::K_Imm, uint32_t(255)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (MTDCR gprc:$Rx, 128) - 836
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(128)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTDCR gprc:$Rx, 129) - 841
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(129)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTDCR gprc:$Rx, 130) - 846
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(130)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTDCR gprc:$Rx, 131) - 851
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(131)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTDCR gprc:$Rx, 132) - 856
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(132)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTDCR gprc:$Rx, 133) - 861
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(133)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTDCR gprc:$Rx, 134) - 866
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(134)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTDCR gprc:$Rx, 135) - 871
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(135)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTFSF i32imm:$FLM, f8rc:$FRB, 0, 0) - 876
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, PPC::F8RCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (MTFSFI u3imm:$BF, u4imm:$U, 0) - 880
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (MTFSFI_rec u3imm:$BF, u4imm:$U, 0) - 883
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (MTFSF_rec i32imm:$FLM, f8rc:$FRB, 0, 0) - 886
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, PPC::F8RCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (MTMSR gprc:$RS, 0) - 890
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTMSRD gprc:$RS, 0) - 895
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 1, gprc:$Rx) - 900
    {AliasPatternCond::K_Imm, uint32_t(1)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTSPR 3, gprc:$Rx) - 902
    {AliasPatternCond::K_Imm, uint32_t(3)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 8, gprc:$Rx) - 907
    {AliasPatternCond::K_Imm, uint32_t(8)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 9, gprc:$Rx) - 912
    {AliasPatternCond::K_Imm, uint32_t(9)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 13, gprc:$Rx) - 917
    {AliasPatternCond::K_Imm, uint32_t(13)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 17, gprc:$Rx) - 922
    {AliasPatternCond::K_Imm, uint32_t(17)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 18, gprc:$Rx) - 927
    {AliasPatternCond::K_Imm, uint32_t(18)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 19, gprc:$Rx) - 932
    {AliasPatternCond::K_Imm, uint32_t(19)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 22, gprc:$Rx) - 937
    {AliasPatternCond::K_Imm, uint32_t(22)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 25, gprc:$Rx) - 942
    {AliasPatternCond::K_Imm, uint32_t(25)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 26, gprc:$Rx) - 947
    {AliasPatternCond::K_Imm, uint32_t(26)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 27, gprc:$Rx) - 952
    {AliasPatternCond::K_Imm, uint32_t(27)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 28, gprc:$Rx) - 957
    {AliasPatternCond::K_Imm, uint32_t(28)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 29, gprc:$Rx) - 962
    {AliasPatternCond::K_Imm, uint32_t(29)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 48, gprc:$Rx) - 967
    {AliasPatternCond::K_Imm, uint32_t(48)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 280, gprc:$RT) - 972
    {AliasPatternCond::K_Imm, uint32_t(280)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 284, gprc:$Rx) - 977
    {AliasPatternCond::K_Imm, uint32_t(284)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 285, gprc:$Rx) - 982
    {AliasPatternCond::K_Imm, uint32_t(285)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 512, gprc:$Rx) - 987
    {AliasPatternCond::K_Imm, uint32_t(512)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 536, gprc:$Rx) - 992
    {AliasPatternCond::K_Imm, uint32_t(536)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 537, gprc:$Rx) - 997
    {AliasPatternCond::K_Imm, uint32_t(537)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 528, gprc:$Rx) - 1002
    {AliasPatternCond::K_Imm, uint32_t(528)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 529, gprc:$Rx) - 1007
    {AliasPatternCond::K_Imm, uint32_t(529)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 538, gprc:$Rx) - 1012
    {AliasPatternCond::K_Imm, uint32_t(538)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 539, gprc:$Rx) - 1017
    {AliasPatternCond::K_Imm, uint32_t(539)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 530, gprc:$Rx) - 1022
    {AliasPatternCond::K_Imm, uint32_t(530)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 531, gprc:$Rx) - 1027
    {AliasPatternCond::K_Imm, uint32_t(531)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 540, gprc:$Rx) - 1032
    {AliasPatternCond::K_Imm, uint32_t(540)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 541, gprc:$Rx) - 1037
    {AliasPatternCond::K_Imm, uint32_t(541)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 532, gprc:$Rx) - 1042
    {AliasPatternCond::K_Imm, uint32_t(532)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 533, gprc:$Rx) - 1047
    {AliasPatternCond::K_Imm, uint32_t(533)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 542, gprc:$Rx) - 1052
    {AliasPatternCond::K_Imm, uint32_t(542)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 543, gprc:$Rx) - 1057
    {AliasPatternCond::K_Imm, uint32_t(543)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 534, gprc:$Rx) - 1062
    {AliasPatternCond::K_Imm, uint32_t(534)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 535, gprc:$Rx) - 1067
    {AliasPatternCond::K_Imm, uint32_t(535)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 896, gprc:$RT) - 1072
    {AliasPatternCond::K_Imm, uint32_t(896)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 980, gprc:$Rx) - 1077
    {AliasPatternCond::K_Imm, uint32_t(980)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 981, gprc:$Rx) - 1082
    {AliasPatternCond::K_Imm, uint32_t(981)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 986, gprc:$Rx) - 1087
    {AliasPatternCond::K_Imm, uint32_t(986)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 988, gprc:$Rx) - 1092
    {AliasPatternCond::K_Imm, uint32_t(988)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 989, gprc:$Rx) - 1097
    {AliasPatternCond::K_Imm, uint32_t(989)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 990, gprc:$Rx) - 1102
    {AliasPatternCond::K_Imm, uint32_t(990)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 991, gprc:$Rx) - 1107
    {AliasPatternCond::K_Imm, uint32_t(991)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 1018, gprc:$Rx) - 1112
    {AliasPatternCond::K_Imm, uint32_t(1018)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR 1019, gprc:$Rx) - 1117
    {AliasPatternCond::K_Imm, uint32_t(1019)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR8 1, g8rc:$Rx) - 1122
    {AliasPatternCond::K_Imm, uint32_t(1)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (MTSPR8 3, g8rc:$Rx) - 1124
    {AliasPatternCond::K_Imm, uint32_t(3)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR8 8, g8rc:$Rx) - 1129
    {AliasPatternCond::K_Imm, uint32_t(8)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR8 9, g8rc:$Rx) - 1134
    {AliasPatternCond::K_Imm, uint32_t(9)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR8 13, g8rc:$Rx) - 1139
    {AliasPatternCond::K_Imm, uint32_t(13)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR8 17, g8rc:$Rx) - 1144
    {AliasPatternCond::K_Imm, uint32_t(17)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR8 18, g8rc:$Rx) - 1149
    {AliasPatternCond::K_Imm, uint32_t(18)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR8 19, g8rc:$Rx) - 1154
    {AliasPatternCond::K_Imm, uint32_t(19)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR8 22, g8rc:$Rx) - 1159
    {AliasPatternCond::K_Imm, uint32_t(22)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR8 25, g8rc:$Rx) - 1164
    {AliasPatternCond::K_Imm, uint32_t(25)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR8 26, g8rc:$Rx) - 1169
    {AliasPatternCond::K_Imm, uint32_t(26)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR8 27, g8rc:$Rx) - 1174
    {AliasPatternCond::K_Imm, uint32_t(27)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR8 28, g8rc:$Rx) - 1179
    {AliasPatternCond::K_Imm, uint32_t(28)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR8 29, g8rc:$Rx) - 1184
    {AliasPatternCond::K_Imm, uint32_t(29)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR8 280, g8rc:$RT) - 1189
    {AliasPatternCond::K_Imm, uint32_t(280)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR8 284, g8rc:$Rx) - 1194
    {AliasPatternCond::K_Imm, uint32_t(284)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR8 285, g8rc:$Rx) - 1199
    {AliasPatternCond::K_Imm, uint32_t(285)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTSPR8 512, g8rc:$Rx) - 1204
    {AliasPatternCond::K_Imm, uint32_t(512)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTUDSCR gprc:$Rx) - 1209
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (MTVRSAVE gprc:$rS) - 1213
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTVSRD f8rc:$dst, g8rc:$rA) - 1214
    {AliasPatternCond::K_RegClass, PPC::F8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (MTVSRWA f8rc:$dst, gprc:$rA) - 1216
    {AliasPatternCond::K_RegClass, PPC::F8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (MTVSRWZ f8rc:$dst, gprc:$rA) - 1218
    {AliasPatternCond::K_RegClass, PPC::F8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (NOR gprc:$rA, gprc:$rS, gprc:$rS) - 1220
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    // (NOR8 g8rc:$rA, g8rc:$rB, g8rc:$rB) - 1223
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    // (NOR8_rec g8rc:$rA, g8rc:$rB, g8rc:$rB) - 1226
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    // (NOR_rec gprc:$rA, gprc:$rS, gprc:$rS) - 1229
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    // (OR gprc:$rA, gprc:$rB, gprc:$rB) - 1232
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    // (OR8 g8rc:$rA, g8rc:$rB, g8rc:$rB) - 1235
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    // (OR8_rec g8rc:$rA, g8rc:$rB, g8rc:$rB) - 1238
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    // (ORI R0, R0, 0) - 1241
    {AliasPatternCond::K_Reg, PPC::R0},
    {AliasPatternCond::K_Reg, PPC::R0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (ORI8 X0, X0, 0) - 1244
    {AliasPatternCond::K_Reg, PPC::X0},
    {AliasPatternCond::K_Reg, PPC::X0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (OR_rec gprc:$rA, gprc:$rB, gprc:$rB) - 1247
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    // (RFEBB 1) - 1250
    {AliasPatternCond::K_Imm, uint32_t(1)},
    // (RLDCL g8rc:$rA, g8rc:$rS, gprc:$rB, 0) - 1251
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (RLDCL_rec g8rc:$rA, g8rc:$rS, gprc:$rB, 0) - 1255
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (RLDICL g8rc:$rA, g8rc:$rS, u6imm:$n, 0) - 1259
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (RLDICL g8rc:$rA, g8rc:$rS, 0, u6imm:$n) - 1263
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (RLDICL_32_64 g8rc:$rA, gprc:$rS, u6imm:$n, 0) - 1266
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (RLDICL_32_64 g8rc:$rA, gprc:$rS, 0, u6imm:$n) - 1270
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (RLDICL_rec g8rc:$rA, g8rc:$rS, u6imm:$n, 0) - 1273
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (RLDICL_rec g8rc:$rA, g8rc:$rS, 0, u6imm:$n) - 1277
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (RLWINM gprc:$rA, gprc:$rS, u5imm:$n, 0, 31) - 1280
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Imm, uint32_t(31)},
    // (RLWINM gprc:$rA, gprc:$rS, 0, u5imm:$n, 31) - 1285
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(31)},
    // (RLWINM8 g8rc:$rA, g8rc:$rS, u5imm:$n, 0, 31) - 1290
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Imm, uint32_t(31)},
    // (RLWINM8 g8rc:$rA, g8rc:$rS, 0, u5imm:$n, 31) - 1295
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(31)},
    // (RLWINM8_rec g8rc:$rA, g8rc:$rS, u5imm:$n, 0, 31) - 1300
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Imm, uint32_t(31)},
    // (RLWINM8_rec g8rc:$rA, g8rc:$rS, 0, u5imm:$n, 31) - 1305
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(31)},
    // (RLWINM_rec gprc:$rA, gprc:$rS, u5imm:$n, 0, 31) - 1310
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Imm, uint32_t(31)},
    // (RLWINM_rec gprc:$rA, gprc:$rS, 0, u5imm:$n, 31) - 1315
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(31)},
    // (RLWNM gprc:$rA, gprc:$rS, gprc:$rB, 0, 31) - 1320
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Imm, uint32_t(31)},
    // (RLWNM8 g8rc:$rA, g8rc:$rS, g8rc:$rB, 0, 31) - 1325
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Imm, uint32_t(31)},
    // (RLWNM8_rec g8rc:$rA, g8rc:$rS, g8rc:$rB, 0, 31) - 1330
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Imm, uint32_t(31)},
    // (RLWNM_rec gprc:$rA, gprc:$rS, gprc:$rB, 0, 31) - 1335
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_Imm, uint32_t(31)},
    // (SC 0) - 1340
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (SUBF gprc:$rA, gprc:$rC, gprc:$rB) - 1341
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (SUBF8 g8rc:$rA, g8rc:$rC, g8rc:$rB) - 1344
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (SUBF8_rec g8rc:$rA, g8rc:$rC, g8rc:$rB) - 1347
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (SUBFC gprc:$rA, gprc:$rC, gprc:$rB) - 1350
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (SUBFC8 g8rc:$rA, g8rc:$rC, g8rc:$rB) - 1353
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (SUBFC8_rec g8rc:$rA, g8rc:$rC, g8rc:$rB) - 1356
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (SUBFC_rec gprc:$rA, gprc:$rC, gprc:$rB) - 1359
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (SUBF_rec gprc:$rA, gprc:$rC, gprc:$rB) - 1362
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (SYNC 0) - 1365
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (SYNC 1) - 1366
    {AliasPatternCond::K_Imm, uint32_t(1)},
    // (SYNC 2) - 1367
    {AliasPatternCond::K_Imm, uint32_t(2)},
    // (TD 16, g8rc:$rA, g8rc:$rB) - 1368
    {AliasPatternCond::K_Imm, uint32_t(16)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (TD 4, g8rc:$rA, g8rc:$rB) - 1371
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (TD 8, g8rc:$rA, g8rc:$rB) - 1374
    {AliasPatternCond::K_Imm, uint32_t(8)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (TD 24, g8rc:$rA, g8rc:$rB) - 1377
    {AliasPatternCond::K_Imm, uint32_t(24)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (TD 2, g8rc:$rA, g8rc:$rB) - 1380
    {AliasPatternCond::K_Imm, uint32_t(2)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (TD 1, g8rc:$rA, g8rc:$rB) - 1383
    {AliasPatternCond::K_Imm, uint32_t(1)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (TD 31, g8rc:$rA, g8rc:$rB) - 1386
    {AliasPatternCond::K_Imm, uint32_t(31)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (TDI 16, g8rc:$rA, s16imm:$imm) - 1389
    {AliasPatternCond::K_Imm, uint32_t(16)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (TDI 4, g8rc:$rA, s16imm:$imm) - 1391
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (TDI 8, g8rc:$rA, s16imm:$imm) - 1393
    {AliasPatternCond::K_Imm, uint32_t(8)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (TDI 24, g8rc:$rA, s16imm:$imm) - 1395
    {AliasPatternCond::K_Imm, uint32_t(24)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (TDI 2, g8rc:$rA, s16imm:$imm) - 1397
    {AliasPatternCond::K_Imm, uint32_t(2)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (TDI 1, g8rc:$rA, s16imm:$imm) - 1399
    {AliasPatternCond::K_Imm, uint32_t(1)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (TDI 31, g8rc:$rA, s16imm:$imm) - 1401
    {AliasPatternCond::K_Imm, uint32_t(31)},
    {AliasPatternCond::K_RegClass, PPC::G8RCRegClassID},
    // (TEND 0) - 1403
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (TEND 1) - 1404
    {AliasPatternCond::K_Imm, uint32_t(1)},
    // (TLBIE R0, gprc:$RB) - 1405
    {AliasPatternCond::K_Reg, PPC::R0},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (TLBRE2 gprc:$RS, gprc:$A, 0) - 1407
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (TLBRE2 gprc:$RS, gprc:$A, 1) - 1410
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(1)},
    // (TLBWE2 gprc:$RS, gprc:$A, 0) - 1413
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (TLBWE2 gprc:$RS, gprc:$A, 1) - 1416
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(1)},
    // (TSR 0) - 1419
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (TSR 1) - 1420
    {AliasPatternCond::K_Imm, uint32_t(1)},
    // (TW 31, R0, R0) - 1421
    {AliasPatternCond::K_Imm, uint32_t(31)},
    {AliasPatternCond::K_Reg, PPC::R0},
    {AliasPatternCond::K_Reg, PPC::R0},
    // (TW 16, gprc:$rA, gprc:$rB) - 1424
    {AliasPatternCond::K_Imm, uint32_t(16)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (TW 4, gprc:$rA, gprc:$rB) - 1427
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (TW 8, gprc:$rA, gprc:$rB) - 1430
    {AliasPatternCond::K_Imm, uint32_t(8)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (TW 24, gprc:$rA, gprc:$rB) - 1433
    {AliasPatternCond::K_Imm, uint32_t(24)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (TW 2, gprc:$rA, gprc:$rB) - 1436
    {AliasPatternCond::K_Imm, uint32_t(2)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (TW 1, gprc:$rA, gprc:$rB) - 1439
    {AliasPatternCond::K_Imm, uint32_t(1)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (TW 31, gprc:$rA, gprc:$rB) - 1442
    {AliasPatternCond::K_Imm, uint32_t(31)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (TWI 16, gprc:$rA, s16imm:$imm) - 1445
    {AliasPatternCond::K_Imm, uint32_t(16)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (TWI 4, gprc:$rA, s16imm:$imm) - 1447
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (TWI 8, gprc:$rA, s16imm:$imm) - 1449
    {AliasPatternCond::K_Imm, uint32_t(8)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (TWI 24, gprc:$rA, s16imm:$imm) - 1451
    {AliasPatternCond::K_Imm, uint32_t(24)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (TWI 2, gprc:$rA, s16imm:$imm) - 1453
    {AliasPatternCond::K_Imm, uint32_t(2)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (TWI 1, gprc:$rA, s16imm:$imm) - 1455
    {AliasPatternCond::K_Imm, uint32_t(1)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (TWI 31, gprc:$rA, s16imm:$imm) - 1457
    {AliasPatternCond::K_Imm, uint32_t(31)},
    {AliasPatternCond::K_RegClass, PPC::GPRCRegClassID},
    // (VNOR vrrc:$vD, vrrc:$vA, vrrc:$vA) - 1459
    {AliasPatternCond::K_RegClass, PPC::VRRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::VRRCRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    // (VOR vrrc:$vD, vrrc:$vA, vrrc:$vA) - 1462
    {AliasPatternCond::K_RegClass, PPC::VRRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::VRRCRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    // (WAIT 0) - 1465
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (WAIT 1) - 1466
    {AliasPatternCond::K_Imm, uint32_t(1)},
    // (WAIT 2) - 1467
    {AliasPatternCond::K_Imm, uint32_t(2)},
    // (XORI R0, R0, 0) - 1468
    {AliasPatternCond::K_Reg, PPC::R0},
    {AliasPatternCond::K_Reg, PPC::R0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (XORI8 X0, X0, 0) - 1471
    {AliasPatternCond::K_Reg, PPC::X0},
    {AliasPatternCond::K_Reg, PPC::X0},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (XVCPSGNDP vsrc:$XT, vsrc:$XB, vsrc:$XB) - 1474
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    // (XVCPSGNSP vsrc:$XT, vsrc:$XB, vsrc:$XB) - 1477
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    // (XXPERMDI vsrc:$XT, vsrc:$XB, vsrc:$XB, 0) - 1480
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (XXPERMDI vsrc:$XT, vsrc:$XB, vsrc:$XB, 3) - 1487
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    {AliasPatternCond::K_Imm, uint32_t(3)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (XXPERMDI vsrc:$XT, vsrc:$XA, vsrc:$XB, 0) - 1494
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (XXPERMDI vsrc:$XT, vsrc:$XA, vsrc:$XB, 3) - 1498
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(3)},
    // (XXPERMDI vsrc:$XT, vsrc:$XB, vsrc:$XB, 2) - 1502
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_TiedReg, 1},
    {AliasPatternCond::K_Imm, uint32_t(2)},
    // (XXPERMDIs vsrc:$XT, vsfrc:$XB, 0) - 1506
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::VSFRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (XXPERMDIs vsrc:$XT, vsfrc:$XB, 3) - 1512
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::VSFRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(3)},
    {AliasPatternCond::K_OrNegFeature, PPC::AIXOS},
    {AliasPatternCond::K_OrFeature, PPC::FeatureModernAIXAs},
    {AliasPatternCond::K_EndOrFeatures, 0},
    // (XXPERMDIs vsrc:$XT, vsfrc:$XB, 2) - 1518
    {AliasPatternCond::K_RegClass, PPC::VSRCRegClassID},
    {AliasPatternCond::K_RegClass, PPC::VSFRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(2)},
    // (gBC 12, crbitrc:$bi, condbrtarget:$dst) - 1521
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBC 4, crbitrc:$bi, condbrtarget:$dst) - 1523
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBC 14, crbitrc:$bi, condbrtarget:$dst) - 1525
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBC 6, crbitrc:$bi, condbrtarget:$dst) - 1527
    {AliasPatternCond::K_Imm, uint32_t(6)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBC 15, crbitrc:$bi, condbrtarget:$dst) - 1529
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBC 7, crbitrc:$bi, condbrtarget:$dst) - 1531
    {AliasPatternCond::K_Imm, uint32_t(7)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBC 8, crbitrc:$bi, condbrtarget:$dst) - 1533
    {AliasPatternCond::K_Imm, uint32_t(8)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBC 0, crbitrc:$bi, condbrtarget:$dst) - 1535
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBC 10, crbitrc:$bi, condbrtarget:$dst) - 1537
    {AliasPatternCond::K_Imm, uint32_t(10)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBC 2, crbitrc:$bi, condbrtarget:$dst) - 1539
    {AliasPatternCond::K_Imm, uint32_t(2)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCA 12, crbitrc:$bi, abscondbrtarget:$dst) - 1541
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCA 4, crbitrc:$bi, abscondbrtarget:$dst) - 1543
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCA 14, crbitrc:$bi, abscondbrtarget:$dst) - 1545
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCA 6, crbitrc:$bi, abscondbrtarget:$dst) - 1547
    {AliasPatternCond::K_Imm, uint32_t(6)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCA 15, crbitrc:$bi, abscondbrtarget:$dst) - 1549
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCA 7, crbitrc:$bi, abscondbrtarget:$dst) - 1551
    {AliasPatternCond::K_Imm, uint32_t(7)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCA 8, crbitrc:$bi, abscondbrtarget:$dst) - 1553
    {AliasPatternCond::K_Imm, uint32_t(8)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCA 0, crbitrc:$bi, abscondbrtarget:$dst) - 1555
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCA 10, crbitrc:$bi, abscondbrtarget:$dst) - 1557
    {AliasPatternCond::K_Imm, uint32_t(10)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCA 2, crbitrc:$bi, abscondbrtarget:$dst) - 1559
    {AliasPatternCond::K_Imm, uint32_t(2)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCAat u5imm:$bo, 3, crbitrc:$bi, condbrtarget:$dst) - 1561
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(3)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCAat u5imm:$bo, 2, crbitrc:$bi, condbrtarget:$dst) - 1564
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(2)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCCTR u5imm:$bo, crbitrc:$bi, 0) - 1567
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCCTR 12, crbitrc:$bi, 0) - 1570
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCCTR 4, crbitrc:$bi, 0) - 1573
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCCTR 14, crbitrc:$bi, 0) - 1576
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCCTR 6, crbitrc:$bi, 0) - 1579
    {AliasPatternCond::K_Imm, uint32_t(6)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCCTR 15, crbitrc:$bi, 0) - 1582
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCCTR 7, crbitrc:$bi, 0) - 1585
    {AliasPatternCond::K_Imm, uint32_t(7)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCCTRL u5imm:$bo, crbitrc:$bi, 0) - 1588
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCCTRL 12, crbitrc:$bi, 0) - 1591
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCCTRL 4, crbitrc:$bi, 0) - 1594
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCCTRL 14, crbitrc:$bi, 0) - 1597
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCCTRL 6, crbitrc:$bi, 0) - 1600
    {AliasPatternCond::K_Imm, uint32_t(6)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCCTRL 15, crbitrc:$bi, 0) - 1603
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCCTRL 7, crbitrc:$bi, 0) - 1606
    {AliasPatternCond::K_Imm, uint32_t(7)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCL 12, crbitrc:$bi, condbrtarget:$dst) - 1609
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCL 4, crbitrc:$bi, condbrtarget:$dst) - 1611
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCL 14, crbitrc:$bi, condbrtarget:$dst) - 1613
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCL 6, crbitrc:$bi, condbrtarget:$dst) - 1615
    {AliasPatternCond::K_Imm, uint32_t(6)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCL 15, crbitrc:$bi, condbrtarget:$dst) - 1617
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCL 7, crbitrc:$bi, condbrtarget:$dst) - 1619
    {AliasPatternCond::K_Imm, uint32_t(7)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCL 8, crbitrc:$bi, condbrtarget:$dst) - 1621
    {AliasPatternCond::K_Imm, uint32_t(8)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCL 0, crbitrc:$bi, condbrtarget:$dst) - 1623
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCL 10, crbitrc:$bi, condbrtarget:$dst) - 1625
    {AliasPatternCond::K_Imm, uint32_t(10)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCL 2, crbitrc:$bi, condbrtarget:$dst) - 1627
    {AliasPatternCond::K_Imm, uint32_t(2)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCLA 12, crbitrc:$bi, abscondbrtarget:$dst) - 1629
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCLA 4, crbitrc:$bi, abscondbrtarget:$dst) - 1631
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCLA 14, crbitrc:$bi, abscondbrtarget:$dst) - 1633
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCLA 6, crbitrc:$bi, abscondbrtarget:$dst) - 1635
    {AliasPatternCond::K_Imm, uint32_t(6)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCLA 15, crbitrc:$bi, abscondbrtarget:$dst) - 1637
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCLA 7, crbitrc:$bi, abscondbrtarget:$dst) - 1639
    {AliasPatternCond::K_Imm, uint32_t(7)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCLA 8, crbitrc:$bi, abscondbrtarget:$dst) - 1641
    {AliasPatternCond::K_Imm, uint32_t(8)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCLA 0, crbitrc:$bi, abscondbrtarget:$dst) - 1643
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCLA 10, crbitrc:$bi, abscondbrtarget:$dst) - 1645
    {AliasPatternCond::K_Imm, uint32_t(10)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCLA 2, crbitrc:$bi, abscondbrtarget:$dst) - 1647
    {AliasPatternCond::K_Imm, uint32_t(2)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCLAat u5imm:$bo, 3, crbitrc:$bi, condbrtarget:$dst) - 1649
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(3)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCLAat u5imm:$bo, 2, crbitrc:$bi, condbrtarget:$dst) - 1652
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(2)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCLR u5imm:$bo, crbitrc:$bi, 0) - 1655
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLR 12, crbitrc:$bi, 0) - 1658
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLR 4, crbitrc:$bi, 0) - 1661
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLR 14, crbitrc:$bi, 0) - 1664
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLR 6, crbitrc:$bi, 0) - 1667
    {AliasPatternCond::K_Imm, uint32_t(6)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLR 15, crbitrc:$bi, 0) - 1670
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLR 7, crbitrc:$bi, 0) - 1673
    {AliasPatternCond::K_Imm, uint32_t(7)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLR 8, crbitrc:$bi, 0) - 1676
    {AliasPatternCond::K_Imm, uint32_t(8)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLR 0, crbitrc:$bi, 0) - 1679
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLR 10, crbitrc:$bi, 0) - 1682
    {AliasPatternCond::K_Imm, uint32_t(10)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLR 2, crbitrc:$bi, 0) - 1685
    {AliasPatternCond::K_Imm, uint32_t(2)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLRL u5imm:$bo, crbitrc:$bi, 0) - 1688
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLRL 12, crbitrc:$bi, 0) - 1691
    {AliasPatternCond::K_Imm, uint32_t(12)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLRL 4, crbitrc:$bi, 0) - 1694
    {AliasPatternCond::K_Imm, uint32_t(4)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLRL 14, crbitrc:$bi, 0) - 1697
    {AliasPatternCond::K_Imm, uint32_t(14)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLRL 6, crbitrc:$bi, 0) - 1700
    {AliasPatternCond::K_Imm, uint32_t(6)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLRL 15, crbitrc:$bi, 0) - 1703
    {AliasPatternCond::K_Imm, uint32_t(15)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLRL 7, crbitrc:$bi, 0) - 1706
    {AliasPatternCond::K_Imm, uint32_t(7)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLRL 8, crbitrc:$bi, 0) - 1709
    {AliasPatternCond::K_Imm, uint32_t(8)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLRL 0, crbitrc:$bi, 0) - 1712
    {AliasPatternCond::K_Imm, uint32_t(0)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLRL 10, crbitrc:$bi, 0) - 1715
    {AliasPatternCond::K_Imm, uint32_t(10)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLRL 2, crbitrc:$bi, 0) - 1718
    {AliasPatternCond::K_Imm, uint32_t(2)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    {AliasPatternCond::K_Imm, uint32_t(0)},
    // (gBCLat u5imm:$bo, 3, crbitrc:$bi, condbrtarget:$dst) - 1721
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(3)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCLat u5imm:$bo, 2, crbitrc:$bi, condbrtarget:$dst) - 1724
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(2)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCat u5imm:$bo, 3, crbitrc:$bi, condbrtarget:$dst) - 1727
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(3)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
    // (gBCat u5imm:$bo, 2, crbitrc:$bi, condbrtarget:$dst) - 1730
    {AliasPatternCond::K_Ignore, 0},
    {AliasPatternCond::K_Imm, uint32_t(2)},
    {AliasPatternCond::K_RegClass, PPC::CRBITRCRegClassID},
  };

  static const char AsmStrings[] =
    /* 0 */ "li $\x01, $\xFF\x03\x01\0"
    /* 12 */ "lis $\x01, $\xFF\x03\x01\0"
    /* 25 */ "lnia $\x01\0"
    /* 33 */ "blt $\x02, $\xFF\x03\x02\0"
    /* 46 */ "blt $\xFF\x03\x02\0"
    /* 55 */ "blt- $\x02, $\xFF\x03\x02\0"
    /* 69 */ "blt- $\xFF\x03\x02\0"
    /* 79 */ "blt+ $\x02, $\xFF\x03\x02\0"
    /* 93 */ "blt+ $\xFF\x03\x02\0"
    /* 103 */ "bgt $\x02, $\xFF\x03\x02\0"
    /* 116 */ "bgt $\xFF\x03\x02\0"
    /* 125 */ "bgt- $\x02, $\xFF\x03\x02\0"
    /* 139 */ "bgt- $\xFF\x03\x02\0"
    /* 149 */ "bgt+ $\x02, $\xFF\x03\x02\0"
    /* 163 */ "bgt+ $\xFF\x03\x02\0"
    /* 173 */ "beq $\x02, $\xFF\x03\x02\0"
    /* 186 */ "beq $\xFF\x03\x02\0"
    /* 195 */ "beq- $\x02, $\xFF\x03\x02\0"
    /* 209 */ "beq- $\xFF\x03\x02\0"
    /* 219 */ "beq+ $\x02, $\xFF\x03\x02\0"
    /* 233 */ "beq+ $\xFF\x03\x02\0"
    /* 243 */ "bne $\x02, $\xFF\x03\x02\0"
    /* 256 */ "bne $\xFF\x03\x02\0"
    /* 265 */ "bne- $\x02, $\xFF\x03\x02\0"
    /* 279 */ "bne- $\xFF\x03\x02\0"
    /* 289 */ "bne+ $\x02, $\xFF\x03\x02\0"
    /* 303 */ "bne+ $\xFF\x03\x02\0"
    /* 313 */ "blta $\x02, $\xFF\x03\x03\0"
    /* 327 */ "blta $\xFF\x03\x03\0"
    /* 337 */ "blta- $\x02, $\xFF\x03\x03\0"
    /* 352 */ "blta- $\xFF\x03\x03\0"
    /* 363 */ "blta+ $\x02, $\xFF\x03\x03\0"
    /* 378 */ "blta+ $\xFF\x03\x03\0"
    /* 389 */ "bgta $\x02, $\xFF\x03\x03\0"
    /* 403 */ "bgta $\xFF\x03\x03\0"
    /* 413 */ "bgta- $\x02, $\xFF\x03\x03\0"
    /* 428 */ "bgta- $\xFF\x03\x03\0"
    /* 439 */ "bgta+ $\x02, $\xFF\x03\x03\0"
    /* 454 */ "bgta+ $\xFF\x03\x03\0"
    /* 465 */ "beqa $\x02, $\xFF\x03\x03\0"
    /* 479 */ "beqa $\xFF\x03\x03\0"
    /* 489 */ "beqa- $\x02, $\xFF\x03\x03\0"
    /* 504 */ "beqa- $\xFF\x03\x03\0"
    /* 515 */ "beqa+ $\x02, $\xFF\x03\x03\0"
    /* 530 */ "beqa+ $\xFF\x03\x03\0"
    /* 541 */ "bnea $\x02, $\xFF\x03\x03\0"
    /* 555 */ "bnea $\xFF\x03\x03\0"
    /* 565 */ "bnea- $\x02, $\xFF\x03\x03\0"
    /* 580 */ "bnea- $\xFF\x03\x03\0"
    /* 591 */ "bnea+ $\x02, $\xFF\x03\x03\0"
    /* 606 */ "bnea+ $\xFF\x03\x03\0"
    /* 617 */ "bltctr $\x02\0"
    /* 627 */ "bltctr\0"
    /* 634 */ "bltctr- $\x02\0"
    /* 645 */ "bltctr-\0"
    /* 653 */ "bltctr+ $\x02\0"
    /* 664 */ "bltctr+\0"
    /* 672 */ "bgtctr $\x02\0"
    /* 682 */ "bgtctr\0"
    /* 689 */ "bgtctr- $\x02\0"
    /* 700 */ "bgtctr-\0"
    /* 708 */ "bgtctr+ $\x02\0"
    /* 719 */ "bgtctr+\0"
    /* 727 */ "beqctr $\x02\0"
    /* 737 */ "beqctr\0"
    /* 744 */ "beqctr- $\x02\0"
    /* 755 */ "beqctr-\0"
    /* 763 */ "beqctr+ $\x02\0"
    /* 774 */ "beqctr+\0"
    /* 782 */ "bnectr $\x02\0"
    /* 792 */ "bnectr\0"
    /* 799 */ "bnectr- $\x02\0"
    /* 810 */ "bnectr-\0"
    /* 818 */ "bnectr+ $\x02\0"
    /* 829 */ "bnectr+\0"
    /* 837 */ "bltctrl $\x02\0"
    /* 848 */ "bltctrl\0"
    /* 856 */ "bltctrl- $\x02\0"
    /* 868 */ "bltctrl-\0"
    /* 877 */ "bltctrl+ $\x02\0"
    /* 889 */ "bltctrl+\0"
    /* 898 */ "bgtctrl $\x02\0"
    /* 909 */ "bgtctrl\0"
    /* 917 */ "bgtctrl- $\x02\0"
    /* 929 */ "bgtctrl-\0"
    /* 938 */ "bgtctrl+ $\x02\0"
    /* 950 */ "bgtctrl+\0"
    /* 959 */ "beqctrl $\x02\0"
    /* 970 */ "beqctrl\0"
    /* 978 */ "beqctrl- $\x02\0"
    /* 990 */ "beqctrl-\0"
    /* 999 */ "beqctrl+ $\x02\0"
    /* 1011 */ "beqctrl+\0"
    /* 1020 */ "bnectrl $\x02\0"
    /* 1031 */ "bnectrl\0"
    /* 1039 */ "bnectrl- $\x02\0"
    /* 1051 */ "bnectrl-\0"
    /* 1060 */ "bnectrl+ $\x02\0"
    /* 1072 */ "bnectrl+\0"
    /* 1081 */ "bltl $\x02, $\xFF\x03\x02\0"
    /* 1095 */ "bltl $\xFF\x03\x02\0"
    /* 1105 */ "bltl- $\x02, $\xFF\x03\x02\0"
    /* 1120 */ "bltl- $\xFF\x03\x02\0"
    /* 1131 */ "bltl+ $\x02, $\xFF\x03\x02\0"
    /* 1146 */ "bltl+ $\xFF\x03\x02\0"
    /* 1157 */ "bgtl $\x02, $\xFF\x03\x02\0"
    /* 1171 */ "bgtl $\xFF\x03\x02\0"
    /* 1181 */ "bgtl- $\x02, $\xFF\x03\x02\0"
    /* 1196 */ "bgtl- $\xFF\x03\x02\0"
    /* 1207 */ "bgtl+ $\x02, $\xFF\x03\x02\0"
    /* 1222 */ "bgtl+ $\xFF\x03\x02\0"
    /* 1233 */ "beql $\x02, $\xFF\x03\x02\0"
    /* 1247 */ "beql $\xFF\x03\x02\0"
    /* 1257 */ "beql- $\x02, $\xFF\x03\x02\0"
    /* 1272 */ "beql- $\xFF\x03\x02\0"
    /* 1283 */ "beql+ $\x02, $\xFF\x03\x02\0"
    /* 1298 */ "beql+ $\xFF\x03\x02\0"
    /* 1309 */ "bnel $\x02, $\xFF\x03\x02\0"
    /* 1323 */ "bnel $\xFF\x03\x02\0"
    /* 1333 */ "bnel- $\x02, $\xFF\x03\x02\0"
    /* 1348 */ "bnel- $\xFF\x03\x02\0"
    /* 1359 */ "bnel+ $\x02, $\xFF\x03\x02\0"
    /* 1374 */ "bnel+ $\xFF\x03\x02\0"
    /* 1385 */ "bltla $\x02, $\xFF\x03\x03\0"
    /* 1400 */ "bltla $\xFF\x03\x03\0"
    /* 1411 */ "bltla- $\x02, $\xFF\x03\x03\0"
    /* 1427 */ "bltla- $\xFF\x03\x03\0"
    /* 1439 */ "bltla+ $\x02, $\xFF\x03\x03\0"
    /* 1455 */ "bltla+ $\xFF\x03\x03\0"
    /* 1467 */ "bgtla $\x02, $\xFF\x03\x03\0"
    /* 1482 */ "bgtla $\xFF\x03\x03\0"
    /* 1493 */ "bgtla- $\x02, $\xFF\x03\x03\0"
    /* 1509 */ "bgtla- $\xFF\x03\x03\0"
    /* 1521 */ "bgtla+ $\x02, $\xFF\x03\x03\0"
    /* 1537 */ "bgtla+ $\xFF\x03\x03\0"
    /* 1549 */ "beqla $\x02, $\xFF\x03\x03\0"
    /* 1564 */ "beqla $\xFF\x03\x03\0"
    /* 1575 */ "beqla- $\x02, $\xFF\x03\x03\0"
    /* 1591 */ "beqla- $\xFF\x03\x03\0"
    /* 1603 */ "beqla+ $\x02, $\xFF\x03\x03\0"
    /* 1619 */ "beqla+ $\xFF\x03\x03\0"
    /* 1631 */ "bnela $\x02, $\xFF\x03\x03\0"
    /* 1646 */ "bnela $\xFF\x03\x03\0"
    /* 1657 */ "bnela- $\x02, $\xFF\x03\x03\0"
    /* 1673 */ "bnela- $\xFF\x03\x03\0"
    /* 1685 */ "bnela+ $\x02, $\xFF\x03\x03\0"
    /* 1701 */ "bnela+ $\xFF\x03\x03\0"
    /* 1713 */ "bltlr $\x02\0"
    /* 1722 */ "bltlr\0"
    /* 1728 */ "bltlr- $\x02\0"
    /* 1738 */ "bltlr-\0"
    /* 1745 */ "bltlr+ $\x02\0"
    /* 1755 */ "bltlr+\0"
    /* 1762 */ "bgtlr $\x02\0"
    /* 1771 */ "bgtlr\0"
    /* 1777 */ "bgtlr- $\x02\0"
    /* 1787 */ "bgtlr-\0"
    /* 1794 */ "bgtlr+ $\x02\0"
    /* 1804 */ "bgtlr+\0"
    /* 1811 */ "beqlr $\x02\0"
    /* 1820 */ "beqlr\0"
    /* 1826 */ "beqlr- $\x02\0"
    /* 1836 */ "beqlr-\0"
    /* 1843 */ "beqlr+ $\x02\0"
    /* 1853 */ "beqlr+\0"
    /* 1860 */ "bnelr $\x02\0"
    /* 1869 */ "bnelr\0"
    /* 1875 */ "bnelr- $\x02\0"
    /* 1885 */ "bnelr-\0"
    /* 1892 */ "bnelr+ $\x02\0"
    /* 1902 */ "bnelr+\0"
    /* 1909 */ "bltlrl $\x02\0"
    /* 1919 */ "bltlrl\0"
    /* 1926 */ "bltlrl- $\x02\0"
    /* 1937 */ "bltlrl-\0"
    /* 1945 */ "bltlrl+ $\x02\0"
    /* 1956 */ "bltlrl+\0"
    /* 1964 */ "bgtlrl $\x02\0"
    /* 1974 */ "bgtlrl\0"
    /* 1981 */ "bgtlrl- $\x02\0"
    /* 1992 */ "bgtlrl-\0"
    /* 2000 */ "bgtlrl+ $\x02\0"
    /* 2011 */ "bgtlrl+\0"
    /* 2019 */ "beqlrl $\x02\0"
    /* 2029 */ "beqlrl\0"
    /* 2036 */ "beqlrl- $\x02\0"
    /* 2047 */ "beqlrl-\0"
    /* 2055 */ "beqlrl+ $\x02\0"
    /* 2066 */ "beqlrl+\0"
    /* 2074 */ "bnelrl $\x02\0"
    /* 2084 */ "bnelrl\0"
    /* 2091 */ "bnelrl- $\x02\0"
    /* 2102 */ "bnelrl-\0"
    /* 2110 */ "bnelrl+ $\x02\0"
    /* 2121 */ "bnelrl+\0"
    /* 2129 */ "cmpd $\x02, $\x03\0"
    /* 2141 */ "cmpdi $\x02, $\xFF\x03\x01\0"
    /* 2156 */ "cmpld $\x02, $\x03\0"
    /* 2169 */ "cmpldi $\x02, $\xFF\x03\x04\0"
    /* 2185 */ "cmplw $\x02, $\x03\0"
    /* 2198 */ "cmplwi $\x02, $\xFF\x03\x04\0"
    /* 2214 */ "cmpw $\x02, $\x03\0"
    /* 2226 */ "cmpwi $\x02, $\xFF\x03\x01\0"
    /* 2241 */ "cntlzw $\x01, $\x02\0"
    /* 2255 */ "cntlzw. $\x01, $\x02\0"
    /* 2270 */ "paste. $\x01, $\x02\0"
    /* 2284 */ "crset $\x01\0"
    /* 2293 */ "crnot $\x01, $\x02\0"
    /* 2306 */ "crmove $\x01, $\x02\0"
    /* 2320 */ "crclr $\x01\0"
    /* 2329 */ "isellt $\x01, $\x02, $\x03\0"
    /* 2347 */ "iselgt $\x01, $\x02, $\x03\0"
    /* 2365 */ "iseleq $\x01, $\x02, $\x03\0"
    /* 2383 */ "mbar\0"
    /* 2388 */ "mfbr0 $\x01\0"
    /* 2397 */ "mfbr1 $\x01\0"
    /* 2406 */ "mfbr2 $\x01\0"
    /* 2415 */ "mfbr3 $\x01\0"
    /* 2424 */ "mfbr4 $\x01\0"
    /* 2433 */ "mfbr5 $\x01\0"
    /* 2442 */ "mfbr6 $\x01\0"
    /* 2451 */ "mfbr7 $\x01\0"
    /* 2460 */ "mfxer $\x01\0"
    /* 2469 */ "mfudscr $\x01\0"
    /* 2480 */ "mfrtcu $\x01\0"
    /* 2490 */ "mfrtcl $\x01\0"
    /* 2500 */ "mflr $\x01\0"
    /* 2508 */ "mfctr $\x01\0"
    /* 2517 */ "mfuamr $\x01\0"
    /* 2527 */ "mfdscr $\x01\0"
    /* 2537 */ "mfdsisr $\x01\0"
    /* 2548 */ "mfdar $\x01\0"
    /* 2557 */ "mfdec $\x01\0"
    /* 2566 */ "mfsdr1 $\x01\0"
    /* 2576 */ "mfsrr0 $\x01\0"
    /* 2586 */ "mfsrr1 $\x01\0"
    /* 2596 */ "mfcfar $\x01\0"
    /* 2606 */ "mfamr $\x01\0"
    /* 2615 */ "mfpid $\x01\0"
    /* 2624 */ "mfasr $\x01\0"
    /* 2633 */ "mfpvr $\x01\0"
    /* 2642 */ "mfspefscr $\x01\0"
    /* 2655 */ "mfdbatu $\x01, 0\0"
    /* 2669 */ "mfdbatl $\x01, 0\0"
    /* 2683 */ "mfibatu $\x01, 0\0"
    /* 2697 */ "mfibatl $\x01, 0\0"
    /* 2711 */ "mfdbatu $\x01, 1\0"
    /* 2725 */ "mfdbatl $\x01, 1\0"
    /* 2739 */ "mfibatu $\x01, 1\0"
    /* 2753 */ "mfibatl $\x01, 1\0"
    /* 2767 */ "mfdbatu $\x01, 2\0"
    /* 2781 */ "mfdbatl $\x01, 2\0"
    /* 2795 */ "mfibatu $\x01, 2\0"
    /* 2809 */ "mfibatl $\x01, 2\0"
    /* 2823 */ "mfdbatu $\x01, 3\0"
    /* 2837 */ "mfdbatl $\x01, 3\0"
    /* 2851 */ "mfibatu $\x01, 3\0"
    /* 2865 */ "mfibatl $\x01, 3\0"
    /* 2879 */ "mfppr $\x01\0"
    /* 2888 */ "mfesr $\x01\0"
    /* 2897 */ "mfdear $\x01\0"
    /* 2907 */ "mftcr $\x01\0"
    /* 2916 */ "mftbhi $\x01\0"
    /* 2926 */ "mftblo $\x01\0"
    /* 2936 */ "mfsrr2 $\x01\0"
    /* 2946 */ "mfsrr3 $\x01\0"
    /* 2956 */ "mfdccr $\x01\0"
    /* 2966 */ "mficcr $\x01\0"
    /* 2976 */ "mftbu $\x01\0"
    /* 2985 */ "mfvrsave $\x01\0"
    /* 2997 */ "mffprd $\x01, $\x02\0"
    /* 3011 */ "mffprwz $\x01, $\x02\0"
    /* 3026 */ "mtcr $\x02\0"
    /* 3034 */ "mtbr0 $\x01\0"
    /* 3043 */ "mtbr1 $\x01\0"
    /* 3052 */ "mtbr2 $\x01\0"
    /* 3061 */ "mtbr3 $\x01\0"
    /* 3070 */ "mtbr4 $\x01\0"
    /* 3079 */ "mtbr5 $\x01\0"
    /* 3088 */ "mtbr6 $\x01\0"
    /* 3097 */ "mtbr7 $\x01\0"
    /* 3106 */ "mtfsf $\x01, $\x02\0"
    /* 3119 */ "mtfsfi $\xFF\x01\x05, $\xFF\x02\x06\0"
    /* 3137 */ "mtfsfi. $\xFF\x01\x05, $\xFF\x02\x06\0"
    /* 3156 */ "mtfsf. $\x01, $\x02\0"
    /* 3170 */ "mtmsr $\x01\0"
    /* 3179 */ "mtmsrd $\x01\0"
    /* 3189 */ "mtxer $\x02\0"
    /* 3198 */ "mtudscr $\x02\0"
    /* 3209 */ "mtlr $\x02\0"
    /* 3217 */ "mtctr $\x02\0"
    /* 3226 */ "mtuamr $\x02\0"
    /* 3236 */ "mtdscr $\x02\0"
    /* 3246 */ "mtdsisr $\x02\0"
    /* 3257 */ "mtdar $\x02\0"
    /* 3266 */ "mtdec $\x02\0"
    /* 3275 */ "mtsdr1 $\x02\0"
    /* 3285 */ "mtsrr0 $\x02\0"
    /* 3295 */ "mtsrr1 $\x02\0"
    /* 3305 */ "mtcfar $\x02\0"
    /* 3315 */ "mtamr $\x02\0"
    /* 3324 */ "mtpid $\x02\0"
    /* 3333 */ "mtasr $\x02\0"
    /* 3342 */ "mttbl $\x02\0"
    /* 3351 */ "mttbu $\x02\0"
    /* 3360 */ "mtspefscr $\x02\0"
    /* 3373 */ "mtdbatu 0, $\x02\0"
    /* 3387 */ "mtdbatl 0, $\x02\0"
    /* 3401 */ "mtibatu 0, $\x02\0"
    /* 3415 */ "mtibatl 0, $\x02\0"
    /* 3429 */ "mtdbatu 1, $\x02\0"
    /* 3443 */ "mtdbatl 1, $\x02\0"
    /* 3457 */ "mtibatu 1, $\x02\0"
    /* 3471 */ "mtibatl 1, $\x02\0"
    /* 3485 */ "mtdbatu 2, $\x02\0"
    /* 3499 */ "mtdbatl 2, $\x02\0"
    /* 3513 */ "mtibatu 2, $\x02\0"
    /* 3527 */ "mtibatl 2, $\x02\0"
    /* 3541 */ "mtdbatu 3, $\x02\0"
    /* 3555 */ "mtdbatl 3, $\x02\0"
    /* 3569 */ "mtibatu 3, $\x02\0"
    /* 3583 */ "mtibatl 3, $\x02\0"
    /* 3597 */ "mtppr $\x02\0"
    /* 3606 */ "mtesr $\x02\0"
    /* 3615 */ "mtdear $\x02\0"
    /* 3625 */ "mttcr $\x02\0"
    /* 3634 */ "mttbhi $\x02\0"
    /* 3644 */ "mttblo $\x02\0"
    /* 3654 */ "mtsrr2 $\x02\0"
    /* 3664 */ "mtsrr3 $\x02\0"
    /* 3674 */ "mtdccr $\x02\0"
    /* 3684 */ "mticcr $\x02\0"
    /* 3694 */ "mtudscr $\x01\0"
    /* 3705 */ "mtvrsave $\x01\0"
    /* 3717 */ "mtfprd $\x01, $\x02\0"
    /* 3731 */ "mtfprwa $\x01, $\x02\0"
    /* 3746 */ "mtfprwz $\x01, $\x02\0"
    /* 3761 */ "not $\x01, $\x02\0"
    /* 3772 */ "not. $\x01, $\x02\0"
    /* 3784 */ "mr $\x01, $\x02\0"
    /* 3794 */ "mr. $\x01, $\x02\0"
    /* 3805 */ "nop\0"
    /* 3809 */ "rfebb\0"
    /* 3815 */ "rotld $\x01, $\x02, $\x03\0"
    /* 3832 */ "rotld. $\x01, $\x02, $\x03\0"
    /* 3850 */ "rotldi $\x01, $\x02, $\xFF\x03\x07\0"
    /* 3870 */ "clrldi $\x01, $\x02, $\xFF\x04\x07\0"
    /* 3890 */ "rotldi. $\x01, $\x02, $\xFF\x03\x07\0"
    /* 3911 */ "clrldi. $\x01, $\x02, $\xFF\x04\x07\0"
    /* 3932 */ "rotlwi $\x01, $\x02, $\xFF\x03\x08\0"
    /* 3952 */ "clrlwi $\x01, $\x02, $\xFF\x04\x08\0"
    /* 3972 */ "rotlwi. $\x01, $\x02, $\xFF\x03\x08\0"
    /* 3993 */ "clrlwi. $\x01, $\x02, $\xFF\x04\x08\0"
    /* 4014 */ "rotlw $\x01, $\x02, $\x03\0"
    /* 4031 */ "rotlw. $\x01, $\x02, $\x03\0"
    /* 4049 */ "sc\0"
    /* 4052 */ "sub $\x01, $\x03, $\x02\0"
    /* 4067 */ "sub. $\x01, $\x03, $\x02\0"
    /* 4083 */ "subc $\x01, $\x03, $\x02\0"
    /* 4099 */ "subc. $\x01, $\x03, $\x02\0"
    /* 4116 */ "sync\0"
    /* 4121 */ "lwsync\0"
    /* 4128 */ "ptesync\0"
    /* 4136 */ "tdlt $\x02, $\x03\0"
    /* 4148 */ "tdeq $\x02, $\x03\0"
    /* 4160 */ "tdgt $\x02, $\x03\0"
    /* 4172 */ "tdne $\x02, $\x03\0"
    /* 4184 */ "tdllt $\x02, $\x03\0"
    /* 4197 */ "tdlgt $\x02, $\x03\0"
    /* 4210 */ "tdu $\x02, $\x03\0"
    /* 4221 */ "tdlti $\x02, $\xFF\x03\x01\0"
    /* 4236 */ "tdeqi $\x02, $\xFF\x03\x01\0"
    /* 4251 */ "tdgti $\x02, $\xFF\x03\x01\0"
    /* 4266 */ "tdnei $\x02, $\xFF\x03\x01\0"
    /* 4281 */ "tdllti $\x02, $\xFF\x03\x01\0"
    /* 4297 */ "tdlgti $\x02, $\xFF\x03\x01\0"
    /* 4313 */ "tdui $\x02, $\xFF\x03\x01\0"
    /* 4327 */ "tend.\0"
    /* 4333 */ "tendall.\0"
    /* 4342 */ "tlbie $\x02\0"
    /* 4351 */ "tlbrehi $\x01, $\x02\0"
    /* 4366 */ "tlbrelo $\x01, $\x02\0"
    /* 4381 */ "tlbwehi $\x01, $\x02\0"
    /* 4396 */ "tlbwelo $\x01, $\x02\0"
    /* 4411 */ "tsuspend.\0"
    /* 4421 */ "tresume.\0"
    /* 4430 */ "trap\0"
    /* 4435 */ "twlt $\x02, $\x03\0"
    /* 4447 */ "tweq $\x02, $\x03\0"
    /* 4459 */ "twgt $\x02, $\x03\0"
    /* 4471 */ "twne $\x02, $\x03\0"
    /* 4483 */ "twllt $\x02, $\x03\0"
    /* 4496 */ "twlgt $\x02, $\x03\0"
    /* 4509 */ "twu $\x02, $\x03\0"
    /* 4520 */ "twlti $\x02, $\xFF\x03\x01\0"
    /* 4535 */ "tweqi $\x02, $\xFF\x03\x01\0"
    /* 4550 */ "twgti $\x02, $\xFF\x03\x01\0"
    /* 4565 */ "twnei $\x02, $\xFF\x03\x01\0"
    /* 4580 */ "twllti $\x02, $\xFF\x03\x01\0"
    /* 4596 */ "twlgti $\x02, $\xFF\x03\x01\0"
    /* 4612 */ "twui $\x02, $\xFF\x03\x01\0"
    /* 4626 */ "vnot $\x01, $\x02\0"
    /* 4638 */ "vmr $\x01, $\x02\0"
    /* 4649 */ "wait\0"
    /* 4654 */ "waitrsv\0"
    /* 4662 */ "waitimpl\0"
    /* 4671 */ "xnop\0"
    /* 4676 */ "xvmovdp $\x01, $\x02\0"
    /* 4691 */ "xvmovsp $\x01, $\x02\0"
    /* 4706 */ "xxspltd $\x01, $\x02, 0\0"
    /* 4724 */ "xxspltd $\x01, $\x02, 1\0"
    /* 4742 */ "xxmrghd $\x01, $\x02, $\x03\0"
    /* 4761 */ "xxmrgld $\x01, $\x02, $\x03\0"
    /* 4780 */ "xxswapd $\x01, $\x02\0"
    /* 4795 */ "bt $\x02, $\xFF\x03\x02\0"
    /* 4807 */ "bf $\x02, $\xFF\x03\x02\0"
    /* 4819 */ "bt- $\x02, $\xFF\x03\x02\0"
    /* 4832 */ "bf- $\x02, $\xFF\x03\x02\0"
    /* 4845 */ "bt+ $\x02, $\xFF\x03\x02\0"
    /* 4858 */ "bf+ $\x02, $\xFF\x03\x02\0"
    /* 4871 */ "bdnzt $\x02, $\xFF\x03\x02\0"
    /* 4886 */ "bdnzf $\x02, $\xFF\x03\x02\0"
    /* 4901 */ "bdzt $\x02, $\xFF\x03\x02\0"
    /* 4915 */ "bdzf $\x02, $\xFF\x03\x02\0"
    /* 4929 */ "bta $\x02, $\xFF\x03\x03\0"
    /* 4942 */ "bfa $\x02, $\xFF\x03\x03\0"
    /* 4955 */ "bta- $\x02, $\xFF\x03\x03\0"
    /* 4969 */ "bfa- $\x02, $\xFF\x03\x03\0"
    /* 4983 */ "bta+ $\x02, $\xFF\x03\x03\0"
    /* 4997 */ "bfa+ $\x02, $\xFF\x03\x03\0"
    /* 5011 */ "bdnzta $\x02, $\xFF\x03\x03\0"
    /* 5027 */ "bdnzfa $\x02, $\xFF\x03\x03\0"
    /* 5043 */ "bdzta $\x02, $\xFF\x03\x03\0"
    /* 5058 */ "bdzfa $\x02, $\xFF\x03\x03\0"
    /* 5073 */ "bca+ $\xFF\x01\x08, $\x03, $\xFF\x04\x02\0"
    /* 5093 */ "bca- $\xFF\x01\x08, $\x03, $\xFF\x04\x02\0"
    /* 5113 */ "bcctr $\xFF\x01\x08, $\x02\0"
    /* 5128 */ "btctr $\x02\0"
    /* 5137 */ "bfctr $\x02\0"
    /* 5146 */ "btctr- $\x02\0"
    /* 5156 */ "bfctr- $\x02\0"
    /* 5166 */ "btctr+ $\x02\0"
    /* 5176 */ "bfctr+ $\x02\0"
    /* 5186 */ "bcctrl $\xFF\x01\x08, $\x02\0"
    /* 5202 */ "btctrl $\x02\0"
    /* 5212 */ "bfctrl $\x02\0"
    /* 5222 */ "btctrl- $\x02\0"
    /* 5233 */ "bfctrl- $\x02\0"
    /* 5244 */ "btctrl+ $\x02\0"
    /* 5255 */ "bfctrl+ $\x02\0"
    /* 5266 */ "btl $\x02, $\xFF\x03\x02\0"
    /* 5279 */ "bfl $\x02, $\xFF\x03\x02\0"
    /* 5292 */ "btl- $\x02, $\xFF\x03\x02\0"
    /* 5306 */ "bfl- $\x02, $\xFF\x03\x02\0"
    /* 5320 */ "btl+ $\x02, $\xFF\x03\x02\0"
    /* 5334 */ "bfl+ $\x02, $\xFF\x03\x02\0"
    /* 5348 */ "bdnztl $\x02, $\xFF\x03\x02\0"
    /* 5364 */ "bdnzfl $\x02, $\xFF\x03\x02\0"
    /* 5380 */ "bdztl $\x02, $\xFF\x03\x02\0"
    /* 5395 */ "bdzfl $\x02, $\xFF\x03\x02\0"
    /* 5410 */ "btla $\x02, $\xFF\x03\x03\0"
    /* 5424 */ "bfla $\x02, $\xFF\x03\x03\0"
    /* 5438 */ "btla- $\x02, $\xFF\x03\x03\0"
    /* 5453 */ "bfla- $\x02, $\xFF\x03\x03\0"
    /* 5468 */ "btla+ $\x02, $\xFF\x03\x03\0"
    /* 5483 */ "bfla+ $\x02, $\xFF\x03\x03\0"
    /* 5498 */ "bdnztla $\x02, $\xFF\x03\x03\0"
    /* 5515 */ "bdnzfla $\x02, $\xFF\x03\x03\0"
    /* 5532 */ "bdztla $\x02, $\xFF\x03\x03\0"
    /* 5548 */ "bdzfla $\x02, $\xFF\x03\x03\0"
    /* 5564 */ "bcla+ $\xFF\x01\x08, $\x03, $\xFF\x04\x02\0"
    /* 5585 */ "bcla- $\xFF\x01\x08, $\x03, $\xFF\x04\x02\0"
    /* 5606 */ "bclr $\xFF\x01\x08, $\x02\0"
    /* 5620 */ "btlr $\x02\0"
    /* 5628 */ "bflr $\x02\0"
    /* 5636 */ "btlr- $\x02\0"
    /* 5645 */ "bflr- $\x02\0"
    /* 5654 */ "btlr+ $\x02\0"
    /* 5663 */ "bflr+ $\x02\0"
    /* 5672 */ "bdnztlr $\x02\0"
    /* 5683 */ "bdnzflr $\x02\0"
    /* 5694 */ "bdztlr $\x02\0"
    /* 5704 */ "bdzflr $\x02\0"
    /* 5714 */ "bclrl $\xFF\x01\x08, $\x02\0"
    /* 5729 */ "btlrl $\x02\0"
    /* 5738 */ "bflrl $\x02\0"
    /* 5747 */ "btlrl- $\x02\0"
    /* 5757 */ "bflrl- $\x02\0"
    /* 5767 */ "btlrl+ $\x02\0"
    /* 5777 */ "bflrl+ $\x02\0"
    /* 5787 */ "bdnztlrl $\x02\0"
    /* 5799 */ "bdnzflrl $\x02\0"
    /* 5811 */ "bdztlrl $\x02\0"
    /* 5822 */ "bdzflrl $\x02\0"
    /* 5833 */ "bcl+ $\xFF\x01\x08, $\x03, $\xFF\x04\x02\0"
    /* 5853 */ "bcl- $\xFF\x01\x08, $\x03, $\xFF\x04\x02\0"
    /* 5873 */ "bc+ $\xFF\x01\x08, $\x03, $\xFF\x04\x02\0"
    /* 5892 */ "bc- $\xFF\x01\x08, $\x03, $\xFF\x04\x02\0"
  ;

#ifndef NDEBUG
  static struct SortCheck {
    SortCheck(ArrayRef<PatternsForOpcode> OpToPatterns) {
      assert(std::is_sorted(
                 OpToPatterns.begin(), OpToPatterns.end(),
                 [](const PatternsForOpcode &L, const PatternsForOpcode &R) {
                   return L.Opcode < R.Opcode;
                 }) &&
             "tablegen failed to sort opcode patterns");
    }
  } sortCheckVar(OpToPatterns);
#endif

  AliasMatchingData M {
    makeArrayRef(OpToPatterns),
    makeArrayRef(Patterns),
    makeArrayRef(Conds),
    StringRef(AsmStrings, array_lengthof(AsmStrings)),
    nullptr,
  };
  const char *AsmString = matchAliasPatterns(MI, &STI, M);
  if (!AsmString) return false;

  unsigned I = 0;
  while (AsmString[I] != ' ' && AsmString[I] != '\t' &&
         AsmString[I] != '$' && AsmString[I] != '\0')
    ++I;
  OS << '\t' << StringRef(AsmString, I);
  if (AsmString[I] != '\0') {
    if (AsmString[I] == ' ' || AsmString[I] == '\t') {
      OS << '\t';
      ++I;
    }
    do {
      if (AsmString[I] == '$') {
        ++I;
        if (AsmString[I] == (char)0xff) {
          ++I;
          int OpIdx = AsmString[I++] - 1;
          int PrintMethodIdx = AsmString[I++] - 1;
          printCustomAliasOperand(MI, Address, OpIdx, PrintMethodIdx, STI, OS);
        } else
          printOperand(MI, unsigned(AsmString[I++]) - 1, STI, OS);
      } else {
        OS << AsmString[I++];
      }
    } while (AsmString[I] != '\0');
  }

  return true;
}

void PPCInstPrinter::printCustomAliasOperand(
         const MCInst *MI, uint64_t Address, unsigned OpIdx,
         unsigned PrintMethodIdx,
         const MCSubtargetInfo &STI,
         raw_ostream &OS) {
  switch (PrintMethodIdx) {
  default:
    llvm_unreachable("Unknown PrintMethod kind");
    break;
  case 0:
    printS16ImmOperand(MI, OpIdx, STI, OS);
    break;
  case 1:
    printBranchOperand(MI, Address, OpIdx, STI, OS);
    break;
  case 2:
    printAbsBranchOperand(MI, OpIdx, STI, OS);
    break;
  case 3:
    printU16ImmOperand(MI, OpIdx, STI, OS);
    break;
  case 4:
    printU3ImmOperand(MI, OpIdx, STI, OS);
    break;
  case 5:
    printU4ImmOperand(MI, OpIdx, STI, OS);
    break;
  case 6:
    printU6ImmOperand(MI, OpIdx, STI, OS);
    break;
  case 7:
    printU5ImmOperand(MI, OpIdx, STI, OS);
    break;
  }
}

#endif // PRINT_ALIAS_INSTR
