/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Target Instruction Enum Values and Descriptors                             *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

#ifdef GET_INSTRINFO_ENUM
#undef GET_INSTRINFO_ENUM
namespace llvm {

namespace PPC {
  enum {
    PHI	= 0,
    INLINEASM	= 1,
    INLINEASM_BR	= 2,
    CFI_INSTRUCTION	= 3,
    EH_LABEL	= 4,
    GC_LABEL	= 5,
    ANNOTATION_LABEL	= 6,
    KILL	= 7,
    EXTRACT_SUBREG	= 8,
    INSERT_SUBREG	= 9,
    IMPLICIT_DEF	= 10,
    SUBREG_TO_REG	= 11,
    COPY_TO_REGCLASS	= 12,
    DBG_VALUE	= 13,
    DBG_VALUE_LIST	= 14,
    DBG_INSTR_REF	= 15,
    DBG_PHI	= 16,
    DBG_LABEL	= 17,
    REG_SEQUENCE	= 18,
    COPY	= 19,
    BUNDLE	= 20,
    LIFETIME_START	= 21,
    LIFETIME_END	= 22,
    PSEUDO_PROBE	= 23,
    ARITH_FENCE	= 24,
    STACKMAP	= 25,
    FENTRY_CALL	= 26,
    PATCHPOINT	= 27,
    LOAD_STACK_GUARD	= 28,
    PREALLOCATED_SETUP	= 29,
    PREALLOCATED_ARG	= 30,
    STATEPOINT	= 31,
    LOCAL_ESCAPE	= 32,
    FAULTING_OP	= 33,
    PATCHABLE_OP	= 34,
    PATCHABLE_FUNCTION_ENTER	= 35,
    PATCHABLE_RET	= 36,
    PATCHABLE_FUNCTION_EXIT	= 37,
    PATCHABLE_TAIL_CALL	= 38,
    PATCHABLE_EVENT_CALL	= 39,
    PATCHABLE_TYPED_EVENT_CALL	= 40,
    ICALL_BRANCH_FUNNEL	= 41,
    G_ASSERT_SEXT	= 42,
    G_ASSERT_ZEXT	= 43,
    G_ASSERT_ALIGN	= 44,
    G_ADD	= 45,
    G_SUB	= 46,
    G_MUL	= 47,
    G_SDIV	= 48,
    G_UDIV	= 49,
    G_SREM	= 50,
    G_UREM	= 51,
    G_SDIVREM	= 52,
    G_UDIVREM	= 53,
    G_AND	= 54,
    G_OR	= 55,
    G_XOR	= 56,
    G_IMPLICIT_DEF	= 57,
    G_PHI	= 58,
    G_FRAME_INDEX	= 59,
    G_GLOBAL_VALUE	= 60,
    G_EXTRACT	= 61,
    G_UNMERGE_VALUES	= 62,
    G_INSERT	= 63,
    G_MERGE_VALUES	= 64,
    G_BUILD_VECTOR	= 65,
    G_BUILD_VECTOR_TRUNC	= 66,
    G_CONCAT_VECTORS	= 67,
    G_PTRTOINT	= 68,
    G_INTTOPTR	= 69,
    G_BITCAST	= 70,
    G_FREEZE	= 71,
    G_INTRINSIC_FPTRUNC_ROUND	= 72,
    G_INTRINSIC_TRUNC	= 73,
    G_INTRINSIC_ROUND	= 74,
    G_INTRINSIC_LRINT	= 75,
    G_INTRINSIC_ROUNDEVEN	= 76,
    G_READCYCLECOUNTER	= 77,
    G_LOAD	= 78,
    G_SEXTLOAD	= 79,
    G_ZEXTLOAD	= 80,
    G_INDEXED_LOAD	= 81,
    G_INDEXED_SEXTLOAD	= 82,
    G_INDEXED_ZEXTLOAD	= 83,
    G_STORE	= 84,
    G_INDEXED_STORE	= 85,
    G_ATOMIC_CMPXCHG_WITH_SUCCESS	= 86,
    G_ATOMIC_CMPXCHG	= 87,
    G_ATOMICRMW_XCHG	= 88,
    G_ATOMICRMW_ADD	= 89,
    G_ATOMICRMW_SUB	= 90,
    G_ATOMICRMW_AND	= 91,
    G_ATOMICRMW_NAND	= 92,
    G_ATOMICRMW_OR	= 93,
    G_ATOMICRMW_XOR	= 94,
    G_ATOMICRMW_MAX	= 95,
    G_ATOMICRMW_MIN	= 96,
    G_ATOMICRMW_UMAX	= 97,
    G_ATOMICRMW_UMIN	= 98,
    G_ATOMICRMW_FADD	= 99,
    G_ATOMICRMW_FSUB	= 100,
    G_ATOMICRMW_FMAX	= 101,
    G_ATOMICRMW_FMIN	= 102,
    G_FENCE	= 103,
    G_BRCOND	= 104,
    G_BRINDIRECT	= 105,
    G_INTRINSIC	= 106,
    G_INTRINSIC_W_SIDE_EFFECTS	= 107,
    G_ANYEXT	= 108,
    G_TRUNC	= 109,
    G_CONSTANT	= 110,
    G_FCONSTANT	= 111,
    G_VASTART	= 112,
    G_VAARG	= 113,
    G_SEXT	= 114,
    G_SEXT_INREG	= 115,
    G_ZEXT	= 116,
    G_SHL	= 117,
    G_LSHR	= 118,
    G_ASHR	= 119,
    G_FSHL	= 120,
    G_FSHR	= 121,
    G_ROTR	= 122,
    G_ROTL	= 123,
    G_ICMP	= 124,
    G_FCMP	= 125,
    G_SELECT	= 126,
    G_UADDO	= 127,
    G_UADDE	= 128,
    G_USUBO	= 129,
    G_USUBE	= 130,
    G_SADDO	= 131,
    G_SADDE	= 132,
    G_SSUBO	= 133,
    G_SSUBE	= 134,
    G_UMULO	= 135,
    G_SMULO	= 136,
    G_UMULH	= 137,
    G_SMULH	= 138,
    G_UADDSAT	= 139,
    G_SADDSAT	= 140,
    G_USUBSAT	= 141,
    G_SSUBSAT	= 142,
    G_USHLSAT	= 143,
    G_SSHLSAT	= 144,
    G_SMULFIX	= 145,
    G_UMULFIX	= 146,
    G_SMULFIXSAT	= 147,
    G_UMULFIXSAT	= 148,
    G_SDIVFIX	= 149,
    G_UDIVFIX	= 150,
    G_SDIVFIXSAT	= 151,
    G_UDIVFIXSAT	= 152,
    G_FADD	= 153,
    G_FSUB	= 154,
    G_FMUL	= 155,
    G_FMA	= 156,
    G_FMAD	= 157,
    G_FDIV	= 158,
    G_FREM	= 159,
    G_FPOW	= 160,
    G_FPOWI	= 161,
    G_FEXP	= 162,
    G_FEXP2	= 163,
    G_FLOG	= 164,
    G_FLOG2	= 165,
    G_FLOG10	= 166,
    G_FNEG	= 167,
    G_FPEXT	= 168,
    G_FPTRUNC	= 169,
    G_FPTOSI	= 170,
    G_FPTOUI	= 171,
    G_SITOFP	= 172,
    G_UITOFP	= 173,
    G_FABS	= 174,
    G_FCOPYSIGN	= 175,
    G_IS_FPCLASS	= 176,
    G_FCANONICALIZE	= 177,
    G_FMINNUM	= 178,
    G_FMAXNUM	= 179,
    G_FMINNUM_IEEE	= 180,
    G_FMAXNUM_IEEE	= 181,
    G_FMINIMUM	= 182,
    G_FMAXIMUM	= 183,
    G_PTR_ADD	= 184,
    G_PTRMASK	= 185,
    G_SMIN	= 186,
    G_SMAX	= 187,
    G_UMIN	= 188,
    G_UMAX	= 189,
    G_ABS	= 190,
    G_LROUND	= 191,
    G_LLROUND	= 192,
    G_BR	= 193,
    G_BRJT	= 194,
    G_INSERT_VECTOR_ELT	= 195,
    G_EXTRACT_VECTOR_ELT	= 196,
    G_SHUFFLE_VECTOR	= 197,
    G_CTTZ	= 198,
    G_CTTZ_ZERO_UNDEF	= 199,
    G_CTLZ	= 200,
    G_CTLZ_ZERO_UNDEF	= 201,
    G_CTPOP	= 202,
    G_BSWAP	= 203,
    G_BITREVERSE	= 204,
    G_FCEIL	= 205,
    G_FCOS	= 206,
    G_FSIN	= 207,
    G_FSQRT	= 208,
    G_FFLOOR	= 209,
    G_FRINT	= 210,
    G_FNEARBYINT	= 211,
    G_ADDRSPACE_CAST	= 212,
    G_BLOCK_ADDR	= 213,
    G_JUMP_TABLE	= 214,
    G_DYN_STACKALLOC	= 215,
    G_STRICT_FADD	= 216,
    G_STRICT_FSUB	= 217,
    G_STRICT_FMUL	= 218,
    G_STRICT_FDIV	= 219,
    G_STRICT_FREM	= 220,
    G_STRICT_FMA	= 221,
    G_STRICT_FSQRT	= 222,
    G_READ_REGISTER	= 223,
    G_WRITE_REGISTER	= 224,
    G_MEMCPY	= 225,
    G_MEMCPY_INLINE	= 226,
    G_MEMMOVE	= 227,
    G_MEMSET	= 228,
    G_BZERO	= 229,
    G_VECREDUCE_SEQ_FADD	= 230,
    G_VECREDUCE_SEQ_FMUL	= 231,
    G_VECREDUCE_FADD	= 232,
    G_VECREDUCE_FMUL	= 233,
    G_VECREDUCE_FMAX	= 234,
    G_VECREDUCE_FMIN	= 235,
    G_VECREDUCE_ADD	= 236,
    G_VECREDUCE_MUL	= 237,
    G_VECREDUCE_AND	= 238,
    G_VECREDUCE_OR	= 239,
    G_VECREDUCE_XOR	= 240,
    G_VECREDUCE_SMAX	= 241,
    G_VECREDUCE_SMIN	= 242,
    G_VECREDUCE_UMAX	= 243,
    G_VECREDUCE_UMIN	= 244,
    G_SBFX	= 245,
    G_UBFX	= 246,
    ATOMIC_CMP_SWAP_I128	= 247,
    ATOMIC_LOAD_ADD_I128	= 248,
    ATOMIC_LOAD_AND_I128	= 249,
    ATOMIC_LOAD_NAND_I128	= 250,
    ATOMIC_LOAD_OR_I128	= 251,
    ATOMIC_LOAD_SUB_I128	= 252,
    ATOMIC_LOAD_XOR_I128	= 253,
    ATOMIC_SWAP_I128	= 254,
    BUILD_QUADWORD	= 255,
    BUILD_UACC	= 256,
    CFENCE8	= 257,
    CLRLSLDI	= 258,
    CLRLSLDI_rec	= 259,
    CLRLSLWI	= 260,
    CLRLSLWI_rec	= 261,
    CLRRDI	= 262,
    CLRRDI_rec	= 263,
    CLRRWI	= 264,
    CLRRWI_rec	= 265,
    DCBFL	= 266,
    DCBFLP	= 267,
    DCBFPS	= 268,
    DCBFx	= 269,
    DCBSTPS	= 270,
    DCBTCT	= 271,
    DCBTDS	= 272,
    DCBTSTCT	= 273,
    DCBTSTDS	= 274,
    DCBTSTT	= 275,
    DCBTSTx	= 276,
    DCBTT	= 277,
    DCBTx	= 278,
    DFLOADf32	= 279,
    DFLOADf64	= 280,
    DFSTOREf32	= 281,
    DFSTOREf64	= 282,
    EXTLDI	= 283,
    EXTLDI_rec	= 284,
    EXTLWI	= 285,
    EXTLWI_rec	= 286,
    EXTRDI	= 287,
    EXTRDI_rec	= 288,
    EXTRWI	= 289,
    EXTRWI_rec	= 290,
    INSLWI	= 291,
    INSLWI_rec	= 292,
    INSRDI	= 293,
    INSRDI_rec	= 294,
    INSRWI	= 295,
    INSRWI_rec	= 296,
    KILL_PAIR	= 297,
    LAx	= 298,
    LIWAX	= 299,
    LIWZX	= 300,
    RLWIMIbm	= 301,
    RLWIMIbm_rec	= 302,
    RLWINMbm	= 303,
    RLWINMbm_rec	= 304,
    RLWNMbm	= 305,
    RLWNMbm_rec	= 306,
    ROTRDI	= 307,
    ROTRDI_rec	= 308,
    ROTRWI	= 309,
    ROTRWI_rec	= 310,
    SLDI	= 311,
    SLDI_rec	= 312,
    SLWI	= 313,
    SLWI_rec	= 314,
    SPILLTOVSR_LD	= 315,
    SPILLTOVSR_LDX	= 316,
    SPILLTOVSR_ST	= 317,
    SPILLTOVSR_STX	= 318,
    SRDI	= 319,
    SRDI_rec	= 320,
    SRWI	= 321,
    SRWI_rec	= 322,
    STIWX	= 323,
    SUBI	= 324,
    SUBIC	= 325,
    SUBIC_rec	= 326,
    SUBIS	= 327,
    SUBPCIS	= 328,
    XFLOADf32	= 329,
    XFLOADf64	= 330,
    XFSTOREf32	= 331,
    XFSTOREf64	= 332,
    ADD4	= 333,
    ADD4O	= 334,
    ADD4O_rec	= 335,
    ADD4TLS	= 336,
    ADD4_rec	= 337,
    ADD8	= 338,
    ADD8O	= 339,
    ADD8O_rec	= 340,
    ADD8TLS	= 341,
    ADD8TLS_	= 342,
    ADD8_rec	= 343,
    ADDC	= 344,
    ADDC8	= 345,
    ADDC8O	= 346,
    ADDC8O_rec	= 347,
    ADDC8_rec	= 348,
    ADDCO	= 349,
    ADDCO_rec	= 350,
    ADDC_rec	= 351,
    ADDE	= 352,
    ADDE8	= 353,
    ADDE8O	= 354,
    ADDE8O_rec	= 355,
    ADDE8_rec	= 356,
    ADDEO	= 357,
    ADDEO_rec	= 358,
    ADDEX	= 359,
    ADDEX8	= 360,
    ADDE_rec	= 361,
    ADDI	= 362,
    ADDI8	= 363,
    ADDIC	= 364,
    ADDIC8	= 365,
    ADDIC_rec	= 366,
    ADDIS	= 367,
    ADDIS8	= 368,
    ADDISdtprelHA	= 369,
    ADDISdtprelHA32	= 370,
    ADDISgotTprelHA	= 371,
    ADDIStlsgdHA	= 372,
    ADDIStlsldHA	= 373,
    ADDIStocHA	= 374,
    ADDIStocHA8	= 375,
    ADDIdtprelL	= 376,
    ADDIdtprelL32	= 377,
    ADDItlsgdL	= 378,
    ADDItlsgdL32	= 379,
    ADDItlsgdLADDR	= 380,
    ADDItlsgdLADDR32	= 381,
    ADDItlsldL	= 382,
    ADDItlsldL32	= 383,
    ADDItlsldLADDR	= 384,
    ADDItlsldLADDR32	= 385,
    ADDItoc	= 386,
    ADDItoc8	= 387,
    ADDItocL	= 388,
    ADDME	= 389,
    ADDME8	= 390,
    ADDME8O	= 391,
    ADDME8O_rec	= 392,
    ADDME8_rec	= 393,
    ADDMEO	= 394,
    ADDMEO_rec	= 395,
    ADDME_rec	= 396,
    ADDPCIS	= 397,
    ADDZE	= 398,
    ADDZE8	= 399,
    ADDZE8O	= 400,
    ADDZE8O_rec	= 401,
    ADDZE8_rec	= 402,
    ADDZEO	= 403,
    ADDZEO_rec	= 404,
    ADDZE_rec	= 405,
    ADJCALLSTACKDOWN	= 406,
    ADJCALLSTACKUP	= 407,
    AND	= 408,
    AND8	= 409,
    AND8_rec	= 410,
    ANDC	= 411,
    ANDC8	= 412,
    ANDC8_rec	= 413,
    ANDC_rec	= 414,
    ANDI8_rec	= 415,
    ANDIS8_rec	= 416,
    ANDIS_rec	= 417,
    ANDI_rec	= 418,
    ANDI_rec_1_EQ_BIT	= 419,
    ANDI_rec_1_EQ_BIT8	= 420,
    ANDI_rec_1_GT_BIT	= 421,
    ANDI_rec_1_GT_BIT8	= 422,
    AND_rec	= 423,
    ATOMIC_CMP_SWAP_I16	= 424,
    ATOMIC_CMP_SWAP_I32	= 425,
    ATOMIC_CMP_SWAP_I64	= 426,
    ATOMIC_CMP_SWAP_I8	= 427,
    ATOMIC_LOAD_ADD_I16	= 428,
    ATOMIC_LOAD_ADD_I32	= 429,
    ATOMIC_LOAD_ADD_I64	= 430,
    ATOMIC_LOAD_ADD_I8	= 431,
    ATOMIC_LOAD_AND_I16	= 432,
    ATOMIC_LOAD_AND_I32	= 433,
    ATOMIC_LOAD_AND_I64	= 434,
    ATOMIC_LOAD_AND_I8	= 435,
    ATOMIC_LOAD_MAX_I16	= 436,
    ATOMIC_LOAD_MAX_I32	= 437,
    ATOMIC_LOAD_MAX_I64	= 438,
    ATOMIC_LOAD_MAX_I8	= 439,
    ATOMIC_LOAD_MIN_I16	= 440,
    ATOMIC_LOAD_MIN_I32	= 441,
    ATOMIC_LOAD_MIN_I64	= 442,
    ATOMIC_LOAD_MIN_I8	= 443,
    ATOMIC_LOAD_NAND_I16	= 444,
    ATOMIC_LOAD_NAND_I32	= 445,
    ATOMIC_LOAD_NAND_I64	= 446,
    ATOMIC_LOAD_NAND_I8	= 447,
    ATOMIC_LOAD_OR_I16	= 448,
    ATOMIC_LOAD_OR_I32	= 449,
    ATOMIC_LOAD_OR_I64	= 450,
    ATOMIC_LOAD_OR_I8	= 451,
    ATOMIC_LOAD_SUB_I16	= 452,
    ATOMIC_LOAD_SUB_I32	= 453,
    ATOMIC_LOAD_SUB_I64	= 454,
    ATOMIC_LOAD_SUB_I8	= 455,
    ATOMIC_LOAD_UMAX_I16	= 456,
    ATOMIC_LOAD_UMAX_I32	= 457,
    ATOMIC_LOAD_UMAX_I64	= 458,
    ATOMIC_LOAD_UMAX_I8	= 459,
    ATOMIC_LOAD_UMIN_I16	= 460,
    ATOMIC_LOAD_UMIN_I32	= 461,
    ATOMIC_LOAD_UMIN_I64	= 462,
    ATOMIC_LOAD_UMIN_I8	= 463,
    ATOMIC_LOAD_XOR_I16	= 464,
    ATOMIC_LOAD_XOR_I32	= 465,
    ATOMIC_LOAD_XOR_I64	= 466,
    ATOMIC_LOAD_XOR_I8	= 467,
    ATOMIC_SWAP_I16	= 468,
    ATOMIC_SWAP_I32	= 469,
    ATOMIC_SWAP_I64	= 470,
    ATOMIC_SWAP_I8	= 471,
    ATTN	= 472,
    B	= 473,
    BA	= 474,
    BC	= 475,
    BCC	= 476,
    BCCA	= 477,
    BCCCTR	= 478,
    BCCCTR8	= 479,
    BCCCTRL	= 480,
    BCCCTRL8	= 481,
    BCCL	= 482,
    BCCLA	= 483,
    BCCLR	= 484,
    BCCLRL	= 485,
    BCCTR	= 486,
    BCCTR8	= 487,
    BCCTR8n	= 488,
    BCCTRL	= 489,
    BCCTRL8	= 490,
    BCCTRL8n	= 491,
    BCCTRLn	= 492,
    BCCTRn	= 493,
    BCDADD_rec	= 494,
    BCDCFN_rec	= 495,
    BCDCFSQ_rec	= 496,
    BCDCFZ_rec	= 497,
    BCDCPSGN_rec	= 498,
    BCDCTN_rec	= 499,
    BCDCTSQ_rec	= 500,
    BCDCTZ_rec	= 501,
    BCDSETSGN_rec	= 502,
    BCDSR_rec	= 503,
    BCDSUB_rec	= 504,
    BCDS_rec	= 505,
    BCDTRUNC_rec	= 506,
    BCDUS_rec	= 507,
    BCDUTRUNC_rec	= 508,
    BCL	= 509,
    BCLR	= 510,
    BCLRL	= 511,
    BCLRLn	= 512,
    BCLRn	= 513,
    BCLalways	= 514,
    BCLn	= 515,
    BCTR	= 516,
    BCTR8	= 517,
    BCTRL	= 518,
    BCTRL8	= 519,
    BCTRL8_LDinto_toc	= 520,
    BCTRL8_LDinto_toc_RM	= 521,
    BCTRL8_RM	= 522,
    BCTRL_LWZinto_toc	= 523,
    BCTRL_LWZinto_toc_RM	= 524,
    BCTRL_RM	= 525,
    BCn	= 526,
    BDNZ	= 527,
    BDNZ8	= 528,
    BDNZA	= 529,
    BDNZAm	= 530,
    BDNZAp	= 531,
    BDNZL	= 532,
    BDNZLA	= 533,
    BDNZLAm	= 534,
    BDNZLAp	= 535,
    BDNZLR	= 536,
    BDNZLR8	= 537,
    BDNZLRL	= 538,
    BDNZLRLm	= 539,
    BDNZLRLp	= 540,
    BDNZLRm	= 541,
    BDNZLRp	= 542,
    BDNZLm	= 543,
    BDNZLp	= 544,
    BDNZm	= 545,
    BDNZp	= 546,
    BDZ	= 547,
    BDZ8	= 548,
    BDZA	= 549,
    BDZAm	= 550,
    BDZAp	= 551,
    BDZL	= 552,
    BDZLA	= 553,
    BDZLAm	= 554,
    BDZLAp	= 555,
    BDZLR	= 556,
    BDZLR8	= 557,
    BDZLRL	= 558,
    BDZLRLm	= 559,
    BDZLRLp	= 560,
    BDZLRm	= 561,
    BDZLRp	= 562,
    BDZLm	= 563,
    BDZLp	= 564,
    BDZm	= 565,
    BDZp	= 566,
    BL	= 567,
    BL8	= 568,
    BL8_NOP	= 569,
    BL8_NOP_RM	= 570,
    BL8_NOP_TLS	= 571,
    BL8_NOTOC	= 572,
    BL8_NOTOC_RM	= 573,
    BL8_NOTOC_TLS	= 574,
    BL8_RM	= 575,
    BL8_TLS	= 576,
    BL8_TLS_	= 577,
    BLA	= 578,
    BLA8	= 579,
    BLA8_NOP	= 580,
    BLA8_NOP_RM	= 581,
    BLA8_RM	= 582,
    BLA_RM	= 583,
    BLR	= 584,
    BLR8	= 585,
    BLRL	= 586,
    BL_NOP	= 587,
    BL_NOP_RM	= 588,
    BL_RM	= 589,
    BL_TLS	= 590,
    BPERMD	= 591,
    BRINC	= 592,
    CFUGED	= 593,
    CLRBHRB	= 594,
    CMPB	= 595,
    CMPB8	= 596,
    CMPD	= 597,
    CMPDI	= 598,
    CMPEQB	= 599,
    CMPLD	= 600,
    CMPLDI	= 601,
    CMPLW	= 602,
    CMPLWI	= 603,
    CMPRB	= 604,
    CMPRB8	= 605,
    CMPW	= 606,
    CMPWI	= 607,
    CNTLZD	= 608,
    CNTLZDM	= 609,
    CNTLZD_rec	= 610,
    CNTLZW	= 611,
    CNTLZW8	= 612,
    CNTLZW8_rec	= 613,
    CNTLZW_rec	= 614,
    CNTTZD	= 615,
    CNTTZDM	= 616,
    CNTTZD_rec	= 617,
    CNTTZW	= 618,
    CNTTZW8	= 619,
    CNTTZW8_rec	= 620,
    CNTTZW_rec	= 621,
    CP_ABORT	= 622,
    CP_COPY	= 623,
    CP_COPY8	= 624,
    CP_PASTE8_rec	= 625,
    CP_PASTE_rec	= 626,
    CR6SET	= 627,
    CR6UNSET	= 628,
    CRAND	= 629,
    CRANDC	= 630,
    CREQV	= 631,
    CRNAND	= 632,
    CRNOR	= 633,
    CROR	= 634,
    CRORC	= 635,
    CRSET	= 636,
    CRUNSET	= 637,
    CRXOR	= 638,
    CTRL_DEP	= 639,
    DARN	= 640,
    DCBA	= 641,
    DCBF	= 642,
    DCBFEP	= 643,
    DCBI	= 644,
    DCBST	= 645,
    DCBSTEP	= 646,
    DCBT	= 647,
    DCBTEP	= 648,
    DCBTST	= 649,
    DCBTSTEP	= 650,
    DCBZ	= 651,
    DCBZEP	= 652,
    DCBZL	= 653,
    DCBZLEP	= 654,
    DCCCI	= 655,
    DIVD	= 656,
    DIVDE	= 657,
    DIVDEO	= 658,
    DIVDEO_rec	= 659,
    DIVDEU	= 660,
    DIVDEUO	= 661,
    DIVDEUO_rec	= 662,
    DIVDEU_rec	= 663,
    DIVDE_rec	= 664,
    DIVDO	= 665,
    DIVDO_rec	= 666,
    DIVDU	= 667,
    DIVDUO	= 668,
    DIVDUO_rec	= 669,
    DIVDU_rec	= 670,
    DIVD_rec	= 671,
    DIVW	= 672,
    DIVWE	= 673,
    DIVWEO	= 674,
    DIVWEO_rec	= 675,
    DIVWEU	= 676,
    DIVWEUO	= 677,
    DIVWEUO_rec	= 678,
    DIVWEU_rec	= 679,
    DIVWE_rec	= 680,
    DIVWO	= 681,
    DIVWO_rec	= 682,
    DIVWU	= 683,
    DIVWUO	= 684,
    DIVWUO_rec	= 685,
    DIVWU_rec	= 686,
    DIVW_rec	= 687,
    DSS	= 688,
    DSSALL	= 689,
    DST	= 690,
    DST64	= 691,
    DSTST	= 692,
    DSTST64	= 693,
    DSTSTT	= 694,
    DSTSTT64	= 695,
    DSTT	= 696,
    DSTT64	= 697,
    DYNALLOC	= 698,
    DYNALLOC8	= 699,
    DYNAREAOFFSET	= 700,
    DYNAREAOFFSET8	= 701,
    DecreaseCTR8Pseudo	= 702,
    DecreaseCTRPseudo	= 703,
    EFDABS	= 704,
    EFDADD	= 705,
    EFDCFS	= 706,
    EFDCFSF	= 707,
    EFDCFSI	= 708,
    EFDCFSID	= 709,
    EFDCFUF	= 710,
    EFDCFUI	= 711,
    EFDCFUID	= 712,
    EFDCMPEQ	= 713,
    EFDCMPGT	= 714,
    EFDCMPLT	= 715,
    EFDCTSF	= 716,
    EFDCTSI	= 717,
    EFDCTSIDZ	= 718,
    EFDCTSIZ	= 719,
    EFDCTUF	= 720,
    EFDCTUI	= 721,
    EFDCTUIDZ	= 722,
    EFDCTUIZ	= 723,
    EFDDIV	= 724,
    EFDMUL	= 725,
    EFDNABS	= 726,
    EFDNEG	= 727,
    EFDSUB	= 728,
    EFDTSTEQ	= 729,
    EFDTSTGT	= 730,
    EFDTSTLT	= 731,
    EFSABS	= 732,
    EFSADD	= 733,
    EFSCFD	= 734,
    EFSCFSF	= 735,
    EFSCFSI	= 736,
    EFSCFUF	= 737,
    EFSCFUI	= 738,
    EFSCMPEQ	= 739,
    EFSCMPGT	= 740,
    EFSCMPLT	= 741,
    EFSCTSF	= 742,
    EFSCTSI	= 743,
    EFSCTSIZ	= 744,
    EFSCTUF	= 745,
    EFSCTUI	= 746,
    EFSCTUIZ	= 747,
    EFSDIV	= 748,
    EFSMUL	= 749,
    EFSNABS	= 750,
    EFSNEG	= 751,
    EFSSUB	= 752,
    EFSTSTEQ	= 753,
    EFSTSTGT	= 754,
    EFSTSTLT	= 755,
    EH_SjLj_LongJmp32	= 756,
    EH_SjLj_LongJmp64	= 757,
    EH_SjLj_SetJmp32	= 758,
    EH_SjLj_SetJmp64	= 759,
    EH_SjLj_Setup	= 760,
    EQV	= 761,
    EQV8	= 762,
    EQV8_rec	= 763,
    EQV_rec	= 764,
    EVABS	= 765,
    EVADDIW	= 766,
    EVADDSMIAAW	= 767,
    EVADDSSIAAW	= 768,
    EVADDUMIAAW	= 769,
    EVADDUSIAAW	= 770,
    EVADDW	= 771,
    EVAND	= 772,
    EVANDC	= 773,
    EVCMPEQ	= 774,
    EVCMPGTS	= 775,
    EVCMPGTU	= 776,
    EVCMPLTS	= 777,
    EVCMPLTU	= 778,
    EVCNTLSW	= 779,
    EVCNTLZW	= 780,
    EVDIVWS	= 781,
    EVDIVWU	= 782,
    EVEQV	= 783,
    EVEXTSB	= 784,
    EVEXTSH	= 785,
    EVFSABS	= 786,
    EVFSADD	= 787,
    EVFSCFSF	= 788,
    EVFSCFSI	= 789,
    EVFSCFUF	= 790,
    EVFSCFUI	= 791,
    EVFSCMPEQ	= 792,
    EVFSCMPGT	= 793,
    EVFSCMPLT	= 794,
    EVFSCTSF	= 795,
    EVFSCTSI	= 796,
    EVFSCTSIZ	= 797,
    EVFSCTUF	= 798,
    EVFSCTUI	= 799,
    EVFSCTUIZ	= 800,
    EVFSDIV	= 801,
    EVFSMUL	= 802,
    EVFSNABS	= 803,
    EVFSNEG	= 804,
    EVFSSUB	= 805,
    EVFSTSTEQ	= 806,
    EVFSTSTGT	= 807,
    EVFSTSTLT	= 808,
    EVLDD	= 809,
    EVLDDX	= 810,
    EVLDH	= 811,
    EVLDHX	= 812,
    EVLDW	= 813,
    EVLDWX	= 814,
    EVLHHESPLAT	= 815,
    EVLHHESPLATX	= 816,
    EVLHHOSSPLAT	= 817,
    EVLHHOSSPLATX	= 818,
    EVLHHOUSPLAT	= 819,
    EVLHHOUSPLATX	= 820,
    EVLWHE	= 821,
    EVLWHEX	= 822,
    EVLWHOS	= 823,
    EVLWHOSX	= 824,
    EVLWHOU	= 825,
    EVLWHOUX	= 826,
    EVLWHSPLAT	= 827,
    EVLWHSPLATX	= 828,
    EVLWWSPLAT	= 829,
    EVLWWSPLATX	= 830,
    EVMERGEHI	= 831,
    EVMERGEHILO	= 832,
    EVMERGELO	= 833,
    EVMERGELOHI	= 834,
    EVMHEGSMFAA	= 835,
    EVMHEGSMFAN	= 836,
    EVMHEGSMIAA	= 837,
    EVMHEGSMIAN	= 838,
    EVMHEGUMIAA	= 839,
    EVMHEGUMIAN	= 840,
    EVMHESMF	= 841,
    EVMHESMFA	= 842,
    EVMHESMFAAW	= 843,
    EVMHESMFANW	= 844,
    EVMHESMI	= 845,
    EVMHESMIA	= 846,
    EVMHESMIAAW	= 847,
    EVMHESMIANW	= 848,
    EVMHESSF	= 849,
    EVMHESSFA	= 850,
    EVMHESSFAAW	= 851,
    EVMHESSFANW	= 852,
    EVMHESSIAAW	= 853,
    EVMHESSIANW	= 854,
    EVMHEUMI	= 855,
    EVMHEUMIA	= 856,
    EVMHEUMIAAW	= 857,
    EVMHEUMIANW	= 858,
    EVMHEUSIAAW	= 859,
    EVMHEUSIANW	= 860,
    EVMHOGSMFAA	= 861,
    EVMHOGSMFAN	= 862,
    EVMHOGSMIAA	= 863,
    EVMHOGSMIAN	= 864,
    EVMHOGUMIAA	= 865,
    EVMHOGUMIAN	= 866,
    EVMHOSMF	= 867,
    EVMHOSMFA	= 868,
    EVMHOSMFAAW	= 869,
    EVMHOSMFANW	= 870,
    EVMHOSMI	= 871,
    EVMHOSMIA	= 872,
    EVMHOSMIAAW	= 873,
    EVMHOSMIANW	= 874,
    EVMHOSSF	= 875,
    EVMHOSSFA	= 876,
    EVMHOSSFAAW	= 877,
    EVMHOSSFANW	= 878,
    EVMHOSSIAAW	= 879,
    EVMHOSSIANW	= 880,
    EVMHOUMI	= 881,
    EVMHOUMIA	= 882,
    EVMHOUMIAAW	= 883,
    EVMHOUMIANW	= 884,
    EVMHOUSIAAW	= 885,
    EVMHOUSIANW	= 886,
    EVMRA	= 887,
    EVMWHSMF	= 888,
    EVMWHSMFA	= 889,
    EVMWHSMI	= 890,
    EVMWHSMIA	= 891,
    EVMWHSSF	= 892,
    EVMWHSSFA	= 893,
    EVMWHUMI	= 894,
    EVMWHUMIA	= 895,
    EVMWLSMIAAW	= 896,
    EVMWLSMIANW	= 897,
    EVMWLSSIAAW	= 898,
    EVMWLSSIANW	= 899,
    EVMWLUMI	= 900,
    EVMWLUMIA	= 901,
    EVMWLUMIAAW	= 902,
    EVMWLUMIANW	= 903,
    EVMWLUSIAAW	= 904,
    EVMWLUSIANW	= 905,
    EVMWSMF	= 906,
    EVMWSMFA	= 907,
    EVMWSMFAA	= 908,
    EVMWSMFAN	= 909,
    EVMWSMI	= 910,
    EVMWSMIA	= 911,
    EVMWSMIAA	= 912,
    EVMWSMIAN	= 913,
    EVMWSSF	= 914,
    EVMWSSFA	= 915,
    EVMWSSFAA	= 916,
    EVMWSSFAN	= 917,
    EVMWUMI	= 918,
    EVMWUMIA	= 919,
    EVMWUMIAA	= 920,
    EVMWUMIAN	= 921,
    EVNAND	= 922,
    EVNEG	= 923,
    EVNOR	= 924,
    EVOR	= 925,
    EVORC	= 926,
    EVRLW	= 927,
    EVRLWI	= 928,
    EVRNDW	= 929,
    EVSEL	= 930,
    EVSLW	= 931,
    EVSLWI	= 932,
    EVSPLATFI	= 933,
    EVSPLATI	= 934,
    EVSRWIS	= 935,
    EVSRWIU	= 936,
    EVSRWS	= 937,
    EVSRWU	= 938,
    EVSTDD	= 939,
    EVSTDDX	= 940,
    EVSTDH	= 941,
    EVSTDHX	= 942,
    EVSTDW	= 943,
    EVSTDWX	= 944,
    EVSTWHE	= 945,
    EVSTWHEX	= 946,
    EVSTWHO	= 947,
    EVSTWHOX	= 948,
    EVSTWWE	= 949,
    EVSTWWEX	= 950,
    EVSTWWO	= 951,
    EVSTWWOX	= 952,
    EVSUBFSMIAAW	= 953,
    EVSUBFSSIAAW	= 954,
    EVSUBFUMIAAW	= 955,
    EVSUBFUSIAAW	= 956,
    EVSUBFW	= 957,
    EVSUBIFW	= 958,
    EVXOR	= 959,
    EXTSB	= 960,
    EXTSB8	= 961,
    EXTSB8_32_64	= 962,
    EXTSB8_rec	= 963,
    EXTSB_rec	= 964,
    EXTSH	= 965,
    EXTSH8	= 966,
    EXTSH8_32_64	= 967,
    EXTSH8_rec	= 968,
    EXTSH_rec	= 969,
    EXTSW	= 970,
    EXTSWSLI	= 971,
    EXTSWSLI_32_64	= 972,
    EXTSWSLI_32_64_rec	= 973,
    EXTSWSLI_rec	= 974,
    EXTSW_32	= 975,
    EXTSW_32_64	= 976,
    EXTSW_32_64_rec	= 977,
    EXTSW_rec	= 978,
    EnforceIEIO	= 979,
    FABSD	= 980,
    FABSD_rec	= 981,
    FABSS	= 982,
    FABSS_rec	= 983,
    FADD	= 984,
    FADDS	= 985,
    FADDS_rec	= 986,
    FADD_rec	= 987,
    FADDrtz	= 988,
    FCFID	= 989,
    FCFIDS	= 990,
    FCFIDS_rec	= 991,
    FCFIDU	= 992,
    FCFIDUS	= 993,
    FCFIDUS_rec	= 994,
    FCFIDU_rec	= 995,
    FCFID_rec	= 996,
    FCMPOD	= 997,
    FCMPOS	= 998,
    FCMPUD	= 999,
    FCMPUS	= 1000,
    FCPSGND	= 1001,
    FCPSGND_rec	= 1002,
    FCPSGNS	= 1003,
    FCPSGNS_rec	= 1004,
    FCTID	= 1005,
    FCTIDU	= 1006,
    FCTIDUZ	= 1007,
    FCTIDUZ_rec	= 1008,
    FCTIDU_rec	= 1009,
    FCTIDZ	= 1010,
    FCTIDZ_rec	= 1011,
    FCTID_rec	= 1012,
    FCTIW	= 1013,
    FCTIWU	= 1014,
    FCTIWUZ	= 1015,
    FCTIWUZ_rec	= 1016,
    FCTIWU_rec	= 1017,
    FCTIWZ	= 1018,
    FCTIWZ_rec	= 1019,
    FCTIW_rec	= 1020,
    FDIV	= 1021,
    FDIVS	= 1022,
    FDIVS_rec	= 1023,
    FDIV_rec	= 1024,
    FMADD	= 1025,
    FMADDS	= 1026,
    FMADDS_rec	= 1027,
    FMADD_rec	= 1028,
    FMR	= 1029,
    FMR_rec	= 1030,
    FMSUB	= 1031,
    FMSUBS	= 1032,
    FMSUBS_rec	= 1033,
    FMSUB_rec	= 1034,
    FMUL	= 1035,
    FMULS	= 1036,
    FMULS_rec	= 1037,
    FMUL_rec	= 1038,
    FNABSD	= 1039,
    FNABSD_rec	= 1040,
    FNABSS	= 1041,
    FNABSS_rec	= 1042,
    FNEGD	= 1043,
    FNEGD_rec	= 1044,
    FNEGS	= 1045,
    FNEGS_rec	= 1046,
    FNMADD	= 1047,
    FNMADDS	= 1048,
    FNMADDS_rec	= 1049,
    FNMADD_rec	= 1050,
    FNMSUB	= 1051,
    FNMSUBS	= 1052,
    FNMSUBS_rec	= 1053,
    FNMSUB_rec	= 1054,
    FRE	= 1055,
    FRES	= 1056,
    FRES_rec	= 1057,
    FRE_rec	= 1058,
    FRIMD	= 1059,
    FRIMD_rec	= 1060,
    FRIMS	= 1061,
    FRIMS_rec	= 1062,
    FRIND	= 1063,
    FRIND_rec	= 1064,
    FRINS	= 1065,
    FRINS_rec	= 1066,
    FRIPD	= 1067,
    FRIPD_rec	= 1068,
    FRIPS	= 1069,
    FRIPS_rec	= 1070,
    FRIZD	= 1071,
    FRIZD_rec	= 1072,
    FRIZS	= 1073,
    FRIZS_rec	= 1074,
    FRSP	= 1075,
    FRSP_rec	= 1076,
    FRSQRTE	= 1077,
    FRSQRTES	= 1078,
    FRSQRTES_rec	= 1079,
    FRSQRTE_rec	= 1080,
    FSELD	= 1081,
    FSELD_rec	= 1082,
    FSELS	= 1083,
    FSELS_rec	= 1084,
    FSQRT	= 1085,
    FSQRTS	= 1086,
    FSQRTS_rec	= 1087,
    FSQRT_rec	= 1088,
    FSUB	= 1089,
    FSUBS	= 1090,
    FSUBS_rec	= 1091,
    FSUB_rec	= 1092,
    FTDIV	= 1093,
    FTSQRT	= 1094,
    GETtlsADDR	= 1095,
    GETtlsADDR32	= 1096,
    GETtlsADDR32AIX	= 1097,
    GETtlsADDR64AIX	= 1098,
    GETtlsADDRPCREL	= 1099,
    GETtlsldADDR	= 1100,
    GETtlsldADDR32	= 1101,
    GETtlsldADDRPCREL	= 1102,
    HASHCHK	= 1103,
    HASHCHK8	= 1104,
    HASHCHKP	= 1105,
    HASHCHKP8	= 1106,
    HASHST	= 1107,
    HASHST8	= 1108,
    HASHSTP	= 1109,
    HASHSTP8	= 1110,
    HRFID	= 1111,
    ICBI	= 1112,
    ICBIEP	= 1113,
    ICBLC	= 1114,
    ICBLQ	= 1115,
    ICBT	= 1116,
    ICBTLS	= 1117,
    ICCCI	= 1118,
    ISEL	= 1119,
    ISEL8	= 1120,
    ISYNC	= 1121,
    LA	= 1122,
    LA8	= 1123,
    LBARX	= 1124,
    LBARXL	= 1125,
    LBEPX	= 1126,
    LBZ	= 1127,
    LBZ8	= 1128,
    LBZCIX	= 1129,
    LBZU	= 1130,
    LBZU8	= 1131,
    LBZUX	= 1132,
    LBZUX8	= 1133,
    LBZX	= 1134,
    LBZX8	= 1135,
    LBZXTLS	= 1136,
    LBZXTLS_	= 1137,
    LBZXTLS_32	= 1138,
    LD	= 1139,
    LDARX	= 1140,
    LDARXL	= 1141,
    LDAT	= 1142,
    LDBRX	= 1143,
    LDCIX	= 1144,
    LDU	= 1145,
    LDUX	= 1146,
    LDX	= 1147,
    LDXTLS	= 1148,
    LDXTLS_	= 1149,
    LDgotTprelL	= 1150,
    LDgotTprelL32	= 1151,
    LDtoc	= 1152,
    LDtocBA	= 1153,
    LDtocCPT	= 1154,
    LDtocJTI	= 1155,
    LDtocL	= 1156,
    LFD	= 1157,
    LFDEPX	= 1158,
    LFDU	= 1159,
    LFDUX	= 1160,
    LFDX	= 1161,
    LFIWAX	= 1162,
    LFIWZX	= 1163,
    LFS	= 1164,
    LFSU	= 1165,
    LFSUX	= 1166,
    LFSX	= 1167,
    LHA	= 1168,
    LHA8	= 1169,
    LHARX	= 1170,
    LHARXL	= 1171,
    LHAU	= 1172,
    LHAU8	= 1173,
    LHAUX	= 1174,
    LHAUX8	= 1175,
    LHAX	= 1176,
    LHAX8	= 1177,
    LHBRX	= 1178,
    LHBRX8	= 1179,
    LHEPX	= 1180,
    LHZ	= 1181,
    LHZ8	= 1182,
    LHZCIX	= 1183,
    LHZU	= 1184,
    LHZU8	= 1185,
    LHZUX	= 1186,
    LHZUX8	= 1187,
    LHZX	= 1188,
    LHZX8	= 1189,
    LHZXTLS	= 1190,
    LHZXTLS_	= 1191,
    LHZXTLS_32	= 1192,
    LI	= 1193,
    LI8	= 1194,
    LIS	= 1195,
    LIS8	= 1196,
    LMW	= 1197,
    LQ	= 1198,
    LQARX	= 1199,
    LQARXL	= 1200,
    LQX_PSEUDO	= 1201,
    LSWI	= 1202,
    LVEBX	= 1203,
    LVEHX	= 1204,
    LVEWX	= 1205,
    LVSL	= 1206,
    LVSR	= 1207,
    LVX	= 1208,
    LVXL	= 1209,
    LWA	= 1210,
    LWARX	= 1211,
    LWARXL	= 1212,
    LWAT	= 1213,
    LWAUX	= 1214,
    LWAX	= 1215,
    LWAX_32	= 1216,
    LWA_32	= 1217,
    LWBRX	= 1218,
    LWBRX8	= 1219,
    LWEPX	= 1220,
    LWZ	= 1221,
    LWZ8	= 1222,
    LWZCIX	= 1223,
    LWZU	= 1224,
    LWZU8	= 1225,
    LWZUX	= 1226,
    LWZUX8	= 1227,
    LWZX	= 1228,
    LWZX8	= 1229,
    LWZXTLS	= 1230,
    LWZXTLS_	= 1231,
    LWZXTLS_32	= 1232,
    LWZtoc	= 1233,
    LWZtocL	= 1234,
    LXSD	= 1235,
    LXSDX	= 1236,
    LXSIBZX	= 1237,
    LXSIHZX	= 1238,
    LXSIWAX	= 1239,
    LXSIWZX	= 1240,
    LXSSP	= 1241,
    LXSSPX	= 1242,
    LXV	= 1243,
    LXVB16X	= 1244,
    LXVD2X	= 1245,
    LXVDSX	= 1246,
    LXVH8X	= 1247,
    LXVKQ	= 1248,
    LXVL	= 1249,
    LXVLL	= 1250,
    LXVP	= 1251,
    LXVPX	= 1252,
    LXVRBX	= 1253,
    LXVRDX	= 1254,
    LXVRHX	= 1255,
    LXVRWX	= 1256,
    LXVW4X	= 1257,
    LXVWSX	= 1258,
    LXVX	= 1259,
    MADDHD	= 1260,
    MADDHDU	= 1261,
    MADDLD	= 1262,
    MADDLD8	= 1263,
    MBAR	= 1264,
    MCRF	= 1265,
    MCRFS	= 1266,
    MCRXRX	= 1267,
    MFBHRBE	= 1268,
    MFCR	= 1269,
    MFCR8	= 1270,
    MFCTR	= 1271,
    MFCTR8	= 1272,
    MFDCR	= 1273,
    MFFS	= 1274,
    MFFSCDRN	= 1275,
    MFFSCDRNI	= 1276,
    MFFSCE	= 1277,
    MFFSCRN	= 1278,
    MFFSCRNI	= 1279,
    MFFSL	= 1280,
    MFFS_rec	= 1281,
    MFLR	= 1282,
    MFLR8	= 1283,
    MFMSR	= 1284,
    MFOCRF	= 1285,
    MFOCRF8	= 1286,
    MFPMR	= 1287,
    MFSPR	= 1288,
    MFSPR8	= 1289,
    MFSR	= 1290,
    MFSRIN	= 1291,
    MFTB	= 1292,
    MFTB8	= 1293,
    MFUDSCR	= 1294,
    MFVRD	= 1295,
    MFVRSAVE	= 1296,
    MFVRSAVEv	= 1297,
    MFVRWZ	= 1298,
    MFVSCR	= 1299,
    MFVSRD	= 1300,
    MFVSRLD	= 1301,
    MFVSRWZ	= 1302,
    MODSD	= 1303,
    MODSW	= 1304,
    MODUD	= 1305,
    MODUW	= 1306,
    MSGSYNC	= 1307,
    MSYNC	= 1308,
    MTCRF	= 1309,
    MTCRF8	= 1310,
    MTCTR	= 1311,
    MTCTR8	= 1312,
    MTCTR8Pseudo	= 1313,
    MTCTR8loop	= 1314,
    MTCTRPseudo	= 1315,
    MTCTRloop	= 1316,
    MTDCR	= 1317,
    MTFSB0	= 1318,
    MTFSB1	= 1319,
    MTFSF	= 1320,
    MTFSFI	= 1321,
    MTFSFI_rec	= 1322,
    MTFSFIb	= 1323,
    MTFSF_rec	= 1324,
    MTFSFb	= 1325,
    MTLR	= 1326,
    MTLR8	= 1327,
    MTMSR	= 1328,
    MTMSRD	= 1329,
    MTOCRF	= 1330,
    MTOCRF8	= 1331,
    MTPMR	= 1332,
    MTSPR	= 1333,
    MTSPR8	= 1334,
    MTSR	= 1335,
    MTSRIN	= 1336,
    MTUDSCR	= 1337,
    MTVRD	= 1338,
    MTVRSAVE	= 1339,
    MTVRSAVEv	= 1340,
    MTVRWA	= 1341,
    MTVRWZ	= 1342,
    MTVSCR	= 1343,
    MTVSRBM	= 1344,
    MTVSRBMI	= 1345,
    MTVSRD	= 1346,
    MTVSRDD	= 1347,
    MTVSRDM	= 1348,
    MTVSRHM	= 1349,
    MTVSRQM	= 1350,
    MTVSRWA	= 1351,
    MTVSRWM	= 1352,
    MTVSRWS	= 1353,
    MTVSRWZ	= 1354,
    MULHD	= 1355,
    MULHDU	= 1356,
    MULHDU_rec	= 1357,
    MULHD_rec	= 1358,
    MULHW	= 1359,
    MULHWU	= 1360,
    MULHWU_rec	= 1361,
    MULHW_rec	= 1362,
    MULLD	= 1363,
    MULLDO	= 1364,
    MULLDO_rec	= 1365,
    MULLD_rec	= 1366,
    MULLI	= 1367,
    MULLI8	= 1368,
    MULLW	= 1369,
    MULLWO	= 1370,
    MULLWO_rec	= 1371,
    MULLW_rec	= 1372,
    MoveGOTtoLR	= 1373,
    MovePCtoLR	= 1374,
    MovePCtoLR8	= 1375,
    NAND	= 1376,
    NAND8	= 1377,
    NAND8_rec	= 1378,
    NAND_rec	= 1379,
    NAP	= 1380,
    NEG	= 1381,
    NEG8	= 1382,
    NEG8O	= 1383,
    NEG8O_rec	= 1384,
    NEG8_rec	= 1385,
    NEGO	= 1386,
    NEGO_rec	= 1387,
    NEG_rec	= 1388,
    NOP	= 1389,
    NOP_GT_PWR6	= 1390,
    NOP_GT_PWR7	= 1391,
    NOR	= 1392,
    NOR8	= 1393,
    NOR8_rec	= 1394,
    NOR_rec	= 1395,
    OR	= 1396,
    OR8	= 1397,
    OR8_rec	= 1398,
    ORC	= 1399,
    ORC8	= 1400,
    ORC8_rec	= 1401,
    ORC_rec	= 1402,
    ORI	= 1403,
    ORI8	= 1404,
    ORIS	= 1405,
    ORIS8	= 1406,
    OR_rec	= 1407,
    PADDI	= 1408,
    PADDI8	= 1409,
    PADDI8pc	= 1410,
    PADDIdtprel	= 1411,
    PADDIpc	= 1412,
    PDEPD	= 1413,
    PEXTD	= 1414,
    PLBZ	= 1415,
    PLBZ8	= 1416,
    PLBZ8pc	= 1417,
    PLBZpc	= 1418,
    PLD	= 1419,
    PLDpc	= 1420,
    PLFD	= 1421,
    PLFDpc	= 1422,
    PLFS	= 1423,
    PLFSpc	= 1424,
    PLHA	= 1425,
    PLHA8	= 1426,
    PLHA8pc	= 1427,
    PLHApc	= 1428,
    PLHZ	= 1429,
    PLHZ8	= 1430,
    PLHZ8pc	= 1431,
    PLHZpc	= 1432,
    PLI	= 1433,
    PLI8	= 1434,
    PLWA	= 1435,
    PLWA8	= 1436,
    PLWA8pc	= 1437,
    PLWApc	= 1438,
    PLWZ	= 1439,
    PLWZ8	= 1440,
    PLWZ8pc	= 1441,
    PLWZpc	= 1442,
    PLXSD	= 1443,
    PLXSDpc	= 1444,
    PLXSSP	= 1445,
    PLXSSPpc	= 1446,
    PLXV	= 1447,
    PLXVP	= 1448,
    PLXVPpc	= 1449,
    PLXVpc	= 1450,
    PMXVBF16GER2	= 1451,
    PMXVBF16GER2NN	= 1452,
    PMXVBF16GER2NP	= 1453,
    PMXVBF16GER2PN	= 1454,
    PMXVBF16GER2PP	= 1455,
    PMXVF16GER2	= 1456,
    PMXVF16GER2NN	= 1457,
    PMXVF16GER2NP	= 1458,
    PMXVF16GER2PN	= 1459,
    PMXVF16GER2PP	= 1460,
    PMXVF32GER	= 1461,
    PMXVF32GERNN	= 1462,
    PMXVF32GERNP	= 1463,
    PMXVF32GERPN	= 1464,
    PMXVF32GERPP	= 1465,
    PMXVF64GER	= 1466,
    PMXVF64GERNN	= 1467,
    PMXVF64GERNP	= 1468,
    PMXVF64GERPN	= 1469,
    PMXVF64GERPP	= 1470,
    PMXVI16GER2	= 1471,
    PMXVI16GER2PP	= 1472,
    PMXVI16GER2S	= 1473,
    PMXVI16GER2SPP	= 1474,
    PMXVI4GER8	= 1475,
    PMXVI4GER8PP	= 1476,
    PMXVI8GER4	= 1477,
    PMXVI8GER4PP	= 1478,
    PMXVI8GER4SPP	= 1479,
    POPCNTB	= 1480,
    POPCNTB8	= 1481,
    POPCNTD	= 1482,
    POPCNTW	= 1483,
    PPC32GOT	= 1484,
    PPC32PICGOT	= 1485,
    PREPARE_PROBED_ALLOCA_32	= 1486,
    PREPARE_PROBED_ALLOCA_64	= 1487,
    PREPARE_PROBED_ALLOCA_NEGSIZE_SAME_REG_32	= 1488,
    PREPARE_PROBED_ALLOCA_NEGSIZE_SAME_REG_64	= 1489,
    PROBED_ALLOCA_32	= 1490,
    PROBED_ALLOCA_64	= 1491,
    PROBED_STACKALLOC_32	= 1492,
    PROBED_STACKALLOC_64	= 1493,
    PSTB	= 1494,
    PSTB8	= 1495,
    PSTB8pc	= 1496,
    PSTBpc	= 1497,
    PSTD	= 1498,
    PSTDpc	= 1499,
    PSTFD	= 1500,
    PSTFDpc	= 1501,
    PSTFS	= 1502,
    PSTFSpc	= 1503,
    PSTH	= 1504,
    PSTH8	= 1505,
    PSTH8pc	= 1506,
    PSTHpc	= 1507,
    PSTW	= 1508,
    PSTW8	= 1509,
    PSTW8pc	= 1510,
    PSTWpc	= 1511,
    PSTXSD	= 1512,
    PSTXSDpc	= 1513,
    PSTXSSP	= 1514,
    PSTXSSPpc	= 1515,
    PSTXV	= 1516,
    PSTXVP	= 1517,
    PSTXVPpc	= 1518,
    PSTXVpc	= 1519,
    PseudoEIEIO	= 1520,
    RESTORE_ACC	= 1521,
    RESTORE_CR	= 1522,
    RESTORE_CRBIT	= 1523,
    RESTORE_QUADWORD	= 1524,
    RESTORE_UACC	= 1525,
    RFCI	= 1526,
    RFDI	= 1527,
    RFEBB	= 1528,
    RFI	= 1529,
    RFID	= 1530,
    RFMCI	= 1531,
    RLDCL	= 1532,
    RLDCL_rec	= 1533,
    RLDCR	= 1534,
    RLDCR_rec	= 1535,
    RLDIC	= 1536,
    RLDICL	= 1537,
    RLDICL_32	= 1538,
    RLDICL_32_64	= 1539,
    RLDICL_32_rec	= 1540,
    RLDICL_rec	= 1541,
    RLDICR	= 1542,
    RLDICR_32	= 1543,
    RLDICR_rec	= 1544,
    RLDIC_rec	= 1545,
    RLDIMI	= 1546,
    RLDIMI_rec	= 1547,
    RLWIMI	= 1548,
    RLWIMI8	= 1549,
    RLWIMI8_rec	= 1550,
    RLWIMI_rec	= 1551,
    RLWINM	= 1552,
    RLWINM8	= 1553,
    RLWINM8_rec	= 1554,
    RLWINM_rec	= 1555,
    RLWNM	= 1556,
    RLWNM8	= 1557,
    RLWNM8_rec	= 1558,
    RLWNM_rec	= 1559,
    ReadTB	= 1560,
    SC	= 1561,
    SELECT_CC_F16	= 1562,
    SELECT_CC_F4	= 1563,
    SELECT_CC_F8	= 1564,
    SELECT_CC_I4	= 1565,
    SELECT_CC_I8	= 1566,
    SELECT_CC_SPE	= 1567,
    SELECT_CC_SPE4	= 1568,
    SELECT_CC_VRRC	= 1569,
    SELECT_CC_VSFRC	= 1570,
    SELECT_CC_VSRC	= 1571,
    SELECT_CC_VSSRC	= 1572,
    SELECT_F16	= 1573,
    SELECT_F4	= 1574,
    SELECT_F8	= 1575,
    SELECT_I4	= 1576,
    SELECT_I8	= 1577,
    SELECT_SPE	= 1578,
    SELECT_SPE4	= 1579,
    SELECT_VRRC	= 1580,
    SELECT_VSFRC	= 1581,
    SELECT_VSRC	= 1582,
    SELECT_VSSRC	= 1583,
    SETB	= 1584,
    SETB8	= 1585,
    SETBC	= 1586,
    SETBC8	= 1587,
    SETBCR	= 1588,
    SETBCR8	= 1589,
    SETFLM	= 1590,
    SETNBC	= 1591,
    SETNBC8	= 1592,
    SETNBCR	= 1593,
    SETNBCR8	= 1594,
    SETRND	= 1595,
    SETRNDi	= 1596,
    SLBFEE_rec	= 1597,
    SLBIA	= 1598,
    SLBIE	= 1599,
    SLBIEG	= 1600,
    SLBMFEE	= 1601,
    SLBMFEV	= 1602,
    SLBMTE	= 1603,
    SLBSYNC	= 1604,
    SLD	= 1605,
    SLD_rec	= 1606,
    SLW	= 1607,
    SLW8	= 1608,
    SLW8_rec	= 1609,
    SLW_rec	= 1610,
    SPELWZ	= 1611,
    SPELWZX	= 1612,
    SPESTW	= 1613,
    SPESTWX	= 1614,
    SPILL_ACC	= 1615,
    SPILL_CR	= 1616,
    SPILL_CRBIT	= 1617,
    SPILL_QUADWORD	= 1618,
    SPILL_UACC	= 1619,
    SPLIT_QUADWORD	= 1620,
    SRAD	= 1621,
    SRADI	= 1622,
    SRADI_32	= 1623,
    SRADI_rec	= 1624,
    SRAD_rec	= 1625,
    SRAW	= 1626,
    SRAWI	= 1627,
    SRAWI_rec	= 1628,
    SRAW_rec	= 1629,
    SRD	= 1630,
    SRD_rec	= 1631,
    SRW	= 1632,
    SRW8	= 1633,
    SRW8_rec	= 1634,
    SRW_rec	= 1635,
    STB	= 1636,
    STB8	= 1637,
    STBCIX	= 1638,
    STBCX	= 1639,
    STBEPX	= 1640,
    STBU	= 1641,
    STBU8	= 1642,
    STBUX	= 1643,
    STBUX8	= 1644,
    STBX	= 1645,
    STBX8	= 1646,
    STBXTLS	= 1647,
    STBXTLS_	= 1648,
    STBXTLS_32	= 1649,
    STD	= 1650,
    STDAT	= 1651,
    STDBRX	= 1652,
    STDCIX	= 1653,
    STDCX	= 1654,
    STDU	= 1655,
    STDUX	= 1656,
    STDX	= 1657,
    STDXTLS	= 1658,
    STDXTLS_	= 1659,
    STFD	= 1660,
    STFDEPX	= 1661,
    STFDU	= 1662,
    STFDUX	= 1663,
    STFDX	= 1664,
    STFIWX	= 1665,
    STFS	= 1666,
    STFSU	= 1667,
    STFSUX	= 1668,
    STFSX	= 1669,
    STH	= 1670,
    STH8	= 1671,
    STHBRX	= 1672,
    STHCIX	= 1673,
    STHCX	= 1674,
    STHEPX	= 1675,
    STHU	= 1676,
    STHU8	= 1677,
    STHUX	= 1678,
    STHUX8	= 1679,
    STHX	= 1680,
    STHX8	= 1681,
    STHXTLS	= 1682,
    STHXTLS_	= 1683,
    STHXTLS_32	= 1684,
    STMW	= 1685,
    STOP	= 1686,
    STQ	= 1687,
    STQCX	= 1688,
    STQX_PSEUDO	= 1689,
    STSWI	= 1690,
    STVEBX	= 1691,
    STVEHX	= 1692,
    STVEWX	= 1693,
    STVX	= 1694,
    STVXL	= 1695,
    STW	= 1696,
    STW8	= 1697,
    STWAT	= 1698,
    STWBRX	= 1699,
    STWCIX	= 1700,
    STWCX	= 1701,
    STWEPX	= 1702,
    STWU	= 1703,
    STWU8	= 1704,
    STWUX	= 1705,
    STWUX8	= 1706,
    STWX	= 1707,
    STWX8	= 1708,
    STWXTLS	= 1709,
    STWXTLS_	= 1710,
    STWXTLS_32	= 1711,
    STXSD	= 1712,
    STXSDX	= 1713,
    STXSIBX	= 1714,
    STXSIBXv	= 1715,
    STXSIHX	= 1716,
    STXSIHXv	= 1717,
    STXSIWX	= 1718,
    STXSSP	= 1719,
    STXSSPX	= 1720,
    STXV	= 1721,
    STXVB16X	= 1722,
    STXVD2X	= 1723,
    STXVH8X	= 1724,
    STXVL	= 1725,
    STXVLL	= 1726,
    STXVP	= 1727,
    STXVPX	= 1728,
    STXVRBX	= 1729,
    STXVRDX	= 1730,
    STXVRHX	= 1731,
    STXVRWX	= 1732,
    STXVW4X	= 1733,
    STXVX	= 1734,
    SUBF	= 1735,
    SUBF8	= 1736,
    SUBF8O	= 1737,
    SUBF8O_rec	= 1738,
    SUBF8_rec	= 1739,
    SUBFC	= 1740,
    SUBFC8	= 1741,
    SUBFC8O	= 1742,
    SUBFC8O_rec	= 1743,
    SUBFC8_rec	= 1744,
    SUBFCO	= 1745,
    SUBFCO_rec	= 1746,
    SUBFC_rec	= 1747,
    SUBFE	= 1748,
    SUBFE8	= 1749,
    SUBFE8O	= 1750,
    SUBFE8O_rec	= 1751,
    SUBFE8_rec	= 1752,
    SUBFEO	= 1753,
    SUBFEO_rec	= 1754,
    SUBFE_rec	= 1755,
    SUBFIC	= 1756,
    SUBFIC8	= 1757,
    SUBFME	= 1758,
    SUBFME8	= 1759,
    SUBFME8O	= 1760,
    SUBFME8O_rec	= 1761,
    SUBFME8_rec	= 1762,
    SUBFMEO	= 1763,
    SUBFMEO_rec	= 1764,
    SUBFME_rec	= 1765,
    SUBFO	= 1766,
    SUBFO_rec	= 1767,
    SUBFZE	= 1768,
    SUBFZE8	= 1769,
    SUBFZE8O	= 1770,
    SUBFZE8O_rec	= 1771,
    SUBFZE8_rec	= 1772,
    SUBFZEO	= 1773,
    SUBFZEO_rec	= 1774,
    SUBFZE_rec	= 1775,
    SUBF_rec	= 1776,
    SYNC	= 1777,
    TABORT	= 1778,
    TABORTDC	= 1779,
    TABORTDCI	= 1780,
    TABORTWC	= 1781,
    TABORTWCI	= 1782,
    TAILB	= 1783,
    TAILB8	= 1784,
    TAILBA	= 1785,
    TAILBA8	= 1786,
    TAILBCTR	= 1787,
    TAILBCTR8	= 1788,
    TBEGIN	= 1789,
    TBEGIN_RET	= 1790,
    TCHECK	= 1791,
    TCHECK_RET	= 1792,
    TCRETURNai	= 1793,
    TCRETURNai8	= 1794,
    TCRETURNdi	= 1795,
    TCRETURNdi8	= 1796,
    TCRETURNri	= 1797,
    TCRETURNri8	= 1798,
    TD	= 1799,
    TDI	= 1800,
    TEND	= 1801,
    TLBIA	= 1802,
    TLBIE	= 1803,
    TLBIEL	= 1804,
    TLBIVAX	= 1805,
    TLBLD	= 1806,
    TLBLI	= 1807,
    TLBRE	= 1808,
    TLBRE2	= 1809,
    TLBSX	= 1810,
    TLBSX2	= 1811,
    TLBSX2D	= 1812,
    TLBSYNC	= 1813,
    TLBWE	= 1814,
    TLBWE2	= 1815,
    TLSGDAIX	= 1816,
    TLSGDAIX8	= 1817,
    TRAP	= 1818,
    TRECHKPT	= 1819,
    TRECLAIM	= 1820,
    TSR	= 1821,
    TW	= 1822,
    TWI	= 1823,
    UNENCODED_NOP	= 1824,
    UpdateGBR	= 1825,
    VABSDUB	= 1826,
    VABSDUH	= 1827,
    VABSDUW	= 1828,
    VADDCUQ	= 1829,
    VADDCUW	= 1830,
    VADDECUQ	= 1831,
    VADDEUQM	= 1832,
    VADDFP	= 1833,
    VADDSBS	= 1834,
    VADDSHS	= 1835,
    VADDSWS	= 1836,
    VADDUBM	= 1837,
    VADDUBS	= 1838,
    VADDUDM	= 1839,
    VADDUHM	= 1840,
    VADDUHS	= 1841,
    VADDUQM	= 1842,
    VADDUWM	= 1843,
    VADDUWS	= 1844,
    VAND	= 1845,
    VANDC	= 1846,
    VAVGSB	= 1847,
    VAVGSH	= 1848,
    VAVGSW	= 1849,
    VAVGUB	= 1850,
    VAVGUH	= 1851,
    VAVGUW	= 1852,
    VBPERMD	= 1853,
    VBPERMQ	= 1854,
    VCFSX	= 1855,
    VCFSX_0	= 1856,
    VCFUGED	= 1857,
    VCFUX	= 1858,
    VCFUX_0	= 1859,
    VCIPHER	= 1860,
    VCIPHERLAST	= 1861,
    VCLRLB	= 1862,
    VCLRRB	= 1863,
    VCLZB	= 1864,
    VCLZD	= 1865,
    VCLZDM	= 1866,
    VCLZH	= 1867,
    VCLZLSBB	= 1868,
    VCLZW	= 1869,
    VCMPBFP	= 1870,
    VCMPBFP_rec	= 1871,
    VCMPEQFP	= 1872,
    VCMPEQFP_rec	= 1873,
    VCMPEQUB	= 1874,
    VCMPEQUB_rec	= 1875,
    VCMPEQUD	= 1876,
    VCMPEQUD_rec	= 1877,
    VCMPEQUH	= 1878,
    VCMPEQUH_rec	= 1879,
    VCMPEQUQ	= 1880,
    VCMPEQUQ_rec	= 1881,
    VCMPEQUW	= 1882,
    VCMPEQUW_rec	= 1883,
    VCMPGEFP	= 1884,
    VCMPGEFP_rec	= 1885,
    VCMPGTFP	= 1886,
    VCMPGTFP_rec	= 1887,
    VCMPGTSB	= 1888,
    VCMPGTSB_rec	= 1889,
    VCMPGTSD	= 1890,
    VCMPGTSD_rec	= 1891,
    VCMPGTSH	= 1892,
    VCMPGTSH_rec	= 1893,
    VCMPGTSQ	= 1894,
    VCMPGTSQ_rec	= 1895,
    VCMPGTSW	= 1896,
    VCMPGTSW_rec	= 1897,
    VCMPGTUB	= 1898,
    VCMPGTUB_rec	= 1899,
    VCMPGTUD	= 1900,
    VCMPGTUD_rec	= 1901,
    VCMPGTUH	= 1902,
    VCMPGTUH_rec	= 1903,
    VCMPGTUQ	= 1904,
    VCMPGTUQ_rec	= 1905,
    VCMPGTUW	= 1906,
    VCMPGTUW_rec	= 1907,
    VCMPNEB	= 1908,
    VCMPNEB_rec	= 1909,
    VCMPNEH	= 1910,
    VCMPNEH_rec	= 1911,
    VCMPNEW	= 1912,
    VCMPNEW_rec	= 1913,
    VCMPNEZB	= 1914,
    VCMPNEZB_rec	= 1915,
    VCMPNEZH	= 1916,
    VCMPNEZH_rec	= 1917,
    VCMPNEZW	= 1918,
    VCMPNEZW_rec	= 1919,
    VCMPSQ	= 1920,
    VCMPUQ	= 1921,
    VCNTMBB	= 1922,
    VCNTMBD	= 1923,
    VCNTMBH	= 1924,
    VCNTMBW	= 1925,
    VCTSXS	= 1926,
    VCTSXS_0	= 1927,
    VCTUXS	= 1928,
    VCTUXS_0	= 1929,
    VCTZB	= 1930,
    VCTZD	= 1931,
    VCTZDM	= 1932,
    VCTZH	= 1933,
    VCTZLSBB	= 1934,
    VCTZW	= 1935,
    VDIVESD	= 1936,
    VDIVESQ	= 1937,
    VDIVESW	= 1938,
    VDIVEUD	= 1939,
    VDIVEUQ	= 1940,
    VDIVEUW	= 1941,
    VDIVSD	= 1942,
    VDIVSQ	= 1943,
    VDIVSW	= 1944,
    VDIVUD	= 1945,
    VDIVUQ	= 1946,
    VDIVUW	= 1947,
    VEQV	= 1948,
    VEXPANDBM	= 1949,
    VEXPANDDM	= 1950,
    VEXPANDHM	= 1951,
    VEXPANDQM	= 1952,
    VEXPANDWM	= 1953,
    VEXPTEFP	= 1954,
    VEXTDDVLX	= 1955,
    VEXTDDVRX	= 1956,
    VEXTDUBVLX	= 1957,
    VEXTDUBVRX	= 1958,
    VEXTDUHVLX	= 1959,
    VEXTDUHVRX	= 1960,
    VEXTDUWVLX	= 1961,
    VEXTDUWVRX	= 1962,
    VEXTRACTBM	= 1963,
    VEXTRACTD	= 1964,
    VEXTRACTDM	= 1965,
    VEXTRACTHM	= 1966,
    VEXTRACTQM	= 1967,
    VEXTRACTUB	= 1968,
    VEXTRACTUH	= 1969,
    VEXTRACTUW	= 1970,
    VEXTRACTWM	= 1971,
    VEXTSB2D	= 1972,
    VEXTSB2Ds	= 1973,
    VEXTSB2W	= 1974,
    VEXTSB2Ws	= 1975,
    VEXTSD2Q	= 1976,
    VEXTSH2D	= 1977,
    VEXTSH2Ds	= 1978,
    VEXTSH2W	= 1979,
    VEXTSH2Ws	= 1980,
    VEXTSW2D	= 1981,
    VEXTSW2Ds	= 1982,
    VEXTUBLX	= 1983,
    VEXTUBRX	= 1984,
    VEXTUHLX	= 1985,
    VEXTUHRX	= 1986,
    VEXTUWLX	= 1987,
    VEXTUWRX	= 1988,
    VGBBD	= 1989,
    VGNB	= 1990,
    VINSBLX	= 1991,
    VINSBRX	= 1992,
    VINSBVLX	= 1993,
    VINSBVRX	= 1994,
    VINSD	= 1995,
    VINSDLX	= 1996,
    VINSDRX	= 1997,
    VINSERTB	= 1998,
    VINSERTD	= 1999,
    VINSERTH	= 2000,
    VINSERTW	= 2001,
    VINSHLX	= 2002,
    VINSHRX	= 2003,
    VINSHVLX	= 2004,
    VINSHVRX	= 2005,
    VINSW	= 2006,
    VINSWLX	= 2007,
    VINSWRX	= 2008,
    VINSWVLX	= 2009,
    VINSWVRX	= 2010,
    VLOGEFP	= 2011,
    VMADDFP	= 2012,
    VMAXFP	= 2013,
    VMAXSB	= 2014,
    VMAXSD	= 2015,
    VMAXSH	= 2016,
    VMAXSW	= 2017,
    VMAXUB	= 2018,
    VMAXUD	= 2019,
    VMAXUH	= 2020,
    VMAXUW	= 2021,
    VMHADDSHS	= 2022,
    VMHRADDSHS	= 2023,
    VMINFP	= 2024,
    VMINSB	= 2025,
    VMINSD	= 2026,
    VMINSH	= 2027,
    VMINSW	= 2028,
    VMINUB	= 2029,
    VMINUD	= 2030,
    VMINUH	= 2031,
    VMINUW	= 2032,
    VMLADDUHM	= 2033,
    VMODSD	= 2034,
    VMODSQ	= 2035,
    VMODSW	= 2036,
    VMODUD	= 2037,
    VMODUQ	= 2038,
    VMODUW	= 2039,
    VMRGEW	= 2040,
    VMRGHB	= 2041,
    VMRGHH	= 2042,
    VMRGHW	= 2043,
    VMRGLB	= 2044,
    VMRGLH	= 2045,
    VMRGLW	= 2046,
    VMRGOW	= 2047,
    VMSUMCUD	= 2048,
    VMSUMMBM	= 2049,
    VMSUMSHM	= 2050,
    VMSUMSHS	= 2051,
    VMSUMUBM	= 2052,
    VMSUMUDM	= 2053,
    VMSUMUHM	= 2054,
    VMSUMUHS	= 2055,
    VMUL10CUQ	= 2056,
    VMUL10ECUQ	= 2057,
    VMUL10EUQ	= 2058,
    VMUL10UQ	= 2059,
    VMULESB	= 2060,
    VMULESD	= 2061,
    VMULESH	= 2062,
    VMULESW	= 2063,
    VMULEUB	= 2064,
    VMULEUD	= 2065,
    VMULEUH	= 2066,
    VMULEUW	= 2067,
    VMULHSD	= 2068,
    VMULHSW	= 2069,
    VMULHUD	= 2070,
    VMULHUW	= 2071,
    VMULLD	= 2072,
    VMULOSB	= 2073,
    VMULOSD	= 2074,
    VMULOSH	= 2075,
    VMULOSW	= 2076,
    VMULOUB	= 2077,
    VMULOUD	= 2078,
    VMULOUH	= 2079,
    VMULOUW	= 2080,
    VMULUWM	= 2081,
    VNAND	= 2082,
    VNCIPHER	= 2083,
    VNCIPHERLAST	= 2084,
    VNEGD	= 2085,
    VNEGW	= 2086,
    VNMSUBFP	= 2087,
    VNOR	= 2088,
    VOR	= 2089,
    VORC	= 2090,
    VPDEPD	= 2091,
    VPERM	= 2092,
    VPERMR	= 2093,
    VPERMXOR	= 2094,
    VPEXTD	= 2095,
    VPKPX	= 2096,
    VPKSDSS	= 2097,
    VPKSDUS	= 2098,
    VPKSHSS	= 2099,
    VPKSHUS	= 2100,
    VPKSWSS	= 2101,
    VPKSWUS	= 2102,
    VPKUDUM	= 2103,
    VPKUDUS	= 2104,
    VPKUHUM	= 2105,
    VPKUHUS	= 2106,
    VPKUWUM	= 2107,
    VPKUWUS	= 2108,
    VPMSUMB	= 2109,
    VPMSUMD	= 2110,
    VPMSUMH	= 2111,
    VPMSUMW	= 2112,
    VPOPCNTB	= 2113,
    VPOPCNTD	= 2114,
    VPOPCNTH	= 2115,
    VPOPCNTW	= 2116,
    VPRTYBD	= 2117,
    VPRTYBQ	= 2118,
    VPRTYBW	= 2119,
    VREFP	= 2120,
    VRFIM	= 2121,
    VRFIN	= 2122,
    VRFIP	= 2123,
    VRFIZ	= 2124,
    VRLB	= 2125,
    VRLD	= 2126,
    VRLDMI	= 2127,
    VRLDNM	= 2128,
    VRLH	= 2129,
    VRLQ	= 2130,
    VRLQMI	= 2131,
    VRLQNM	= 2132,
    VRLW	= 2133,
    VRLWMI	= 2134,
    VRLWNM	= 2135,
    VRSQRTEFP	= 2136,
    VSBOX	= 2137,
    VSEL	= 2138,
    VSHASIGMAD	= 2139,
    VSHASIGMAW	= 2140,
    VSL	= 2141,
    VSLB	= 2142,
    VSLD	= 2143,
    VSLDBI	= 2144,
    VSLDOI	= 2145,
    VSLH	= 2146,
    VSLO	= 2147,
    VSLQ	= 2148,
    VSLV	= 2149,
    VSLW	= 2150,
    VSPLTB	= 2151,
    VSPLTBs	= 2152,
    VSPLTH	= 2153,
    VSPLTHs	= 2154,
    VSPLTISB	= 2155,
    VSPLTISH	= 2156,
    VSPLTISW	= 2157,
    VSPLTW	= 2158,
    VSR	= 2159,
    VSRAB	= 2160,
    VSRAD	= 2161,
    VSRAH	= 2162,
    VSRAQ	= 2163,
    VSRAW	= 2164,
    VSRB	= 2165,
    VSRD	= 2166,
    VSRDBI	= 2167,
    VSRH	= 2168,
    VSRO	= 2169,
    VSRQ	= 2170,
    VSRV	= 2171,
    VSRW	= 2172,
    VSTRIBL	= 2173,
    VSTRIBL_rec	= 2174,
    VSTRIBR	= 2175,
    VSTRIBR_rec	= 2176,
    VSTRIHL	= 2177,
    VSTRIHL_rec	= 2178,
    VSTRIHR	= 2179,
    VSTRIHR_rec	= 2180,
    VSUBCUQ	= 2181,
    VSUBCUW	= 2182,
    VSUBECUQ	= 2183,
    VSUBEUQM	= 2184,
    VSUBFP	= 2185,
    VSUBSBS	= 2186,
    VSUBSHS	= 2187,
    VSUBSWS	= 2188,
    VSUBUBM	= 2189,
    VSUBUBS	= 2190,
    VSUBUDM	= 2191,
    VSUBUHM	= 2192,
    VSUBUHS	= 2193,
    VSUBUQM	= 2194,
    VSUBUWM	= 2195,
    VSUBUWS	= 2196,
    VSUM2SWS	= 2197,
    VSUM4SBS	= 2198,
    VSUM4SHS	= 2199,
    VSUM4UBS	= 2200,
    VSUMSWS	= 2201,
    VUPKHPX	= 2202,
    VUPKHSB	= 2203,
    VUPKHSH	= 2204,
    VUPKHSW	= 2205,
    VUPKLPX	= 2206,
    VUPKLSB	= 2207,
    VUPKLSH	= 2208,
    VUPKLSW	= 2209,
    VXOR	= 2210,
    V_SET0	= 2211,
    V_SET0B	= 2212,
    V_SET0H	= 2213,
    V_SETALLONES	= 2214,
    V_SETALLONESB	= 2215,
    V_SETALLONESH	= 2216,
    WAIT	= 2217,
    WRTEE	= 2218,
    WRTEEI	= 2219,
    XOR	= 2220,
    XOR8	= 2221,
    XOR8_rec	= 2222,
    XORI	= 2223,
    XORI8	= 2224,
    XORIS	= 2225,
    XORIS8	= 2226,
    XOR_rec	= 2227,
    XSABSDP	= 2228,
    XSABSQP	= 2229,
    XSADDDP	= 2230,
    XSADDQP	= 2231,
    XSADDQPO	= 2232,
    XSADDSP	= 2233,
    XSCMPEQDP	= 2234,
    XSCMPEXPDP	= 2235,
    XSCMPEXPQP	= 2236,
    XSCMPGEDP	= 2237,
    XSCMPGTDP	= 2238,
    XSCMPODP	= 2239,
    XSCMPOQP	= 2240,
    XSCMPUDP	= 2241,
    XSCMPUQP	= 2242,
    XSCPSGNDP	= 2243,
    XSCPSGNQP	= 2244,
    XSCVDPHP	= 2245,
    XSCVDPQP	= 2246,
    XSCVDPSP	= 2247,
    XSCVDPSPN	= 2248,
    XSCVDPSXDS	= 2249,
    XSCVDPSXDSs	= 2250,
    XSCVDPSXWS	= 2251,
    XSCVDPSXWSs	= 2252,
    XSCVDPUXDS	= 2253,
    XSCVDPUXDSs	= 2254,
    XSCVDPUXWS	= 2255,
    XSCVDPUXWSs	= 2256,
    XSCVHPDP	= 2257,
    XSCVQPDP	= 2258,
    XSCVQPDPO	= 2259,
    XSCVQPSDZ	= 2260,
    XSCVQPSQZ	= 2261,
    XSCVQPSWZ	= 2262,
    XSCVQPUDZ	= 2263,
    XSCVQPUQZ	= 2264,
    XSCVQPUWZ	= 2265,
    XSCVSDQP	= 2266,
    XSCVSPDP	= 2267,
    XSCVSPDPN	= 2268,
    XSCVSQQP	= 2269,
    XSCVSXDDP	= 2270,
    XSCVSXDSP	= 2271,
    XSCVUDQP	= 2272,
    XSCVUQQP	= 2273,
    XSCVUXDDP	= 2274,
    XSCVUXDSP	= 2275,
    XSDIVDP	= 2276,
    XSDIVQP	= 2277,
    XSDIVQPO	= 2278,
    XSDIVSP	= 2279,
    XSIEXPDP	= 2280,
    XSIEXPQP	= 2281,
    XSMADDADP	= 2282,
    XSMADDASP	= 2283,
    XSMADDMDP	= 2284,
    XSMADDMSP	= 2285,
    XSMADDQP	= 2286,
    XSMADDQPO	= 2287,
    XSMAXCDP	= 2288,
    XSMAXCQP	= 2289,
    XSMAXDP	= 2290,
    XSMAXJDP	= 2291,
    XSMINCDP	= 2292,
    XSMINCQP	= 2293,
    XSMINDP	= 2294,
    XSMINJDP	= 2295,
    XSMSUBADP	= 2296,
    XSMSUBASP	= 2297,
    XSMSUBMDP	= 2298,
    XSMSUBMSP	= 2299,
    XSMSUBQP	= 2300,
    XSMSUBQPO	= 2301,
    XSMULDP	= 2302,
    XSMULQP	= 2303,
    XSMULQPO	= 2304,
    XSMULSP	= 2305,
    XSNABSDP	= 2306,
    XSNABSDPs	= 2307,
    XSNABSQP	= 2308,
    XSNEGDP	= 2309,
    XSNEGQP	= 2310,
    XSNMADDADP	= 2311,
    XSNMADDASP	= 2312,
    XSNMADDMDP	= 2313,
    XSNMADDMSP	= 2314,
    XSNMADDQP	= 2315,
    XSNMADDQPO	= 2316,
    XSNMSUBADP	= 2317,
    XSNMSUBASP	= 2318,
    XSNMSUBMDP	= 2319,
    XSNMSUBMSP	= 2320,
    XSNMSUBQP	= 2321,
    XSNMSUBQPO	= 2322,
    XSRDPI	= 2323,
    XSRDPIC	= 2324,
    XSRDPIM	= 2325,
    XSRDPIP	= 2326,
    XSRDPIZ	= 2327,
    XSREDP	= 2328,
    XSRESP	= 2329,
    XSRQPI	= 2330,
    XSRQPIX	= 2331,
    XSRQPXP	= 2332,
    XSRSP	= 2333,
    XSRSQRTEDP	= 2334,
    XSRSQRTESP	= 2335,
    XSSQRTDP	= 2336,
    XSSQRTQP	= 2337,
    XSSQRTQPO	= 2338,
    XSSQRTSP	= 2339,
    XSSUBDP	= 2340,
    XSSUBQP	= 2341,
    XSSUBQPO	= 2342,
    XSSUBSP	= 2343,
    XSTDIVDP	= 2344,
    XSTSQRTDP	= 2345,
    XSTSTDCDP	= 2346,
    XSTSTDCQP	= 2347,
    XSTSTDCSP	= 2348,
    XSXEXPDP	= 2349,
    XSXEXPQP	= 2350,
    XSXSIGDP	= 2351,
    XSXSIGQP	= 2352,
    XVABSDP	= 2353,
    XVABSSP	= 2354,
    XVADDDP	= 2355,
    XVADDSP	= 2356,
    XVBF16GER2	= 2357,
    XVBF16GER2NN	= 2358,
    XVBF16GER2NP	= 2359,
    XVBF16GER2PN	= 2360,
    XVBF16GER2PP	= 2361,
    XVCMPEQDP	= 2362,
    XVCMPEQDP_rec	= 2363,
    XVCMPEQSP	= 2364,
    XVCMPEQSP_rec	= 2365,
    XVCMPGEDP	= 2366,
    XVCMPGEDP_rec	= 2367,
    XVCMPGESP	= 2368,
    XVCMPGESP_rec	= 2369,
    XVCMPGTDP	= 2370,
    XVCMPGTDP_rec	= 2371,
    XVCMPGTSP	= 2372,
    XVCMPGTSP_rec	= 2373,
    XVCPSGNDP	= 2374,
    XVCPSGNSP	= 2375,
    XVCVBF16SPN	= 2376,
    XVCVDPSP	= 2377,
    XVCVDPSXDS	= 2378,
    XVCVDPSXWS	= 2379,
    XVCVDPUXDS	= 2380,
    XVCVDPUXWS	= 2381,
    XVCVHPSP	= 2382,
    XVCVSPBF16	= 2383,
    XVCVSPDP	= 2384,
    XVCVSPHP	= 2385,
    XVCVSPSXDS	= 2386,
    XVCVSPSXWS	= 2387,
    XVCVSPUXDS	= 2388,
    XVCVSPUXWS	= 2389,
    XVCVSXDDP	= 2390,
    XVCVSXDSP	= 2391,
    XVCVSXWDP	= 2392,
    XVCVSXWSP	= 2393,
    XVCVUXDDP	= 2394,
    XVCVUXDSP	= 2395,
    XVCVUXWDP	= 2396,
    XVCVUXWSP	= 2397,
    XVDIVDP	= 2398,
    XVDIVSP	= 2399,
    XVF16GER2	= 2400,
    XVF16GER2NN	= 2401,
    XVF16GER2NP	= 2402,
    XVF16GER2PN	= 2403,
    XVF16GER2PP	= 2404,
    XVF32GER	= 2405,
    XVF32GERNN	= 2406,
    XVF32GERNP	= 2407,
    XVF32GERPN	= 2408,
    XVF32GERPP	= 2409,
    XVF64GER	= 2410,
    XVF64GERNN	= 2411,
    XVF64GERNP	= 2412,
    XVF64GERPN	= 2413,
    XVF64GERPP	= 2414,
    XVI16GER2	= 2415,
    XVI16GER2PP	= 2416,
    XVI16GER2S	= 2417,
    XVI16GER2SPP	= 2418,
    XVI4GER8	= 2419,
    XVI4GER8PP	= 2420,
    XVI8GER4	= 2421,
    XVI8GER4PP	= 2422,
    XVI8GER4SPP	= 2423,
    XVIEXPDP	= 2424,
    XVIEXPSP	= 2425,
    XVMADDADP	= 2426,
    XVMADDASP	= 2427,
    XVMADDMDP	= 2428,
    XVMADDMSP	= 2429,
    XVMAXDP	= 2430,
    XVMAXSP	= 2431,
    XVMINDP	= 2432,
    XVMINSP	= 2433,
    XVMSUBADP	= 2434,
    XVMSUBASP	= 2435,
    XVMSUBMDP	= 2436,
    XVMSUBMSP	= 2437,
    XVMULDP	= 2438,
    XVMULSP	= 2439,
    XVNABSDP	= 2440,
    XVNABSSP	= 2441,
    XVNEGDP	= 2442,
    XVNEGSP	= 2443,
    XVNMADDADP	= 2444,
    XVNMADDASP	= 2445,
    XVNMADDMDP	= 2446,
    XVNMADDMSP	= 2447,
    XVNMSUBADP	= 2448,
    XVNMSUBASP	= 2449,
    XVNMSUBMDP	= 2450,
    XVNMSUBMSP	= 2451,
    XVRDPI	= 2452,
    XVRDPIC	= 2453,
    XVRDPIM	= 2454,
    XVRDPIP	= 2455,
    XVRDPIZ	= 2456,
    XVREDP	= 2457,
    XVRESP	= 2458,
    XVRSPI	= 2459,
    XVRSPIC	= 2460,
    XVRSPIM	= 2461,
    XVRSPIP	= 2462,
    XVRSPIZ	= 2463,
    XVRSQRTEDP	= 2464,
    XVRSQRTESP	= 2465,
    XVSQRTDP	= 2466,
    XVSQRTSP	= 2467,
    XVSUBDP	= 2468,
    XVSUBSP	= 2469,
    XVTDIVDP	= 2470,
    XVTDIVSP	= 2471,
    XVTLSBB	= 2472,
    XVTSQRTDP	= 2473,
    XVTSQRTSP	= 2474,
    XVTSTDCDP	= 2475,
    XVTSTDCSP	= 2476,
    XVXEXPDP	= 2477,
    XVXEXPSP	= 2478,
    XVXSIGDP	= 2479,
    XVXSIGSP	= 2480,
    XXBLENDVB	= 2481,
    XXBLENDVD	= 2482,
    XXBLENDVH	= 2483,
    XXBLENDVW	= 2484,
    XXBRD	= 2485,
    XXBRH	= 2486,
    XXBRQ	= 2487,
    XXBRW	= 2488,
    XXEVAL	= 2489,
    XXEXTRACTUW	= 2490,
    XXGENPCVBM	= 2491,
    XXGENPCVDM	= 2492,
    XXGENPCVHM	= 2493,
    XXGENPCVWM	= 2494,
    XXINSERTW	= 2495,
    XXLAND	= 2496,
    XXLANDC	= 2497,
    XXLEQV	= 2498,
    XXLEQVOnes	= 2499,
    XXLNAND	= 2500,
    XXLNOR	= 2501,
    XXLOR	= 2502,
    XXLORC	= 2503,
    XXLORf	= 2504,
    XXLXOR	= 2505,
    XXLXORdpz	= 2506,
    XXLXORspz	= 2507,
    XXLXORz	= 2508,
    XXMFACC	= 2509,
    XXMRGHW	= 2510,
    XXMRGLW	= 2511,
    XXMTACC	= 2512,
    XXPERM	= 2513,
    XXPERMDI	= 2514,
    XXPERMDIs	= 2515,
    XXPERMR	= 2516,
    XXPERMX	= 2517,
    XXSEL	= 2518,
    XXSETACCZ	= 2519,
    XXSLDWI	= 2520,
    XXSLDWIs	= 2521,
    XXSPLTI32DX	= 2522,
    XXSPLTIB	= 2523,
    XXSPLTIDP	= 2524,
    XXSPLTIW	= 2525,
    XXSPLTW	= 2526,
    XXSPLTWs	= 2527,
    gBC	= 2528,
    gBCA	= 2529,
    gBCAat	= 2530,
    gBCCTR	= 2531,
    gBCCTRL	= 2532,
    gBCL	= 2533,
    gBCLA	= 2534,
    gBCLAat	= 2535,
    gBCLR	= 2536,
    gBCLRL	= 2537,
    gBCLat	= 2538,
    gBCat	= 2539,
    INSTRUCTION_LIST_END = 2540
  };

} // end namespace PPC
} // end namespace llvm
#endif // GET_INSTRINFO_ENUM

#ifdef GET_INSTRINFO_SCHED_ENUM
#undef GET_INSTRINFO_SCHED_ENUM
namespace llvm {

namespace PPC {
namespace Sched {
  enum {
    NoInstrModel	= 0,
    IIC_LdStSync	= 1,
    IIC_IntSimple	= 2,
    IIC_IntGeneral	= 3,
    IIC_BrB	= 4,
    IIC_VecFP	= 5,
    IIC_IntCompare	= 6,
    IIC_SprABORT	= 7,
    IIC_LdStCOPY	= 8,
    IIC_LdStPASTE	= 9,
    IIC_BrCR	= 10,
    IIC_LdStLD	= 11,
    IIC_LdStDCBF	= 12,
    IIC_LdStLoad	= 13,
    IIC_IntDivD	= 14,
    IIC_IntDivW	= 15,
    IIC_FPDGeneral	= 16,
    IIC_FPAddSub	= 17,
    IIC_FPDivD	= 18,
    IIC_FPSGeneral	= 19,
    IIC_FPCompare	= 20,
    IIC_FPGeneral	= 21,
    IIC_VecGeneral	= 22,
    IIC_VecComplex	= 23,
    IIC_LdStStore	= 24,
    IIC_IntRotateDI	= 25,
    IIC_FPDivS	= 26,
    IIC_FPFused	= 27,
    IIC_FPSqrtD	= 28,
    IIC_FPSqrtS	= 29,
    IIC_LdStICBI	= 30,
    IIC_IntISEL	= 31,
    IIC_SprISYNC	= 32,
    IIC_LdStLWARX	= 33,
    IIC_LdStLoadUpd	= 34,
    IIC_LdStLoadUpdX	= 35,
    IIC_LdStLDARX	= 36,
    IIC_LdStLDU	= 37,
    IIC_LdStLDUX	= 38,
    IIC_LdStLFD	= 39,
    IIC_LdStLFDU	= 40,
    IIC_LdStLFDUX	= 41,
    IIC_LdStLHA	= 42,
    IIC_LdStLHAU	= 43,
    IIC_LdStLHAUX	= 44,
    IIC_LdStLMW	= 45,
    IIC_LdStLQ	= 46,
    IIC_LdStLQARX	= 47,
    IIC_LdStLWA	= 48,
    IIC_IntMulHD	= 49,
    IIC_BrMCR	= 50,
    IIC_BrMCRX	= 51,
    IIC_SprMFCR	= 52,
    IIC_SprMFSPR	= 53,
    IIC_IntMFFS	= 54,
    IIC_SprMFMSR	= 55,
    IIC_SprMFCRF	= 56,
    IIC_SprMFPMR	= 57,
    IIC_SprMFSR	= 58,
    IIC_SprMFTB	= 59,
    IIC_SprMSGSYNC	= 60,
    IIC_SprMTSPR	= 61,
    IIC_IntMTFSB0	= 62,
    IIC_SprMTMSR	= 63,
    IIC_SprMTMSRD	= 64,
    IIC_SprMTPMR	= 65,
    IIC_SprMTSR	= 66,
    IIC_IntMulHW	= 67,
    IIC_IntMulHWU	= 68,
    IIC_IntMulLI	= 69,
    IIC_SprRFI	= 70,
    IIC_IntRFID	= 71,
    IIC_IntRotateD	= 72,
    IIC_IntRotate	= 73,
    IIC_SprSLBFEE	= 74,
    IIC_SprSLBIA	= 75,
    IIC_SprSLBIE	= 76,
    IIC_SprSLBIEG	= 77,
    IIC_SprSLBMFEE	= 78,
    IIC_SprSLBMFEV	= 79,
    IIC_SprSLBMTE	= 80,
    IIC_SprSLBSYNC	= 81,
    IIC_IntShift	= 82,
    IIC_LdStSTWCX	= 83,
    IIC_LdStSTU	= 84,
    IIC_LdStSTUX	= 85,
    IIC_LdStSTD	= 86,
    IIC_LdStSTDCX	= 87,
    IIC_LdStSTFD	= 88,
    IIC_LdStSTFDU	= 89,
    IIC_SprSTOP	= 90,
    IIC_LdStSTQ	= 91,
    IIC_LdStSTQCX	= 92,
    IIC_IntTrapD	= 93,
    IIC_SprTLBIA	= 94,
    IIC_SprTLBIE	= 95,
    IIC_SprTLBIEL	= 96,
    IIC_SprTLBSYNC	= 97,
    IIC_IntTrapW	= 98,
    IIC_VecFPCompare	= 99,
    IIC_VecPerm	= 100,
    VADDUBM_VADDUDM_VADDUHM_VADDUWM_VEXTSB2D_VEXTSB2Ds_VEXTSB2W_VEXTSB2Ws_VEXTSH2D_VEXTSH2Ds_VEXTSH2W_VEXTSH2Ws_VEXTSW2D_VEXTSW2Ds_VSLD_VSRD_VSUBUBM_VSUBUDM_VSUBUHM_VSUBUWM_VPOPCNTB_VPOPCNTH_VSRAD_MTVSRDD_VEQV_VNAND_VNEGD_VNEGW_VORC_XXLAND_XXLANDC_XXLEQV_XXLEQVOnes_XXLNAND_XXLNOR_XXLOR_XXLORf_XXLORC_XXLXOR_XXLXORdpz_XXLXORspz_XXLXORz	= 101,
    VAND_VANDC_V_SET0_V_SET0B_V_SET0H_VSLB_VSLH_VSLW_VSRB_VSRH_VSRW_VRLB_VRLD_VRLH_VRLW_VSRAB_VSRAH_VSRAW_XVABSDP_XVABSSP_XVNABSDP_XVNABSSP_XVCPSGNDP_XVCPSGNSP_XVIEXPDP_XVIEXPSP_XVXEXPDP_XVXEXPSP_VRLDMI_VRLDNM_VRLWMI_VRLWNM_VMRGEW_VMRGOW_VNOR_VOR_VSEL_VXOR_XVNEGDP_XVNEGSP_XSABSQP_XSCPSGNQP_XSIEXPQP_XSNABSQP_XSNEGQP_XSXEXPQP	= 102,
    XXSEL	= 103,
    TABORTDC_TABORTDCI_TABORTWC_TABORTWCI	= 104,
    MTFSB0_MTFSB1	= 105,
    MFFSCDRN_MFFSCDRNI_MFFSCRN_MFFSCRNI	= 106,
    CMPRB_CMPRB8_CMPEQB	= 107,
    TD_TDI	= 108,
    TW_TWI	= 109,
    FCMPOD_FCMPOS_FCMPUD_FCMPUS_FTDIV_FTSQRT	= 110,
    XSTSTDCDP_XSTSTDCSP	= 111,
    XSMAXCDP_XSMAXDP_XSMAXJDP_XSMINCDP_XSMINDP_XSMINJDP_XSXSIGDP_XSCVSPDPN	= 112,
    XSCMPEQDP_XSCMPEXPDP_XSCMPGEDP_XSCMPGTDP_XSCMPODP_XSCMPUDP_XSTDIVDP_XSTSQRTDP	= 113,
    CNTLZD_CNTLZD_rec_CNTLZW_CNTLZW8_CNTLZW8_rec_CNTLZW_rec_CNTTZD_CNTTZD_rec_CNTTZW_CNTTZW8_CNTTZW8_rec_CNTTZW_rec_POPCNTD_POPCNTW_CMPB_CMPB8_SETB_SETB8_BPERMD	= 114,
    SLD_SRD_SRAD	= 115,
    SRADI_EXTSWSLI_32_64_EXTSWSLI_SRADI_32_RLDIC	= 116,
    MFVRD_MFVSRD_MTVRD_MTVSRD_MTVRWA_MTVRWZ_MTVSRWA_MTVSRWZ_MFVSRWZ_MFVRWZ	= 117,
    CMPLW_CMPLWI_CMPW_CMPWI_CMPD_CMPDI_CMPLD_CMPLDI	= 118,
    SUBFC_SUBFC8_SUBFC8O_SUBFCO_SUBFIC_SUBFIC8_ANDI8_rec_ANDIS8_rec_ANDIS_rec_ANDI_rec_ADDC_ADDC8_ADDC8O_ADDCO_ADDIC_ADDIC8_ADDIC_rec_ADDE_ADDE8_ADDE8O_ADDE8O_rec_ADDE8_rec_ADDEO_ADDEO_rec_ADDE_rec_ADDME_ADDME8_ADDME8O_ADDME8O_rec_ADDME8_rec_ADDMEO_ADDMEO_rec_ADDME_rec_ADDZE_ADDZE8_ADDZE8O_ADDZE8O_rec_ADDZE8_rec_ADDZEO_ADDZEO_rec_ADDZE_rec_SUBF_SUBF8_SUBF8O_SUBF8O_rec_SUBF8_rec_SUBFE_SUBFE8_SUBFE8O_SUBFE8O_rec_SUBFE8_rec_SUBFEO_SUBFEO_rec_SUBFE_rec_SUBFME_SUBFME8_SUBFME8O_SUBFME8O_rec_SUBFME8_rec_SUBFMEO_SUBFMEO_rec_SUBFME_rec_SUBFO_SUBFO_rec_SUBFZE_SUBFZE8_SUBFZE8O_SUBFZE8O_rec_SUBFZE8_rec_SUBFZEO_SUBFZEO_rec_SUBFZE_rec_SUBF_rec_POPCNTB_POPCNTB8_LA_LA8	= 119,
    ADD4_ADD4O_ADD4O_rec_ADD4_rec_ADD8_ADD8O_ADD8O_rec_ADD8_rec_NEG_NEG8_NEG8O_NEG8O_rec_NEG8_rec_NEGO_NEGO_rec_NEG_rec_ADDI_ADDI8_ADDIS_ADDIS8_LI_LI8_LIS_LIS8_OR_OR8_OR8_rec_ORI_ORI8_ORIS_ORIS8_OR_rec_XOR_XOR8_XOR8_rec_XORI_XORI8_XORIS_XORIS8_XOR_rec_NAND_NAND8_NAND8_rec_NAND_rec_AND_AND8_AND8_rec_ANDC_ANDC8_ANDC8_rec_ANDC_rec_AND_rec_NOR_NOR8_NOR8_rec_NOR_rec_ORC_ORC8_ORC8_rec_ORC_rec_EQV_EQV8_EQV8_rec_EQV_rec_EXTSB_EXTSB8_EXTSB8_32_64_EXTSB8_rec_EXTSB_rec_EXTSH_EXTSH8_EXTSH8_32_64_EXTSH8_rec_EXTSH_rec_EXTSW_EXTSW_32_EXTSW_32_64_EXTSW_32_64_rec_EXTSW_rec_ADD4TLS_ADD8TLS_ADD8TLS__NOP	= 120,
    ADDIStocHA_ADDIStocHA8_ADDItocL_COPY	= 121,
    MCRF	= 122,
    MCRXRX	= 123,
    XSNABSDP_XSNABSDPs_XSXEXPDP_XSABSDP_XSNEGDP_XSCPSGNDP	= 124,
    RFEBB	= 125,
    TBEGIN_TRECHKPT	= 126,
    WAIT	= 127,
    RLDCL_RLDCR	= 128,
    RLWIMI_RLWIMI8	= 129,
    RLDICL_RLDICL_32_RLDICL_32_64_RLDICR_RLDICR_32_RLDIMI	= 130,
    MFOCRF_MFOCRF8	= 131,
    MTOCRF_MTOCRF8	= 132,
    CR6SET_CR6UNSET_CRSET_CRUNSET_CRAND_CRANDC_CRNAND_CRNOR_CROR_CRORC_CREQV_CRXOR	= 133,
    SLW_SLW8_SRW_SRW8_RLWINM_RLWINM8_RLWNM_RLWNM8	= 134,
    FABSD_FABSS_FNABSD_FNABSS_FNEGD_FNEGS_FCPSGND_FCPSGNS_FMR	= 135,
    SRAW_SRAWI	= 136,
    ISEL_ISEL8	= 137,
    XSIEXPDP	= 138,
    TRECLAIM_TSR_TABORT	= 139,
    MFVSCR	= 140,
    MTVSCR	= 141,
    VCMPNEZB_VCMPNEZH_VCMPNEZW_VCMPEQUB_VCMPEQUD_VCMPEQUH_VCMPEQUW_VCMPNEB_VCMPNEH_VCMPNEW_VCMPEQFP_VCMPEQFP_rec_VCMPGEFP_VCMPGEFP_rec_VCMPGTFP_VCMPGTFP_rec_VCMPBFP_VCMPBFP_rec_VCMPGTSB_VCMPGTSB_rec_VCMPGTSD_VCMPGTSD_rec_VCMPGTSH_VCMPGTSH_rec_VCMPGTSW_VCMPGTSW_rec_VCMPGTUB_VCMPGTUB_rec_VCMPGTUD_VCMPGTUD_rec_VCMPGTUH_VCMPGTUH_rec_VCMPGTUW_VCMPGTUW_rec_VCMPNEB_rec_VCMPNEH_rec_VCMPNEW_rec_VCMPNEZB_rec_VCMPNEZH_rec_VCMPNEZW_rec_VCMPEQUB_rec_VCMPEQUD_rec_VCMPEQUH_rec_VCMPEQUW_rec_XVCMPEQDP_XVCMPEQDP_rec_XVCMPEQSP_XVCMPEQSP_rec_XVCMPGEDP_XVCMPGEDP_rec_XVCMPGESP_XVCMPGESP_rec_XVCMPGTDP_XVCMPGTDP_rec_XVCMPGTSP_XVCMPGTSP_rec	= 142,
    VABSDUB_VABSDUH_VABSDUW_VCLZB_VCLZD_VCLZH_VCLZW_VCTZB_VCTZD_VCTZH_VCTZW_VPOPCNTW_VPOPCNTD_VPRTYBD_VPRTYBW	= 143,
    VADDUBS_VADDUHS_VADDUWS_VAVGSB_VAVGSH_VAVGSW_VAVGUB_VAVGUH_VAVGUW_VADDSBS_VADDSHS_VADDSWS_VMAXFP_VMINFP_VMAXSB_VMAXSD_VMAXSH_VMAXSW_VMAXUB_VMAXUD_VMAXUH_VMAXUW_VMINSB_VMINSD_VMINSH_VMINSW_VMINUB_VMINUD_VMINUH_VMINUW_VBPERMD_VADDCUW_VSHASIGMAD_VSHASIGMAW_VSUBSBS_VSUBSHS_VSUBSWS_VSUBUBS_VSUBUHS_VSUBUWS_VSUBCUW_XVMAXDP_XVMAXSP_XVMINDP_XVMINSP_XVTSTDCDP_XVTSTDCSP_XVXSIGDP_XVXSIGSP	= 144,
    XVTDIVDP_XVTDIVSP_XVTSQRTDP_XVTSQRTSP	= 145,
    VADDFP_VCTSXS_VCTSXS_0_VCTUXS_VCTUXS_0_VEXPTEFP_VLOGEFP_VMADDFP_VMHADDSHS_VNMSUBFP_VREFP_VRFIM_VRFIN_VRFIP_VRFIZ_VRSQRTEFP_XVADDDP_XVADDSP_XVCVDPSP_XVCVDPSXDS_XVCVDPSXWS_XVCVDPUXDS_XVCVDPUXWS_XVCVHPSP_XVCVSPDP_XVCVSPHP_XVCVSPSXDS_XVCVSPSXWS_XVCVSPUXDS_XVCVSPUXWS_XVCVSXDDP_XVCVSXDSP_XVCVSXWDP_XVCVSXWSP_XVCVUXDDP_XVCVUXDSP_XVCVUXWDP_XVCVUXWSP_XVMADDADP_XVMADDASP_XVMADDMDP_XVMADDMSP_XVMSUBADP_XVMSUBASP_XVMSUBMDP_XVMSUBMSP_XVMULDP_XVMULSP_XVNMADDADP_XVNMADDASP_XVNMADDMDP_XVNMADDMSP_XVNMSUBADP_XVNMSUBASP_XVNMSUBMDP_XVNMSUBMSP_XVRDPI_XVRDPIC_XVRDPIM_XVRDPIP_XVRDPIZ_XVREDP_XVRESP_XVRSPI_XVRSPIC_XVRSPIM_XVRSPIP_XVRSPIZ_XVRSQRTEDP_XVRSQRTESP_XVSUBDP_XVSUBSP_VCFSX_VCFSX_0_VCFUX_VCFUX_0_VMHRADDSHS_VMLADDUHM_VMSUMMBM_VMSUMSHM_VMSUMSHS_VMSUMUBM_VMSUMUHM_VMSUMUDM_VMSUMUHS_VMULESB_VMULESH_VMULESW_VMULEUB_VMULEUH_VMULEUW_VMULOSB_VMULOSH_VMULOSW_VMULOUB_VMULOUH_VMULOUW_VSUM2SWS_VSUM4SBS_VSUM4SHS_VSUM4UBS_VSUMSWS	= 146,
    VSUBFP_VMULUWM	= 147,
    MADDHD_MADDHDU_MADDLD_MADDLD8_MULLD_MULLDO	= 148,
    MULHD_MULHW_MULLW_MULLWO	= 149,
    MULHDU_MULHWU	= 150,
    MULLI_MULLI8	= 151,
    FRSP_FRIMD_FRIMS_FRIND_FRINS_FRIPD_FRIPS_FRIZD_FRIZS_FRE_FRES_FADDS_FMSUBS_FMADDS_FSUBS_FCFID_FCFIDS_FCFIDU_FCFIDUS_FCTID_FCTIDU_FCTIDUZ_FCTIDZ_FCTIW_FCTIWU_FCTIWUZ_FCTIWZ_FRSQRTE_FRSQRTES_FNMADDS_FNMSUBS_FSELD_FSELS_FMULS	= 152,
    FADD_FSUB	= 153,
    FMSUB_FMADD_FNMADD_FNMSUB_FMUL	= 154,
    XSMADDADP_XSMADDASP_XSMADDMDP_XSMADDMSP_XSMSUBADP_XSMSUBASP_XSMSUBMDP_XSMSUBMSP_XSMULDP_XSMULSP_XSNMADDADP_XSNMADDASP_XSNMADDMDP_XSNMADDMSP_XSNMSUBADP_XSNMSUBASP_XSNMSUBMDP_XSNMSUBMSP	= 155,
    FSELD_rec_FSELS_rec	= 156,
    MULHDU_rec_MULHWU_rec	= 157,
    MULHD_rec_MULHW_rec_MULLWO_rec_MULLW_rec	= 158,
    MULLDO_rec_MULLD_rec	= 159,
    FRIMD_rec_FRIMS_rec_FRIND_rec_FRINS_rec_FRIPD_rec_FRIPS_rec_FRIZD_rec_FRIZS_rec_FRES_rec_FRE_rec_FADDS_rec_FSUBS_rec_FMSUBS_rec_FNMSUBS_rec_FMADDS_rec_FNMADDS_rec_FCFIDS_rec_FCFIDUS_rec_FCFIDU_rec_FCFID_rec_FCTIDUZ_rec_FCTIDU_rec_FCTIDZ_rec_FCTID_rec_FCTIWUZ_rec_FCTIWU_rec_FCTIWZ_rec_FCTIW_rec_FMULS_rec_FRSQRTES_rec_FRSQRTE_rec_FRSP_rec	= 160,
    FADD_rec_FSUB_rec	= 161,
    FMSUB_rec_FNMSUB_rec_FMADD_rec_FNMADD_rec_FMUL_rec	= 162,
    XSADDDP_XSADDSP_XSCVDPHP_XSCVDPSP_XSCVDPSXDS_XSCVDPSXDSs_XSCVDPSXWS_XSCVDPUXDS_XSCVDPUXDSs_XSCVDPUXWS_XSCVDPSXWSs_XSCVDPUXWSs_XSCVHPDP_XSCVSPDP_XSCVSXDDP_XSCVSXDSP_XSCVUXDDP_XSCVUXDSP_XSRDPI_XSRDPIC_XSRDPIM_XSRDPIP_XSRDPIZ_XSREDP_XSRESP_XSRSQRTEDP_XSRSQRTESP_XSSUBDP_XSSUBSP_XSCVDPSPN_XSRSP	= 163,
    LVSL_LVSR	= 164,
    VSPLTISB_VSPLTISH_VSPLTISW_VSPLTB_VSPLTBs_VSPLTH_VSPLTHs_VSPLTW_XXMRGHW_XXMRGLW_XXPERM_XXPERMR_XXSLDWI_XXSLDWIs_XXSPLTIB_XXSPLTW_XXSPLTWs_XXPERMDI_XXPERMDIs	= 165,
    V_SETALLONES_V_SETALLONESB_V_SETALLONESH_VBPERMQ_VGBBD_VMRGHB_VMRGHH_VMRGHW_VMRGLB_VMRGLH_VMRGLW_VPERM_VPERMR_VPERMXOR_VPKPX_VPKSDSS_VPKSDUS_VPKSHSS_VPKSHUS_VPKSWSS_VPKSWUS_VPKUDUM_VPKUDUS_VPKUHUM_VPKUHUS_VPKUWUM_VPKUWUS_VSL_VSLDOI_VSLO_VSLV_VSR_VSRO_VSRV_VUPKHPX_VUPKHSB_VUPKHSH_VUPKHSW_VUPKLPX_VUPKLSB_VUPKLSH_VUPKLSW_XXBRD_XXBRH_XXBRQ_XXBRW_XXEXTRACTUW_XXINSERTW_VADDCUQ_VADDECUQ_VADDEUQM_VMUL10CUQ_VMUL10ECUQ_VMUL10EUQ_VMUL10UQ_VSUBCUQ_VSUBECUQ_VSUBEUQM_XSTSTDCQP_XSXSIGQP_BCDCFN_rec_BCDCFZ_rec_BCDCPSGN_rec_BCDCTN_rec_BCDCTZ_rec_BCDSETSGN_rec_BCDS_rec_BCDTRUNC_rec_BCDUS_rec_BCDUTRUNC_rec_BCDADD_rec_BCDSUB_rec	= 166,
    VEXTRACTUB_VEXTRACTUH_VEXTRACTUW_VINSERTB_VINSERTD_VINSERTH_VINSERTW_MFVSRLD_MTVSRWS_VCLZLSBB_VCTZLSBB_VEXTRACTD_VEXTUBLX_VEXTUBRX_VEXTUHLX_VEXTUHRX_VEXTUWLX_VEXTUWRX_VPRTYBQ_VADDUQM_VSUBUQM	= 167,
    XSCMPEXPQP_XSCMPOQP_XSCMPUQP	= 168,
    BCDSR_rec_XSADDQP_XSADDQPO_XSCVDPQP_XSCVQPDP_XSCVQPDPO_XSCVQPSDZ_XSCVQPSWZ_XSCVQPUDZ_XSCVQPUWZ_XSCVSDQP_XSCVUDQP_XSRQPI_XSRQPIX_XSRQPXP_XSSUBQP_XSSUBQPO	= 169,
    BCDCTSQ_rec	= 170,
    XSMADDQP_XSMADDQPO_XSMSUBQP_XSMSUBQPO_XSMULQP_XSMULQPO_XSNMADDQP_XSNMADDQPO_XSNMSUBQP_XSNMSUBQPO	= 171,
    BCDCFSQ_rec	= 172,
    XSDIVQP_XSDIVQPO	= 173,
    XSSQRTQP_XSSQRTQPO	= 174,
    LXVL_LXVLL	= 175,
    LVEBX_LVEHX_LVEWX_LVX_LVXL	= 176,
    LXSIBZX_LXSIHZX_LXSDX_LXVB16X_LXVD2X_LXVWSX_LXSIWZX_LXV_LXVX_LXSD	= 177,
    DFLOADf64_XFLOADf64_LIWZX	= 178,
    DCBF_DCBFEP_DCBST_DCBSTEP_DCBT_DCBTEP_DCBZ_DCBZEP_DCBZL_DCBZLEP_DCBTST_DCBTSTEP	= 179,
    CP_COPY_CP_COPY8	= 180,
    ICBI_ICBIEP	= 181,
    ICBT_ICBTLS_LBZ_LBZ8_LBZCIX_LBZX_LBZX8_LBZXTLS_LBZXTLS__LBZXTLS_32_LDBRX_LDCIX_LHBRX_LHBRX8_LHZ_LHZ8_LHZCIX_LHZX_LHZX8_LHZXTLS_LHZXTLS__LHZXTLS_32_LWBRX_LWBRX8_LWZ_LWZ8_LWZCIX_LWZX_LWZX8_LWZXTLS_LWZXTLS__LWZXTLS_32_EnforceIEIO_LSWI	= 182,
    LBARX_LBARXL_LHARX_LHARXL_LWARX_LWARXL	= 183,
    LD_LDX_LDXTLS_LDXTLS__DARN	= 184,
    LDARX_LDARXL	= 185,
    CP_ABORT	= 186,
    ISYNC	= 187,
    MSGSYNC	= 188,
    TLBSYNC	= 189,
    SYNC	= 190,
    LMW	= 191,
    LFIWZX_LFDX_LFD	= 192,
    SLBIA	= 193,
    SLBIE	= 194,
    SLBMFEE	= 195,
    SLBMFEV	= 196,
    SLBMTE	= 197,
    TLBIEL	= 198,
    LHZU_LHZU8_LWZU_LWZU8	= 199,
    LHZUX_LHZUX8_LWZUX_LWZUX8	= 200,
    TEND	= 201,
    STBCX_STHCX_STWCX	= 202,
    STDCX	= 203,
    LHA_LHA8_LHAX_LHAX8_LWAX_LWAX_32	= 204,
    CP_PASTE8_rec_CP_PASTE_rec	= 205,
    LWA_LWA_32	= 206,
    TCHECK	= 207,
    LFIWAX	= 208,
    LXSIWAX	= 209,
    LIWAX	= 210,
    LFSX_LFS	= 211,
    LXSSP_LXSSPX	= 212,
    XFLOADf32_DFLOADf32	= 213,
    LHAU_LHAU8	= 214,
    LHAUX_LHAUX8_LWAUX	= 215,
    LXVH8X_LXVDSX_LXVW4X	= 216,
    STFD_STFDX_STFIWX_STFS_STFSX_STXSD_STXSDX_STXSIBX_STXSIBXv_STXSIHX_STXSIHXv_STXSIWX_STXSSP_STXSSPX	= 217,
    STW_STW8_STDBRX_STHBRX_STWBRX_STB_STB8_STH_STH8_STBX_STBX8_STBXTLS_STBXTLS__STBXTLS_32_STHX_STHX8_STHXTLS_STHXTLS__STHXTLS_32_STWX_STWX8_STWXTLS_STWXTLS__STWXTLS_32	= 218,
    DFSTOREf32_DFSTOREf64_XFSTOREf32_XFSTOREf64_STIWX	= 219,
    STD_STDX_STDXTLS_STDXTLS_	= 220,
    STBCIX_STDCIX_STHCIX_STWCIX_STSWI	= 221,
    SLBIEG	= 222,
    STMW	= 223,
    TLBIE	= 224,
    STVEBX_STVEHX_STVEWX_STVX_STVXL	= 225,
    STXV_STXVB16X_STXVD2X_STXVH8X_STXVW4X_STXVX	= 226,
    STXVL_STXVLL	= 227,
    MTCTR_MTCTR8_MTCTR8loop_MTCTRloop_MTLR_MTLR8	= 228,
    MFVRSAVE_MFVRSAVEv_MTVRSAVE_MTVRSAVEv	= 229,
    MFPMR	= 230,
    MTPMR	= 231,
    MFTB_MFTB8	= 232,
    MFCTR_MFCTR8_MFLR_MFLR8_MFSPR_MFSPR8_MFUDSCR	= 233,
    MFMSR	= 234,
    MTMSR	= 235,
    MTMSRD	= 236,
    MTUDSCR_MTSPR_MTSPR8	= 237,
    DIVW_DIVWO_DIVWU_DIVWUO_MODSW	= 238,
    DIVWE_DIVWEO_DIVWEU_DIVWEUO_MODSD_MODUD_MODUW	= 239,
    DIVD_DIVDO_DIVDU_DIVDUO	= 240,
    DIVDE_DIVDEO_DIVDEU_DIVDEUO	= 241,
    DIVWO_rec_DIVWUO_rec_DIVWU_rec_DIVW_rec	= 242,
    DIVD_rec_DIVDO_rec_DIVDU_rec_DIVDUO_rec	= 243,
    DIVWE_rec_DIVWEO_rec_DIVWEU_rec_DIVWEUO_rec	= 244,
    DIVDE_rec_DIVDEO_rec_DIVDEU_rec_DIVDEUO_rec	= 245,
    MTCRF_MTCRF8	= 246,
    ADDC8O_rec_ADDC8_rec_ADDCO_rec_ADDC_rec_SUBFC8O_rec_SUBFC8_rec_SUBFCO_rec_SUBFC_rec	= 247,
    FABSD_rec_FABSS_rec_FNABSD_rec_FNABSS_rec_FCPSGND_rec_FCPSGNS_rec_FNEGD_rec_FNEGS_rec_FMR_rec	= 248,
    MCRFS	= 249,
    MTFSF_MTFSF_rec_MTFSFI_MTFSFI_rec_MTFSFIb	= 250,
    MTFSFb	= 251,
    RLDCL_rec_RLDCR_rec	= 252,
    RLDICL_rec_RLDICR_rec_RLDICL_32_rec_RLDIMI_rec	= 253,
    RLWIMI8_rec_RLWIMI_rec	= 254,
    RLWINM8_rec_RLWINM_rec_RLWNM8_rec_RLWNM_rec_SLW8_rec_SLW_rec_SRW8_rec_SRW_rec	= 255,
    SRAWI_rec_SRAW_rec	= 256,
    MFFS_MFFSCE_MFFSL_MFFS_rec	= 257,
    MFCR_MFCR8	= 258,
    EXTSWSLI_32_64_rec_SRADI_rec_EXTSWSLI_rec_RLDIC_rec	= 259,
    SRAD_rec_SLD_rec_SRD_rec	= 260,
    FDIV	= 261,
    FDIV_rec	= 262,
    XSSQRTDP	= 263,
    FSQRT	= 264,
    XVSQRTDP	= 265,
    XVSQRTSP	= 266,
    FSQRT_rec	= 267,
    XSSQRTSP	= 268,
    FSQRTS	= 269,
    FSQRTS_rec	= 270,
    XSDIVDP	= 271,
    FDIVS	= 272,
    FDIVS_rec	= 273,
    XSDIVSP	= 274,
    XVDIVSP	= 275,
    XVDIVDP	= 276,
    LFSU	= 277,
    LFSUX	= 278,
    STFDU_STFDUX_STFSU_STFSUX	= 279,
    STBU_STBU8_STDU_STHU_STHU8_STWU_STWU8	= 280,
    STBUX_STBUX8_STDUX_STHUX_STHUX8_STWUX_STWUX8	= 281,
    LBZU_LBZU8	= 282,
    LBZUX_LBZUX8	= 283,
    LDU	= 284,
    LDUX	= 285,
    LFDU	= 286,
    LFDUX	= 287,
    VPMSUMB_VPMSUMD_VPMSUMH_VPMSUMW_VCIPHER_VCIPHERLAST_VNCIPHER_VNCIPHERLAST_VSBOX	= 288,
    BCCCTR_BCCCTR8_BCCCTRL_BCCCTRL8_BCCL_BCCLA_BCCLR_BCCLRL_BCCTR_BCCTR8_BCCTR8n_BCCTRL_BCCTRL8_BCCTRL8n_BCCTRLn_BCCTRn_BDNZ_BDNZ8_BDNZA_BDNZAm_BDNZAp_BDNZm_BDNZp_BDZ_BDZ8_BDZA_BDZAm_BDZAp_BDZm_BDZp_BDNZL_BDNZLA_BDNZLAm_BDNZLAp_BDNZLR_BDNZLR8_BDNZLRL_BDNZLRLm_BDNZLRLp_BDNZLRm_BDNZLRp_BDNZLm_BDNZLp_BDZL_BDZLA_BDZLAm_BDZLAp_BDZLR_BDZLR8_BDZLRL_BDZLRLm_BDZLRLp_BDZLRm_BDZLRp_BDZLm_BDZLp_BL_BL_NOP_BL_NOP_RM_BL_RM_BL_TLS_BL8_BL8_NOP_BL8_NOP_RM_BL8_NOP_TLS_BL8_RM_BL8_TLS_BL8_TLS__BLA_BLA8_BLA8_NOP_BLA8_NOP_RM_BLA8_RM_BLA_RM_BLR_BLR8_BLRL_TAILB_TAILB8_TAILBA_TAILBA8_TAILBCTR_TAILBCTR8_gBC_gBCA_gBCAat_gBCCTR_gBCCTRL_gBCL_gBCLA_gBCLAat_gBCLR_gBCLRL_gBCLat_gBCat_BCLR_BCLRL_BCLRLn_BCLRn_BCTR_BCTR8_BCTRL_BCTRL8_BCTRL8_RM_BCTRL_RM_B_BA_BC_BCC_BCCA_BCL_BCLalways_BCLn_BCTRL8_LDinto_toc_BCTRL_LWZinto_toc_BCTRL8_LDinto_toc_RM_BCTRL_LWZinto_toc_RM_BCn_CTRL_DEP	= 289,
    ADDPCIS	= 290,
    LDAT_LWAT	= 291,
    STDAT_STWAT	= 292,
    BRINC	= 293,
    EVABS_EVEQV_EVNAND_EVNEG_EVADDIW_EVADDW_EVAND_EVANDC_EVCMPEQ_EVCMPGTS_EVCMPGTU_EVCMPLTS_EVCMPLTU_EVCNTLSW_EVCNTLZW_EVEXTSB_EVEXTSH_EVMERGEHI_EVMERGEHILO_EVMERGELO_EVMERGELOHI_EVNOR_EVOR_EVORC_EVXOR_EVRLW_EVRLWI_EVRNDW_EVSLW_EVSLWI_EVSPLATFI_EVSPLATI_EVSRWIS_EVSRWIU_EVSRWS_EVSRWU_EVSUBFW_EVSUBIFW	= 294,
    EVMRA_EVADDSMIAAW_EVADDSSIAAW_EVADDUMIAAW_EVADDUSIAAW_EVDIVWS_EVDIVWU_EVMHEGSMFAA_EVMHEGSMFAN_EVMHEGSMIAA_EVMHEGSMIAN_EVMHEGUMIAA_EVMHEGUMIAN_EVMHESMF_EVMHESMFA_EVMHESMFAAW_EVMHESMFANW_EVMHESMI_EVMHESMIA_EVMHESMIAAW_EVMHESMIANW_EVMHESSF_EVMHESSFA_EVMHESSFAAW_EVMHESSFANW_EVMHESSIAAW_EVMHESSIANW_EVMHEUMI_EVMHEUMIA_EVMHEUMIAAW_EVMHEUMIANW_EVMHEUSIAAW_EVMHEUSIANW_EVMHOGSMFAA_EVMHOGSMFAN_EVMHOGSMIAA_EVMHOGSMIAN_EVMHOGUMIAA_EVMHOGUMIAN_EVMHOSMF_EVMHOSMFA_EVMHOSMFAAW_EVMHOSMFANW_EVMHOSMI_EVMHOSMIA_EVMHOSMIAAW_EVMHOSMIANW_EVMHOSSF_EVMHOSSFA_EVMHOSSFAAW_EVMHOSSFANW_EVMHOSSIAAW_EVMHOSSIANW_EVMHOUMI_EVMHOUMIA_EVMHOUMIAAW_EVMHOUMIANW_EVMHOUSIAAW_EVMHOUSIANW_EVMWHSMF_EVMWHSMFA_EVMWHSMI_EVMWHSMIA_EVMWHSSF_EVMWHSSFA_EVMWHUMI_EVMWHUMIA_EVMWLSMIAAW_EVMWLSMIANW_EVMWLSSIAAW_EVMWLSSIANW_EVMWLUMI_EVMWLUMIA_EVMWLUMIAAW_EVMWLUMIANW_EVMWLUSIAAW_EVMWLUSIANW_EVMWSMF_EVMWSMFA_EVMWSMFAA_EVMWSMFAN_EVMWSMI_EVMWSMIA_EVMWSMIAA_EVMWSMIAN_EVMWSSF_EVMWSSFA_EVMWSSFAA_EVMWSSFAN_EVMWUMI_EVMWUMIA_EVMWUMIAA_EVMWUMIAN_EVSUBFSMIAAW_EVSUBFSSIAAW_EVSUBFUMIAAW_EVSUBFUSIAAW	= 295,
    EVLDD_EVLDDX_EVLDH_EVLDHX_EVLDW_EVLDWX_EVLHHESPLAT_EVLHHESPLATX_EVLHHOSSPLAT_EVLHHOSSPLATX_EVLHHOUSPLAT_EVLHHOUSPLATX_EVLWHE_EVLWHEX_EVLWHOS_EVLWHOSX_EVLWHOU_EVLWHOUX_EVLWHSPLAT_EVLWHSPLATX_EVLWWSPLAT_EVLWWSPLATX	= 296,
    EVSTDD_EVSTDDX_EVSTDH_EVSTDHX_EVSTDW_EVSTDWX_EVSTWHE_EVSTWHEX_EVSTWHO_EVSTWHOX_EVSTWWE_EVSTWWEX_EVSTWWO_EVSTWWOX	= 297,
    HRFID_ATTN_CLRBHRB_MFBHRBE_NAP_RFCI_RFDI_RFMCI_SC	= 298,
    RFI	= 299,
    RFID	= 300,
    DSS_DSSALL_DST_DST64_DSTST_DSTST64_DSTSTT_DSTSTT64_DSTT_DSTT64_ICBLQ_LBEPX_LHEPX_LWEPX_TLBIVAX_TLBLD_TLBLI_TLBRE_TLBRE2_TLBSX_TLBSX2_TLBSX2D_TLBWE_TLBWE2_MBAR_TRAP_DCCCI_ICCCI	= 301,
    ICBLC_STBEPX_STHEPX_STWEPX	= 302,
    LFDEPX	= 303,
    STFDEPX	= 304,
    MFSR_MFSRIN	= 305,
    MTSR_MTSRIN	= 306,
    MFDCR	= 307,
    MTDCR	= 308,
    NOP_GT_PWR6_NOP_GT_PWR7	= 309,
    TLBIA	= 310,
    WRTEE_WRTEEI	= 311,
    HASHCHK_HASHCHK8_HASHCHKP_HASHCHKP8_HASHST_HASHST8_HASHSTP_HASHSTP8_ADDEX_ADDEX8	= 312,
    MSYNC	= 313,
    SLBSYNC	= 314,
    SLBFEE_rec	= 315,
    STOP	= 316,
    DCBA_DCBI	= 317,
    FCFID_FCFIDS_FCFIDU_FCFIDUS_FCTID_FCTIDU_FCTIDUZ_FCTIDZ_FCTIW_FCTIWU_FCTIWUZ_FCTIWZ_FRE_FRES_FRIMD_FRIMS_FRIND_FRINS_FRIPD_FRIPS_FRIZD_FRIZS_FRSP_FRSQRTE_FRSQRTES	= 318,
    VCFSX_VCFSX_0_VCFUX_VCFUX_0_VCTSXS_VCTSXS_0_VCTUXS_VCTUXS_0_VLOGEFP_VREFP_VRFIM_VRFIN_VRFIP_VRFIZ_VRSQRTEFP_XVCVDPSP_XVCVDPSXDS_XVCVDPSXWS_XVCVDPUXDS_XVCVDPUXWS_XVCVSPDP_XVCVSPHP_XVCVSPSXDS_XVCVSPSXWS_XVCVSPUXDS_XVCVSPUXWS_XVCVSXDDP_XVCVSXDSP_XVCVSXWDP_XVCVSXWSP_XVCVUXDDP_XVCVUXDSP_XVCVUXWDP_XVCVUXWSP_XVRDPI_XVRDPIC_XVRDPIM_XVRDPIP_XVRDPIZ_XVREDP_XVRESP_XVRSPI_XVRSPIC_XVRSPIM_XVRSPIP_XVRSPIZ_XVRSQRTEDP_XVRSQRTESP	= 319,
    XSCVDPHP_XSCVDPSP_XSCVDPSPN_XSCVDPSXDS_XSCVDPSXDSs_XSCVDPSXWS_XSCVDPSXWSs_XSCVDPUXDS_XSCVDPUXDSs_XSCVDPUXWS_XSCVDPUXWSs_XSCVSPDP_XSCVSXDDP_XSCVSXDSP_XSCVUXDDP_XSCVUXDSP_XSRDPI_XSRDPIC_XSRDPIM_XSRDPIP_XSRDPIZ_XSREDP_XSRESP_XSRSP_XSRSQRTEDP_XSRSQRTESP	= 320,
    XVCVSPBF16	= 321,
    FADDS_FMULS_FSUBS	= 322,
    FMUL	= 323,
    VADDFP_XVADDDP_XVADDSP_XVMULDP_XVMULSP_XVSUBDP_XVSUBSP	= 324,
    VSUBFP	= 325,
    XSADDDP_XSADDSP_XSSUBDP_XSSUBSP	= 326,
    XSMULDP_XSMULSP	= 327,
    VMADDFP_VNMSUBFP_XVMADDADP_XVMADDASP_XVMADDMDP_XVMADDMSP_XVMSUBADP_XVMSUBASP_XVMSUBMDP_XVMSUBMSP_XVNMADDADP_XVNMADDASP_XVNMADDMDP_XVNMADDMSP_XVNMSUBADP_XVNMSUBASP_XVNMSUBMDP_XVNMSUBMSP	= 328,
    VEXPTEFP	= 329,
    FADDS_rec_FMULS_rec_FSUBS_rec	= 330,
    FMUL_rec	= 331,
    FCFID_rec_FCFIDS_rec_FCFIDU_rec_FCFIDUS_rec_FCTID_rec_FCTIDU_rec_FCTIDUZ_rec_FCTIDZ_rec_FCTIW_rec_FCTIWU_rec_FCTIWUZ_rec_FCTIWZ_rec_FRE_rec_FRES_rec_FRIMD_rec_FRIMS_rec_FRIND_rec_FRINS_rec_FRIPD_rec_FRIPS_rec_FRIZD_rec_FRIZS_rec_FRSP_rec_FRSQRTE_rec_FRSQRTES_rec	= 332,
    BCLR_BCLRn_BDNZLR_BDNZLR8_BDNZLRm_BDNZLRp_BDZLR_BDZLR8_BDZLRm_BDZLRp_gBCLR_BCLRL_BCLRLn_BDNZLRL_BDNZLRLm_BDNZLRLp_BDZLRL_BDZLRLm_BDZLRLp_gBCLRL_BL_BL8_BL8_NOP_BL8_NOP_RM_BL8_NOP_TLS_BL8_RM_BL8_TLS_BL8_TLS__BLR_BLR8_BLRL_BL_NOP_BL_NOP_RM_BL_RM_BL_TLS	= 333,
    BL8_NOTOC_BL8_NOTOC_RM_BL8_NOTOC_TLS	= 334,
    B_BCC_BCCA_BCCCTR_BCCCTR8_BCCCTRL_BCCCTRL8_BCCL_BCCLA_BCCLR_BCCLRL_CTRL_DEP_TAILB_TAILB8_BA_TAILBA_TAILBA8_BC_BCTR_BCTR8_BCTRL_BCTRL8_BCTRL8_LDinto_toc_BCTRL8_LDinto_toc_RM_BCTRL8_RM_BCTRL_LWZinto_toc_BCTRL_LWZinto_toc_RM_BCTRL_RM_BCn_BDNZ_BDNZ8_BDNZm_BDNZp_BDZ_BDZ8_BDZm_BDZp_TAILBCTR_TAILBCTR8_gBC_gBCat_BCL_BCLalways_BCLn_BDNZL_BDNZLm_BDNZLp_BDZL_BDZLm_BDZLp_gBCL_gBCLat_BLA_BLA8_BLA8_NOP_BLA8_NOP_RM_BLA8_RM_BLA_RM	= 335,
    BCCTR_BCCTR8_BCCTR8n_BCCTRn_gBCCTR_BCCTRL_BCCTRL8_BCCTRL8n_BCCTRLn_gBCCTRL	= 336,
    VSBOX	= 337,
    CFUGED_CNTLZDM_CNTTZDM_PDEPD_PEXTD	= 338,
    VCFUGED_VCLZDM_VCTZDM_VGNB_VPDEPD_VPEXTD	= 339,
    XSCVDPQP_XSCVQPDP_XSCVQPDPO_XSCVQPSDZ_XSCVQPSWZ_XSCVQPUDZ_XSCVQPUWZ_XSCVSDQP_XSCVUDQP	= 340,
    XSCVQPSQZ_XSCVQPUQZ_XSCVSQQP_XSCVUQQP	= 341,
    XSADDQP_XSADDQPO_XSSUBQP_XSSUBQPO	= 342,
    HASHST_HASHST8_HASHSTP_HASHSTP8	= 343,
    XSMULQP_XSMULQPO	= 344,
    VDIVESQ_VDIVEUQ_VDIVSQ_VDIVUQ	= 345,
    VMODSQ_VMODUQ	= 346,
    DIVWE_DIVWEO_DIVWEU_DIVWEUO	= 347,
    VDIVSD_VDIVUD	= 348,
    VMODSD_VMODUD	= 349,
    VDIVSW_VDIVUW	= 350,
    VMODSW_VMODUW	= 351,
    VDIVESD_VDIVEUD	= 352,
    VDIVESW_VDIVEUW	= 353,
    BCDCTN_rec_VMUL10CUQ_VMUL10UQ_XSXSIGQP	= 354,
    BCDCFN_rec_BCDCFZ_rec_BCDCPSGN_rec_BCDCTZ_rec_BCDSETSGN_rec_BCDUS_rec_BCDUTRUNC_rec_VADDCUQ_VMUL10ECUQ_VMUL10EUQ_VSUBCUQ_XSTSTDCQP	= 355,
    VADDUQM_VSUBUQM	= 356,
    XSMAXCQP_XSMINCQP	= 357,
    XXGENPCVBM	= 358,
    BCDADD_rec_BCDS_rec_BCDSUB_rec_BCDTRUNC_rec_VADDECUQ_VADDEUQM_VSUBECUQ_VSUBEUQM	= 359,
    TRAP	= 360,
    TW	= 361,
    CNTLZD_CNTLZD_rec_CNTLZW_CNTLZW8_CNTLZW8_rec_CNTLZW_rec_CNTTZD_CNTTZD_rec_CNTTZW_CNTTZW8_CNTTZW8_rec_CNTTZW_rec_POPCNTD_POPCNTW	= 362,
    FTSQRT	= 363,
    MTVSRBM_MTVSRBMI_MTVSRDM_MTVSRHM_MTVSRQM_MTVSRWM_VEXPANDBM_VEXPANDDM_VEXPANDHM_VEXPANDQM_VEXPANDWM_VEXTRACTBM_VEXTRACTDM_VEXTRACTHM_VEXTRACTQM_VEXTRACTWM_XVTLSBB	= 364,
    POPCNTB_POPCNTB8	= 365,
    VCLZB_VCLZD_VCLZH_VCLZW_VCTZB_VCTZD_VCTZH_VCTZW_VPOPCNTD_VPOPCNTW_VPRTYBD_VPRTYBW	= 366,
    VPOPCNTB_VPOPCNTH	= 367,
    XSCVSPDPN	= 368,
    XSTSQRTDP	= 369,
    XVCVHPSP	= 370,
    XVTSQRTDP_XVTSQRTSP	= 371,
    CMPEQB	= 372,
    EXTSWSLI_32_64_rec_EXTSWSLI_rec	= 373,
    SLD_rec_SRD_rec	= 374,
    SLW8_rec_SLW_rec_SRW8_rec_SRW_rec	= 375,
    VADDCUW_VADDSBS_VADDSHS_VADDSWS_VADDUBS_VADDUHS_VADDUWS_VAVGSB_VAVGSH_VAVGSW_VAVGUB_VAVGUH_VAVGUW_VMAXFP_VMINFP_VSUBCUW_VSUBSBS_VSUBSHS_VSUBSWS_VSUBUBS_VSUBUHS_VSUBUWS_XVMAXDP_XVMAXSP_XVMINDP_XVMINSP_XVTSTDCDP_XVTSTDCSP	= 376,
    VCMPBFP_VCMPBFP_rec_VCMPEQFP_VCMPEQFP_rec_VCMPEQUB_rec_VCMPEQUD_rec_VCMPEQUH_rec_VCMPEQUW_rec_VCMPGEFP_VCMPGEFP_rec_VCMPGTFP_VCMPGTFP_rec_VCMPGTSB_rec_VCMPGTSD_rec_VCMPGTSH_rec_VCMPGTSW_rec_VCMPGTUB_rec_VCMPGTUD_rec_VCMPGTUH_rec_VCMPGTUW_rec_VCMPNEB_rec_VCMPNEH_rec_VCMPNEW_rec_VCMPNEZB_rec_VCMPNEZH_rec_VCMPNEZW_rec_XVCMPEQDP_XVCMPEQDP_rec_XVCMPEQSP_XVCMPEQSP_rec_XVCMPGEDP_XVCMPGEDP_rec_XVCMPGESP_XVCMPGESP_rec_XVCMPGTDP_XVCMPGTDP_rec_XVCMPGTSP_XVCMPGTSP_rec	= 377,
    VCMPEQUQ_VCMPEQUQ_rec_VCMPGTSQ_VCMPGTSQ_rec_VCMPGTUQ_VCMPGTUQ_rec	= 378,
    VCMPSQ_VCMPUQ_VCNTMBB_VCNTMBD_VCNTMBH_VCNTMBW	= 379,
    XSMAXCDP_XSMAXDP_XSMAXJDP_XSMINCDP_XSMINDP_XSMINJDP	= 380,
    RLDIC_rec	= 381,
    RLDICL_32_rec_RLDICL_rec_RLDICR_rec	= 382,
    VSHASIGMAD_VSHASIGMAW	= 383,
    VRLQ_VRLQNM_VSLQ_VSRAQ_VSRQ	= 384,
    VRLQMI	= 385,
    CR6SET_CREQV_CRSET	= 386,
    DSS_DSSALL	= 387,
    MFCTR_MFCTR8_MFLR_MFLR8	= 388,
    NOP_ORI_ORI8	= 389,
    VXOR_V_SET0_V_SET0B_V_SET0H	= 390,
    XXLEQV_XXLEQVOnes_XXLXOR_XXLXORdpz_XXLXORspz_XXLXORz	= 391,
    ADDI_ADDI8_LI_LI8_ADDIS_ADDIS8_LIS_LIS8_EXTSB_EXTSB8_EXTSB8_32_64_EXTSB8_rec_EXTSB_rec_EXTSH_EXTSH8_EXTSH8_32_64_EXTSH8_rec_EXTSH_rec_EXTSW_EXTSW_32_EXTSW_32_64_EXTSW_32_64_rec_EXTSW_rec_NEG_NEG8_NEG8_rec_NEG_rec_NEG8O_NEGO	= 392,
    ADDIdtprelL32_ADDItlsldLADDR32_ADDISdtprelHA32	= 393,
    ADDItocL_ADDIStocHA_ADDIStocHA8	= 394,
    ADDME_ADDME8_ADDME8O_ADDMEO_ADDZE_ADDZE8_ADDZE8O_ADDZEO_SUBFME_SUBFME8_SUBFME8O_SUBFMEO_SUBFZE_SUBFZE8_SUBFZE8O_SUBFZEO	= 395,
    FABSD_FABSS_FMR_FNABSD_FNABSS_FNEGD_FNEGS	= 396,
    SETB_SETB8	= 397,
    SETBC_SETBC8_SETBCR_SETBCR8_SETNBC_SETNBC8_SETNBCR_SETNBCR8	= 398,
    VEXTSB2D_VEXTSB2Ds_VEXTSB2W_VEXTSB2Ws_VEXTSH2D_VEXTSH2Ds_VEXTSH2W_VEXTSH2Ws_VEXTSW2D_VEXTSW2Ds_VNEGD_VNEGW	= 399,
    VEXTSD2Q	= 400,
    XSABSDP_XSNABSDP_XSNABSDPs_XSNEGDP_XSXEXPDP	= 401,
    XSABSQP_XSNABSQP_XSNEGQP_XSXEXPQP_XVABSDP_XVABSSP_XVNABSDP_XVNABSSP_XVNEGDP_XVNEGSP_XVXEXPDP_XVXEXPSP	= 402,
    XVXSIGDP_XVXSIGSP	= 403,
    ADD4_ADD4TLS_ADD8_ADD8TLS_ADD8TLS__ADD4_rec_ADD8_rec_ADD4O_ADD8O_AND_AND8_AND8_rec_AND_rec_ANDC_ANDC8_ANDC8_rec_ANDC_rec_EQV_EQV8_EQV8_rec_EQV_rec_NAND_NAND8_NAND8_rec_NAND_rec_NOR_NOR8_NOR8_rec_NOR_rec_OR_OR8_OR8_rec_OR_rec_ORC_ORC8_ORC8_rec_ORC_rec_ORIS_ORIS8_XOR_XOR8_XOR8_rec_XOR_rec_XORI_XORI8_XORIS_XORIS8	= 404,
    ADDE_ADDE8_ADDE8O_ADDEO_ADDIC_ADDIC8_ANDI8_rec_ANDI_rec_ANDIS8_rec_ANDIS_rec_SUBF_SUBF8_SUBF8_rec_SUBF_rec_SUBFE_SUBFE8_SUBFE8O_SUBFEO_SUBFIC_SUBFIC8_SUBF8O_SUBFO	= 405,
    CMPB_CMPB8	= 406,
    EXTSWSLI_EXTSWSLI_32_64_SRADI_SRADI_32	= 407,
    SLW_SLW8_SRW_SRW8	= 408,
    VADDUBM_VADDUDM_VADDUHM_VADDUWM_VEQV_VNAND_VORC_VSLD_VSRAD_VSRD_VSUBUBM_VSUBUDM_VSUBUHM_VSUBUWM_XXLAND_XXLANDC_XXLNAND_XXLNOR_XXLOR_XXLORf_XXLORC	= 409,
    VAND_VANDC_VMRGEW_VMRGOW_VNOR_VOR_VRLB_VRLD_VRLDNM_VRLH_VRLW_VRLWNM_VSLB_VSLH_VSLW_VSRAB_VSRAH_VSRAW_VSRB_VSRH_VSRW_XSCPSGNQP_XSIEXPQP_XVCPSGNDP_XVCPSGNSP_XVIEXPDP_XVIEXPSP	= 410,
    VMAXSB_VMAXSD_VMAXSH_VMAXSW_VMAXUB_VMAXUD_VMAXUH_VMAXUW_VMINSB_VMINSD_VMINSH_VMINSW_VMINUB_VMINUD_VMINUH_VMINUW	= 411,
    ADDEX_ADDEX8	= 412,
    DST_DST64_DSTT_DSTT64_DSTST_DSTST64_DSTSTT_DSTSTT64	= 413,
    RLDICL_RLDICL_32_RLDICL_32_64_RLDICR_RLDICR_32	= 414,
    MFFS_MFFS_rec_MFFSL	= 415,
    TRECHKPT	= 416,
    ADDME8_rec_ADDME_rec_ADDME8O_rec_ADDMEO_rec_ADDZE8_rec_ADDZE_rec_ADDZE8O_rec_ADDZEO_rec_SUBFME8_rec_SUBFME_rec_SUBFME8O_rec_SUBFMEO_rec_SUBFZE8_rec_SUBFZE_rec_SUBFZE8O_rec_SUBFZEO_rec	= 417,
    MTFSB0	= 418,
    NEG8O_rec_NEGO_rec	= 419,
    ADDE8_rec_ADDE_rec_ADDE8O_rec_ADDEO_rec_ADDIC_rec_SUBFE8_rec_SUBFE_rec_SUBFE8O_rec_SUBFEO_rec_SUBF8O_rec_SUBFO_rec	= 420,
    HRFID	= 421,
    FABSD_rec_FABSS_rec_FMR_rec_FNABSD_rec_FNABSS_rec_FNEGD_rec_FNEGS_rec	= 422,
    SC	= 423,
    ADDC_ADDC8_ADDC8O_ADDCO_SUBFC_SUBFC8_SUBFC8O_SUBFCO	= 424,
    ADDC8_rec_ADDC_rec_SUBFC8_rec_SUBFC_rec	= 425,
    MTFSF_MTFSFI_MTFSFIb	= 426,
    MTFSFI_rec	= 427,
    VSTRIBL_rec_VSTRIBR_rec_VSTRIHL_rec_VSTRIHR_rec	= 428,
    LBZ_LBZ8_LDBRX_LHBRX_LHBRX8_LHZ_LHZ8_LWBRX_LWBRX8_LWZ_LWZ8	= 429,
    LD	= 430,
    LDtoc_LDtocBA_LDtocCPT_LDtocJTI_LDtocL_SPILLTOVSR_LD_LWZtoc_LWZtocL	= 431,
    LXVRBX_LXVRDX_LXVRHX_LXVRWX	= 432,
    DCBT_DCBTST	= 433,
    ICBT_LBZX_LBZX8_LBZXTLS_LBZXTLS__LBZXTLS_32_LHZX_LHZX8_LHZXTLS_LHZXTLS__LHZXTLS_32_LWZX_LWZX8_LWZXTLS_LWZXTLS__LWZXTLS_32	= 434,
    LDX_LDXTLS_LDXTLS_	= 435,
    SPILLTOVSR_LDX	= 436,
    LBZCIX_LDCIX_LHZCIX_LWZCIX	= 437,
    MTSR	= 438,
    MTVRSAVE_MTVRSAVEv	= 439,
    LSWI	= 440,
    PLBZ_PLBZ8_PLBZ8pc_PLBZpc_PLD_PLDpc_PLFD_PLFDpc_PLFS_PLFSpc_PLHA_PLHA8_PLHA8pc_PLHApc_PLHZ_PLHZ8_PLHZ8pc_PLHZpc_PLWA_PLWA8_PLWA8pc_PLWApc_PLWZ_PLWZ8_PLWZ8pc_PLWZpc_PLXSD_PLXSDpc_PLXSSP_PLXSSPpc_PLXV_PLXVpc_PLXVP_PLXVPpc	= 441,
    LXVP_LXVPX	= 442,
    MFSR	= 443,
    MFTB8	= 444,
    XXSETACCZ	= 445,
    XVBF16GER2_XVF16GER2_XVF32GER_XVF64GER_XVI16GER2_XVI16GER2S_XVI4GER8_XVI8GER4	= 446,
    XVBF16GER2NN_XVBF16GER2NP_XVBF16GER2PN_XVBF16GER2PP_XVF16GER2NN_XVF16GER2NP_XVF16GER2PN_XVF16GER2PP_XVF32GERNN_XVF32GERNP_XVF32GERPN_XVF32GERPP_XVF64GERNN_XVF64GERNP_XVF64GERPN_XVF64GERPP_XVI16GER2PP_XVI16GER2SPP_XVI4GER8PP_XVI8GER4PP	= 447,
    XVI8GER4SPP	= 448,
    PMXVF32GER_PMXVF64GER	= 449,
    PMXVBF16GER2_PMXVF16GER2_PMXVF32GERNN_PMXVF32GERNP_PMXVF32GERPN_PMXVF32GERPP_PMXVF64GERNN_PMXVF64GERNP_PMXVF64GERPN_PMXVF64GERPP_PMXVI16GER2_PMXVI16GER2S_PMXVI4GER8_PMXVI8GER4	= 450,
    PMXVBF16GER2NN_PMXVBF16GER2NP_PMXVBF16GER2PN_PMXVBF16GER2PP_PMXVF16GER2NN_PMXVF16GER2NP_PMXVF16GER2PN_PMXVF16GER2PP_PMXVI16GER2PP_PMXVI16GER2SPP_PMXVI4GER8PP_PMXVI8GER4PP	= 451,
    PMXVI8GER4SPP	= 452,
    XXMTACC	= 453,
    XXMFACC	= 454,
    MULLD_MULLDO	= 455,
    VMULHSD_VMULHUD_VMULLD	= 456,
    VSPLTISW	= 457,
    V_SETALLONES_V_SETALLONESB_V_SETALLONESH	= 458,
    LXVKQ_VSTRIBL_VSTRIBR_VSTRIHL_VSTRIHR	= 459,
    MFVSRLD_MTVSRWS_VCLZLSBB_VCTZLSBB_VPRTYBQ	= 460,
    VGBBD_VUPKHPX_VUPKHSB_VUPKHSH_VUPKHSW_VUPKLPX_VUPKLSB_VUPKLSH_VUPKLSW_XXBRD_XXBRH_XXBRQ_XXBRW	= 461,
    VSPLTISB_VSPLTISH_XXSPLTIB	= 462,
    XVCVBF16SPN	= 463,
    VBPERMQ_VMRGHB_VMRGHH_VMRGHW_VMRGLB_VMRGLH_VMRGLW_VPKPX_VPKSDSS_VPKSDUS_VPKSHSS_VPKSHUS_VPKSWSS_VPKSWUS_VPKUDUM_VPKUDUS_VPKUHUM_VPKUHUS_VPKUWUM_VPKUWUS_VSL_VSLO_VSLV_VSR_VSRO_VSRV_XXEXTRACTUW	= 464,
    VCLRLB_VCLRRB_XXGENPCVDM_XXGENPCVHM_XXGENPCVWM	= 465,
    VEXTRACTD_VEXTRACTUB_VEXTRACTUH_VEXTRACTUW_VEXTUBLX_VEXTUBRX_VEXTUHLX_VEXTUHRX_VEXTUWLX_VEXTUWRX_VINSERTD_VINSERTW	= 466,
    VEXTDDVLX_VEXTDDVRX_VEXTDUBVLX_VEXTDUBVRX_VEXTDUHVLX_VEXTDUHVRX_VEXTDUWVLX_VEXTDUWVRX_VINSBLX_VINSBRX_VINSBVLX_VINSBVRX_VINSD_VINSDLX_VINSDRX_VINSHLX_VINSHRX_VINSHVLX_VINSHVRX_VINSW_VINSWLX_VINSWRX_VINSWVLX_VINSWVRX_VSLDBI_VSRDBI	= 467,
    VSUMSWS	= 468,
    XXSPLTIDP_XXSPLTIW	= 469,
    XXBLENDVB_XXBLENDVD_XXBLENDVH_XXBLENDVW_XXSPLTI32DX	= 470,
    XXEVAL	= 471,
    XXPERMX	= 472,
    DCBST_DCBZ	= 473,
    ICBI	= 474,
    DCBF	= 475,
    PSTXVP_PSTXVPpc	= 476,
    STB_STB8_STDBRX_STH_STH8_STHBRX_STW_STW8_STWBRX	= 477,
    SPILLTOVSR_ST	= 478,
    STD	= 479,
    DFSTOREf32_DFSTOREf64_STIWX	= 480,
    STXVRBX_STXVRDX_STXVRHX_STXVRWX	= 481,
    SPILLTOVSR_STX	= 482,
    EnforceIEIO	= 483,
    STBCIX_STDCIX_STHCIX_STWCIX	= 484,
    PSTB_PSTB8_PSTB8pc_PSTBpc_PSTD_PSTDpc_PSTFD_PSTFDpc_PSTFS_PSTFSpc_PSTH_PSTH8_PSTH8pc_PSTHpc_PSTW_PSTW8_PSTW8pc_PSTWpc_PSTXSD_PSTXSDpc_PSTXSSP_PSTXSSPpc_PSTXV_PSTXVpc	= 485,
    STXVP_STXVPX	= 486,
    ATTN_NAP	= 487,
    DCBZL	= 488,
    DCCCI_ICBLQ_ICCCI_TLBLD_TLBLI_TLBRE2_TLBSX2_TLBSX2D_TLBWE2	= 489,
    ICBLC	= 490,
    CLRBHRB	= 491,
    MFBHRBE	= 492,
    PADDI_PADDI8_PADDI8pc_PADDIpc	= 493,
    PLI_PLI8	= 494,
    VMULESB_VMULESH_VMULESW_VMULEUB_VMULEUH_VMULEUW_VMULOSB_VMULOSH_VMULOSW_VMULOUB_VMULOUH_VMULOUW_VSUM2SWS_VSUM4SBS_VSUM4SHS_VSUM4UBS	= 495,
    VMULESD_VMULEUD_VMULHSW_VMULHUW_VMULOSD_VMULOUD	= 496,
    VMSUMCUD	= 497,
    SCHED_LIST_END = 498
  };
} // end namespace Sched
} // end namespace PPC
} // end namespace llvm
#endif // GET_INSTRINFO_SCHED_ENUM

#ifdef GET_INSTRINFO_MC_DESC
#undef GET_INSTRINFO_MC_DESC
namespace llvm {

static const MCPhysReg ImplicitList1[] = { PPC::CR0, 0 };
static const MCPhysReg ImplicitList2[] = { PPC::CR7, 0 };
static const MCPhysReg ImplicitList3[] = { PPC::XER, 0 };
static const MCPhysReg ImplicitList4[] = { PPC::XER, PPC::CR0, 0 };
static const MCPhysReg ImplicitList5[] = { PPC::CARRY, 0 };
static const MCPhysReg ImplicitList6[] = { PPC::CARRY, PPC::XER, 0 };
static const MCPhysReg ImplicitList7[] = { PPC::CARRY, PPC::XER, PPC::CR0, 0 };
static const MCPhysReg ImplicitList8[] = { PPC::CARRY, PPC::CR0, 0 };
static const MCPhysReg ImplicitList9[] = { PPC::X0, PPC::X3, PPC::X4, PPC::X5, PPC::X6, PPC::X7, PPC::X8, PPC::X9, PPC::X10, PPC::X11, PPC::X12, PPC::LR8, PPC::CTR8, PPC::CR0, PPC::CR1, PPC::CR5, PPC::CR6, PPC::CR7, 0 };
static const MCPhysReg ImplicitList10[] = { PPC::R0, PPC::R3, PPC::R4, PPC::R5, PPC::R6, PPC::R7, PPC::R8, PPC::R9, PPC::R10, PPC::R11, PPC::R12, PPC::LR, PPC::CTR, PPC::CR0, PPC::CR1, PPC::CR5, PPC::CR6, PPC::CR7, 0 };
static const MCPhysReg ImplicitList11[] = { PPC::R1, 0 };
static const MCPhysReg ImplicitList12[] = { PPC::CTR, 0 };
static const MCPhysReg ImplicitList13[] = { PPC::CTR8, 0 };
static const MCPhysReg ImplicitList14[] = { PPC::CTR, PPC::RM, 0 };
static const MCPhysReg ImplicitList15[] = { PPC::LR, 0 };
static const MCPhysReg ImplicitList16[] = { PPC::CTR8, PPC::RM, 0 };
static const MCPhysReg ImplicitList17[] = { PPC::LR8, 0 };
static const MCPhysReg ImplicitList18[] = { PPC::RM, 0 };
static const MCPhysReg ImplicitList19[] = { PPC::LR, PPC::RM, 0 };
static const MCPhysReg ImplicitList20[] = { PPC::CR6, 0 };
static const MCPhysReg ImplicitList21[] = { PPC::LR8, PPC::X2, 0 };
static const MCPhysReg ImplicitList22[] = { PPC::LR8, PPC::X2, PPC::RM, 0 };
static const MCPhysReg ImplicitList23[] = { PPC::LR8, PPC::RM, 0 };
static const MCPhysReg ImplicitList24[] = { PPC::LR, PPC::R2, 0 };
static const MCPhysReg ImplicitList25[] = { PPC::LR, PPC::R2, PPC::RM, 0 };
static const MCPhysReg ImplicitList26[] = { PPC::CTR, PPC::LR, PPC::RM, 0 };
static const MCPhysReg ImplicitList27[] = { PPC::CTR8, PPC::LR8, PPC::RM, 0 };
static const MCPhysReg ImplicitList28[] = { PPC::CR1EQ, 0 };
static const MCPhysReg ImplicitList29[] = { PPC::X1, 0 };
static const MCPhysReg ImplicitList30[] = { PPC::CR1, 0 };
static const MCPhysReg ImplicitList31[] = { PPC::X0, PPC::X4, PPC::X5, PPC::X6, PPC::X7, PPC::X8, PPC::X9, PPC::X10, PPC::X11, PPC::X12, PPC::LR8, PPC::CTR8, PPC::CR0, PPC::CR1, PPC::CR5, PPC::CR6, PPC::CR7, 0 };
static const MCPhysReg ImplicitList32[] = { PPC::R0, PPC::R4, PPC::R5, PPC::R6, PPC::R7, PPC::R8, PPC::R9, PPC::R10, PPC::R11, PPC::R12, PPC::LR, PPC::CTR, PPC::CR0, PPC::CR1, PPC::CR5, PPC::CR6, PPC::CR7, 0 };
static const MCPhysReg ImplicitList33[] = { PPC::R0, PPC::R4, PPC::R5, PPC::R11, PPC::LR, PPC::CR0, 0 };
static const MCPhysReg ImplicitList34[] = { PPC::X0, PPC::X4, PPC::X5, PPC::X11, PPC::LR8, PPC::CR0, 0 };
static const MCPhysReg ImplicitList35[] = { PPC::X0, PPC::X2, PPC::X4, PPC::X5, PPC::X6, PPC::X7, PPC::X8, PPC::X9, PPC::X10, PPC::X11, PPC::X12, PPC::LR8, PPC::CTR8, PPC::CR0, PPC::CR1, PPC::CR5, PPC::CR6, PPC::CR7, 0 };
static const MCPhysReg ImplicitList36[] = { PPC::LR, PPC::CTR, 0 };

static const MCOperandInfo OperandInfo2[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo3[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo4[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo5[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo6[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo7[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo8[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo9[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo10[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo11[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo12[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo13[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo14[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo15[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo16[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo17[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo18[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo19[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo20[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo21[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo22[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo23[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo24[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo25[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo26[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo27[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo28[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo29[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo30[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo31[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo32[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo33[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo34[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo35[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo36[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo37[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo38[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo39[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo40[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo41[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo42[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo43[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo44[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo45[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo46[] = { { PPC::G8pRCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_EARLY_CLOBBER }, { PPC::G8pRCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_EARLY_CLOBBER }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo47[] = { { PPC::G8pRCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_EARLY_CLOBBER }, { PPC::G8pRCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_EARLY_CLOBBER }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo48[] = { { PPC::G8pRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo49[] = { { PPC::ACCRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::UACCRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo50[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo51[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo52[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo53[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo54[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo55[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo56[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo57[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo58[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo59[] = { { PPC::VSRpRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRpRCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo60[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo61[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo62[] = { { PPC::SPILLTOVSRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo63[] = { { PPC::SPILLTOVSRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo64[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo65[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo66[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo67[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo68[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo69[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo70[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo71[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo72[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo73[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo74[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo75[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo76[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo77[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo78[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo79[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo80[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo81[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo82[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo83[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo84[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo85[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo86[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo87[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo88[] = { { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo89[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo90[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo91[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo92[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo93[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo94[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo95[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo96[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo97[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo98[] = { { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo99[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo100[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo101[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo102[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo103[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo104[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo105[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo106[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo107[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo108[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo109[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo110[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo111[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo112[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo113[] = { { PPC::SPERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::SPERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo114[] = { { PPC::SPERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::SPERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::SPERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo115[] = { { PPC::SPERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo116[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::SPERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::SPERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo117[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::SPERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo118[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo119[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo120[] = { { PPC::SPERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::SPERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo121[] = { { PPC::SPERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo122[] = { { PPC::SPERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo123[] = { { PPC::SPERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo124[] = { { PPC::SPERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::SPERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::SPERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo125[] = { { PPC::SPERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo126[] = { { PPC::SPERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::SPERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo127[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo128[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo129[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo130[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo131[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo132[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo133[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo134[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo135[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo136[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo137[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo138[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo139[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo140[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo141[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo142[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo143[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo144[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, MCOI_TIED_TO(1) }, };
static const MCOperandInfo OperandInfo145[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, MCOI_TIED_TO(1) }, };
static const MCOperandInfo OperandInfo146[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, MCOI_TIED_TO(1) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo147[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, MCOI_TIED_TO(1) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo148[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo149[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo150[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo151[] = { { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo152[] = { { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo153[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo154[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo155[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo156[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, MCOI_TIED_TO(1) }, };
static const MCOperandInfo OperandInfo157[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, MCOI_TIED_TO(1) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo158[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo159[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, MCOI_TIED_TO(1) }, };
static const MCOperandInfo OperandInfo160[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, MCOI_TIED_TO(1) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo161[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo162[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo163[] = { { PPC::G8pRCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_EARLY_CLOBBER }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo164[] = { { PPC::G8pRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo165[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo166[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo167[] = { { PPC::VFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo168[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo169[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo170[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo171[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo172[] = { { PPC::VSRpRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo173[] = { { PPC::VSRpRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo174[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo175[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo176[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo177[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo178[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo179[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo180[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo181[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo182[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo183[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo184[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo185[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRSAVERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo186[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo187[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo188[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo189[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo190[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo191[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo192[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo193[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo194[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo195[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo196[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo197[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo198[] = { { PPC::VRSAVERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo199[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo200[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo201[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo202[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo203[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo204[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo205[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo206[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo207[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo208[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo209[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo210[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo211[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo212[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo213[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo214[] = { { PPC::VFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo215[] = { { PPC::VFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo216[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo217[] = { { PPC::VSRpRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo218[] = { { PPC::VSRpRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo219[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo220[] = { { PPC::ACCRCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_EARLY_CLOBBER }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo221[] = { { PPC::ACCRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::ACCRCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo222[] = { { PPC::ACCRCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_EARLY_CLOBBER }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo223[] = { { PPC::ACCRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::ACCRCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo224[] = { { PPC::ACCRCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_EARLY_CLOBBER }, { PPC::VSRpRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo225[] = { { PPC::ACCRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::ACCRCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { PPC::VSRpRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo226[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo227[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo228[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo229[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(1) }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo230[] = { { PPC::ACCRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo231[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo232[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo233[] = { { PPC::G8pRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo234[] = { { PPC::UACCRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo235[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo236[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo237[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo238[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo239[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo240[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo241[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo242[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo243[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo244[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo245[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo246[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo247[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo248[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo249[] = { { PPC::SPERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::SPERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::SPERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo250[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo251[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo252[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo253[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo254[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo255[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo256[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo257[] = { { PPC::SPERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::SPERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::SPERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo258[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo259[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo260[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo261[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo262[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo263[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo264[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo265[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo266[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8pRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo267[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo268[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo269[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, MCOI_TIED_TO(0) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo270[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, MCOI_TIED_TO(0) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo271[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo272[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, MCOI_TIED_TO(0) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo273[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo274[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, MCOI_TIED_TO(0) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo275[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo276[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo277[] = { { -1, 0, MCOI::OPERAND_PCREL, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo278[] = { { PPC::CTRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo279[] = { { PPC::CTRRC8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo280[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo281[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo282[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo283[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo284[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo285[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo286[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo287[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo288[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo289[] = { { PPC::VFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo290[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo291[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo292[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo293[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo294[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo295[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo296[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo297[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo298[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo299[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::VFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo300[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo301[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo302[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo303[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo304[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo305[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo306[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo307[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo308[] = { { PPC::VFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo309[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo310[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo311[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo312[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo313[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo314[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo315[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo316[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo317[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo318[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo319[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo320[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo321[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo322[] = { { PPC::ACCRCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_EARLY_CLOBBER }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo323[] = { { PPC::ACCRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::ACCRCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo324[] = { { PPC::ACCRCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_EARLY_CLOBBER }, { PPC::VSRpRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo325[] = { { PPC::ACCRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::ACCRCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { PPC::VSRpRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo326[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo327[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo328[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo329[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo330[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo331[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo332[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo333[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo334[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo335[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo336[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo337[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo338[] = { { PPC::ACCRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::ACCRCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo339[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo340[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo341[] = { { PPC::ACCRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo342[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo343[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo344[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo345[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo346[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo347[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo348[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };

extern const MCInstrDesc PPCInsts[] = {
  { 0,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #0 = PHI
  { 1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #1 = INLINEASM
  { 2,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #2 = INLINEASM_BR
  { 3,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::NotDuplicable), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #3 = CFI_INSTRUCTION
  { 4,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::NotDuplicable), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #4 = EH_LABEL
  { 5,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::NotDuplicable), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #5 = GC_LABEL
  { 6,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #6 = ANNOTATION_LABEL
  { 7,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #7 = KILL
  { 8,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo4 },  // Inst #8 = EXTRACT_SUBREG
  { 9,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo5 },  // Inst #9 = INSERT_SUBREG
  { 10,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #10 = IMPLICIT_DEF
  { 11,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo6 },  // Inst #11 = SUBREG_TO_REG
  { 12,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo4 },  // Inst #12 = COPY_TO_REGCLASS
  { 13,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #13 = DBG_VALUE
  { 14,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #14 = DBG_VALUE_LIST
  { 15,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #15 = DBG_INSTR_REF
  { 16,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #16 = DBG_PHI
  { 17,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #17 = DBG_LABEL
  { 18,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo7 },  // Inst #18 = REG_SEQUENCE
  { 19,	2,	1,	0,	121,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo7 },  // Inst #19 = COPY
  { 20,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #20 = BUNDLE
  { 21,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #21 = LIFETIME_START
  { 22,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #22 = LIFETIME_END
  { 23,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo8 },  // Inst #23 = PSEUDO_PROBE
  { 24,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta), 0x0ULL, nullptr, nullptr, OperandInfo9 },  // Inst #24 = ARITH_FENCE
  { 25,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo10 },  // Inst #25 = STACKMAP
  { 26,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #26 = FENTRY_CALL
  { 27,	6,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo11 },  // Inst #27 = PATCHPOINT
  { 28,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Rematerializable), 0x0ULL, nullptr, nullptr, OperandInfo12 },  // Inst #28 = LOAD_STACK_GUARD
  { 29,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #29 = PREALLOCATED_SETUP
  { 30,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13 },  // Inst #30 = PREALLOCATED_ARG
  { 31,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #31 = STATEPOINT
  { 32,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo14 },  // Inst #32 = LOCAL_ESCAPE
  { 33,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #33 = FAULTING_OP
  { 34,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #34 = PATCHABLE_OP
  { 35,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #35 = PATCHABLE_FUNCTION_ENTER
  { 36,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #36 = PATCHABLE_RET
  { 37,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #37 = PATCHABLE_FUNCTION_EXIT
  { 38,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #38 = PATCHABLE_TAIL_CALL
  { 39,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15 },  // Inst #39 = PATCHABLE_EVENT_CALL
  { 40,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo16 },  // Inst #40 = PATCHABLE_TYPED_EVENT_CALL
  { 41,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #41 = ICALL_BRANCH_FUNNEL
  { 42,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #42 = G_ASSERT_SEXT
  { 43,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #43 = G_ASSERT_ZEXT
  { 44,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #44 = G_ASSERT_ALIGN
  { 45,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #45 = G_ADD
  { 46,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #46 = G_SUB
  { 47,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #47 = G_MUL
  { 48,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #48 = G_SDIV
  { 49,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #49 = G_UDIV
  { 50,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #50 = G_SREM
  { 51,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #51 = G_UREM
  { 52,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo19 },  // Inst #52 = G_SDIVREM
  { 53,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo19 },  // Inst #53 = G_UDIVREM
  { 54,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #54 = G_AND
  { 55,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #55 = G_OR
  { 56,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #56 = G_XOR
  { 57,	1,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #57 = G_IMPLICIT_DEF
  { 58,	1,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #58 = G_PHI
  { 59,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #59 = G_FRAME_INDEX
  { 60,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #60 = G_GLOBAL_VALUE
  { 61,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo22 },  // Inst #61 = G_EXTRACT
  { 62,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #62 = G_UNMERGE_VALUES
  { 63,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo24 },  // Inst #63 = G_INSERT
  { 64,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #64 = G_MERGE_VALUES
  { 65,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #65 = G_BUILD_VECTOR
  { 66,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #66 = G_BUILD_VECTOR_TRUNC
  { 67,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #67 = G_CONCAT_VECTORS
  { 68,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #68 = G_PTRTOINT
  { 69,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #69 = G_INTTOPTR
  { 70,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #70 = G_BITCAST
  { 71,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #71 = G_FREEZE
  { 72,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo26 },  // Inst #72 = G_INTRINSIC_FPTRUNC_ROUND
  { 73,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #73 = G_INTRINSIC_TRUNC
  { 74,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #74 = G_INTRINSIC_ROUND
  { 75,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #75 = G_INTRINSIC_LRINT
  { 76,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #76 = G_INTRINSIC_ROUNDEVEN
  { 77,	1,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #77 = G_READCYCLECOUNTER
  { 78,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #78 = G_LOAD
  { 79,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #79 = G_SEXTLOAD
  { 80,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #80 = G_ZEXTLOAD
  { 81,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #81 = G_INDEXED_LOAD
  { 82,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #82 = G_INDEXED_SEXTLOAD
  { 83,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo27 },  // Inst #83 = G_INDEXED_ZEXTLOAD
  { 84,	2,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #84 = G_STORE
  { 85,	5,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo28 },  // Inst #85 = G_INDEXED_STORE
  { 86,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo29 },  // Inst #86 = G_ATOMIC_CMPXCHG_WITH_SUCCESS
  { 87,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #87 = G_ATOMIC_CMPXCHG
  { 88,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #88 = G_ATOMICRMW_XCHG
  { 89,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #89 = G_ATOMICRMW_ADD
  { 90,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #90 = G_ATOMICRMW_SUB
  { 91,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #91 = G_ATOMICRMW_AND
  { 92,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #92 = G_ATOMICRMW_NAND
  { 93,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #93 = G_ATOMICRMW_OR
  { 94,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #94 = G_ATOMICRMW_XOR
  { 95,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #95 = G_ATOMICRMW_MAX
  { 96,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #96 = G_ATOMICRMW_MIN
  { 97,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #97 = G_ATOMICRMW_UMAX
  { 98,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #98 = G_ATOMICRMW_UMIN
  { 99,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #99 = G_ATOMICRMW_FADD
  { 100,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #100 = G_ATOMICRMW_FSUB
  { 101,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #101 = G_ATOMICRMW_FMAX
  { 102,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo31 },  // Inst #102 = G_ATOMICRMW_FMIN
  { 103,	2,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo10 },  // Inst #103 = G_FENCE
  { 104,	2,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #104 = G_BRCOND
  { 105,	1,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #105 = G_BRINDIRECT
  { 106,	1,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::Convergent), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #106 = G_INTRINSIC
  { 107,	1,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::Convergent), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #107 = G_INTRINSIC_W_SIDE_EFFECTS
  { 108,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #108 = G_ANYEXT
  { 109,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #109 = G_TRUNC
  { 110,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #110 = G_CONSTANT
  { 111,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #111 = G_FCONSTANT
  { 112,	1,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo20 },  // Inst #112 = G_VASTART
  { 113,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo32 },  // Inst #113 = G_VAARG
  { 114,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #114 = G_SEXT
  { 115,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17 },  // Inst #115 = G_SEXT_INREG
  { 116,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #116 = G_ZEXT
  { 117,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo33 },  // Inst #117 = G_SHL
  { 118,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo33 },  // Inst #118 = G_LSHR
  { 119,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo33 },  // Inst #119 = G_ASHR
  { 120,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo34 },  // Inst #120 = G_FSHL
  { 121,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo34 },  // Inst #121 = G_FSHR
  { 122,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo33 },  // Inst #122 = G_ROTR
  { 123,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo33 },  // Inst #123 = G_ROTL
  { 124,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo35 },  // Inst #124 = G_ICMP
  { 125,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo35 },  // Inst #125 = G_FCMP
  { 126,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #126 = G_SELECT
  { 127,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #127 = G_UADDO
  { 128,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo36 },  // Inst #128 = G_UADDE
  { 129,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #129 = G_USUBO
  { 130,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo36 },  // Inst #130 = G_USUBE
  { 131,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #131 = G_SADDO
  { 132,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo36 },  // Inst #132 = G_SADDE
  { 133,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #133 = G_SSUBO
  { 134,	5,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo36 },  // Inst #134 = G_SSUBE
  { 135,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #135 = G_UMULO
  { 136,	4,	2,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo30 },  // Inst #136 = G_SMULO
  { 137,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #137 = G_UMULH
  { 138,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #138 = G_SMULH
  { 139,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #139 = G_UADDSAT
  { 140,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #140 = G_SADDSAT
  { 141,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #141 = G_USUBSAT
  { 142,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #142 = G_SSUBSAT
  { 143,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo33 },  // Inst #143 = G_USHLSAT
  { 144,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo33 },  // Inst #144 = G_SSHLSAT
  { 145,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo37 },  // Inst #145 = G_SMULFIX
  { 146,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo37 },  // Inst #146 = G_UMULFIX
  { 147,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo37 },  // Inst #147 = G_SMULFIXSAT
  { 148,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo37 },  // Inst #148 = G_UMULFIXSAT
  { 149,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo37 },  // Inst #149 = G_SDIVFIX
  { 150,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo37 },  // Inst #150 = G_UDIVFIX
  { 151,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo37 },  // Inst #151 = G_SDIVFIXSAT
  { 152,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo37 },  // Inst #152 = G_UDIVFIXSAT
  { 153,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #153 = G_FADD
  { 154,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #154 = G_FSUB
  { 155,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #155 = G_FMUL
  { 156,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo19 },  // Inst #156 = G_FMA
  { 157,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo19 },  // Inst #157 = G_FMAD
  { 158,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #158 = G_FDIV
  { 159,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #159 = G_FREM
  { 160,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #160 = G_FPOW
  { 161,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo33 },  // Inst #161 = G_FPOWI
  { 162,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #162 = G_FEXP
  { 163,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #163 = G_FEXP2
  { 164,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #164 = G_FLOG
  { 165,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #165 = G_FLOG2
  { 166,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #166 = G_FLOG10
  { 167,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #167 = G_FNEG
  { 168,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #168 = G_FPEXT
  { 169,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #169 = G_FPTRUNC
  { 170,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #170 = G_FPTOSI
  { 171,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #171 = G_FPTOUI
  { 172,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #172 = G_SITOFP
  { 173,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #173 = G_UITOFP
  { 174,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #174 = G_FABS
  { 175,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo33 },  // Inst #175 = G_FCOPYSIGN
  { 176,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo38 },  // Inst #176 = G_IS_FPCLASS
  { 177,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #177 = G_FCANONICALIZE
  { 178,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #178 = G_FMINNUM
  { 179,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #179 = G_FMAXNUM
  { 180,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #180 = G_FMINNUM_IEEE
  { 181,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #181 = G_FMAXNUM_IEEE
  { 182,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #182 = G_FMINIMUM
  { 183,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #183 = G_FMAXIMUM
  { 184,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo33 },  // Inst #184 = G_PTR_ADD
  { 185,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo33 },  // Inst #185 = G_PTRMASK
  { 186,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #186 = G_SMIN
  { 187,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #187 = G_SMAX
  { 188,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #188 = G_UMIN
  { 189,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #189 = G_UMAX
  { 190,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #190 = G_ABS
  { 191,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #191 = G_LROUND
  { 192,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #192 = G_LLROUND
  { 193,	1,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo2 },  // Inst #193 = G_BR
  { 194,	3,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo39 },  // Inst #194 = G_BRJT
  { 195,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo40 },  // Inst #195 = G_INSERT_VECTOR_ELT
  { 196,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo41 },  // Inst #196 = G_EXTRACT_VECTOR_ELT
  { 197,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo42 },  // Inst #197 = G_SHUFFLE_VECTOR
  { 198,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #198 = G_CTTZ
  { 199,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #199 = G_CTTZ_ZERO_UNDEF
  { 200,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #200 = G_CTLZ
  { 201,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #201 = G_CTLZ_ZERO_UNDEF
  { 202,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #202 = G_CTPOP
  { 203,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #203 = G_BSWAP
  { 204,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #204 = G_BITREVERSE
  { 205,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #205 = G_FCEIL
  { 206,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #206 = G_FCOS
  { 207,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #207 = G_FSIN
  { 208,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #208 = G_FSQRT
  { 209,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #209 = G_FFLOOR
  { 210,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #210 = G_FRINT
  { 211,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #211 = G_FNEARBYINT
  { 212,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #212 = G_ADDRSPACE_CAST
  { 213,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #213 = G_BLOCK_ADDR
  { 214,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #214 = G_JUMP_TABLE
  { 215,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26 },  // Inst #215 = G_DYN_STACKALLOC
  { 216,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #216 = G_STRICT_FADD
  { 217,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #217 = G_STRICT_FSUB
  { 218,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #218 = G_STRICT_FMUL
  { 219,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #219 = G_STRICT_FDIV
  { 220,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo18 },  // Inst #220 = G_STRICT_FREM
  { 221,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo19 },  // Inst #221 = G_STRICT_FMA
  { 222,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo25 },  // Inst #222 = G_STRICT_FSQRT
  { 223,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::Convergent), 0x0ULL, nullptr, nullptr, OperandInfo21 },  // Inst #223 = G_READ_REGISTER
  { 224,	2,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::Convergent), 0x0ULL, nullptr, nullptr, OperandInfo43 },  // Inst #224 = G_WRITE_REGISTER
  { 225,	4,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo44 },  // Inst #225 = G_MEMCPY
  { 226,	3,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo41 },  // Inst #226 = G_MEMCPY_INLINE
  { 227,	4,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo44 },  // Inst #227 = G_MEMMOVE
  { 228,	4,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo44 },  // Inst #228 = G_MEMSET
  { 229,	3,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo22 },  // Inst #229 = G_BZERO
  { 230,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo41 },  // Inst #230 = G_VECREDUCE_SEQ_FADD
  { 231,	3,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo41 },  // Inst #231 = G_VECREDUCE_SEQ_FMUL
  { 232,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #232 = G_VECREDUCE_FADD
  { 233,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #233 = G_VECREDUCE_FMUL
  { 234,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #234 = G_VECREDUCE_FMAX
  { 235,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #235 = G_VECREDUCE_FMIN
  { 236,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #236 = G_VECREDUCE_ADD
  { 237,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #237 = G_VECREDUCE_MUL
  { 238,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #238 = G_VECREDUCE_AND
  { 239,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #239 = G_VECREDUCE_OR
  { 240,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #240 = G_VECREDUCE_XOR
  { 241,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #241 = G_VECREDUCE_SMAX
  { 242,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #242 = G_VECREDUCE_SMIN
  { 243,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #243 = G_VECREDUCE_UMAX
  { 244,	2,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23 },  // Inst #244 = G_VECREDUCE_UMIN
  { 245,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo45 },  // Inst #245 = G_SBFX
  { 246,	4,	1,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo45 },  // Inst #246 = G_UBFX
  { 247,	8,	2,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo46 },  // Inst #247 = ATOMIC_CMP_SWAP_I128
  { 248,	6,	2,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo47 },  // Inst #248 = ATOMIC_LOAD_ADD_I128
  { 249,	6,	2,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo47 },  // Inst #249 = ATOMIC_LOAD_AND_I128
  { 250,	6,	2,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo47 },  // Inst #250 = ATOMIC_LOAD_NAND_I128
  { 251,	6,	2,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo47 },  // Inst #251 = ATOMIC_LOAD_OR_I128
  { 252,	6,	2,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo47 },  // Inst #252 = ATOMIC_LOAD_SUB_I128
  { 253,	6,	2,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo47 },  // Inst #253 = ATOMIC_LOAD_XOR_I128
  { 254,	6,	2,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo47 },  // Inst #254 = ATOMIC_SWAP_I128
  { 255,	3,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48 },  // Inst #255 = BUILD_QUADWORD
  { 256,	2,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49 },  // Inst #256 = BUILD_UACC
  { 257,	1,	0,	4,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList2, OperandInfo50 },  // Inst #257 = CFENCE8
  { 258,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51 },  // Inst #258 = CLRLSLDI
  { 259,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51 },  // Inst #259 = CLRLSLDI_rec
  { 260,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52 },  // Inst #260 = CLRLSLWI
  { 261,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52 },  // Inst #261 = CLRLSLWI_rec
  { 262,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo53 },  // Inst #262 = CLRRDI
  { 263,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo53 },  // Inst #263 = CLRRDI_rec
  { 264,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo54 },  // Inst #264 = CLRRWI
  { 265,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo54 },  // Inst #265 = CLRRWI_rec
  { 266,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo55 },  // Inst #266 = DCBFL
  { 267,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo55 },  // Inst #267 = DCBFLP
  { 268,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo55 },  // Inst #268 = DCBFPS
  { 269,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo55 },  // Inst #269 = DCBFx
  { 270,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo55 },  // Inst #270 = DCBSTPS
  { 271,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56 },  // Inst #271 = DCBTCT
  { 272,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56 },  // Inst #272 = DCBTDS
  { 273,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56 },  // Inst #273 = DCBTSTCT
  { 274,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56 },  // Inst #274 = DCBTSTDS
  { 275,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo55 },  // Inst #275 = DCBTSTT
  { 276,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo55 },  // Inst #276 = DCBTSTx
  { 277,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo55 },  // Inst #277 = DCBTT
  { 278,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo55 },  // Inst #278 = DCBTx
  { 279,	3,	1,	4,	213,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo57 },  // Inst #279 = DFLOADf32
  { 280,	3,	1,	4,	178,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo58 },  // Inst #280 = DFLOADf64
  { 281,	3,	0,	4,	480,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo57 },  // Inst #281 = DFSTOREf32
  { 282,	3,	0,	4,	480,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo58 },  // Inst #282 = DFSTOREf64
  { 283,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51 },  // Inst #283 = EXTLDI
  { 284,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51 },  // Inst #284 = EXTLDI_rec
  { 285,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52 },  // Inst #285 = EXTLWI
  { 286,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52 },  // Inst #286 = EXTLWI_rec
  { 287,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51 },  // Inst #287 = EXTRDI
  { 288,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51 },  // Inst #288 = EXTRDI_rec
  { 289,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52 },  // Inst #289 = EXTRWI
  { 290,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52 },  // Inst #290 = EXTRWI_rec
  { 291,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52 },  // Inst #291 = INSLWI
  { 292,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52 },  // Inst #292 = INSLWI_rec
  { 293,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51 },  // Inst #293 = INSRDI
  { 294,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51 },  // Inst #294 = INSRDI_rec
  { 295,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52 },  // Inst #295 = INSRWI
  { 296,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52 },  // Inst #296 = INSRWI_rec
  { 297,	2,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo59 },  // Inst #297 = KILL_PAIR
  { 298,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo60 },  // Inst #298 = LAx
  { 299,	3,	1,	4,	210,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo61 },  // Inst #299 = LIWAX
  { 300,	3,	1,	4,	178,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo61 },  // Inst #300 = LIWZX
  { 301,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51 },  // Inst #301 = RLWIMIbm
  { 302,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51 },  // Inst #302 = RLWIMIbm_rec
  { 303,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51 },  // Inst #303 = RLWINMbm
  { 304,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51 },  // Inst #304 = RLWINMbm_rec
  { 305,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51 },  // Inst #305 = RLWNMbm
  { 306,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51 },  // Inst #306 = RLWNMbm_rec
  { 307,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo53 },  // Inst #307 = ROTRDI
  { 308,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo53 },  // Inst #308 = ROTRDI_rec
  { 309,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo54 },  // Inst #309 = ROTRWI
  { 310,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo54 },  // Inst #310 = ROTRWI_rec
  { 311,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo53 },  // Inst #311 = SLDI
  { 312,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo53 },  // Inst #312 = SLDI_rec
  { 313,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo54 },  // Inst #313 = SLWI
  { 314,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo54 },  // Inst #314 = SLWI_rec
  { 315,	3,	1,	4,	431,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo62 },  // Inst #315 = SPILLTOVSR_LD
  { 316,	3,	1,	4,	436,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo63 },  // Inst #316 = SPILLTOVSR_LDX
  { 317,	3,	0,	4,	478,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo62 },  // Inst #317 = SPILLTOVSR_ST
  { 318,	3,	0,	4,	482,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo63 },  // Inst #318 = SPILLTOVSR_STX
  { 319,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo53 },  // Inst #319 = SRDI
  { 320,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo53 },  // Inst #320 = SRDI_rec
  { 321,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo54 },  // Inst #321 = SRWI
  { 322,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo54 },  // Inst #322 = SRWI_rec
  { 323,	3,	0,	4,	480,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo61 },  // Inst #323 = STIWX
  { 324,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo54 },  // Inst #324 = SUBI
  { 325,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo54 },  // Inst #325 = SUBIC
  { 326,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo54 },  // Inst #326 = SUBIC_rec
  { 327,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo54 },  // Inst #327 = SUBIS
  { 328,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo64 },  // Inst #328 = SUBPCIS
  { 329,	3,	1,	4,	213,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo65 },  // Inst #329 = XFLOADf32
  { 330,	3,	1,	4,	178,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo61 },  // Inst #330 = XFLOADf64
  { 331,	3,	0,	4,	219,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo65 },  // Inst #331 = XFSTOREf32
  { 332,	3,	0,	4,	219,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo61 },  // Inst #332 = XFSTOREf64
  { 333,	3,	1,	4,	404,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo66 },  // Inst #333 = ADD4
  { 334,	3,	1,	4,	404,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList3, OperandInfo66 },  // Inst #334 = ADD4O
  { 335,	3,	1,	4,	120,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList4, OperandInfo66 },  // Inst #335 = ADD4O_rec
  { 336,	3,	1,	4,	404,	0, 0x8ULL, nullptr, nullptr, OperandInfo67 },  // Inst #336 = ADD4TLS
  { 337,	3,	1,	4,	404,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo66 },  // Inst #337 = ADD4_rec
  { 338,	3,	1,	4,	404,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo68 },  // Inst #338 = ADD8
  { 339,	3,	1,	4,	404,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList3, OperandInfo68 },  // Inst #339 = ADD8O
  { 340,	3,	1,	4,	120,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList4, OperandInfo68 },  // Inst #340 = ADD8O_rec
  { 341,	3,	1,	4,	404,	0, 0x8ULL, nullptr, nullptr, OperandInfo69 },  // Inst #341 = ADD8TLS
  { 342,	3,	1,	4,	404,	0, 0x8ULL, nullptr, nullptr, OperandInfo70 },  // Inst #342 = ADD8TLS_
  { 343,	3,	1,	4,	404,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo68 },  // Inst #343 = ADD8_rec
  { 344,	3,	1,	4,	424,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, ImplicitList5, OperandInfo66 },  // Inst #344 = ADDC
  { 345,	3,	1,	4,	424,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, ImplicitList5, OperandInfo68 },  // Inst #345 = ADDC8
  { 346,	3,	1,	4,	424,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, ImplicitList6, OperandInfo68 },  // Inst #346 = ADDC8O
  { 347,	3,	1,	4,	247,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, ImplicitList7, OperandInfo68 },  // Inst #347 = ADDC8O_rec
  { 348,	3,	1,	4,	425,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, ImplicitList8, OperandInfo68 },  // Inst #348 = ADDC8_rec
  { 349,	3,	1,	4,	424,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, ImplicitList6, OperandInfo66 },  // Inst #349 = ADDCO
  { 350,	3,	1,	4,	247,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, ImplicitList7, OperandInfo66 },  // Inst #350 = ADDCO_rec
  { 351,	3,	1,	4,	425,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, ImplicitList8, OperandInfo66 },  // Inst #351 = ADDC_rec
  { 352,	3,	1,	4,	405,	0|(1ULL<<MCID::Commutable), 0x8ULL, ImplicitList5, ImplicitList5, OperandInfo66 },  // Inst #352 = ADDE
  { 353,	3,	1,	4,	405,	0|(1ULL<<MCID::Commutable), 0x8ULL, ImplicitList5, ImplicitList5, OperandInfo68 },  // Inst #353 = ADDE8
  { 354,	3,	1,	4,	405,	0|(1ULL<<MCID::Commutable), 0x8ULL, ImplicitList5, ImplicitList6, OperandInfo68 },  // Inst #354 = ADDE8O
  { 355,	3,	1,	4,	420,	0|(1ULL<<MCID::Commutable), 0x8ULL, ImplicitList5, ImplicitList7, OperandInfo68 },  // Inst #355 = ADDE8O_rec
  { 356,	3,	1,	4,	420,	0|(1ULL<<MCID::Commutable), 0x8ULL, ImplicitList5, ImplicitList8, OperandInfo68 },  // Inst #356 = ADDE8_rec
  { 357,	3,	1,	4,	405,	0|(1ULL<<MCID::Commutable), 0x8ULL, ImplicitList5, ImplicitList6, OperandInfo66 },  // Inst #357 = ADDEO
  { 358,	3,	1,	4,	420,	0|(1ULL<<MCID::Commutable), 0x8ULL, ImplicitList5, ImplicitList7, OperandInfo66 },  // Inst #358 = ADDEO_rec
  { 359,	4,	1,	4,	412,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo71 },  // Inst #359 = ADDEX
  { 360,	4,	1,	4,	412,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo72 },  // Inst #360 = ADDEX8
  { 361,	3,	1,	4,	420,	0|(1ULL<<MCID::Commutable), 0x8ULL, ImplicitList5, ImplicitList8, OperandInfo66 },  // Inst #361 = ADDE_rec
  { 362,	3,	1,	4,	392,	0, 0x8ULL, nullptr, nullptr, OperandInfo73 },  // Inst #362 = ADDI
  { 363,	3,	1,	4,	392,	0, 0x8ULL, nullptr, nullptr, OperandInfo74 },  // Inst #363 = ADDI8
  { 364,	3,	1,	4,	405,	0, 0xcULL, nullptr, ImplicitList5, OperandInfo54 },  // Inst #364 = ADDIC
  { 365,	3,	1,	4,	405,	0, 0x8ULL, nullptr, ImplicitList5, OperandInfo53 },  // Inst #365 = ADDIC8
  { 366,	3,	1,	4,	420,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x8ULL, nullptr, ImplicitList8, OperandInfo54 },  // Inst #366 = ADDIC_rec
  { 367,	3,	1,	4,	392,	0, 0x8ULL, nullptr, nullptr, OperandInfo73 },  // Inst #367 = ADDIS
  { 368,	3,	1,	4,	392,	0, 0x8ULL, nullptr, nullptr, OperandInfo74 },  // Inst #368 = ADDIS8
  { 369,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo74 },  // Inst #369 = ADDISdtprelHA
  { 370,	3,	1,	4,	393,	0, 0x0ULL, nullptr, nullptr, OperandInfo73 },  // Inst #370 = ADDISdtprelHA32
  { 371,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo74 },  // Inst #371 = ADDISgotTprelHA
  { 372,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo74 },  // Inst #372 = ADDIStlsgdHA
  { 373,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo74 },  // Inst #373 = ADDIStlsldHA
  { 374,	3,	1,	4,	394,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo75 },  // Inst #374 = ADDIStocHA
  { 375,	3,	1,	4,	394,	0|(1ULL<<MCID::Rematerializable), 0x0ULL, nullptr, nullptr, OperandInfo69 },  // Inst #375 = ADDIStocHA8
  { 376,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo74 },  // Inst #376 = ADDIdtprelL
  { 377,	3,	1,	4,	393,	0, 0x0ULL, nullptr, nullptr, OperandInfo73 },  // Inst #377 = ADDIdtprelL32
  { 378,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo74 },  // Inst #378 = ADDItlsgdL
  { 379,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo73 },  // Inst #379 = ADDItlsgdL32
  { 380,	4,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList9, OperandInfo76 },  // Inst #380 = ADDItlsgdLADDR
  { 381,	4,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList10, OperandInfo77 },  // Inst #381 = ADDItlsgdLADDR32
  { 382,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo74 },  // Inst #382 = ADDItlsldL
  { 383,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo73 },  // Inst #383 = ADDItlsldL32
  { 384,	4,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList9, OperandInfo76 },  // Inst #384 = ADDItlsldLADDR
  { 385,	4,	1,	4,	393,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList10, OperandInfo77 },  // Inst #385 = ADDItlsldLADDR32
  { 386,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo78 },  // Inst #386 = ADDItoc
  { 387,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo79 },  // Inst #387 = ADDItoc8
  { 388,	3,	1,	4,	394,	0|(1ULL<<MCID::Rematerializable), 0x0ULL, nullptr, nullptr, OperandInfo69 },  // Inst #388 = ADDItocL
  { 389,	2,	1,	4,	395,	0, 0x8ULL, ImplicitList5, ImplicitList5, OperandInfo80 },  // Inst #389 = ADDME
  { 390,	2,	1,	4,	395,	0, 0x8ULL, ImplicitList5, ImplicitList5, OperandInfo81 },  // Inst #390 = ADDME8
  { 391,	2,	1,	4,	395,	0, 0x8ULL, ImplicitList5, ImplicitList6, OperandInfo81 },  // Inst #391 = ADDME8O
  { 392,	2,	1,	4,	417,	0, 0x8ULL, ImplicitList5, ImplicitList7, OperandInfo81 },  // Inst #392 = ADDME8O_rec
  { 393,	2,	1,	4,	417,	0, 0x8ULL, ImplicitList5, ImplicitList8, OperandInfo81 },  // Inst #393 = ADDME8_rec
  { 394,	2,	1,	4,	395,	0, 0x8ULL, ImplicitList5, ImplicitList6, OperandInfo80 },  // Inst #394 = ADDMEO
  { 395,	2,	1,	4,	417,	0, 0x8ULL, ImplicitList5, ImplicitList7, OperandInfo80 },  // Inst #395 = ADDMEO_rec
  { 396,	2,	1,	4,	417,	0, 0x8ULL, ImplicitList5, ImplicitList8, OperandInfo80 },  // Inst #396 = ADDME_rec
  { 397,	2,	1,	4,	290,	0, 0x8ULL, nullptr, nullptr, OperandInfo64 },  // Inst #397 = ADDPCIS
  { 398,	2,	1,	4,	395,	0, 0x8ULL, ImplicitList5, ImplicitList5, OperandInfo80 },  // Inst #398 = ADDZE
  { 399,	2,	1,	4,	395,	0, 0x8ULL, ImplicitList5, ImplicitList5, OperandInfo81 },  // Inst #399 = ADDZE8
  { 400,	2,	1,	4,	395,	0, 0x8ULL, ImplicitList5, ImplicitList6, OperandInfo81 },  // Inst #400 = ADDZE8O
  { 401,	2,	1,	4,	417,	0, 0x8ULL, ImplicitList5, ImplicitList7, OperandInfo81 },  // Inst #401 = ADDZE8O_rec
  { 402,	2,	1,	4,	417,	0, 0x8ULL, ImplicitList5, ImplicitList8, OperandInfo81 },  // Inst #402 = ADDZE8_rec
  { 403,	2,	1,	4,	395,	0, 0x8ULL, ImplicitList5, ImplicitList6, OperandInfo80 },  // Inst #403 = ADDZEO
  { 404,	2,	1,	4,	417,	0, 0x8ULL, ImplicitList5, ImplicitList7, OperandInfo80 },  // Inst #404 = ADDZEO_rec
  { 405,	2,	1,	4,	417,	0, 0x8ULL, ImplicitList5, ImplicitList8, OperandInfo80 },  // Inst #405 = ADDZE_rec
  { 406,	2,	0,	4,	0,	0, 0x0ULL, ImplicitList11, ImplicitList11, OperandInfo10 },  // Inst #406 = ADJCALLSTACKDOWN
  { 407,	2,	0,	4,	0,	0, 0x0ULL, ImplicitList11, ImplicitList11, OperandInfo10 },  // Inst #407 = ADJCALLSTACKUP
  { 408,	3,	1,	4,	404,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo66 },  // Inst #408 = AND
  { 409,	3,	1,	4,	404,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo68 },  // Inst #409 = AND8
  { 410,	3,	1,	4,	404,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo68 },  // Inst #410 = AND8_rec
  { 411,	3,	1,	4,	404,	0, 0x8ULL, nullptr, nullptr, OperandInfo66 },  // Inst #411 = ANDC
  { 412,	3,	1,	4,	404,	0, 0x8ULL, nullptr, nullptr, OperandInfo68 },  // Inst #412 = ANDC8
  { 413,	3,	1,	4,	404,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo68 },  // Inst #413 = ANDC8_rec
  { 414,	3,	1,	4,	404,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo66 },  // Inst #414 = ANDC_rec
  { 415,	3,	1,	4,	405,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo53 },  // Inst #415 = ANDI8_rec
  { 416,	3,	1,	4,	405,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo53 },  // Inst #416 = ANDIS8_rec
  { 417,	3,	1,	4,	405,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo54 },  // Inst #417 = ANDIS_rec
  { 418,	3,	1,	4,	405,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo54 },  // Inst #418 = ANDI_rec
  { 419,	2,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo82 },  // Inst #419 = ANDI_rec_1_EQ_BIT
  { 420,	2,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo83 },  // Inst #420 = ANDI_rec_1_EQ_BIT8
  { 421,	2,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo82 },  // Inst #421 = ANDI_rec_1_GT_BIT
  { 422,	2,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo83 },  // Inst #422 = ANDI_rec_1_GT_BIT8
  { 423,	3,	1,	4,	404,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo66 },  // Inst #423 = AND_rec
  { 424,	5,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo84 },  // Inst #424 = ATOMIC_CMP_SWAP_I16
  { 425,	5,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo84 },  // Inst #425 = ATOMIC_CMP_SWAP_I32
  { 426,	5,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo85 },  // Inst #426 = ATOMIC_CMP_SWAP_I64
  { 427,	5,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo84 },  // Inst #427 = ATOMIC_CMP_SWAP_I8
  { 428,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86 },  // Inst #428 = ATOMIC_LOAD_ADD_I16
  { 429,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86 },  // Inst #429 = ATOMIC_LOAD_ADD_I32
  { 430,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo87 },  // Inst #430 = ATOMIC_LOAD_ADD_I64
  { 431,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86 },  // Inst #431 = ATOMIC_LOAD_ADD_I8
  { 432,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86 },  // Inst #432 = ATOMIC_LOAD_AND_I16
  { 433,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86 },  // Inst #433 = ATOMIC_LOAD_AND_I32
  { 434,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo87 },  // Inst #434 = ATOMIC_LOAD_AND_I64
  { 435,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86 },  // Inst #435 = ATOMIC_LOAD_AND_I8
  { 436,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86 },  // Inst #436 = ATOMIC_LOAD_MAX_I16
  { 437,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86 },  // Inst #437 = ATOMIC_LOAD_MAX_I32
  { 438,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo87 },  // Inst #438 = ATOMIC_LOAD_MAX_I64
  { 439,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86 },  // Inst #439 = ATOMIC_LOAD_MAX_I8
  { 440,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86 },  // Inst #440 = ATOMIC_LOAD_MIN_I16
  { 441,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86 },  // Inst #441 = ATOMIC_LOAD_MIN_I32
  { 442,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo87 },  // Inst #442 = ATOMIC_LOAD_MIN_I64
  { 443,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86 },  // Inst #443 = ATOMIC_LOAD_MIN_I8
  { 444,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86 },  // Inst #444 = ATOMIC_LOAD_NAND_I16
  { 445,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86 },  // Inst #445 = ATOMIC_LOAD_NAND_I32
  { 446,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo87 },  // Inst #446 = ATOMIC_LOAD_NAND_I64
  { 447,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86 },  // Inst #447 = ATOMIC_LOAD_NAND_I8
  { 448,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86 },  // Inst #448 = ATOMIC_LOAD_OR_I16
  { 449,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86 },  // Inst #449 = ATOMIC_LOAD_OR_I32
  { 450,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo87 },  // Inst #450 = ATOMIC_LOAD_OR_I64
  { 451,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86 },  // Inst #451 = ATOMIC_LOAD_OR_I8
  { 452,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86 },  // Inst #452 = ATOMIC_LOAD_SUB_I16
  { 453,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86 },  // Inst #453 = ATOMIC_LOAD_SUB_I32
  { 454,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo87 },  // Inst #454 = ATOMIC_LOAD_SUB_I64
  { 455,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86 },  // Inst #455 = ATOMIC_LOAD_SUB_I8
  { 456,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86 },  // Inst #456 = ATOMIC_LOAD_UMAX_I16
  { 457,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86 },  // Inst #457 = ATOMIC_LOAD_UMAX_I32
  { 458,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo87 },  // Inst #458 = ATOMIC_LOAD_UMAX_I64
  { 459,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86 },  // Inst #459 = ATOMIC_LOAD_UMAX_I8
  { 460,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86 },  // Inst #460 = ATOMIC_LOAD_UMIN_I16
  { 461,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86 },  // Inst #461 = ATOMIC_LOAD_UMIN_I32
  { 462,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo87 },  // Inst #462 = ATOMIC_LOAD_UMIN_I64
  { 463,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86 },  // Inst #463 = ATOMIC_LOAD_UMIN_I8
  { 464,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86 },  // Inst #464 = ATOMIC_LOAD_XOR_I16
  { 465,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86 },  // Inst #465 = ATOMIC_LOAD_XOR_I32
  { 466,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo87 },  // Inst #466 = ATOMIC_LOAD_XOR_I64
  { 467,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86 },  // Inst #467 = ATOMIC_LOAD_XOR_I8
  { 468,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86 },  // Inst #468 = ATOMIC_SWAP_I16
  { 469,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86 },  // Inst #469 = ATOMIC_SWAP_I32
  { 470,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo87 },  // Inst #470 = ATOMIC_SWAP_I64
  { 471,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo86 },  // Inst #471 = ATOMIC_SWAP_I8
  { 472,	0,	0,	4,	487,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #472 = ATTN
  { 473,	1,	0,	4,	335,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Predicable)|(1ULL<<MCID::Terminator), 0x38ULL, nullptr, nullptr, OperandInfo88 },  // Inst #473 = B
  { 474,	1,	0,	4,	335,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x38ULL, nullptr, nullptr, OperandInfo2 },  // Inst #474 = BA
  { 475,	2,	0,	4,	335,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, nullptr, nullptr, OperandInfo89 },  // Inst #475 = BC
  { 476,	3,	0,	4,	335,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, nullptr, nullptr, OperandInfo90 },  // Inst #476 = BCC
  { 477,	3,	0,	4,	335,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, nullptr, nullptr, OperandInfo91 },  // Inst #477 = BCCA
  { 478,	2,	0,	4,	335,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList12, nullptr, OperandInfo92 },  // Inst #478 = BCCCTR
  { 479,	2,	0,	4,	335,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList13, nullptr, OperandInfo92 },  // Inst #479 = BCCCTR8
  { 480,	2,	0,	4,	335,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList15, OperandInfo92 },  // Inst #480 = BCCCTRL
  { 481,	2,	0,	4,	335,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList16, ImplicitList17, OperandInfo92 },  // Inst #481 = BCCCTRL8
  { 482,	3,	0,	4,	335,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList18, ImplicitList15, OperandInfo90 },  // Inst #482 = BCCL
  { 483,	3,	0,	4,	335,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList18, ImplicitList15, OperandInfo91 },  // Inst #483 = BCCLA
  { 484,	2,	0,	4,	335,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList19, nullptr, OperandInfo92 },  // Inst #484 = BCCLR
  { 485,	2,	0,	4,	335,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList19, ImplicitList15, OperandInfo92 },  // Inst #485 = BCCLRL
  { 486,	1,	0,	4,	336,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList12, nullptr, OperandInfo93 },  // Inst #486 = BCCTR
  { 487,	1,	0,	4,	336,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList13, nullptr, OperandInfo93 },  // Inst #487 = BCCTR8
  { 488,	1,	0,	4,	336,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList13, nullptr, OperandInfo93 },  // Inst #488 = BCCTR8n
  { 489,	1,	0,	4,	336,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList15, OperandInfo93 },  // Inst #489 = BCCTRL
  { 490,	1,	0,	4,	336,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList16, ImplicitList17, OperandInfo93 },  // Inst #490 = BCCTRL8
  { 491,	1,	0,	4,	336,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList16, ImplicitList17, OperandInfo93 },  // Inst #491 = BCCTRL8n
  { 492,	1,	0,	4,	336,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList15, OperandInfo93 },  // Inst #492 = BCCTRLn
  { 493,	1,	0,	4,	336,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList12, nullptr, OperandInfo93 },  // Inst #493 = BCCTRn
  { 494,	4,	1,	4,	359,	0, 0x0ULL, nullptr, ImplicitList20, OperandInfo94 },  // Inst #494 = BCDADD_rec
  { 495,	3,	1,	4,	355,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList20, OperandInfo95 },  // Inst #495 = BCDCFN_rec
  { 496,	3,	1,	4,	172,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList20, OperandInfo95 },  // Inst #496 = BCDCFSQ_rec
  { 497,	3,	1,	4,	355,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList20, OperandInfo95 },  // Inst #497 = BCDCFZ_rec
  { 498,	3,	1,	4,	355,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList20, OperandInfo96 },  // Inst #498 = BCDCPSGN_rec
  { 499,	2,	1,	4,	354,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList20, OperandInfo97 },  // Inst #499 = BCDCTN_rec
  { 500,	2,	1,	4,	170,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList20, OperandInfo97 },  // Inst #500 = BCDCTSQ_rec
  { 501,	3,	1,	4,	355,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList20, OperandInfo95 },  // Inst #501 = BCDCTZ_rec
  { 502,	3,	1,	4,	355,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList20, OperandInfo95 },  // Inst #502 = BCDSETSGN_rec
  { 503,	4,	1,	4,	169,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList20, OperandInfo94 },  // Inst #503 = BCDSR_rec
  { 504,	4,	1,	4,	359,	0, 0x0ULL, nullptr, ImplicitList20, OperandInfo94 },  // Inst #504 = BCDSUB_rec
  { 505,	4,	1,	4,	359,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList20, OperandInfo94 },  // Inst #505 = BCDS_rec
  { 506,	4,	1,	4,	359,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList20, OperandInfo94 },  // Inst #506 = BCDTRUNC_rec
  { 507,	3,	1,	4,	355,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList20, OperandInfo96 },  // Inst #507 = BCDUS_rec
  { 508,	3,	1,	4,	355,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList20, OperandInfo96 },  // Inst #508 = BCDUTRUNC_rec
  { 509,	2,	0,	4,	335,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList18, ImplicitList15, OperandInfo89 },  // Inst #509 = BCL
  { 510,	1,	0,	4,	333,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList19, nullptr, OperandInfo93 },  // Inst #510 = BCLR
  { 511,	1,	0,	4,	333,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList19, ImplicitList15, OperandInfo93 },  // Inst #511 = BCLRL
  { 512,	1,	0,	4,	333,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList19, ImplicitList15, OperandInfo93 },  // Inst #512 = BCLRLn
  { 513,	1,	0,	4,	333,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList19, nullptr, OperandInfo93 },  // Inst #513 = BCLRn
  { 514,	1,	0,	4,	335,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList18, ImplicitList15, OperandInfo88 },  // Inst #514 = BCLalways
  { 515,	2,	0,	4,	335,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList18, ImplicitList15, OperandInfo89 },  // Inst #515 = BCLn
  { 516,	0,	0,	4,	335,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Predicable)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList12, nullptr, nullptr },  // Inst #516 = BCTR
  { 517,	0,	0,	4,	335,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Predicable)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList13, nullptr, nullptr },  // Inst #517 = BCTR8
  { 518,	0,	0,	4,	335,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Predicable), 0x38ULL, ImplicitList14, ImplicitList15, nullptr },  // Inst #518 = BCTRL
  { 519,	0,	0,	4,	335,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Predicable), 0x38ULL, ImplicitList16, ImplicitList17, nullptr },  // Inst #519 = BCTRL8
  { 520,	2,	0,	8,	335,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList16, ImplicitList21, OperandInfo98 },  // Inst #520 = BCTRL8_LDinto_toc
  { 521,	2,	0,	8,	335,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList16, ImplicitList22, OperandInfo98 },  // Inst #521 = BCTRL8_LDinto_toc_RM
  { 522,	0,	0,	4,	335,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Predicable), 0x38ULL, ImplicitList16, ImplicitList23, nullptr },  // Inst #522 = BCTRL8_RM
  { 523,	2,	0,	8,	335,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList14, ImplicitList24, OperandInfo98 },  // Inst #523 = BCTRL_LWZinto_toc
  { 524,	2,	0,	8,	335,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList14, ImplicitList25, OperandInfo98 },  // Inst #524 = BCTRL_LWZinto_toc_RM
  { 525,	0,	0,	4,	335,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Predicable), 0x38ULL, ImplicitList14, ImplicitList19, nullptr },  // Inst #525 = BCTRL_RM
  { 526,	2,	0,	4,	335,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, nullptr, nullptr, OperandInfo89 },  // Inst #526 = BCn
  { 527,	1,	0,	4,	335,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList12, ImplicitList12, OperandInfo88 },  // Inst #527 = BDNZ
  { 528,	1,	0,	4,	335,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList13, ImplicitList13, OperandInfo88 },  // Inst #528 = BDNZ8
  { 529,	1,	0,	4,	289,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList12, ImplicitList12, OperandInfo2 },  // Inst #529 = BDNZA
  { 530,	1,	0,	4,	289,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList12, ImplicitList12, OperandInfo2 },  // Inst #530 = BDNZAm
  { 531,	1,	0,	4,	289,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList12, ImplicitList12, OperandInfo2 },  // Inst #531 = BDNZAp
  { 532,	1,	0,	4,	335,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList12, OperandInfo88 },  // Inst #532 = BDNZL
  { 533,	1,	0,	4,	289,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList12, OperandInfo2 },  // Inst #533 = BDNZLA
  { 534,	1,	0,	4,	289,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList12, OperandInfo2 },  // Inst #534 = BDNZLAm
  { 535,	1,	0,	4,	289,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList12, OperandInfo2 },  // Inst #535 = BDNZLAp
  { 536,	0,	0,	4,	333,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList26, ImplicitList12, nullptr },  // Inst #536 = BDNZLR
  { 537,	0,	0,	4,	333,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList27, ImplicitList13, nullptr },  // Inst #537 = BDNZLR8
  { 538,	0,	0,	4,	333,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList26, ImplicitList12, nullptr },  // Inst #538 = BDNZLRL
  { 539,	0,	0,	4,	333,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList26, ImplicitList12, nullptr },  // Inst #539 = BDNZLRLm
  { 540,	0,	0,	4,	333,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList26, ImplicitList12, nullptr },  // Inst #540 = BDNZLRLp
  { 541,	0,	0,	4,	333,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList26, ImplicitList12, nullptr },  // Inst #541 = BDNZLRm
  { 542,	0,	0,	4,	333,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList26, ImplicitList12, nullptr },  // Inst #542 = BDNZLRp
  { 543,	1,	0,	4,	335,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList12, OperandInfo88 },  // Inst #543 = BDNZLm
  { 544,	1,	0,	4,	335,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList12, OperandInfo88 },  // Inst #544 = BDNZLp
  { 545,	1,	0,	4,	335,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList12, ImplicitList12, OperandInfo88 },  // Inst #545 = BDNZm
  { 546,	1,	0,	4,	335,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList12, ImplicitList12, OperandInfo88 },  // Inst #546 = BDNZp
  { 547,	1,	0,	4,	335,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList12, ImplicitList12, OperandInfo88 },  // Inst #547 = BDZ
  { 548,	1,	0,	4,	335,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList13, ImplicitList13, OperandInfo88 },  // Inst #548 = BDZ8
  { 549,	1,	0,	4,	289,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList12, ImplicitList12, OperandInfo2 },  // Inst #549 = BDZA
  { 550,	1,	0,	4,	289,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList12, ImplicitList12, OperandInfo2 },  // Inst #550 = BDZAm
  { 551,	1,	0,	4,	289,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList12, ImplicitList12, OperandInfo2 },  // Inst #551 = BDZAp
  { 552,	1,	0,	4,	335,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList12, OperandInfo88 },  // Inst #552 = BDZL
  { 553,	1,	0,	4,	289,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList12, OperandInfo2 },  // Inst #553 = BDZLA
  { 554,	1,	0,	4,	289,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList12, OperandInfo2 },  // Inst #554 = BDZLAm
  { 555,	1,	0,	4,	289,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList12, OperandInfo2 },  // Inst #555 = BDZLAp
  { 556,	0,	0,	4,	333,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList26, ImplicitList12, nullptr },  // Inst #556 = BDZLR
  { 557,	0,	0,	4,	333,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList27, ImplicitList13, nullptr },  // Inst #557 = BDZLR8
  { 558,	0,	0,	4,	333,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList26, ImplicitList12, nullptr },  // Inst #558 = BDZLRL
  { 559,	0,	0,	4,	333,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList26, ImplicitList12, nullptr },  // Inst #559 = BDZLRLm
  { 560,	0,	0,	4,	333,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList26, ImplicitList12, nullptr },  // Inst #560 = BDZLRLp
  { 561,	0,	0,	4,	333,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList26, ImplicitList12, nullptr },  // Inst #561 = BDZLRm
  { 562,	0,	0,	4,	333,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList26, ImplicitList12, nullptr },  // Inst #562 = BDZLRp
  { 563,	1,	0,	4,	335,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList12, OperandInfo88 },  // Inst #563 = BDZLm
  { 564,	1,	0,	4,	335,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList12, OperandInfo88 },  // Inst #564 = BDZLp
  { 565,	1,	0,	4,	335,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList12, ImplicitList12, OperandInfo88 },  // Inst #565 = BDZm
  { 566,	1,	0,	4,	335,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList12, ImplicitList12, OperandInfo88 },  // Inst #566 = BDZp
  { 567,	1,	0,	4,	333,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList18, ImplicitList15, OperandInfo88 },  // Inst #567 = BL
  { 568,	1,	0,	4,	333,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList18, ImplicitList17, OperandInfo88 },  // Inst #568 = BL8
  { 569,	1,	0,	8,	333,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList18, ImplicitList17, OperandInfo88 },  // Inst #569 = BL8_NOP
  { 570,	1,	0,	8,	333,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList18, ImplicitList23, OperandInfo88 },  // Inst #570 = BL8_NOP_RM
  { 571,	2,	0,	8,	333,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList18, ImplicitList17, OperandInfo7 },  // Inst #571 = BL8_NOP_TLS
  { 572,	1,	0,	4,	334,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList18, ImplicitList17, OperandInfo88 },  // Inst #572 = BL8_NOTOC
  { 573,	1,	0,	4,	334,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList18, ImplicitList23, OperandInfo88 },  // Inst #573 = BL8_NOTOC_RM
  { 574,	2,	0,	4,	334,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList18, ImplicitList17, OperandInfo7 },  // Inst #574 = BL8_NOTOC_TLS
  { 575,	1,	0,	4,	333,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList18, ImplicitList23, OperandInfo88 },  // Inst #575 = BL8_RM
  { 576,	2,	0,	4,	333,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList18, ImplicitList17, OperandInfo7 },  // Inst #576 = BL8_TLS
  { 577,	2,	0,	4,	333,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList18, ImplicitList17, OperandInfo7 },  // Inst #577 = BL8_TLS_
  { 578,	1,	0,	4,	335,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList18, ImplicitList15, OperandInfo2 },  // Inst #578 = BLA
  { 579,	1,	0,	4,	335,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList18, ImplicitList17, OperandInfo2 },  // Inst #579 = BLA8
  { 580,	1,	0,	8,	335,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList18, ImplicitList17, OperandInfo2 },  // Inst #580 = BLA8_NOP
  { 581,	1,	0,	8,	335,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList18, ImplicitList23, OperandInfo2 },  // Inst #581 = BLA8_NOP_RM
  { 582,	1,	0,	4,	335,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList18, ImplicitList23, OperandInfo2 },  // Inst #582 = BLA8_RM
  { 583,	1,	0,	4,	335,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList18, ImplicitList19, OperandInfo2 },  // Inst #583 = BLA_RM
  { 584,	0,	0,	4,	333,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Predicable)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList19, nullptr, nullptr },  // Inst #584 = BLR
  { 585,	0,	0,	4,	333,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Predicable)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList23, nullptr, nullptr },  // Inst #585 = BLR8
  { 586,	0,	0,	4,	333,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList19, ImplicitList15, nullptr },  // Inst #586 = BLRL
  { 587,	1,	0,	8,	333,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList18, ImplicitList15, OperandInfo88 },  // Inst #587 = BL_NOP
  { 588,	1,	0,	8,	333,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList18, ImplicitList19, OperandInfo88 },  // Inst #588 = BL_NOP_RM
  { 589,	1,	0,	4,	333,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList18, ImplicitList19, OperandInfo88 },  // Inst #589 = BL_RM
  { 590,	2,	0,	4,	333,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList18, ImplicitList15, OperandInfo7 },  // Inst #590 = BL_TLS
  { 591,	3,	1,	4,	114,	0, 0x8ULL, nullptr, nullptr, OperandInfo68 },  // Inst #591 = BPERMD
  { 592,	3,	1,	4,	293,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66 },  // Inst #592 = BRINC
  { 593,	3,	1,	4,	338,	0, 0x0ULL, nullptr, nullptr, OperandInfo68 },  // Inst #593 = CFUGED
  { 594,	0,	0,	4,	491,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, nullptr },  // Inst #594 = CLRBHRB
  { 595,	3,	1,	4,	406,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo66 },  // Inst #595 = CMPB
  { 596,	3,	1,	4,	406,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo68 },  // Inst #596 = CMPB8
  { 597,	3,	1,	4,	118,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo99 },  // Inst #597 = CMPD
  { 598,	3,	1,	4,	118,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo100 },  // Inst #598 = CMPDI
  { 599,	3,	1,	4,	372,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo99 },  // Inst #599 = CMPEQB
  { 600,	3,	1,	4,	118,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo99 },  // Inst #600 = CMPLD
  { 601,	3,	1,	4,	118,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo100 },  // Inst #601 = CMPLDI
  { 602,	3,	1,	4,	118,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo101 },  // Inst #602 = CMPLW
  { 603,	3,	1,	4,	118,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo102 },  // Inst #603 = CMPLWI
  { 604,	4,	1,	4,	107,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo103 },  // Inst #604 = CMPRB
  { 605,	4,	1,	4,	107,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo104 },  // Inst #605 = CMPRB8
  { 606,	3,	1,	4,	118,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo101 },  // Inst #606 = CMPW
  { 607,	3,	1,	4,	118,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo102 },  // Inst #607 = CMPWI
  { 608,	2,	1,	4,	362,	0, 0x8ULL, nullptr, nullptr, OperandInfo81 },  // Inst #608 = CNTLZD
  { 609,	3,	1,	4,	338,	0, 0x0ULL, nullptr, nullptr, OperandInfo68 },  // Inst #609 = CNTLZDM
  { 610,	2,	1,	4,	362,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo81 },  // Inst #610 = CNTLZD_rec
  { 611,	2,	1,	4,	362,	0, 0x8ULL, nullptr, nullptr, OperandInfo80 },  // Inst #611 = CNTLZW
  { 612,	2,	1,	4,	362,	0, 0x8ULL, nullptr, nullptr, OperandInfo81 },  // Inst #612 = CNTLZW8
  { 613,	2,	1,	4,	362,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo81 },  // Inst #613 = CNTLZW8_rec
  { 614,	2,	1,	4,	362,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo80 },  // Inst #614 = CNTLZW_rec
  { 615,	2,	1,	4,	362,	0, 0x8ULL, nullptr, nullptr, OperandInfo81 },  // Inst #615 = CNTTZD
  { 616,	3,	1,	4,	338,	0, 0x0ULL, nullptr, nullptr, OperandInfo68 },  // Inst #616 = CNTTZDM
  { 617,	2,	1,	4,	362,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo81 },  // Inst #617 = CNTTZD_rec
  { 618,	2,	1,	4,	362,	0, 0x8ULL, nullptr, nullptr, OperandInfo80 },  // Inst #618 = CNTTZW
  { 619,	2,	1,	4,	362,	0, 0x8ULL, nullptr, nullptr, OperandInfo81 },  // Inst #619 = CNTTZW8
  { 620,	2,	1,	4,	362,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo81 },  // Inst #620 = CNTTZW8_rec
  { 621,	2,	1,	4,	362,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo80 },  // Inst #621 = CNTTZW_rec
  { 622,	0,	0,	4,	186,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #622 = CP_ABORT
  { 623,	3,	0,	4,	180,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo54 },  // Inst #623 = CP_COPY
  { 624,	3,	0,	4,	180,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo53 },  // Inst #624 = CP_COPY8
  { 625,	3,	0,	4,	205,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo53 },  // Inst #625 = CP_PASTE8_rec
  { 626,	3,	0,	4,	205,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo54 },  // Inst #626 = CP_PASTE_rec
  { 627,	0,	0,	4,	386,	0, 0x0ULL, nullptr, ImplicitList28, nullptr },  // Inst #627 = CR6SET
  { 628,	0,	0,	4,	133,	0, 0x0ULL, nullptr, ImplicitList28, nullptr },  // Inst #628 = CR6UNSET
  { 629,	3,	1,	4,	133,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo105 },  // Inst #629 = CRAND
  { 630,	3,	1,	4,	133,	0, 0x0ULL, nullptr, nullptr, OperandInfo105 },  // Inst #630 = CRANDC
  { 631,	3,	1,	4,	386,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo105 },  // Inst #631 = CREQV
  { 632,	3,	1,	4,	133,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo105 },  // Inst #632 = CRNAND
  { 633,	3,	1,	4,	133,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo105 },  // Inst #633 = CRNOR
  { 634,	3,	1,	4,	133,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo105 },  // Inst #634 = CROR
  { 635,	3,	1,	4,	133,	0, 0x0ULL, nullptr, nullptr, OperandInfo105 },  // Inst #635 = CRORC
  { 636,	1,	1,	4,	386,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo93 },  // Inst #636 = CRSET
  { 637,	1,	1,	4,	133,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo93 },  // Inst #637 = CRUNSET
  { 638,	3,	1,	4,	133,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo105 },  // Inst #638 = CRXOR
  { 639,	3,	0,	4,	335,	0|(1ULL<<MCID::Branch), 0x38ULL, nullptr, nullptr, OperandInfo90 },  // Inst #639 = CTRL_DEP
  { 640,	2,	1,	4,	184,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x8ULL, nullptr, nullptr, OperandInfo64 },  // Inst #640 = DARN
  { 641,	2,	0,	4,	317,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo55 },  // Inst #641 = DCBA
  { 642,	3,	0,	4,	475,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, nullptr, OperandInfo106 },  // Inst #642 = DCBF
  { 643,	2,	0,	4,	179,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo55 },  // Inst #643 = DCBFEP
  { 644,	2,	0,	4,	317,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo55 },  // Inst #644 = DCBI
  { 645,	2,	0,	4,	473,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo55 },  // Inst #645 = DCBST
  { 646,	2,	0,	4,	179,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo55 },  // Inst #646 = DCBSTEP
  { 647,	3,	0,	4,	433,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, nullptr, OperandInfo106 },  // Inst #647 = DCBT
  { 648,	3,	0,	4,	179,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56 },  // Inst #648 = DCBTEP
  { 649,	3,	0,	4,	433,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, nullptr, OperandInfo106 },  // Inst #649 = DCBTST
  { 650,	3,	0,	4,	179,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56 },  // Inst #650 = DCBTSTEP
  { 651,	2,	0,	4,	473,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo55 },  // Inst #651 = DCBZ
  { 652,	2,	0,	4,	179,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo55 },  // Inst #652 = DCBZEP
  { 653,	2,	0,	4,	488,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo55 },  // Inst #653 = DCBZL
  { 654,	2,	0,	4,	179,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo55 },  // Inst #654 = DCBZLEP
  { 655,	2,	0,	4,	489,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo80 },  // Inst #655 = DCCCI
  { 656,	3,	1,	4,	240,	0, 0x8ULL, nullptr, nullptr, OperandInfo68 },  // Inst #656 = DIVD
  { 657,	3,	1,	4,	241,	0, 0x8ULL, nullptr, nullptr, OperandInfo68 },  // Inst #657 = DIVDE
  { 658,	3,	1,	4,	241,	0, 0x8ULL, nullptr, ImplicitList3, OperandInfo68 },  // Inst #658 = DIVDEO
  { 659,	3,	1,	4,	245,	0, 0x8ULL, nullptr, ImplicitList4, OperandInfo68 },  // Inst #659 = DIVDEO_rec
  { 660,	3,	1,	4,	241,	0, 0x8ULL, nullptr, nullptr, OperandInfo68 },  // Inst #660 = DIVDEU
  { 661,	3,	1,	4,	241,	0, 0x8ULL, nullptr, ImplicitList3, OperandInfo68 },  // Inst #661 = DIVDEUO
  { 662,	3,	1,	4,	245,	0, 0x8ULL, nullptr, ImplicitList4, OperandInfo68 },  // Inst #662 = DIVDEUO_rec
  { 663,	3,	1,	4,	245,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo68 },  // Inst #663 = DIVDEU_rec
  { 664,	3,	1,	4,	245,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo68 },  // Inst #664 = DIVDE_rec
  { 665,	3,	1,	4,	240,	0, 0x8ULL, nullptr, ImplicitList3, OperandInfo68 },  // Inst #665 = DIVDO
  { 666,	3,	1,	4,	243,	0, 0x8ULL, nullptr, ImplicitList4, OperandInfo68 },  // Inst #666 = DIVDO_rec
  { 667,	3,	1,	4,	240,	0, 0x8ULL, nullptr, nullptr, OperandInfo68 },  // Inst #667 = DIVDU
  { 668,	3,	1,	4,	240,	0, 0x8ULL, nullptr, ImplicitList3, OperandInfo68 },  // Inst #668 = DIVDUO
  { 669,	3,	1,	4,	243,	0, 0x8ULL, nullptr, ImplicitList4, OperandInfo68 },  // Inst #669 = DIVDUO_rec
  { 670,	3,	1,	4,	243,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo68 },  // Inst #670 = DIVDU_rec
  { 671,	3,	1,	4,	243,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo68 },  // Inst #671 = DIVD_rec
  { 672,	3,	1,	4,	238,	0, 0x8ULL, nullptr, nullptr, OperandInfo66 },  // Inst #672 = DIVW
  { 673,	3,	1,	4,	347,	0, 0x8ULL, nullptr, nullptr, OperandInfo66 },  // Inst #673 = DIVWE
  { 674,	3,	1,	4,	347,	0, 0x8ULL, nullptr, ImplicitList3, OperandInfo66 },  // Inst #674 = DIVWEO
  { 675,	3,	1,	4,	244,	0, 0x8ULL, nullptr, ImplicitList4, OperandInfo66 },  // Inst #675 = DIVWEO_rec
  { 676,	3,	1,	4,	347,	0, 0x8ULL, nullptr, nullptr, OperandInfo66 },  // Inst #676 = DIVWEU
  { 677,	3,	1,	4,	347,	0, 0x8ULL, nullptr, ImplicitList3, OperandInfo66 },  // Inst #677 = DIVWEUO
  { 678,	3,	1,	4,	244,	0, 0x8ULL, nullptr, ImplicitList4, OperandInfo66 },  // Inst #678 = DIVWEUO_rec
  { 679,	3,	1,	4,	244,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo66 },  // Inst #679 = DIVWEU_rec
  { 680,	3,	1,	4,	244,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo66 },  // Inst #680 = DIVWE_rec
  { 681,	3,	1,	4,	238,	0, 0x8ULL, nullptr, ImplicitList3, OperandInfo66 },  // Inst #681 = DIVWO
  { 682,	3,	1,	4,	242,	0, 0x8ULL, nullptr, ImplicitList4, OperandInfo66 },  // Inst #682 = DIVWO_rec
  { 683,	3,	1,	4,	238,	0, 0x8ULL, nullptr, nullptr, OperandInfo66 },  // Inst #683 = DIVWU
  { 684,	3,	1,	4,	238,	0, 0x8ULL, nullptr, ImplicitList3, OperandInfo66 },  // Inst #684 = DIVWUO
  { 685,	3,	1,	4,	242,	0, 0x8ULL, nullptr, ImplicitList4, OperandInfo66 },  // Inst #685 = DIVWUO_rec
  { 686,	3,	1,	4,	242,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo66 },  // Inst #686 = DIVWU_rec
  { 687,	3,	1,	4,	242,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo66 },  // Inst #687 = DIVW_rec
  { 688,	1,	0,	4,	387,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #688 = DSS
  { 689,	0,	0,	4,	387,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #689 = DSSALL
  { 690,	3,	0,	4,	413,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo107 },  // Inst #690 = DST
  { 691,	3,	0,	4,	413,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo108 },  // Inst #691 = DST64
  { 692,	3,	0,	4,	413,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo107 },  // Inst #692 = DSTST
  { 693,	3,	0,	4,	413,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo108 },  // Inst #693 = DSTST64
  { 694,	3,	0,	4,	413,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo107 },  // Inst #694 = DSTSTT
  { 695,	3,	0,	4,	413,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo108 },  // Inst #695 = DSTSTT64
  { 696,	3,	0,	4,	413,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo107 },  // Inst #696 = DSTT
  { 697,	3,	0,	4,	413,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo108 },  // Inst #697 = DSTT64
  { 698,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList11, ImplicitList11, OperandInfo109 },  // Inst #698 = DYNALLOC
  { 699,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList29, ImplicitList29, OperandInfo110 },  // Inst #699 = DYNALLOC8
  { 700,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo111 },  // Inst #700 = DYNAREAOFFSET
  { 701,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo111 },  // Inst #701 = DYNAREAOFFSET8
  { 702,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList13, ImplicitList13, OperandInfo112 },  // Inst #702 = DecreaseCTR8Pseudo
  { 703,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList12, ImplicitList12, OperandInfo112 },  // Inst #703 = DecreaseCTRPseudo
  { 704,	2,	1,	4,	16,	0, 0x0ULL, nullptr, nullptr, OperandInfo113 },  // Inst #704 = EFDABS
  { 705,	3,	1,	4,	17,	0, 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #705 = EFDADD
  { 706,	2,	1,	4,	16,	0, 0x0ULL, nullptr, nullptr, OperandInfo115 },  // Inst #706 = EFDCFS
  { 707,	2,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo115 },  // Inst #707 = EFDCFSF
  { 708,	2,	1,	4,	16,	0, 0x0ULL, nullptr, nullptr, OperandInfo115 },  // Inst #708 = EFDCFSI
  { 709,	2,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo115 },  // Inst #709 = EFDCFSID
  { 710,	2,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo115 },  // Inst #710 = EFDCFUF
  { 711,	2,	1,	4,	16,	0, 0x0ULL, nullptr, nullptr, OperandInfo115 },  // Inst #711 = EFDCFUI
  { 712,	2,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo115 },  // Inst #712 = EFDCFUID
  { 713,	3,	1,	4,	16,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo116 },  // Inst #713 = EFDCMPEQ
  { 714,	3,	1,	4,	16,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo116 },  // Inst #714 = EFDCMPGT
  { 715,	3,	1,	4,	16,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo116 },  // Inst #715 = EFDCMPLT
  { 716,	2,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo115 },  // Inst #716 = EFDCTSF
  { 717,	2,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo117 },  // Inst #717 = EFDCTSI
  { 718,	2,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo117 },  // Inst #718 = EFDCTSIDZ
  { 719,	2,	1,	4,	16,	0, 0x0ULL, nullptr, nullptr, OperandInfo117 },  // Inst #719 = EFDCTSIZ
  { 720,	2,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo115 },  // Inst #720 = EFDCTUF
  { 721,	2,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo117 },  // Inst #721 = EFDCTUI
  { 722,	2,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo117 },  // Inst #722 = EFDCTUIDZ
  { 723,	2,	1,	4,	16,	0, 0x0ULL, nullptr, nullptr, OperandInfo117 },  // Inst #723 = EFDCTUIZ
  { 724,	3,	1,	4,	18,	0, 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #724 = EFDDIV
  { 725,	3,	1,	4,	16,	0, 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #725 = EFDMUL
  { 726,	2,	1,	4,	16,	0, 0x0ULL, nullptr, nullptr, OperandInfo113 },  // Inst #726 = EFDNABS
  { 727,	2,	1,	4,	16,	0, 0x0ULL, nullptr, nullptr, OperandInfo113 },  // Inst #727 = EFDNEG
  { 728,	3,	1,	4,	16,	0, 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #728 = EFDSUB
  { 729,	3,	1,	4,	16,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo116 },  // Inst #729 = EFDTSTEQ
  { 730,	3,	1,	4,	16,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo116 },  // Inst #730 = EFDTSTGT
  { 731,	3,	1,	4,	16,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo116 },  // Inst #731 = EFDTSTLT
  { 732,	2,	1,	4,	19,	0, 0x0ULL, nullptr, nullptr, OperandInfo80 },  // Inst #732 = EFSABS
  { 733,	3,	1,	4,	17,	0, 0x0ULL, nullptr, nullptr, OperandInfo66 },  // Inst #733 = EFSADD
  { 734,	2,	1,	4,	19,	0, 0x0ULL, nullptr, nullptr, OperandInfo117 },  // Inst #734 = EFSCFD
  { 735,	2,	1,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo80 },  // Inst #735 = EFSCFSF
  { 736,	2,	1,	4,	19,	0, 0x0ULL, nullptr, nullptr, OperandInfo80 },  // Inst #736 = EFSCFSI
  { 737,	2,	1,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo80 },  // Inst #737 = EFSCFUF
  { 738,	2,	1,	4,	19,	0, 0x0ULL, nullptr, nullptr, OperandInfo80 },  // Inst #738 = EFSCFUI
  { 739,	3,	1,	4,	20,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo101 },  // Inst #739 = EFSCMPEQ
  { 740,	3,	1,	4,	20,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo101 },  // Inst #740 = EFSCMPGT
  { 741,	3,	1,	4,	20,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo101 },  // Inst #741 = EFSCMPLT
  { 742,	2,	1,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo80 },  // Inst #742 = EFSCTSF
  { 743,	2,	1,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo80 },  // Inst #743 = EFSCTSI
  { 744,	2,	1,	4,	19,	0, 0x0ULL, nullptr, nullptr, OperandInfo80 },  // Inst #744 = EFSCTSIZ
  { 745,	2,	1,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo115 },  // Inst #745 = EFSCTUF
  { 746,	2,	1,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo80 },  // Inst #746 = EFSCTUI
  { 747,	2,	1,	4,	19,	0, 0x0ULL, nullptr, nullptr, OperandInfo80 },  // Inst #747 = EFSCTUIZ
  { 748,	3,	1,	4,	18,	0, 0x0ULL, nullptr, nullptr, OperandInfo66 },  // Inst #748 = EFSDIV
  { 749,	3,	1,	4,	21,	0, 0x0ULL, nullptr, nullptr, OperandInfo66 },  // Inst #749 = EFSMUL
  { 750,	2,	1,	4,	21,	0, 0x0ULL, nullptr, nullptr, OperandInfo80 },  // Inst #750 = EFSNABS
  { 751,	2,	1,	4,	21,	0, 0x0ULL, nullptr, nullptr, OperandInfo80 },  // Inst #751 = EFSNEG
  { 752,	3,	1,	4,	19,	0, 0x0ULL, nullptr, nullptr, OperandInfo66 },  // Inst #752 = EFSSUB
  { 753,	3,	1,	4,	20,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo116 },  // Inst #753 = EFSTSTEQ
  { 754,	3,	1,	4,	20,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo116 },  // Inst #754 = EFSTSTGT
  { 755,	3,	1,	4,	20,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo116 },  // Inst #755 = EFSTSTLT
  { 756,	1,	0,	4,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo118 },  // Inst #756 = EH_SjLj_LongJmp32
  { 757,	1,	0,	4,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo118 },  // Inst #757 = EH_SjLj_LongJmp64
  { 758,	2,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList12, OperandInfo119 },  // Inst #758 = EH_SjLj_SetJmp32
  { 759,	2,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList13, OperandInfo119 },  // Inst #759 = EH_SjLj_SetJmp64
  { 760,	1,	0,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo88 },  // Inst #760 = EH_SjLj_Setup
  { 761,	3,	1,	4,	404,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo66 },  // Inst #761 = EQV
  { 762,	3,	1,	4,	404,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo68 },  // Inst #762 = EQV8
  { 763,	3,	1,	4,	404,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo68 },  // Inst #763 = EQV8_rec
  { 764,	3,	1,	4,	404,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo66 },  // Inst #764 = EQV_rec
  { 765,	2,	1,	4,	294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo113 },  // Inst #765 = EVABS
  { 766,	3,	1,	4,	294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo120 },  // Inst #766 = EVADDIW
  { 767,	2,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo113 },  // Inst #767 = EVADDSMIAAW
  { 768,	2,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo113 },  // Inst #768 = EVADDSSIAAW
  { 769,	2,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo113 },  // Inst #769 = EVADDUMIAAW
  { 770,	2,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo113 },  // Inst #770 = EVADDUSIAAW
  { 771,	3,	1,	4,	294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #771 = EVADDW
  { 772,	3,	1,	4,	294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #772 = EVAND
  { 773,	3,	1,	4,	294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #773 = EVANDC
  { 774,	3,	1,	4,	294,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo116 },  // Inst #774 = EVCMPEQ
  { 775,	3,	1,	4,	294,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo116 },  // Inst #775 = EVCMPGTS
  { 776,	3,	1,	4,	294,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo116 },  // Inst #776 = EVCMPGTU
  { 777,	3,	1,	4,	294,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo116 },  // Inst #777 = EVCMPLTS
  { 778,	3,	1,	4,	294,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo116 },  // Inst #778 = EVCMPLTU
  { 779,	2,	1,	4,	294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo113 },  // Inst #779 = EVCNTLSW
  { 780,	2,	1,	4,	294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo113 },  // Inst #780 = EVCNTLZW
  { 781,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #781 = EVDIVWS
  { 782,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #782 = EVDIVWU
  { 783,	3,	1,	4,	294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #783 = EVEQV
  { 784,	2,	1,	4,	294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo113 },  // Inst #784 = EVEXTSB
  { 785,	2,	1,	4,	294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo113 },  // Inst #785 = EVEXTSH
  { 786,	2,	1,	4,	22,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo113 },  // Inst #786 = EVFSABS
  { 787,	3,	1,	4,	23,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #787 = EVFSADD
  { 788,	2,	1,	4,	23,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo113 },  // Inst #788 = EVFSCFSF
  { 789,	2,	1,	4,	23,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo113 },  // Inst #789 = EVFSCFSI
  { 790,	2,	1,	4,	23,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo113 },  // Inst #790 = EVFSCFUF
  { 791,	2,	1,	4,	23,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo113 },  // Inst #791 = EVFSCFUI
  { 792,	3,	1,	4,	19,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo116 },  // Inst #792 = EVFSCMPEQ
  { 793,	3,	1,	4,	19,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo116 },  // Inst #793 = EVFSCMPGT
  { 794,	3,	1,	4,	19,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo116 },  // Inst #794 = EVFSCMPLT
  { 795,	2,	1,	4,	23,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo113 },  // Inst #795 = EVFSCTSF
  { 796,	2,	1,	4,	23,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo113 },  // Inst #796 = EVFSCTSI
  { 797,	2,	1,	4,	23,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo113 },  // Inst #797 = EVFSCTSIZ
  { 798,	2,	1,	4,	23,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo113 },  // Inst #798 = EVFSCTUF
  { 799,	2,	1,	4,	23,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo113 },  // Inst #799 = EVFSCTUI
  { 800,	2,	1,	4,	23,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo113 },  // Inst #800 = EVFSCTUIZ
  { 801,	3,	1,	4,	18,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #801 = EVFSDIV
  { 802,	3,	1,	4,	23,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #802 = EVFSMUL
  { 803,	2,	1,	4,	22,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo113 },  // Inst #803 = EVFSNABS
  { 804,	2,	1,	4,	22,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo113 },  // Inst #804 = EVFSNEG
  { 805,	3,	1,	4,	23,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #805 = EVFSSUB
  { 806,	3,	1,	4,	22,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo116 },  // Inst #806 = EVFSTSTEQ
  { 807,	3,	1,	4,	22,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo116 },  // Inst #807 = EVFSTSTGT
  { 808,	3,	1,	4,	22,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo116 },  // Inst #808 = EVFSTSTLT
  { 809,	3,	1,	4,	296,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo121 },  // Inst #809 = EVLDD
  { 810,	3,	1,	4,	296,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo122 },  // Inst #810 = EVLDDX
  { 811,	3,	1,	4,	296,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo121 },  // Inst #811 = EVLDH
  { 812,	3,	1,	4,	296,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo122 },  // Inst #812 = EVLDHX
  { 813,	3,	1,	4,	296,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo121 },  // Inst #813 = EVLDW
  { 814,	3,	1,	4,	296,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo122 },  // Inst #814 = EVLDWX
  { 815,	3,	1,	4,	296,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo121 },  // Inst #815 = EVLHHESPLAT
  { 816,	3,	1,	4,	296,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo122 },  // Inst #816 = EVLHHESPLATX
  { 817,	3,	1,	4,	296,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo121 },  // Inst #817 = EVLHHOSSPLAT
  { 818,	3,	1,	4,	296,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo122 },  // Inst #818 = EVLHHOSSPLATX
  { 819,	3,	1,	4,	296,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo121 },  // Inst #819 = EVLHHOUSPLAT
  { 820,	3,	1,	4,	296,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo122 },  // Inst #820 = EVLHHOUSPLATX
  { 821,	3,	1,	4,	296,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo121 },  // Inst #821 = EVLWHE
  { 822,	3,	1,	4,	296,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo122 },  // Inst #822 = EVLWHEX
  { 823,	3,	1,	4,	296,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo121 },  // Inst #823 = EVLWHOS
  { 824,	3,	1,	4,	296,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo122 },  // Inst #824 = EVLWHOSX
  { 825,	3,	1,	4,	296,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo121 },  // Inst #825 = EVLWHOU
  { 826,	3,	1,	4,	296,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo122 },  // Inst #826 = EVLWHOUX
  { 827,	3,	1,	4,	296,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo121 },  // Inst #827 = EVLWHSPLAT
  { 828,	3,	1,	4,	296,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo122 },  // Inst #828 = EVLWHSPLATX
  { 829,	3,	1,	4,	296,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo121 },  // Inst #829 = EVLWWSPLAT
  { 830,	3,	1,	4,	296,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo122 },  // Inst #830 = EVLWWSPLATX
  { 831,	3,	1,	4,	294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #831 = EVMERGEHI
  { 832,	3,	1,	4,	294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #832 = EVMERGEHILO
  { 833,	3,	1,	4,	294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo123 },  // Inst #833 = EVMERGELO
  { 834,	3,	1,	4,	294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #834 = EVMERGELOHI
  { 835,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #835 = EVMHEGSMFAA
  { 836,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #836 = EVMHEGSMFAN
  { 837,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #837 = EVMHEGSMIAA
  { 838,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #838 = EVMHEGSMIAN
  { 839,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #839 = EVMHEGUMIAA
  { 840,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #840 = EVMHEGUMIAN
  { 841,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #841 = EVMHESMF
  { 842,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #842 = EVMHESMFA
  { 843,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #843 = EVMHESMFAAW
  { 844,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #844 = EVMHESMFANW
  { 845,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #845 = EVMHESMI
  { 846,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #846 = EVMHESMIA
  { 847,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #847 = EVMHESMIAAW
  { 848,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #848 = EVMHESMIANW
  { 849,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #849 = EVMHESSF
  { 850,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #850 = EVMHESSFA
  { 851,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #851 = EVMHESSFAAW
  { 852,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #852 = EVMHESSFANW
  { 853,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #853 = EVMHESSIAAW
  { 854,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #854 = EVMHESSIANW
  { 855,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #855 = EVMHEUMI
  { 856,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #856 = EVMHEUMIA
  { 857,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #857 = EVMHEUMIAAW
  { 858,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #858 = EVMHEUMIANW
  { 859,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #859 = EVMHEUSIAAW
  { 860,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #860 = EVMHEUSIANW
  { 861,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #861 = EVMHOGSMFAA
  { 862,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #862 = EVMHOGSMFAN
  { 863,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #863 = EVMHOGSMIAA
  { 864,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #864 = EVMHOGSMIAN
  { 865,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #865 = EVMHOGUMIAA
  { 866,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #866 = EVMHOGUMIAN
  { 867,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #867 = EVMHOSMF
  { 868,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #868 = EVMHOSMFA
  { 869,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #869 = EVMHOSMFAAW
  { 870,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #870 = EVMHOSMFANW
  { 871,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #871 = EVMHOSMI
  { 872,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #872 = EVMHOSMIA
  { 873,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #873 = EVMHOSMIAAW
  { 874,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #874 = EVMHOSMIANW
  { 875,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #875 = EVMHOSSF
  { 876,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #876 = EVMHOSSFA
  { 877,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #877 = EVMHOSSFAAW
  { 878,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #878 = EVMHOSSFANW
  { 879,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #879 = EVMHOSSIAAW
  { 880,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #880 = EVMHOSSIANW
  { 881,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #881 = EVMHOUMI
  { 882,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #882 = EVMHOUMIA
  { 883,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #883 = EVMHOUMIAAW
  { 884,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #884 = EVMHOUMIANW
  { 885,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #885 = EVMHOUSIAAW
  { 886,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #886 = EVMHOUSIANW
  { 887,	2,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo113 },  // Inst #887 = EVMRA
  { 888,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #888 = EVMWHSMF
  { 889,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #889 = EVMWHSMFA
  { 890,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #890 = EVMWHSMI
  { 891,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #891 = EVMWHSMIA
  { 892,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #892 = EVMWHSSF
  { 893,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #893 = EVMWHSSFA
  { 894,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #894 = EVMWHUMI
  { 895,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #895 = EVMWHUMIA
  { 896,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #896 = EVMWLSMIAAW
  { 897,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #897 = EVMWLSMIANW
  { 898,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #898 = EVMWLSSIAAW
  { 899,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #899 = EVMWLSSIANW
  { 900,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #900 = EVMWLUMI
  { 901,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #901 = EVMWLUMIA
  { 902,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #902 = EVMWLUMIAAW
  { 903,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #903 = EVMWLUMIANW
  { 904,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #904 = EVMWLUSIAAW
  { 905,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #905 = EVMWLUSIANW
  { 906,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #906 = EVMWSMF
  { 907,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #907 = EVMWSMFA
  { 908,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #908 = EVMWSMFAA
  { 909,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #909 = EVMWSMFAN
  { 910,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #910 = EVMWSMI
  { 911,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #911 = EVMWSMIA
  { 912,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #912 = EVMWSMIAA
  { 913,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #913 = EVMWSMIAN
  { 914,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #914 = EVMWSSF
  { 915,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #915 = EVMWSSFA
  { 916,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #916 = EVMWSSFAA
  { 917,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #917 = EVMWSSFAN
  { 918,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #918 = EVMWUMI
  { 919,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #919 = EVMWUMIA
  { 920,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #920 = EVMWUMIAA
  { 921,	3,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #921 = EVMWUMIAN
  { 922,	3,	1,	4,	294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #922 = EVNAND
  { 923,	2,	1,	4,	294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo113 },  // Inst #923 = EVNEG
  { 924,	3,	1,	4,	294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #924 = EVNOR
  { 925,	3,	1,	4,	294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #925 = EVOR
  { 926,	3,	1,	4,	294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #926 = EVORC
  { 927,	3,	1,	4,	294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #927 = EVRLW
  { 928,	3,	1,	4,	294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo120 },  // Inst #928 = EVRLWI
  { 929,	2,	1,	4,	294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo113 },  // Inst #929 = EVRNDW
  { 930,	4,	1,	4,	22,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo124 },  // Inst #930 = EVSEL
  { 931,	3,	1,	4,	294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #931 = EVSLW
  { 932,	3,	1,	4,	294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo120 },  // Inst #932 = EVSLWI
  { 933,	2,	1,	4,	294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo125 },  // Inst #933 = EVSPLATFI
  { 934,	2,	1,	4,	294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo125 },  // Inst #934 = EVSPLATI
  { 935,	3,	1,	4,	294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo120 },  // Inst #935 = EVSRWIS
  { 936,	3,	1,	4,	294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo120 },  // Inst #936 = EVSRWIU
  { 937,	3,	1,	4,	294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #937 = EVSRWS
  { 938,	3,	1,	4,	294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #938 = EVSRWU
  { 939,	3,	0,	4,	297,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo121 },  // Inst #939 = EVSTDD
  { 940,	3,	0,	4,	297,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo122 },  // Inst #940 = EVSTDDX
  { 941,	3,	0,	4,	297,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo121 },  // Inst #941 = EVSTDH
  { 942,	3,	0,	4,	297,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo122 },  // Inst #942 = EVSTDHX
  { 943,	3,	0,	4,	297,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo121 },  // Inst #943 = EVSTDW
  { 944,	3,	0,	4,	297,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo122 },  // Inst #944 = EVSTDWX
  { 945,	3,	0,	4,	297,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo121 },  // Inst #945 = EVSTWHE
  { 946,	3,	0,	4,	297,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo122 },  // Inst #946 = EVSTWHEX
  { 947,	3,	0,	4,	297,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo121 },  // Inst #947 = EVSTWHO
  { 948,	3,	0,	4,	297,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo122 },  // Inst #948 = EVSTWHOX
  { 949,	3,	0,	4,	297,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo121 },  // Inst #949 = EVSTWWE
  { 950,	3,	0,	4,	297,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo122 },  // Inst #950 = EVSTWWEX
  { 951,	3,	0,	4,	297,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo121 },  // Inst #951 = EVSTWWO
  { 952,	3,	0,	4,	297,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo122 },  // Inst #952 = EVSTWWOX
  { 953,	2,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo113 },  // Inst #953 = EVSUBFSMIAAW
  { 954,	2,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo113 },  // Inst #954 = EVSUBFSSIAAW
  { 955,	2,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo113 },  // Inst #955 = EVSUBFUMIAAW
  { 956,	2,	1,	4,	295,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo113 },  // Inst #956 = EVSUBFUSIAAW
  { 957,	3,	1,	4,	294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #957 = EVSUBFW
  { 958,	3,	1,	4,	294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo126 },  // Inst #958 = EVSUBIFW
  { 959,	3,	1,	4,	294,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo114 },  // Inst #959 = EVXOR
  { 960,	2,	1,	4,	392,	0, 0x8ULL, nullptr, nullptr, OperandInfo80 },  // Inst #960 = EXTSB
  { 961,	2,	1,	4,	392,	0, 0x8ULL, nullptr, nullptr, OperandInfo81 },  // Inst #961 = EXTSB8
  { 962,	2,	1,	4,	392,	0, 0x8ULL, nullptr, nullptr, OperandInfo127 },  // Inst #962 = EXTSB8_32_64
  { 963,	2,	1,	4,	392,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo81 },  // Inst #963 = EXTSB8_rec
  { 964,	2,	1,	4,	392,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo80 },  // Inst #964 = EXTSB_rec
  { 965,	2,	1,	4,	392,	0, 0x8ULL, nullptr, nullptr, OperandInfo80 },  // Inst #965 = EXTSH
  { 966,	2,	1,	4,	392,	0, 0x8ULL, nullptr, nullptr, OperandInfo81 },  // Inst #966 = EXTSH8
  { 967,	2,	1,	4,	392,	0, 0x8ULL, nullptr, nullptr, OperandInfo127 },  // Inst #967 = EXTSH8_32_64
  { 968,	2,	1,	4,	392,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo81 },  // Inst #968 = EXTSH8_rec
  { 969,	2,	1,	4,	392,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo80 },  // Inst #969 = EXTSH_rec
  { 970,	2,	1,	4,	392,	0, 0x8ULL, nullptr, nullptr, OperandInfo81 },  // Inst #970 = EXTSW
  { 971,	3,	1,	4,	407,	0, 0x8ULL, nullptr, ImplicitList5, OperandInfo53 },  // Inst #971 = EXTSWSLI
  { 972,	3,	1,	4,	407,	0, 0x8ULL, nullptr, nullptr, OperandInfo128 },  // Inst #972 = EXTSWSLI_32_64
  { 973,	3,	1,	4,	373,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo128 },  // Inst #973 = EXTSWSLI_32_64_rec
  { 974,	3,	1,	4,	373,	0, 0x8ULL, nullptr, ImplicitList8, OperandInfo53 },  // Inst #974 = EXTSWSLI_rec
  { 975,	2,	1,	4,	392,	0, 0x8ULL, nullptr, nullptr, OperandInfo80 },  // Inst #975 = EXTSW_32
  { 976,	2,	1,	4,	392,	0, 0x8ULL, nullptr, nullptr, OperandInfo127 },  // Inst #976 = EXTSW_32_64
  { 977,	2,	1,	4,	392,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo127 },  // Inst #977 = EXTSW_32_64_rec
  { 978,	2,	1,	4,	392,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo81 },  // Inst #978 = EXTSW_rec
  { 979,	0,	0,	4,	483,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #979 = EnforceIEIO
  { 980,	2,	1,	4,	396,	0, 0x18ULL, nullptr, nullptr, OperandInfo129 },  // Inst #980 = FABSD
  { 981,	2,	1,	4,	422,	0, 0x18ULL, nullptr, ImplicitList30, OperandInfo129 },  // Inst #981 = FABSD_rec
  { 982,	2,	1,	4,	396,	0, 0x18ULL, nullptr, nullptr, OperandInfo130 },  // Inst #982 = FABSS
  { 983,	2,	1,	4,	422,	0, 0x18ULL, nullptr, ImplicitList30, OperandInfo130 },  // Inst #983 = FABSS_rec
  { 984,	3,	1,	4,	153,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList18, nullptr, OperandInfo131 },  // Inst #984 = FADD
  { 985,	3,	1,	4,	322,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList18, nullptr, OperandInfo132 },  // Inst #985 = FADDS
  { 986,	3,	1,	4,	330,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList18, ImplicitList30, OperandInfo132 },  // Inst #986 = FADDS_rec
  { 987,	3,	1,	4,	161,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList18, ImplicitList30, OperandInfo131 },  // Inst #987 = FADD_rec
  { 988,	3,	1,	4,	0,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList18, nullptr, OperandInfo131 },  // Inst #988 = FADDrtz
  { 989,	2,	1,	4,	318,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, nullptr, OperandInfo129 },  // Inst #989 = FCFID
  { 990,	2,	1,	4,	318,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, nullptr, OperandInfo133 },  // Inst #990 = FCFIDS
  { 991,	2,	1,	4,	332,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, ImplicitList30, OperandInfo133 },  // Inst #991 = FCFIDS_rec
  { 992,	2,	1,	4,	318,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, nullptr, OperandInfo129 },  // Inst #992 = FCFIDU
  { 993,	2,	1,	4,	318,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, nullptr, OperandInfo133 },  // Inst #993 = FCFIDUS
  { 994,	2,	1,	4,	332,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, ImplicitList30, OperandInfo133 },  // Inst #994 = FCFIDUS_rec
  { 995,	2,	1,	4,	332,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, ImplicitList30, OperandInfo129 },  // Inst #995 = FCFIDU_rec
  { 996,	2,	1,	4,	332,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, ImplicitList30, OperandInfo129 },  // Inst #996 = FCFID_rec
  { 997,	3,	1,	4,	110,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, nullptr, nullptr, OperandInfo134 },  // Inst #997 = FCMPOD
  { 998,	3,	1,	4,	110,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, nullptr, nullptr, OperandInfo135 },  // Inst #998 = FCMPOS
  { 999,	3,	1,	4,	110,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, nullptr, nullptr, OperandInfo134 },  // Inst #999 = FCMPUD
  { 1000,	3,	1,	4,	110,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, nullptr, nullptr, OperandInfo135 },  // Inst #1000 = FCMPUS
  { 1001,	3,	1,	4,	135,	0, 0x18ULL, nullptr, nullptr, OperandInfo131 },  // Inst #1001 = FCPSGND
  { 1002,	3,	1,	4,	248,	0, 0x18ULL, nullptr, ImplicitList30, OperandInfo131 },  // Inst #1002 = FCPSGND_rec
  { 1003,	3,	1,	4,	135,	0, 0x18ULL, nullptr, nullptr, OperandInfo132 },  // Inst #1003 = FCPSGNS
  { 1004,	3,	1,	4,	248,	0, 0x18ULL, nullptr, ImplicitList30, OperandInfo132 },  // Inst #1004 = FCPSGNS_rec
  { 1005,	2,	1,	4,	318,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, nullptr, OperandInfo129 },  // Inst #1005 = FCTID
  { 1006,	2,	1,	4,	318,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, nullptr, OperandInfo129 },  // Inst #1006 = FCTIDU
  { 1007,	2,	1,	4,	318,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, nullptr, OperandInfo129 },  // Inst #1007 = FCTIDUZ
  { 1008,	2,	1,	4,	332,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, ImplicitList30, OperandInfo129 },  // Inst #1008 = FCTIDUZ_rec
  { 1009,	2,	1,	4,	332,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, ImplicitList30, OperandInfo129 },  // Inst #1009 = FCTIDU_rec
  { 1010,	2,	1,	4,	318,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, nullptr, OperandInfo129 },  // Inst #1010 = FCTIDZ
  { 1011,	2,	1,	4,	332,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, ImplicitList30, OperandInfo129 },  // Inst #1011 = FCTIDZ_rec
  { 1012,	2,	1,	4,	332,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, ImplicitList30, OperandInfo129 },  // Inst #1012 = FCTID_rec
  { 1013,	2,	1,	4,	318,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, nullptr, OperandInfo129 },  // Inst #1013 = FCTIW
  { 1014,	2,	1,	4,	318,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, nullptr, OperandInfo129 },  // Inst #1014 = FCTIWU
  { 1015,	2,	1,	4,	318,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, nullptr, OperandInfo129 },  // Inst #1015 = FCTIWUZ
  { 1016,	2,	1,	4,	332,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, ImplicitList30, OperandInfo129 },  // Inst #1016 = FCTIWUZ_rec
  { 1017,	2,	1,	4,	332,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, ImplicitList30, OperandInfo129 },  // Inst #1017 = FCTIWU_rec
  { 1018,	2,	1,	4,	318,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, nullptr, OperandInfo129 },  // Inst #1018 = FCTIWZ
  { 1019,	2,	1,	4,	332,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, ImplicitList30, OperandInfo129 },  // Inst #1019 = FCTIWZ_rec
  { 1020,	2,	1,	4,	332,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, ImplicitList30, OperandInfo129 },  // Inst #1020 = FCTIW_rec
  { 1021,	3,	1,	4,	261,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, nullptr, OperandInfo131 },  // Inst #1021 = FDIV
  { 1022,	3,	1,	4,	272,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, nullptr, OperandInfo132 },  // Inst #1022 = FDIVS
  { 1023,	3,	1,	4,	273,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, ImplicitList30, OperandInfo132 },  // Inst #1023 = FDIVS_rec
  { 1024,	3,	1,	4,	262,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, ImplicitList30, OperandInfo131 },  // Inst #1024 = FDIV_rec
  { 1025,	4,	1,	4,	154,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList18, nullptr, OperandInfo136 },  // Inst #1025 = FMADD
  { 1026,	4,	1,	4,	152,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList18, nullptr, OperandInfo137 },  // Inst #1026 = FMADDS
  { 1027,	4,	1,	4,	160,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList18, ImplicitList30, OperandInfo137 },  // Inst #1027 = FMADDS_rec
  { 1028,	4,	1,	4,	162,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList18, ImplicitList30, OperandInfo136 },  // Inst #1028 = FMADD_rec
  { 1029,	2,	1,	4,	396,	0, 0x0ULL, nullptr, nullptr, OperandInfo130 },  // Inst #1029 = FMR
  { 1030,	2,	1,	4,	422,	0, 0x0ULL, nullptr, ImplicitList30, OperandInfo130 },  // Inst #1030 = FMR_rec
  { 1031,	4,	1,	4,	154,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList18, nullptr, OperandInfo136 },  // Inst #1031 = FMSUB
  { 1032,	4,	1,	4,	152,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList18, nullptr, OperandInfo137 },  // Inst #1032 = FMSUBS
  { 1033,	4,	1,	4,	160,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList18, ImplicitList30, OperandInfo137 },  // Inst #1033 = FMSUBS_rec
  { 1034,	4,	1,	4,	162,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList18, ImplicitList30, OperandInfo136 },  // Inst #1034 = FMSUB_rec
  { 1035,	3,	1,	4,	323,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList18, nullptr, OperandInfo131 },  // Inst #1035 = FMUL
  { 1036,	3,	1,	4,	322,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList18, nullptr, OperandInfo132 },  // Inst #1036 = FMULS
  { 1037,	3,	1,	4,	330,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList18, ImplicitList30, OperandInfo132 },  // Inst #1037 = FMULS_rec
  { 1038,	3,	1,	4,	331,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList18, ImplicitList30, OperandInfo131 },  // Inst #1038 = FMUL_rec
  { 1039,	2,	1,	4,	396,	0, 0x18ULL, nullptr, nullptr, OperandInfo129 },  // Inst #1039 = FNABSD
  { 1040,	2,	1,	4,	422,	0, 0x18ULL, nullptr, ImplicitList30, OperandInfo129 },  // Inst #1040 = FNABSD_rec
  { 1041,	2,	1,	4,	396,	0, 0x18ULL, nullptr, nullptr, OperandInfo130 },  // Inst #1041 = FNABSS
  { 1042,	2,	1,	4,	422,	0, 0x18ULL, nullptr, ImplicitList30, OperandInfo130 },  // Inst #1042 = FNABSS_rec
  { 1043,	2,	1,	4,	396,	0, 0x18ULL, nullptr, nullptr, OperandInfo129 },  // Inst #1043 = FNEGD
  { 1044,	2,	1,	4,	422,	0, 0x18ULL, nullptr, ImplicitList30, OperandInfo129 },  // Inst #1044 = FNEGD_rec
  { 1045,	2,	1,	4,	396,	0, 0x18ULL, nullptr, nullptr, OperandInfo130 },  // Inst #1045 = FNEGS
  { 1046,	2,	1,	4,	422,	0, 0x18ULL, nullptr, ImplicitList30, OperandInfo130 },  // Inst #1046 = FNEGS_rec
  { 1047,	4,	1,	4,	154,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList18, nullptr, OperandInfo136 },  // Inst #1047 = FNMADD
  { 1048,	4,	1,	4,	152,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList18, nullptr, OperandInfo137 },  // Inst #1048 = FNMADDS
  { 1049,	4,	1,	4,	160,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList18, ImplicitList30, OperandInfo137 },  // Inst #1049 = FNMADDS_rec
  { 1050,	4,	1,	4,	162,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList18, ImplicitList30, OperandInfo136 },  // Inst #1050 = FNMADD_rec
  { 1051,	4,	1,	4,	154,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList18, nullptr, OperandInfo136 },  // Inst #1051 = FNMSUB
  { 1052,	4,	1,	4,	152,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList18, nullptr, OperandInfo137 },  // Inst #1052 = FNMSUBS
  { 1053,	4,	1,	4,	160,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList18, ImplicitList30, OperandInfo137 },  // Inst #1053 = FNMSUBS_rec
  { 1054,	4,	1,	4,	162,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList18, ImplicitList30, OperandInfo136 },  // Inst #1054 = FNMSUB_rec
  { 1055,	2,	1,	4,	318,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, nullptr, nullptr, OperandInfo129 },  // Inst #1055 = FRE
  { 1056,	2,	1,	4,	318,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, nullptr, nullptr, OperandInfo130 },  // Inst #1056 = FRES
  { 1057,	2,	1,	4,	332,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, nullptr, ImplicitList30, OperandInfo130 },  // Inst #1057 = FRES_rec
  { 1058,	2,	1,	4,	332,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, nullptr, ImplicitList30, OperandInfo129 },  // Inst #1058 = FRE_rec
  { 1059,	2,	1,	4,	318,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, nullptr, nullptr, OperandInfo129 },  // Inst #1059 = FRIMD
  { 1060,	2,	1,	4,	332,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, nullptr, ImplicitList30, OperandInfo129 },  // Inst #1060 = FRIMD_rec
  { 1061,	2,	1,	4,	318,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, nullptr, nullptr, OperandInfo130 },  // Inst #1061 = FRIMS
  { 1062,	2,	1,	4,	332,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, nullptr, ImplicitList30, OperandInfo130 },  // Inst #1062 = FRIMS_rec
  { 1063,	2,	1,	4,	318,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, nullptr, nullptr, OperandInfo129 },  // Inst #1063 = FRIND
  { 1064,	2,	1,	4,	332,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, nullptr, ImplicitList30, OperandInfo129 },  // Inst #1064 = FRIND_rec
  { 1065,	2,	1,	4,	318,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, nullptr, nullptr, OperandInfo130 },  // Inst #1065 = FRINS
  { 1066,	2,	1,	4,	332,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, nullptr, ImplicitList30, OperandInfo130 },  // Inst #1066 = FRINS_rec
  { 1067,	2,	1,	4,	318,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, nullptr, nullptr, OperandInfo129 },  // Inst #1067 = FRIPD
  { 1068,	2,	1,	4,	332,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, nullptr, ImplicitList30, OperandInfo129 },  // Inst #1068 = FRIPD_rec
  { 1069,	2,	1,	4,	318,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, nullptr, nullptr, OperandInfo130 },  // Inst #1069 = FRIPS
  { 1070,	2,	1,	4,	332,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, nullptr, ImplicitList30, OperandInfo130 },  // Inst #1070 = FRIPS_rec
  { 1071,	2,	1,	4,	318,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, nullptr, nullptr, OperandInfo129 },  // Inst #1071 = FRIZD
  { 1072,	2,	1,	4,	332,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, nullptr, ImplicitList30, OperandInfo129 },  // Inst #1072 = FRIZD_rec
  { 1073,	2,	1,	4,	318,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, nullptr, nullptr, OperandInfo130 },  // Inst #1073 = FRIZS
  { 1074,	2,	1,	4,	332,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, nullptr, ImplicitList30, OperandInfo130 },  // Inst #1074 = FRIZS_rec
  { 1075,	2,	1,	4,	318,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, nullptr, OperandInfo133 },  // Inst #1075 = FRSP
  { 1076,	2,	1,	4,	332,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, ImplicitList30, OperandInfo133 },  // Inst #1076 = FRSP_rec
  { 1077,	2,	1,	4,	318,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, nullptr, nullptr, OperandInfo129 },  // Inst #1077 = FRSQRTE
  { 1078,	2,	1,	4,	318,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, nullptr, nullptr, OperandInfo130 },  // Inst #1078 = FRSQRTES
  { 1079,	2,	1,	4,	332,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, nullptr, ImplicitList30, OperandInfo130 },  // Inst #1079 = FRSQRTES_rec
  { 1080,	2,	1,	4,	332,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, nullptr, ImplicitList30, OperandInfo129 },  // Inst #1080 = FRSQRTE_rec
  { 1081,	4,	1,	4,	152,	0, 0x18ULL, nullptr, nullptr, OperandInfo136 },  // Inst #1081 = FSELD
  { 1082,	4,	1,	4,	156,	0, 0x18ULL, nullptr, ImplicitList30, OperandInfo136 },  // Inst #1082 = FSELD_rec
  { 1083,	4,	1,	4,	152,	0, 0x18ULL, nullptr, nullptr, OperandInfo138 },  // Inst #1083 = FSELS
  { 1084,	4,	1,	4,	156,	0, 0x18ULL, nullptr, ImplicitList30, OperandInfo138 },  // Inst #1084 = FSELS_rec
  { 1085,	2,	1,	4,	264,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, nullptr, OperandInfo129 },  // Inst #1085 = FSQRT
  { 1086,	2,	1,	4,	269,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, nullptr, OperandInfo130 },  // Inst #1086 = FSQRTS
  { 1087,	2,	1,	4,	270,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, ImplicitList30, OperandInfo130 },  // Inst #1087 = FSQRTS_rec
  { 1088,	2,	1,	4,	267,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, ImplicitList30, OperandInfo129 },  // Inst #1088 = FSQRT_rec
  { 1089,	3,	1,	4,	153,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, nullptr, OperandInfo131 },  // Inst #1089 = FSUB
  { 1090,	3,	1,	4,	322,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, nullptr, OperandInfo132 },  // Inst #1090 = FSUBS
  { 1091,	3,	1,	4,	330,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, ImplicitList30, OperandInfo132 },  // Inst #1091 = FSUBS_rec
  { 1092,	3,	1,	4,	161,	0|(1ULL<<MCID::MayRaiseFPException), 0x18ULL, ImplicitList18, ImplicitList30, OperandInfo131 },  // Inst #1092 = FSUB_rec
  { 1093,	3,	1,	4,	110,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x18ULL, nullptr, nullptr, OperandInfo134 },  // Inst #1093 = FTDIV
  { 1094,	2,	1,	4,	363,	0, 0x18ULL, nullptr, nullptr, OperandInfo139 },  // Inst #1094 = FTSQRT
  { 1095,	3,	1,	8,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList31, OperandInfo70 },  // Inst #1095 = GETtlsADDR
  { 1096,	3,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList32, OperandInfo67 },  // Inst #1096 = GETtlsADDR32
  { 1097,	3,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList33, OperandInfo66 },  // Inst #1097 = GETtlsADDR32AIX
  { 1098,	3,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList34, OperandInfo68 },  // Inst #1098 = GETtlsADDR64AIX
  { 1099,	3,	1,	8,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList35, OperandInfo70 },  // Inst #1099 = GETtlsADDRPCREL
  { 1100,	3,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList31, OperandInfo70 },  // Inst #1100 = GETtlsldADDR
  { 1101,	3,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList32, OperandInfo67 },  // Inst #1101 = GETtlsldADDR32
  { 1102,	3,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList35, OperandInfo70 },  // Inst #1102 = GETtlsldADDRPCREL
  { 1103,	3,	0,	4,	312,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo60 },  // Inst #1103 = HASHCHK
  { 1104,	3,	0,	4,	312,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo140 },  // Inst #1104 = HASHCHK8
  { 1105,	3,	0,	4,	312,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo60 },  // Inst #1105 = HASHCHKP
  { 1106,	3,	0,	4,	312,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo140 },  // Inst #1106 = HASHCHKP8
  { 1107,	3,	0,	4,	343,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo60 },  // Inst #1107 = HASHST
  { 1108,	3,	0,	4,	343,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo140 },  // Inst #1108 = HASHST8
  { 1109,	3,	0,	4,	343,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo60 },  // Inst #1109 = HASHSTP
  { 1110,	3,	0,	4,	343,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo140 },  // Inst #1110 = HASHSTP8
  { 1111,	0,	0,	4,	421,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #1111 = HRFID
  { 1112,	2,	0,	4,	474,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo55 },  // Inst #1112 = ICBI
  { 1113,	2,	0,	4,	181,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo55 },  // Inst #1113 = ICBIEP
  { 1114,	3,	0,	4,	490,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo106 },  // Inst #1114 = ICBLC
  { 1115,	3,	0,	4,	489,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo106 },  // Inst #1115 = ICBLQ
  { 1116,	3,	0,	4,	434,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo106 },  // Inst #1116 = ICBT
  { 1117,	3,	0,	4,	182,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo106 },  // Inst #1117 = ICBTLS
  { 1118,	2,	0,	4,	489,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo80 },  // Inst #1118 = ICCCI
  { 1119,	4,	1,	4,	137,	0|(1ULL<<MCID::Select), 0x8ULL, nullptr, nullptr, OperandInfo141 },  // Inst #1119 = ISEL
  { 1120,	4,	1,	4,	137,	0|(1ULL<<MCID::Select), 0x8ULL, nullptr, nullptr, OperandInfo142 },  // Inst #1120 = ISEL8
  { 1121,	0,	0,	4,	187,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #1121 = ISYNC
  { 1122,	3,	1,	4,	119,	0, 0x8ULL, nullptr, nullptr, OperandInfo73 },  // Inst #1122 = LA
  { 1123,	3,	1,	4,	119,	0, 0x8ULL, nullptr, nullptr, OperandInfo74 },  // Inst #1123 = LA8
  { 1124,	3,	1,	4,	183,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1124 = LBARX
  { 1125,	3,	1,	4,	183,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1125 = LBARXL
  { 1126,	3,	1,	4,	301,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1126 = LBEPX
  { 1127,	3,	1,	4,	429,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo60 },  // Inst #1127 = LBZ
  { 1128,	3,	1,	4,	429,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo140 },  // Inst #1128 = LBZ8
  { 1129,	3,	1,	4,	437,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo66 },  // Inst #1129 = LBZCIX
  { 1130,	4,	2,	4,	282,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo144 },  // Inst #1130 = LBZU
  { 1131,	4,	2,	4,	282,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo145 },  // Inst #1131 = LBZU8
  { 1132,	4,	2,	4,	283,	0|(1ULL<<MCID::MayLoad), 0x50ULL, nullptr, nullptr, OperandInfo146 },  // Inst #1132 = LBZUX
  { 1133,	4,	2,	4,	283,	0|(1ULL<<MCID::MayLoad), 0x50ULL, nullptr, nullptr, OperandInfo147 },  // Inst #1133 = LBZUX8
  { 1134,	3,	1,	4,	434,	0|(1ULL<<MCID::MayLoad), 0x50ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1134 = LBZX
  { 1135,	3,	1,	4,	434,	0|(1ULL<<MCID::MayLoad), 0x50ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1135 = LBZX8
  { 1136,	3,	1,	4,	434,	0|(1ULL<<MCID::MayLoad), 0x8ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1136 = LBZXTLS
  { 1137,	3,	1,	4,	434,	0|(1ULL<<MCID::MayLoad), 0x8ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1137 = LBZXTLS_
  { 1138,	3,	1,	4,	434,	0|(1ULL<<MCID::MayLoad), 0x8ULL, nullptr, nullptr, OperandInfo150 },  // Inst #1138 = LBZXTLS_32
  { 1139,	3,	1,	4,	430,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo140 },  // Inst #1139 = LD
  { 1140,	3,	1,	4,	185,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1140 = LDARX
  { 1141,	3,	1,	4,	185,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1141 = LDARXL
  { 1142,	3,	1,	4,	291,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x40ULL, nullptr, nullptr, OperandInfo53 },  // Inst #1142 = LDAT
  { 1143,	3,	1,	4,	429,	0|(1ULL<<MCID::MayLoad), 0x50ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1143 = LDBRX
  { 1144,	3,	1,	4,	437,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo66 },  // Inst #1144 = LDCIX
  { 1145,	4,	2,	4,	284,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo145 },  // Inst #1145 = LDU
  { 1146,	4,	2,	4,	285,	0|(1ULL<<MCID::MayLoad), 0x50ULL, nullptr, nullptr, OperandInfo147 },  // Inst #1146 = LDUX
  { 1147,	3,	1,	4,	435,	0|(1ULL<<MCID::MayLoad), 0x50ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1147 = LDX
  { 1148,	3,	1,	4,	435,	0|(1ULL<<MCID::MayLoad), 0x8ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1148 = LDXTLS
  { 1149,	3,	1,	4,	435,	0|(1ULL<<MCID::MayLoad), 0x8ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1149 = LDXTLS_
  { 1150,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo151 },  // Inst #1150 = LDgotTprelL
  { 1151,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo152 },  // Inst #1151 = LDgotTprelL32
  { 1152,	3,	1,	4,	431,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo153 },  // Inst #1152 = LDtoc
  { 1153,	3,	1,	4,	431,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo153 },  // Inst #1153 = LDtocBA
  { 1154,	3,	1,	4,	431,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo153 },  // Inst #1154 = LDtocCPT
  { 1155,	3,	1,	4,	431,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo153 },  // Inst #1155 = LDtocJTI
  { 1156,	3,	1,	4,	431,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo79 },  // Inst #1156 = LDtocL
  { 1157,	3,	1,	4,	192,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo154 },  // Inst #1157 = LFD
  { 1158,	3,	1,	4,	303,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo155 },  // Inst #1158 = LFDEPX
  { 1159,	4,	2,	4,	286,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo156 },  // Inst #1159 = LFDU
  { 1160,	4,	2,	4,	287,	0|(1ULL<<MCID::MayLoad), 0x50ULL, nullptr, nullptr, OperandInfo157 },  // Inst #1160 = LFDUX
  { 1161,	3,	1,	4,	192,	0|(1ULL<<MCID::MayLoad), 0x50ULL, nullptr, nullptr, OperandInfo155 },  // Inst #1161 = LFDX
  { 1162,	3,	1,	4,	208,	0|(1ULL<<MCID::MayLoad), 0x50ULL, nullptr, nullptr, OperandInfo155 },  // Inst #1162 = LFIWAX
  { 1163,	3,	1,	4,	192,	0|(1ULL<<MCID::MayLoad), 0x50ULL, nullptr, nullptr, OperandInfo155 },  // Inst #1163 = LFIWZX
  { 1164,	3,	1,	4,	211,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo158 },  // Inst #1164 = LFS
  { 1165,	4,	2,	4,	277,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo159 },  // Inst #1165 = LFSU
  { 1166,	4,	2,	4,	278,	0|(1ULL<<MCID::MayLoad), 0x50ULL, nullptr, nullptr, OperandInfo160 },  // Inst #1166 = LFSUX
  { 1167,	3,	1,	4,	211,	0|(1ULL<<MCID::MayLoad), 0x50ULL, nullptr, nullptr, OperandInfo161 },  // Inst #1167 = LFSX
  { 1168,	3,	1,	4,	204,	0|(1ULL<<MCID::MayLoad), 0x14ULL, nullptr, nullptr, OperandInfo60 },  // Inst #1168 = LHA
  { 1169,	3,	1,	4,	204,	0|(1ULL<<MCID::MayLoad), 0x14ULL, nullptr, nullptr, OperandInfo140 },  // Inst #1169 = LHA8
  { 1170,	3,	1,	4,	183,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1170 = LHARX
  { 1171,	3,	1,	4,	183,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1171 = LHARXL
  { 1172,	4,	2,	4,	214,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo144 },  // Inst #1172 = LHAU
  { 1173,	4,	2,	4,	214,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo145 },  // Inst #1173 = LHAU8
  { 1174,	4,	2,	4,	215,	0|(1ULL<<MCID::MayLoad), 0x50ULL, nullptr, nullptr, OperandInfo146 },  // Inst #1174 = LHAUX
  { 1175,	4,	2,	4,	215,	0|(1ULL<<MCID::MayLoad), 0x50ULL, nullptr, nullptr, OperandInfo147 },  // Inst #1175 = LHAUX8
  { 1176,	3,	1,	4,	204,	0|(1ULL<<MCID::MayLoad), 0x54ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1176 = LHAX
  { 1177,	3,	1,	4,	204,	0|(1ULL<<MCID::MayLoad), 0x54ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1177 = LHAX8
  { 1178,	3,	1,	4,	429,	0|(1ULL<<MCID::MayLoad), 0x50ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1178 = LHBRX
  { 1179,	3,	1,	4,	429,	0|(1ULL<<MCID::MayLoad), 0x50ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1179 = LHBRX8
  { 1180,	3,	1,	4,	301,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1180 = LHEPX
  { 1181,	3,	1,	4,	429,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo60 },  // Inst #1181 = LHZ
  { 1182,	3,	1,	4,	429,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo140 },  // Inst #1182 = LHZ8
  { 1183,	3,	1,	4,	437,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo66 },  // Inst #1183 = LHZCIX
  { 1184,	4,	2,	4,	199,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo144 },  // Inst #1184 = LHZU
  { 1185,	4,	2,	4,	199,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo145 },  // Inst #1185 = LHZU8
  { 1186,	4,	2,	4,	200,	0|(1ULL<<MCID::MayLoad), 0x50ULL, nullptr, nullptr, OperandInfo146 },  // Inst #1186 = LHZUX
  { 1187,	4,	2,	4,	200,	0|(1ULL<<MCID::MayLoad), 0x50ULL, nullptr, nullptr, OperandInfo147 },  // Inst #1187 = LHZUX8
  { 1188,	3,	1,	4,	434,	0|(1ULL<<MCID::MayLoad), 0x50ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1188 = LHZX
  { 1189,	3,	1,	4,	434,	0|(1ULL<<MCID::MayLoad), 0x50ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1189 = LHZX8
  { 1190,	3,	1,	4,	434,	0|(1ULL<<MCID::MayLoad), 0x8ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1190 = LHZXTLS
  { 1191,	3,	1,	4,	434,	0|(1ULL<<MCID::MayLoad), 0x8ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1191 = LHZXTLS_
  { 1192,	3,	1,	4,	434,	0|(1ULL<<MCID::MayLoad), 0x8ULL, nullptr, nullptr, OperandInfo150 },  // Inst #1192 = LHZXTLS_32
  { 1193,	2,	1,	4,	392,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x8ULL, nullptr, nullptr, OperandInfo162 },  // Inst #1193 = LI
  { 1194,	2,	1,	4,	392,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x8ULL, nullptr, nullptr, OperandInfo64 },  // Inst #1194 = LI8
  { 1195,	2,	1,	4,	392,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x8ULL, nullptr, nullptr, OperandInfo162 },  // Inst #1195 = LIS
  { 1196,	2,	1,	4,	392,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x8ULL, nullptr, nullptr, OperandInfo64 },  // Inst #1196 = LIS8
  { 1197,	3,	1,	4,	191,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo60 },  // Inst #1197 = LMW
  { 1198,	3,	1,	4,	46,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo163 },  // Inst #1198 = LQ
  { 1199,	3,	1,	4,	47,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo164 },  // Inst #1199 = LQARX
  { 1200,	3,	1,	4,	47,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo164 },  // Inst #1200 = LQARXL
  { 1201,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo164 },  // Inst #1201 = LQX_PSEUDO
  { 1202,	3,	1,	4,	440,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo54 },  // Inst #1202 = LSWI
  { 1203,	3,	1,	4,	176,	0|(1ULL<<MCID::MayLoad), 0x50ULL, nullptr, nullptr, OperandInfo165 },  // Inst #1203 = LVEBX
  { 1204,	3,	1,	4,	176,	0|(1ULL<<MCID::MayLoad), 0x50ULL, nullptr, nullptr, OperandInfo165 },  // Inst #1204 = LVEHX
  { 1205,	3,	1,	4,	176,	0|(1ULL<<MCID::MayLoad), 0x50ULL, nullptr, nullptr, OperandInfo165 },  // Inst #1205 = LVEWX
  { 1206,	3,	1,	4,	164,	0, 0x50ULL, nullptr, nullptr, OperandInfo165 },  // Inst #1206 = LVSL
  { 1207,	3,	1,	4,	164,	0, 0x50ULL, nullptr, nullptr, OperandInfo165 },  // Inst #1207 = LVSR
  { 1208,	3,	1,	4,	176,	0|(1ULL<<MCID::MayLoad), 0x50ULL, nullptr, nullptr, OperandInfo165 },  // Inst #1208 = LVX
  { 1209,	3,	1,	4,	176,	0|(1ULL<<MCID::MayLoad), 0x50ULL, nullptr, nullptr, OperandInfo165 },  // Inst #1209 = LVXL
  { 1210,	3,	1,	4,	206,	0|(1ULL<<MCID::MayLoad), 0x14ULL, nullptr, nullptr, OperandInfo140 },  // Inst #1210 = LWA
  { 1211,	3,	1,	4,	183,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1211 = LWARX
  { 1212,	3,	1,	4,	183,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1212 = LWARXL
  { 1213,	3,	1,	4,	291,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x40ULL, nullptr, nullptr, OperandInfo54 },  // Inst #1213 = LWAT
  { 1214,	4,	2,	4,	215,	0|(1ULL<<MCID::MayLoad), 0x50ULL, nullptr, nullptr, OperandInfo147 },  // Inst #1214 = LWAUX
  { 1215,	3,	1,	4,	204,	0|(1ULL<<MCID::MayLoad), 0x54ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1215 = LWAX
  { 1216,	3,	1,	4,	204,	0|(1ULL<<MCID::MayLoad), 0x54ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1216 = LWAX_32
  { 1217,	3,	1,	4,	206,	0|(1ULL<<MCID::MayLoad), 0x14ULL, nullptr, nullptr, OperandInfo60 },  // Inst #1217 = LWA_32
  { 1218,	3,	1,	4,	429,	0|(1ULL<<MCID::MayLoad), 0x50ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1218 = LWBRX
  { 1219,	3,	1,	4,	429,	0|(1ULL<<MCID::MayLoad), 0x50ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1219 = LWBRX8
  { 1220,	3,	1,	4,	301,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1220 = LWEPX
  { 1221,	3,	1,	4,	429,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo60 },  // Inst #1221 = LWZ
  { 1222,	3,	1,	4,	429,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo140 },  // Inst #1222 = LWZ8
  { 1223,	3,	1,	4,	437,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo66 },  // Inst #1223 = LWZCIX
  { 1224,	4,	2,	4,	199,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo144 },  // Inst #1224 = LWZU
  { 1225,	4,	2,	4,	199,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo145 },  // Inst #1225 = LWZU8
  { 1226,	4,	2,	4,	200,	0|(1ULL<<MCID::MayLoad), 0x50ULL, nullptr, nullptr, OperandInfo146 },  // Inst #1226 = LWZUX
  { 1227,	4,	2,	4,	200,	0|(1ULL<<MCID::MayLoad), 0x50ULL, nullptr, nullptr, OperandInfo147 },  // Inst #1227 = LWZUX8
  { 1228,	3,	1,	4,	434,	0|(1ULL<<MCID::MayLoad), 0x50ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1228 = LWZX
  { 1229,	3,	1,	4,	434,	0|(1ULL<<MCID::MayLoad), 0x50ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1229 = LWZX8
  { 1230,	3,	1,	4,	434,	0|(1ULL<<MCID::MayLoad), 0x8ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1230 = LWZXTLS
  { 1231,	3,	1,	4,	434,	0|(1ULL<<MCID::MayLoad), 0x8ULL, nullptr, nullptr, OperandInfo149 },  // Inst #1231 = LWZXTLS_
  { 1232,	3,	1,	4,	434,	0|(1ULL<<MCID::MayLoad), 0x8ULL, nullptr, nullptr, OperandInfo150 },  // Inst #1232 = LWZXTLS_32
  { 1233,	3,	1,	4,	431,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo78 },  // Inst #1233 = LWZtoc
  { 1234,	3,	1,	4,	431,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo166 },  // Inst #1234 = LWZtocL
  { 1235,	3,	1,	4,	177,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo167 },  // Inst #1235 = LXSD
  { 1236,	3,	1,	4,	177,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo61 },  // Inst #1236 = LXSDX
  { 1237,	3,	1,	4,	177,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo61 },  // Inst #1237 = LXSIBZX
  { 1238,	3,	1,	4,	177,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo61 },  // Inst #1238 = LXSIHZX
  { 1239,	3,	1,	4,	209,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo61 },  // Inst #1239 = LXSIWAX
  { 1240,	3,	1,	4,	177,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo61 },  // Inst #1240 = LXSIWZX
  { 1241,	3,	1,	4,	212,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo167 },  // Inst #1241 = LXSSP
  { 1242,	3,	1,	4,	212,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo65 },  // Inst #1242 = LXSSPX
  { 1243,	3,	1,	4,	177,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo168 },  // Inst #1243 = LXV
  { 1244,	3,	1,	4,	177,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo169 },  // Inst #1244 = LXVB16X
  { 1245,	3,	1,	4,	177,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo169 },  // Inst #1245 = LXVD2X
  { 1246,	3,	1,	4,	216,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo169 },  // Inst #1246 = LXVDSX
  { 1247,	3,	1,	4,	216,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo169 },  // Inst #1247 = LXVH8X
  { 1248,	2,	1,	4,	459,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo170 },  // Inst #1248 = LXVKQ
  { 1249,	3,	1,	4,	175,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1249 = LXVL
  { 1250,	3,	1,	4,	175,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1250 = LXVLL
  { 1251,	3,	1,	4,	442,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1251 = LXVP
  { 1252,	3,	1,	4,	442,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo173 },  // Inst #1252 = LXVPX
  { 1253,	3,	1,	4,	432,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo169 },  // Inst #1253 = LXVRBX
  { 1254,	3,	1,	4,	432,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo169 },  // Inst #1254 = LXVRDX
  { 1255,	3,	1,	4,	432,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo169 },  // Inst #1255 = LXVRHX
  { 1256,	3,	1,	4,	432,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo169 },  // Inst #1256 = LXVRWX
  { 1257,	3,	1,	4,	216,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo169 },  // Inst #1257 = LXVW4X
  { 1258,	3,	1,	4,	177,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo169 },  // Inst #1258 = LXVWSX
  { 1259,	3,	1,	4,	177,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo169 },  // Inst #1259 = LXVX
  { 1260,	4,	1,	4,	148,	0, 0x8ULL, nullptr, nullptr, OperandInfo174 },  // Inst #1260 = MADDHD
  { 1261,	4,	1,	4,	148,	0, 0x8ULL, nullptr, nullptr, OperandInfo174 },  // Inst #1261 = MADDHDU
  { 1262,	4,	1,	4,	148,	0, 0x8ULL, nullptr, nullptr, OperandInfo175 },  // Inst #1262 = MADDLD
  { 1263,	4,	1,	4,	148,	0, 0x8ULL, nullptr, nullptr, OperandInfo174 },  // Inst #1263 = MADDLD8
  { 1264,	1,	0,	4,	301,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #1264 = MBAR
  { 1265,	2,	1,	4,	122,	0, 0x21ULL, nullptr, nullptr, OperandInfo176 },  // Inst #1265 = MCRF
  { 1266,	2,	1,	4,	249,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo176 },  // Inst #1266 = MCRFS
  { 1267,	1,	1,	4,	123,	0, 0x0ULL, nullptr, nullptr, OperandInfo177 },  // Inst #1267 = MCRXRX
  { 1268,	3,	1,	4,	492,	0, 0x1ULL, nullptr, nullptr, OperandInfo178 },  // Inst #1268 = MFBHRBE
  { 1269,	1,	1,	4,	258,	0|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x20ULL, nullptr, nullptr, OperandInfo179 },  // Inst #1269 = MFCR
  { 1270,	1,	1,	4,	258,	0|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x20ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1270 = MFCR8
  { 1271,	1,	1,	4,	388,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, ImplicitList12, nullptr, OperandInfo179 },  // Inst #1271 = MFCTR
  { 1272,	1,	1,	4,	388,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, ImplicitList13, nullptr, OperandInfo50 },  // Inst #1272 = MFCTR8
  { 1273,	2,	1,	4,	307,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo162 },  // Inst #1273 = MFDCR
  { 1274,	1,	1,	4,	415,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1aULL, ImplicitList18, nullptr, OperandInfo180 },  // Inst #1274 = MFFS
  { 1275,	2,	1,	4,	106,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1aULL, ImplicitList18, nullptr, OperandInfo129 },  // Inst #1275 = MFFSCDRN
  { 1276,	2,	1,	4,	106,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1aULL, ImplicitList18, nullptr, OperandInfo181 },  // Inst #1276 = MFFSCDRNI
  { 1277,	1,	1,	4,	257,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1aULL, ImplicitList18, nullptr, OperandInfo180 },  // Inst #1277 = MFFSCE
  { 1278,	2,	1,	4,	106,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1aULL, ImplicitList18, nullptr, OperandInfo129 },  // Inst #1278 = MFFSCRN
  { 1279,	2,	1,	4,	106,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1aULL, ImplicitList18, nullptr, OperandInfo181 },  // Inst #1279 = MFFSCRNI
  { 1280,	1,	1,	4,	415,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1aULL, ImplicitList18, nullptr, OperandInfo180 },  // Inst #1280 = MFFSL
  { 1281,	1,	1,	4,	415,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList18, ImplicitList30, OperandInfo180 },  // Inst #1281 = MFFS_rec
  { 1282,	1,	1,	4,	388,	0, 0x9ULL, ImplicitList15, nullptr, OperandInfo179 },  // Inst #1282 = MFLR
  { 1283,	1,	1,	4,	388,	0, 0x9ULL, ImplicitList17, nullptr, OperandInfo50 },  // Inst #1283 = MFLR8
  { 1284,	1,	1,	4,	234,	0, 0x0ULL, nullptr, nullptr, OperandInfo179 },  // Inst #1284 = MFMSR
  { 1285,	2,	1,	4,	131,	0|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x21ULL, nullptr, nullptr, OperandInfo182 },  // Inst #1285 = MFOCRF
  { 1286,	2,	1,	4,	131,	0|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x21ULL, nullptr, nullptr, OperandInfo183 },  // Inst #1286 = MFOCRF8
  { 1287,	2,	1,	4,	230,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo162 },  // Inst #1287 = MFPMR
  { 1288,	2,	1,	4,	233,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo162 },  // Inst #1288 = MFSPR
  { 1289,	2,	1,	4,	233,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo64 },  // Inst #1289 = MFSPR8
  { 1290,	2,	1,	4,	443,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo162 },  // Inst #1290 = MFSR
  { 1291,	2,	1,	4,	305,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo80 },  // Inst #1291 = MFSRIN
  { 1292,	2,	1,	4,	232,	0, 0x0ULL, nullptr, nullptr, OperandInfo162 },  // Inst #1292 = MFTB
  { 1293,	1,	1,	4,	444,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, nullptr, OperandInfo50 },  // Inst #1293 = MFTB8
  { 1294,	1,	1,	4,	233,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, nullptr, OperandInfo179 },  // Inst #1294 = MFUDSCR
  { 1295,	2,	1,	4,	117,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo184 },  // Inst #1295 = MFVRD
  { 1296,	1,	1,	4,	229,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, nullptr, OperandInfo179 },  // Inst #1296 = MFVRSAVE
  { 1297,	2,	1,	4,	229,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, nullptr, OperandInfo185 },  // Inst #1297 = MFVRSAVEv
  { 1298,	2,	1,	4,	117,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo186 },  // Inst #1298 = MFVRWZ
  { 1299,	1,	1,	4,	140,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo187 },  // Inst #1299 = MFVSCR
  { 1300,	2,	1,	4,	117,	0, 0x0ULL, nullptr, nullptr, OperandInfo188 },  // Inst #1300 = MFVSRD
  { 1301,	2,	1,	4,	460,	0, 0x0ULL, nullptr, nullptr, OperandInfo184 },  // Inst #1301 = MFVSRLD
  { 1302,	2,	1,	4,	117,	0, 0x0ULL, nullptr, nullptr, OperandInfo189 },  // Inst #1302 = MFVSRWZ
  { 1303,	3,	1,	4,	239,	0, 0x8ULL, nullptr, nullptr, OperandInfo68 },  // Inst #1303 = MODSD
  { 1304,	3,	1,	4,	238,	0, 0x0ULL, nullptr, nullptr, OperandInfo66 },  // Inst #1304 = MODSW
  { 1305,	3,	1,	4,	239,	0, 0x8ULL, nullptr, nullptr, OperandInfo68 },  // Inst #1305 = MODUD
  { 1306,	3,	1,	4,	239,	0, 0x0ULL, nullptr, nullptr, OperandInfo66 },  // Inst #1306 = MODUW
  { 1307,	0,	0,	4,	188,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #1307 = MSGSYNC
  { 1308,	0,	0,	4,	313,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #1308 = MSYNC
  { 1309,	2,	0,	4,	246,	0|(1ULL<<MCID::ExtraDefRegAllocReq), 0x20ULL, nullptr, nullptr, OperandInfo190 },  // Inst #1309 = MTCRF
  { 1310,	2,	0,	4,	246,	0|(1ULL<<MCID::ExtraDefRegAllocReq), 0x20ULL, nullptr, nullptr, OperandInfo191 },  // Inst #1310 = MTCRF8
  { 1311,	1,	0,	4,	228,	0, 0x9ULL, nullptr, ImplicitList12, OperandInfo179 },  // Inst #1311 = MTCTR
  { 1312,	1,	0,	4,	228,	0, 0x9ULL, nullptr, ImplicitList13, OperandInfo50 },  // Inst #1312 = MTCTR8
  { 1313,	1,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList13, OperandInfo50 },  // Inst #1313 = MTCTR8Pseudo
  { 1314,	1,	0,	4,	228,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, ImplicitList13, OperandInfo50 },  // Inst #1314 = MTCTR8loop
  { 1315,	1,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList12, OperandInfo179 },  // Inst #1315 = MTCTRPseudo
  { 1316,	1,	0,	4,	228,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, ImplicitList12, OperandInfo179 },  // Inst #1316 = MTCTRloop
  { 1317,	2,	0,	4,	308,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo162 },  // Inst #1317 = MTDCR
  { 1318,	1,	0,	4,	418,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1aULL, nullptr, ImplicitList18, OperandInfo3 },  // Inst #1318 = MTFSB0
  { 1319,	1,	0,	4,	105,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1aULL, nullptr, ImplicitList18, OperandInfo3 },  // Inst #1319 = MTFSB1
  { 1320,	4,	0,	4,	426,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList18, OperandInfo192 },  // Inst #1320 = MTFSF
  { 1321,	3,	0,	4,	426,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList18, OperandInfo193 },  // Inst #1321 = MTFSFI
  { 1322,	3,	0,	4,	427,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList30, OperandInfo193 },  // Inst #1322 = MTFSFI_rec
  { 1323,	2,	0,	4,	426,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList18, OperandInfo10 },  // Inst #1323 = MTFSFIb
  { 1324,	4,	0,	4,	250,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList30, OperandInfo192 },  // Inst #1324 = MTFSF_rec
  { 1325,	2,	0,	4,	251,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1aULL, nullptr, ImplicitList18, OperandInfo194 },  // Inst #1325 = MTFSFb
  { 1326,	1,	0,	4,	228,	0, 0x9ULL, nullptr, ImplicitList15, OperandInfo179 },  // Inst #1326 = MTLR
  { 1327,	1,	0,	4,	228,	0, 0x9ULL, nullptr, ImplicitList17, OperandInfo50 },  // Inst #1327 = MTLR8
  { 1328,	2,	0,	4,	235,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo162 },  // Inst #1328 = MTMSR
  { 1329,	2,	0,	4,	236,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo162 },  // Inst #1329 = MTMSRD
  { 1330,	2,	1,	4,	132,	0|(1ULL<<MCID::ExtraDefRegAllocReq), 0x21ULL, nullptr, nullptr, OperandInfo195 },  // Inst #1330 = MTOCRF
  { 1331,	2,	1,	4,	132,	0|(1ULL<<MCID::ExtraDefRegAllocReq), 0x21ULL, nullptr, nullptr, OperandInfo196 },  // Inst #1331 = MTOCRF8
  { 1332,	2,	0,	4,	231,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo190 },  // Inst #1332 = MTPMR
  { 1333,	2,	0,	4,	237,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo190 },  // Inst #1333 = MTSPR
  { 1334,	2,	0,	4,	237,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo191 },  // Inst #1334 = MTSPR8
  { 1335,	2,	0,	4,	438,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo162 },  // Inst #1335 = MTSR
  { 1336,	2,	0,	4,	306,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo80 },  // Inst #1336 = MTSRIN
  { 1337,	1,	0,	4,	237,	0|(1ULL<<MCID::UnmodeledSideEffects), 0xaULL, nullptr, nullptr, OperandInfo179 },  // Inst #1337 = MTUDSCR
  { 1338,	2,	1,	4,	117,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo197 },  // Inst #1338 = MTVRD
  { 1339,	1,	0,	4,	439,	0|(1ULL<<MCID::UnmodeledSideEffects), 0xaULL, nullptr, nullptr, OperandInfo179 },  // Inst #1339 = MTVRSAVE
  { 1340,	2,	1,	4,	439,	0|(1ULL<<MCID::UnmodeledSideEffects), 0xaULL, nullptr, nullptr, OperandInfo198 },  // Inst #1340 = MTVRSAVEv
  { 1341,	2,	1,	4,	117,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo199 },  // Inst #1341 = MTVRWA
  { 1342,	2,	1,	4,	117,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo199 },  // Inst #1342 = MTVRWZ
  { 1343,	1,	0,	4,	141,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo187 },  // Inst #1343 = MTVSCR
  { 1344,	2,	1,	4,	364,	0, 0x0ULL, nullptr, nullptr, OperandInfo200 },  // Inst #1344 = MTVSRBM
  { 1345,	2,	1,	4,	364,	0, 0x0ULL, nullptr, nullptr, OperandInfo201 },  // Inst #1345 = MTVSRBMI
  { 1346,	2,	1,	4,	117,	0, 0x0ULL, nullptr, nullptr, OperandInfo202 },  // Inst #1346 = MTVSRD
  { 1347,	3,	1,	4,	101,	0, 0x0ULL, nullptr, nullptr, OperandInfo203 },  // Inst #1347 = MTVSRDD
  { 1348,	2,	1,	4,	364,	0, 0x0ULL, nullptr, nullptr, OperandInfo200 },  // Inst #1348 = MTVSRDM
  { 1349,	2,	1,	4,	364,	0, 0x0ULL, nullptr, nullptr, OperandInfo200 },  // Inst #1349 = MTVSRHM
  { 1350,	2,	1,	4,	364,	0, 0x0ULL, nullptr, nullptr, OperandInfo200 },  // Inst #1350 = MTVSRQM
  { 1351,	2,	1,	4,	117,	0, 0x0ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1351 = MTVSRWA
  { 1352,	2,	1,	4,	364,	0, 0x0ULL, nullptr, nullptr, OperandInfo200 },  // Inst #1352 = MTVSRWM
  { 1353,	2,	1,	4,	460,	0, 0x0ULL, nullptr, nullptr, OperandInfo199 },  // Inst #1353 = MTVSRWS
  { 1354,	2,	1,	4,	117,	0, 0x0ULL, nullptr, nullptr, OperandInfo204 },  // Inst #1354 = MTVSRWZ
  { 1355,	3,	1,	4,	149,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo68 },  // Inst #1355 = MULHD
  { 1356,	3,	1,	4,	150,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo68 },  // Inst #1356 = MULHDU
  { 1357,	3,	1,	4,	157,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo68 },  // Inst #1357 = MULHDU_rec
  { 1358,	3,	1,	4,	158,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo68 },  // Inst #1358 = MULHD_rec
  { 1359,	3,	1,	4,	149,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo66 },  // Inst #1359 = MULHW
  { 1360,	3,	1,	4,	150,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo66 },  // Inst #1360 = MULHWU
  { 1361,	3,	1,	4,	157,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo66 },  // Inst #1361 = MULHWU_rec
  { 1362,	3,	1,	4,	158,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo66 },  // Inst #1362 = MULHW_rec
  { 1363,	3,	1,	4,	455,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo68 },  // Inst #1363 = MULLD
  { 1364,	3,	1,	4,	455,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList3, OperandInfo68 },  // Inst #1364 = MULLDO
  { 1365,	3,	1,	4,	159,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList4, OperandInfo68 },  // Inst #1365 = MULLDO_rec
  { 1366,	3,	1,	4,	159,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo68 },  // Inst #1366 = MULLD_rec
  { 1367,	3,	1,	4,	151,	0, 0x8ULL, nullptr, nullptr, OperandInfo54 },  // Inst #1367 = MULLI
  { 1368,	3,	1,	4,	151,	0, 0x8ULL, nullptr, nullptr, OperandInfo53 },  // Inst #1368 = MULLI8
  { 1369,	3,	1,	4,	149,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo66 },  // Inst #1369 = MULLW
  { 1370,	3,	1,	4,	149,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList3, OperandInfo66 },  // Inst #1370 = MULLWO
  { 1371,	3,	1,	4,	158,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList4, OperandInfo66 },  // Inst #1371 = MULLWO_rec
  { 1372,	3,	1,	4,	158,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo66 },  // Inst #1372 = MULLW_rec
  { 1373,	0,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, ImplicitList15, nullptr },  // Inst #1373 = MoveGOTtoLR
  { 1374,	0,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, ImplicitList15, nullptr },  // Inst #1374 = MovePCtoLR
  { 1375,	0,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, ImplicitList17, nullptr },  // Inst #1375 = MovePCtoLR8
  { 1376,	3,	1,	4,	404,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo66 },  // Inst #1376 = NAND
  { 1377,	3,	1,	4,	404,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo68 },  // Inst #1377 = NAND8
  { 1378,	3,	1,	4,	404,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo68 },  // Inst #1378 = NAND8_rec
  { 1379,	3,	1,	4,	404,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo66 },  // Inst #1379 = NAND_rec
  { 1380,	0,	0,	4,	487,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #1380 = NAP
  { 1381,	2,	1,	4,	392,	0, 0x8ULL, nullptr, nullptr, OperandInfo80 },  // Inst #1381 = NEG
  { 1382,	2,	1,	4,	392,	0, 0x8ULL, nullptr, nullptr, OperandInfo81 },  // Inst #1382 = NEG8
  { 1383,	2,	1,	4,	392,	0, 0x8ULL, nullptr, ImplicitList3, OperandInfo81 },  // Inst #1383 = NEG8O
  { 1384,	2,	1,	4,	419,	0, 0x8ULL, nullptr, ImplicitList4, OperandInfo81 },  // Inst #1384 = NEG8O_rec
  { 1385,	2,	1,	4,	392,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo81 },  // Inst #1385 = NEG8_rec
  { 1386,	2,	1,	4,	392,	0, 0x8ULL, nullptr, ImplicitList3, OperandInfo80 },  // Inst #1386 = NEGO
  { 1387,	2,	1,	4,	419,	0, 0x8ULL, nullptr, ImplicitList4, OperandInfo80 },  // Inst #1387 = NEGO_rec
  { 1388,	2,	1,	4,	392,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo80 },  // Inst #1388 = NEG_rec
  { 1389,	0,	0,	4,	389,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x8ULL, nullptr, nullptr, nullptr },  // Inst #1389 = NOP
  { 1390,	0,	0,	4,	309,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x8ULL, nullptr, nullptr, nullptr },  // Inst #1390 = NOP_GT_PWR6
  { 1391,	0,	0,	4,	309,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x8ULL, nullptr, nullptr, nullptr },  // Inst #1391 = NOP_GT_PWR7
  { 1392,	3,	1,	4,	404,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo66 },  // Inst #1392 = NOR
  { 1393,	3,	1,	4,	404,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo68 },  // Inst #1393 = NOR8
  { 1394,	3,	1,	4,	404,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo68 },  // Inst #1394 = NOR8_rec
  { 1395,	3,	1,	4,	404,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo66 },  // Inst #1395 = NOR_rec
  { 1396,	3,	1,	4,	404,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo66 },  // Inst #1396 = OR
  { 1397,	3,	1,	4,	404,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo68 },  // Inst #1397 = OR8
  { 1398,	3,	1,	4,	404,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo68 },  // Inst #1398 = OR8_rec
  { 1399,	3,	1,	4,	404,	0, 0x8ULL, nullptr, nullptr, OperandInfo66 },  // Inst #1399 = ORC
  { 1400,	3,	1,	4,	404,	0, 0x8ULL, nullptr, nullptr, OperandInfo68 },  // Inst #1400 = ORC8
  { 1401,	3,	1,	4,	404,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo68 },  // Inst #1401 = ORC8_rec
  { 1402,	3,	1,	4,	404,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo66 },  // Inst #1402 = ORC_rec
  { 1403,	3,	1,	4,	389,	0, 0x8ULL, nullptr, nullptr, OperandInfo54 },  // Inst #1403 = ORI
  { 1404,	3,	1,	4,	389,	0, 0x8ULL, nullptr, nullptr, OperandInfo53 },  // Inst #1404 = ORI8
  { 1405,	3,	1,	4,	404,	0, 0x8ULL, nullptr, nullptr, OperandInfo54 },  // Inst #1405 = ORIS
  { 1406,	3,	1,	4,	404,	0, 0x8ULL, nullptr, nullptr, OperandInfo53 },  // Inst #1406 = ORIS8
  { 1407,	3,	1,	4,	404,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo66 },  // Inst #1407 = OR_rec
  { 1408,	3,	1,	8,	493,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo54 },  // Inst #1408 = PADDI
  { 1409,	3,	1,	8,	493,	0, 0x80ULL, nullptr, nullptr, OperandInfo53 },  // Inst #1409 = PADDI8
  { 1410,	3,	1,	8,	493,	0, 0x80ULL, nullptr, nullptr, OperandInfo205 },  // Inst #1410 = PADDI8pc
  { 1411,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo74 },  // Inst #1411 = PADDIdtprel
  { 1412,	3,	1,	8,	493,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo178 },  // Inst #1412 = PADDIpc
  { 1413,	3,	1,	4,	338,	0, 0x0ULL, nullptr, nullptr, OperandInfo68 },  // Inst #1413 = PDEPD
  { 1414,	3,	1,	4,	338,	0, 0x0ULL, nullptr, nullptr, OperandInfo68 },  // Inst #1414 = PEXTD
  { 1415,	3,	1,	8,	441,	0|(1ULL<<MCID::MayLoad), 0x80ULL, nullptr, nullptr, OperandInfo206 },  // Inst #1415 = PLBZ
  { 1416,	3,	1,	8,	441,	0|(1ULL<<MCID::MayLoad), 0x80ULL, nullptr, nullptr, OperandInfo207 },  // Inst #1416 = PLBZ8
  { 1417,	3,	1,	8,	441,	0|(1ULL<<MCID::MayLoad), 0x80ULL, nullptr, nullptr, OperandInfo208 },  // Inst #1417 = PLBZ8pc
  { 1418,	3,	1,	8,	441,	0|(1ULL<<MCID::MayLoad), 0x80ULL, nullptr, nullptr, OperandInfo209 },  // Inst #1418 = PLBZpc
  { 1419,	3,	1,	8,	441,	0|(1ULL<<MCID::MayLoad), 0x80ULL, nullptr, nullptr, OperandInfo207 },  // Inst #1419 = PLD
  { 1420,	3,	1,	8,	441,	0|(1ULL<<MCID::MayLoad), 0x80ULL, nullptr, nullptr, OperandInfo208 },  // Inst #1420 = PLDpc
  { 1421,	3,	1,	8,	441,	0|(1ULL<<MCID::MayLoad), 0x80ULL, nullptr, nullptr, OperandInfo210 },  // Inst #1421 = PLFD
  { 1422,	3,	1,	8,	441,	0|(1ULL<<MCID::MayLoad), 0x80ULL, nullptr, nullptr, OperandInfo211 },  // Inst #1422 = PLFDpc
  { 1423,	3,	1,	8,	441,	0|(1ULL<<MCID::MayLoad), 0x80ULL, nullptr, nullptr, OperandInfo212 },  // Inst #1423 = PLFS
  { 1424,	3,	1,	8,	441,	0|(1ULL<<MCID::MayLoad), 0x80ULL, nullptr, nullptr, OperandInfo213 },  // Inst #1424 = PLFSpc
  { 1425,	3,	1,	8,	441,	0|(1ULL<<MCID::MayLoad), 0x80ULL, nullptr, nullptr, OperandInfo206 },  // Inst #1425 = PLHA
  { 1426,	3,	1,	8,	441,	0|(1ULL<<MCID::MayLoad), 0x80ULL, nullptr, nullptr, OperandInfo207 },  // Inst #1426 = PLHA8
  { 1427,	3,	1,	8,	441,	0|(1ULL<<MCID::MayLoad), 0x80ULL, nullptr, nullptr, OperandInfo208 },  // Inst #1427 = PLHA8pc
  { 1428,	3,	1,	8,	441,	0|(1ULL<<MCID::MayLoad), 0x80ULL, nullptr, nullptr, OperandInfo209 },  // Inst #1428 = PLHApc
  { 1429,	3,	1,	8,	441,	0|(1ULL<<MCID::MayLoad), 0x80ULL, nullptr, nullptr, OperandInfo206 },  // Inst #1429 = PLHZ
  { 1430,	3,	1,	8,	441,	0|(1ULL<<MCID::MayLoad), 0x80ULL, nullptr, nullptr, OperandInfo207 },  // Inst #1430 = PLHZ8
  { 1431,	3,	1,	8,	441,	0|(1ULL<<MCID::MayLoad), 0x80ULL, nullptr, nullptr, OperandInfo208 },  // Inst #1431 = PLHZ8pc
  { 1432,	3,	1,	8,	441,	0|(1ULL<<MCID::MayLoad), 0x80ULL, nullptr, nullptr, OperandInfo209 },  // Inst #1432 = PLHZpc
  { 1433,	2,	1,	8,	494,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x80ULL, nullptr, nullptr, OperandInfo162 },  // Inst #1433 = PLI
  { 1434,	2,	1,	8,	494,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x80ULL, nullptr, nullptr, OperandInfo64 },  // Inst #1434 = PLI8
  { 1435,	3,	1,	8,	441,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo206 },  // Inst #1435 = PLWA
  { 1436,	3,	1,	8,	441,	0|(1ULL<<MCID::MayLoad), 0x80ULL, nullptr, nullptr, OperandInfo207 },  // Inst #1436 = PLWA8
  { 1437,	3,	1,	8,	441,	0|(1ULL<<MCID::MayLoad), 0x80ULL, nullptr, nullptr, OperandInfo208 },  // Inst #1437 = PLWA8pc
  { 1438,	3,	1,	8,	441,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo209 },  // Inst #1438 = PLWApc
  { 1439,	3,	1,	8,	441,	0|(1ULL<<MCID::MayLoad), 0x80ULL, nullptr, nullptr, OperandInfo206 },  // Inst #1439 = PLWZ
  { 1440,	3,	1,	8,	441,	0|(1ULL<<MCID::MayLoad), 0x80ULL, nullptr, nullptr, OperandInfo207 },  // Inst #1440 = PLWZ8
  { 1441,	3,	1,	8,	441,	0|(1ULL<<MCID::MayLoad), 0x80ULL, nullptr, nullptr, OperandInfo208 },  // Inst #1441 = PLWZ8pc
  { 1442,	3,	1,	8,	441,	0|(1ULL<<MCID::MayLoad), 0x80ULL, nullptr, nullptr, OperandInfo209 },  // Inst #1442 = PLWZpc
  { 1443,	3,	1,	8,	441,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo214 },  // Inst #1443 = PLXSD
  { 1444,	3,	1,	8,	441,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo215 },  // Inst #1444 = PLXSDpc
  { 1445,	3,	1,	8,	441,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo214 },  // Inst #1445 = PLXSSP
  { 1446,	3,	1,	8,	441,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo215 },  // Inst #1446 = PLXSSPpc
  { 1447,	3,	1,	8,	441,	0|(1ULL<<MCID::MayLoad), 0x80ULL, nullptr, nullptr, OperandInfo216 },  // Inst #1447 = PLXV
  { 1448,	3,	1,	8,	441,	0|(1ULL<<MCID::MayLoad), 0x80ULL, nullptr, nullptr, OperandInfo217 },  // Inst #1448 = PLXVP
  { 1449,	3,	1,	8,	441,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo218 },  // Inst #1449 = PLXVPpc
  { 1450,	3,	1,	8,	441,	0|(1ULL<<MCID::MayLoad), 0x80ULL, nullptr, nullptr, OperandInfo219 },  // Inst #1450 = PLXVpc
  { 1451,	6,	1,	8,	450,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo220 },  // Inst #1451 = PMXVBF16GER2
  { 1452,	7,	1,	8,	451,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo221 },  // Inst #1452 = PMXVBF16GER2NN
  { 1453,	7,	1,	8,	451,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo221 },  // Inst #1453 = PMXVBF16GER2NP
  { 1454,	7,	1,	8,	451,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo221 },  // Inst #1454 = PMXVBF16GER2PN
  { 1455,	7,	1,	8,	451,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo221 },  // Inst #1455 = PMXVBF16GER2PP
  { 1456,	6,	1,	8,	450,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo220 },  // Inst #1456 = PMXVF16GER2
  { 1457,	7,	1,	8,	451,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo221 },  // Inst #1457 = PMXVF16GER2NN
  { 1458,	7,	1,	8,	451,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo221 },  // Inst #1458 = PMXVF16GER2NP
  { 1459,	7,	1,	8,	451,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo221 },  // Inst #1459 = PMXVF16GER2PN
  { 1460,	7,	1,	8,	451,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo221 },  // Inst #1460 = PMXVF16GER2PP
  { 1461,	5,	1,	8,	449,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo222 },  // Inst #1461 = PMXVF32GER
  { 1462,	6,	1,	8,	450,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo223 },  // Inst #1462 = PMXVF32GERNN
  { 1463,	6,	1,	8,	450,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo223 },  // Inst #1463 = PMXVF32GERNP
  { 1464,	6,	1,	8,	450,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo223 },  // Inst #1464 = PMXVF32GERPN
  { 1465,	6,	1,	8,	450,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo223 },  // Inst #1465 = PMXVF32GERPP
  { 1466,	5,	1,	8,	449,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo224 },  // Inst #1466 = PMXVF64GER
  { 1467,	6,	1,	8,	450,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo225 },  // Inst #1467 = PMXVF64GERNN
  { 1468,	6,	1,	8,	450,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo225 },  // Inst #1468 = PMXVF64GERNP
  { 1469,	6,	1,	8,	450,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo225 },  // Inst #1469 = PMXVF64GERPN
  { 1470,	6,	1,	8,	450,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo225 },  // Inst #1470 = PMXVF64GERPP
  { 1471,	6,	1,	8,	450,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo220 },  // Inst #1471 = PMXVI16GER2
  { 1472,	7,	1,	8,	451,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo221 },  // Inst #1472 = PMXVI16GER2PP
  { 1473,	6,	1,	8,	450,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo220 },  // Inst #1473 = PMXVI16GER2S
  { 1474,	7,	1,	8,	451,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo221 },  // Inst #1474 = PMXVI16GER2SPP
  { 1475,	6,	1,	8,	450,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo220 },  // Inst #1475 = PMXVI4GER8
  { 1476,	7,	1,	8,	451,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo221 },  // Inst #1476 = PMXVI4GER8PP
  { 1477,	6,	1,	8,	450,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo220 },  // Inst #1477 = PMXVI8GER4
  { 1478,	7,	1,	8,	451,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo221 },  // Inst #1478 = PMXVI8GER4PP
  { 1479,	7,	1,	8,	452,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo221 },  // Inst #1479 = PMXVI8GER4SPP
  { 1480,	2,	1,	4,	365,	0, 0x0ULL, nullptr, nullptr, OperandInfo80 },  // Inst #1480 = POPCNTB
  { 1481,	2,	1,	4,	365,	0, 0x8ULL, nullptr, nullptr, OperandInfo81 },  // Inst #1481 = POPCNTB8
  { 1482,	2,	1,	4,	362,	0, 0x8ULL, nullptr, nullptr, OperandInfo81 },  // Inst #1482 = POPCNTD
  { 1483,	2,	1,	4,	362,	0, 0x8ULL, nullptr, nullptr, OperandInfo80 },  // Inst #1483 = POPCNTW
  { 1484,	1,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo179 },  // Inst #1484 = PPC32GOT
  { 1485,	2,	2,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo80 },  // Inst #1485 = PPC32PICGOT
  { 1486,	5,	2,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList11, OperandInfo226 },  // Inst #1486 = PREPARE_PROBED_ALLOCA_32
  { 1487,	5,	2,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList29, ImplicitList29, OperandInfo227 },  // Inst #1487 = PREPARE_PROBED_ALLOCA_64
  { 1488,	5,	2,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList11, OperandInfo228 },  // Inst #1488 = PREPARE_PROBED_ALLOCA_NEGSIZE_SAME_REG_32
  { 1489,	5,	2,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList29, ImplicitList29, OperandInfo229 },  // Inst #1489 = PREPARE_PROBED_ALLOCA_NEGSIZE_SAME_REG_64
  { 1490,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList11, ImplicitList11, OperandInfo109 },  // Inst #1490 = PROBED_ALLOCA_32
  { 1491,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList29, ImplicitList29, OperandInfo110 },  // Inst #1491 = PROBED_ALLOCA_64
  { 1492,	3,	2,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList11, OperandInfo54 },  // Inst #1492 = PROBED_STACKALLOC_32
  { 1493,	3,	2,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList29, ImplicitList29, OperandInfo53 },  // Inst #1493 = PROBED_STACKALLOC_64
  { 1494,	3,	0,	8,	485,	0|(1ULL<<MCID::MayStore), 0x80ULL, nullptr, nullptr, OperandInfo206 },  // Inst #1494 = PSTB
  { 1495,	3,	0,	8,	485,	0|(1ULL<<MCID::MayStore), 0x80ULL, nullptr, nullptr, OperandInfo207 },  // Inst #1495 = PSTB8
  { 1496,	3,	0,	8,	485,	0|(1ULL<<MCID::MayStore), 0x80ULL, nullptr, nullptr, OperandInfo208 },  // Inst #1496 = PSTB8pc
  { 1497,	3,	0,	8,	485,	0|(1ULL<<MCID::MayStore), 0x80ULL, nullptr, nullptr, OperandInfo209 },  // Inst #1497 = PSTBpc
  { 1498,	3,	0,	8,	485,	0|(1ULL<<MCID::MayStore), 0x80ULL, nullptr, nullptr, OperandInfo207 },  // Inst #1498 = PSTD
  { 1499,	3,	0,	8,	485,	0|(1ULL<<MCID::MayStore), 0x80ULL, nullptr, nullptr, OperandInfo208 },  // Inst #1499 = PSTDpc
  { 1500,	3,	0,	8,	485,	0|(1ULL<<MCID::MayStore), 0x80ULL, nullptr, nullptr, OperandInfo210 },  // Inst #1500 = PSTFD
  { 1501,	3,	0,	8,	485,	0|(1ULL<<MCID::MayStore), 0x80ULL, nullptr, nullptr, OperandInfo211 },  // Inst #1501 = PSTFDpc
  { 1502,	3,	0,	8,	485,	0|(1ULL<<MCID::MayStore), 0x80ULL, nullptr, nullptr, OperandInfo212 },  // Inst #1502 = PSTFS
  { 1503,	3,	0,	8,	485,	0|(1ULL<<MCID::MayStore), 0x80ULL, nullptr, nullptr, OperandInfo213 },  // Inst #1503 = PSTFSpc
  { 1504,	3,	0,	8,	485,	0|(1ULL<<MCID::MayStore), 0x80ULL, nullptr, nullptr, OperandInfo206 },  // Inst #1504 = PSTH
  { 1505,	3,	0,	8,	485,	0|(1ULL<<MCID::MayStore), 0x80ULL, nullptr, nullptr, OperandInfo207 },  // Inst #1505 = PSTH8
  { 1506,	3,	0,	8,	485,	0|(1ULL<<MCID::MayStore), 0x80ULL, nullptr, nullptr, OperandInfo208 },  // Inst #1506 = PSTH8pc
  { 1507,	3,	0,	8,	485,	0|(1ULL<<MCID::MayStore), 0x80ULL, nullptr, nullptr, OperandInfo209 },  // Inst #1507 = PSTHpc
  { 1508,	3,	0,	8,	485,	0|(1ULL<<MCID::MayStore), 0x80ULL, nullptr, nullptr, OperandInfo206 },  // Inst #1508 = PSTW
  { 1509,	3,	0,	8,	485,	0|(1ULL<<MCID::MayStore), 0x80ULL, nullptr, nullptr, OperandInfo207 },  // Inst #1509 = PSTW8
  { 1510,	3,	0,	8,	485,	0|(1ULL<<MCID::MayStore), 0x80ULL, nullptr, nullptr, OperandInfo208 },  // Inst #1510 = PSTW8pc
  { 1511,	3,	0,	8,	485,	0|(1ULL<<MCID::MayStore), 0x80ULL, nullptr, nullptr, OperandInfo209 },  // Inst #1511 = PSTWpc
  { 1512,	3,	0,	8,	485,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo214 },  // Inst #1512 = PSTXSD
  { 1513,	3,	0,	8,	485,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo215 },  // Inst #1513 = PSTXSDpc
  { 1514,	3,	0,	8,	485,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo214 },  // Inst #1514 = PSTXSSP
  { 1515,	3,	0,	8,	485,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo215 },  // Inst #1515 = PSTXSSPpc
  { 1516,	3,	0,	8,	485,	0|(1ULL<<MCID::MayStore), 0x80ULL, nullptr, nullptr, OperandInfo216 },  // Inst #1516 = PSTXV
  { 1517,	3,	0,	8,	476,	0|(1ULL<<MCID::MayStore), 0x80ULL, nullptr, nullptr, OperandInfo217 },  // Inst #1517 = PSTXVP
  { 1518,	3,	0,	8,	476,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo218 },  // Inst #1518 = PSTXVPpc
  { 1519,	3,	0,	8,	485,	0|(1ULL<<MCID::MayStore), 0x80ULL, nullptr, nullptr, OperandInfo219 },  // Inst #1519 = PSTXVpc
  { 1520,	0,	0,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #1520 = PseudoEIEIO
  { 1521,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo230 },  // Inst #1521 = RESTORE_ACC
  { 1522,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo231 },  // Inst #1522 = RESTORE_CR
  { 1523,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo232 },  // Inst #1523 = RESTORE_CRBIT
  { 1524,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo233 },  // Inst #1524 = RESTORE_QUADWORD
  { 1525,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo234 },  // Inst #1525 = RESTORE_UACC
  { 1526,	0,	0,	4,	298,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #1526 = RFCI
  { 1527,	0,	0,	4,	298,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #1527 = RFDI
  { 1528,	1,	0,	4,	125,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo3 },  // Inst #1528 = RFEBB
  { 1529,	0,	0,	4,	299,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #1529 = RFI
  { 1530,	0,	0,	4,	300,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #1530 = RFID
  { 1531,	0,	0,	4,	298,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #1531 = RFMCI
  { 1532,	4,	1,	4,	128,	0, 0x8ULL, nullptr, nullptr, OperandInfo235 },  // Inst #1532 = RLDCL
  { 1533,	4,	1,	4,	252,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo235 },  // Inst #1533 = RLDCL_rec
  { 1534,	4,	1,	4,	128,	0, 0x8ULL, nullptr, nullptr, OperandInfo235 },  // Inst #1534 = RLDCR
  { 1535,	4,	1,	4,	252,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo235 },  // Inst #1535 = RLDCR_rec
  { 1536,	4,	1,	4,	116,	0, 0x8ULL, nullptr, nullptr, OperandInfo51 },  // Inst #1536 = RLDIC
  { 1537,	4,	1,	4,	414,	0, 0x8ULL, nullptr, nullptr, OperandInfo51 },  // Inst #1537 = RLDICL
  { 1538,	4,	1,	4,	414,	0, 0x8ULL, nullptr, nullptr, OperandInfo52 },  // Inst #1538 = RLDICL_32
  { 1539,	4,	1,	4,	414,	0, 0x8ULL, nullptr, nullptr, OperandInfo236 },  // Inst #1539 = RLDICL_32_64
  { 1540,	4,	1,	4,	382,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo52 },  // Inst #1540 = RLDICL_32_rec
  { 1541,	4,	1,	4,	382,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo51 },  // Inst #1541 = RLDICL_rec
  { 1542,	4,	1,	4,	414,	0, 0x8ULL, nullptr, nullptr, OperandInfo51 },  // Inst #1542 = RLDICR
  { 1543,	4,	1,	4,	414,	0, 0x8ULL, nullptr, nullptr, OperandInfo52 },  // Inst #1543 = RLDICR_32
  { 1544,	4,	1,	4,	382,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo51 },  // Inst #1544 = RLDICR_rec
  { 1545,	4,	1,	4,	381,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo51 },  // Inst #1545 = RLDIC_rec
  { 1546,	5,	1,	4,	130,	0, 0x8ULL, nullptr, nullptr, OperandInfo237 },  // Inst #1546 = RLDIMI
  { 1547,	5,	1,	4,	253,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo237 },  // Inst #1547 = RLDIMI_rec
  { 1548,	6,	1,	4,	129,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, nullptr, OperandInfo238 },  // Inst #1548 = RLWIMI
  { 1549,	6,	1,	4,	129,	0, 0xcULL, nullptr, nullptr, OperandInfo239 },  // Inst #1549 = RLWIMI8
  { 1550,	6,	1,	4,	254,	0, 0xcULL, nullptr, ImplicitList1, OperandInfo239 },  // Inst #1550 = RLWIMI8_rec
  { 1551,	6,	1,	4,	254,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, ImplicitList1, OperandInfo238 },  // Inst #1551 = RLWIMI_rec
  { 1552,	5,	1,	4,	134,	0, 0x8ULL, nullptr, nullptr, OperandInfo240 },  // Inst #1552 = RLWINM
  { 1553,	5,	1,	4,	134,	0, 0x8ULL, nullptr, nullptr, OperandInfo241 },  // Inst #1553 = RLWINM8
  { 1554,	5,	1,	4,	255,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo241 },  // Inst #1554 = RLWINM8_rec
  { 1555,	5,	1,	4,	255,	0, 0xcULL, nullptr, ImplicitList1, OperandInfo240 },  // Inst #1555 = RLWINM_rec
  { 1556,	5,	1,	4,	134,	0, 0x8ULL, nullptr, nullptr, OperandInfo242 },  // Inst #1556 = RLWNM
  { 1557,	5,	1,	4,	134,	0, 0x8ULL, nullptr, nullptr, OperandInfo243 },  // Inst #1557 = RLWNM8
  { 1558,	5,	1,	4,	255,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo243 },  // Inst #1558 = RLWNM8_rec
  { 1559,	5,	1,	4,	255,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo242 },  // Inst #1559 = RLWNM_rec
  { 1560,	2,	2,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo80 },  // Inst #1560 = ReadTB
  { 1561,	1,	0,	4,	423,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, nullptr, OperandInfo3 },  // Inst #1561 = SC
  { 1562,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo244 },  // Inst #1562 = SELECT_CC_F16
  { 1563,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo245 },  // Inst #1563 = SELECT_CC_F4
  { 1564,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo246 },  // Inst #1564 = SELECT_CC_F8
  { 1565,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo247 },  // Inst #1565 = SELECT_CC_I4
  { 1566,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo248 },  // Inst #1566 = SELECT_CC_I8
  { 1567,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo249 },  // Inst #1567 = SELECT_CC_SPE
  { 1568,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo250 },  // Inst #1568 = SELECT_CC_SPE4
  { 1569,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo244 },  // Inst #1569 = SELECT_CC_VRRC
  { 1570,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo246 },  // Inst #1570 = SELECT_CC_VSFRC
  { 1571,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo251 },  // Inst #1571 = SELECT_CC_VSRC
  { 1572,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo245 },  // Inst #1572 = SELECT_CC_VSSRC
  { 1573,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo252 },  // Inst #1573 = SELECT_F16
  { 1574,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo253 },  // Inst #1574 = SELECT_F4
  { 1575,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo254 },  // Inst #1575 = SELECT_F8
  { 1576,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo255 },  // Inst #1576 = SELECT_I4
  { 1577,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo256 },  // Inst #1577 = SELECT_I8
  { 1578,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo257 },  // Inst #1578 = SELECT_SPE
  { 1579,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo258 },  // Inst #1579 = SELECT_SPE4
  { 1580,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo252 },  // Inst #1580 = SELECT_VRRC
  { 1581,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo254 },  // Inst #1581 = SELECT_VSFRC
  { 1582,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo259 },  // Inst #1582 = SELECT_VSRC
  { 1583,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo253 },  // Inst #1583 = SELECT_VSSRC
  { 1584,	2,	1,	4,	397,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo260 },  // Inst #1584 = SETB
  { 1585,	2,	1,	4,	397,	0, 0x8ULL, nullptr, nullptr, OperandInfo261 },  // Inst #1585 = SETB8
  { 1586,	2,	1,	4,	398,	0, 0x0ULL, nullptr, nullptr, OperandInfo262 },  // Inst #1586 = SETBC
  { 1587,	2,	1,	4,	398,	0, 0x0ULL, nullptr, nullptr, OperandInfo263 },  // Inst #1587 = SETBC8
  { 1588,	2,	1,	4,	398,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo262 },  // Inst #1588 = SETBCR
  { 1589,	2,	1,	4,	398,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo263 },  // Inst #1589 = SETBCR8
  { 1590,	2,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList18, ImplicitList18, OperandInfo129 },  // Inst #1590 = SETFLM
  { 1591,	2,	1,	4,	398,	0, 0x0ULL, nullptr, nullptr, OperandInfo262 },  // Inst #1591 = SETNBC
  { 1592,	2,	1,	4,	398,	0, 0x0ULL, nullptr, nullptr, OperandInfo263 },  // Inst #1592 = SETNBC8
  { 1593,	2,	1,	4,	398,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo262 },  // Inst #1593 = SETNBCR
  { 1594,	2,	1,	4,	398,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo263 },  // Inst #1594 = SETNBCR8
  { 1595,	2,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList18, ImplicitList18, OperandInfo264 },  // Inst #1595 = SETRND
  { 1596,	2,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList18, ImplicitList18, OperandInfo181 },  // Inst #1596 = SETRNDi
  { 1597,	2,	1,	4,	315,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo80 },  // Inst #1597 = SLBFEE_rec
  { 1598,	0,	0,	4,	193,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #1598 = SLBIA
  { 1599,	1,	0,	4,	194,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo179 },  // Inst #1599 = SLBIE
  { 1600,	2,	0,	4,	222,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo80 },  // Inst #1600 = SLBIEG
  { 1601,	2,	1,	4,	195,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo80 },  // Inst #1601 = SLBMFEE
  { 1602,	2,	1,	4,	196,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo80 },  // Inst #1602 = SLBMFEV
  { 1603,	2,	0,	4,	197,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo80 },  // Inst #1603 = SLBMTE
  { 1604,	0,	0,	4,	314,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #1604 = SLBSYNC
  { 1605,	3,	1,	4,	115,	0, 0x8ULL, nullptr, nullptr, OperandInfo265 },  // Inst #1605 = SLD
  { 1606,	3,	1,	4,	374,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo265 },  // Inst #1606 = SLD_rec
  { 1607,	3,	1,	4,	408,	0, 0x8ULL, nullptr, nullptr, OperandInfo66 },  // Inst #1607 = SLW
  { 1608,	3,	1,	4,	408,	0, 0x8ULL, nullptr, nullptr, OperandInfo68 },  // Inst #1608 = SLW8
  { 1609,	3,	1,	4,	375,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo68 },  // Inst #1609 = SLW8_rec
  { 1610,	3,	1,	4,	375,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo66 },  // Inst #1610 = SLW_rec
  { 1611,	3,	1,	4,	13,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo60 },  // Inst #1611 = SPELWZ
  { 1612,	3,	1,	4,	13,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1612 = SPELWZX
  { 1613,	3,	0,	4,	24,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo60 },  // Inst #1613 = SPESTW
  { 1614,	3,	0,	4,	24,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1614 = SPESTWX
  { 1615,	3,	0,	4,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo230 },  // Inst #1615 = SPILL_ACC
  { 1616,	3,	0,	4,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo231 },  // Inst #1616 = SPILL_CR
  { 1617,	3,	0,	4,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo232 },  // Inst #1617 = SPILL_CRBIT
  { 1618,	3,	0,	4,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo233 },  // Inst #1618 = SPILL_QUADWORD
  { 1619,	3,	0,	4,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo234 },  // Inst #1619 = SPILL_UACC
  { 1620,	3,	2,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo266 },  // Inst #1620 = SPLIT_QUADWORD
  { 1621,	3,	1,	4,	115,	0, 0x8ULL, nullptr, ImplicitList5, OperandInfo265 },  // Inst #1621 = SRAD
  { 1622,	3,	1,	4,	407,	0, 0x8ULL, nullptr, ImplicitList5, OperandInfo53 },  // Inst #1622 = SRADI
  { 1623,	3,	1,	4,	407,	0, 0x8ULL, nullptr, ImplicitList5, OperandInfo54 },  // Inst #1623 = SRADI_32
  { 1624,	3,	1,	4,	259,	0, 0x8ULL, nullptr, ImplicitList8, OperandInfo53 },  // Inst #1624 = SRADI_rec
  { 1625,	3,	1,	4,	260,	0, 0x8ULL, nullptr, ImplicitList8, OperandInfo265 },  // Inst #1625 = SRAD_rec
  { 1626,	3,	1,	4,	136,	0, 0x8ULL, nullptr, ImplicitList5, OperandInfo66 },  // Inst #1626 = SRAW
  { 1627,	3,	1,	4,	136,	0, 0x8ULL, nullptr, ImplicitList5, OperandInfo54 },  // Inst #1627 = SRAWI
  { 1628,	3,	1,	4,	256,	0, 0x8ULL, nullptr, ImplicitList8, OperandInfo54 },  // Inst #1628 = SRAWI_rec
  { 1629,	3,	1,	4,	256,	0, 0x8ULL, nullptr, ImplicitList8, OperandInfo66 },  // Inst #1629 = SRAW_rec
  { 1630,	3,	1,	4,	115,	0, 0x8ULL, nullptr, nullptr, OperandInfo265 },  // Inst #1630 = SRD
  { 1631,	3,	1,	4,	374,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo265 },  // Inst #1631 = SRD_rec
  { 1632,	3,	1,	4,	408,	0, 0x8ULL, nullptr, nullptr, OperandInfo66 },  // Inst #1632 = SRW
  { 1633,	3,	1,	4,	408,	0, 0x8ULL, nullptr, nullptr, OperandInfo68 },  // Inst #1633 = SRW8
  { 1634,	3,	1,	4,	375,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo68 },  // Inst #1634 = SRW8_rec
  { 1635,	3,	1,	4,	375,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo66 },  // Inst #1635 = SRW_rec
  { 1636,	3,	0,	4,	477,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo60 },  // Inst #1636 = STB
  { 1637,	3,	0,	4,	477,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo140 },  // Inst #1637 = STB8
  { 1638,	3,	0,	4,	484,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo66 },  // Inst #1638 = STBCIX
  { 1639,	3,	0,	4,	202,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, ImplicitList1, OperandInfo143 },  // Inst #1639 = STBCX
  { 1640,	3,	0,	4,	302,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1640 = STBEPX
  { 1641,	4,	1,	4,	280,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo267 },  // Inst #1641 = STBU
  { 1642,	4,	1,	4,	280,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo268 },  // Inst #1642 = STBU8
  { 1643,	4,	1,	4,	281,	0|(1ULL<<MCID::MayStore), 0x54ULL, nullptr, nullptr, OperandInfo269 },  // Inst #1643 = STBUX
  { 1644,	4,	1,	4,	281,	0|(1ULL<<MCID::MayStore), 0x54ULL, nullptr, nullptr, OperandInfo270 },  // Inst #1644 = STBUX8
  { 1645,	3,	0,	4,	218,	0|(1ULL<<MCID::MayStore), 0x54ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1645 = STBX
  { 1646,	3,	0,	4,	218,	0|(1ULL<<MCID::MayStore), 0x54ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1646 = STBX8
  { 1647,	3,	0,	4,	218,	0|(1ULL<<MCID::MayStore), 0xcULL, nullptr, nullptr, OperandInfo149 },  // Inst #1647 = STBXTLS
  { 1648,	3,	0,	4,	218,	0|(1ULL<<MCID::MayStore), 0xcULL, nullptr, nullptr, OperandInfo149 },  // Inst #1648 = STBXTLS_
  { 1649,	3,	0,	4,	218,	0|(1ULL<<MCID::MayStore), 0xcULL, nullptr, nullptr, OperandInfo150 },  // Inst #1649 = STBXTLS_32
  { 1650,	3,	0,	4,	479,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo140 },  // Inst #1650 = STD
  { 1651,	3,	0,	4,	292,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo53 },  // Inst #1651 = STDAT
  { 1652,	3,	0,	4,	477,	0|(1ULL<<MCID::MayStore), 0x54ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1652 = STDBRX
  { 1653,	3,	0,	4,	484,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo66 },  // Inst #1653 = STDCIX
  { 1654,	3,	0,	4,	203,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, ImplicitList1, OperandInfo148 },  // Inst #1654 = STDCX
  { 1655,	4,	1,	4,	280,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo268 },  // Inst #1655 = STDU
  { 1656,	4,	1,	4,	281,	0|(1ULL<<MCID::MayStore), 0x54ULL, nullptr, nullptr, OperandInfo270 },  // Inst #1656 = STDUX
  { 1657,	3,	0,	4,	220,	0|(1ULL<<MCID::MayStore), 0x54ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1657 = STDX
  { 1658,	3,	0,	4,	220,	0|(1ULL<<MCID::MayStore), 0xcULL, nullptr, nullptr, OperandInfo149 },  // Inst #1658 = STDXTLS
  { 1659,	3,	0,	4,	220,	0|(1ULL<<MCID::MayStore), 0xcULL, nullptr, nullptr, OperandInfo149 },  // Inst #1659 = STDXTLS_
  { 1660,	3,	0,	4,	217,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo154 },  // Inst #1660 = STFD
  { 1661,	3,	0,	4,	304,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo155 },  // Inst #1661 = STFDEPX
  { 1662,	4,	1,	4,	279,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo271 },  // Inst #1662 = STFDU
  { 1663,	4,	1,	4,	279,	0|(1ULL<<MCID::MayStore), 0x54ULL, nullptr, nullptr, OperandInfo272 },  // Inst #1663 = STFDUX
  { 1664,	3,	0,	4,	217,	0|(1ULL<<MCID::MayStore), 0x50ULL, nullptr, nullptr, OperandInfo155 },  // Inst #1664 = STFDX
  { 1665,	3,	0,	4,	217,	0|(1ULL<<MCID::MayStore), 0x50ULL, nullptr, nullptr, OperandInfo155 },  // Inst #1665 = STFIWX
  { 1666,	3,	0,	4,	217,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo158 },  // Inst #1666 = STFS
  { 1667,	4,	1,	4,	279,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo273 },  // Inst #1667 = STFSU
  { 1668,	4,	1,	4,	279,	0|(1ULL<<MCID::MayStore), 0x54ULL, nullptr, nullptr, OperandInfo274 },  // Inst #1668 = STFSUX
  { 1669,	3,	0,	4,	217,	0|(1ULL<<MCID::MayStore), 0x50ULL, nullptr, nullptr, OperandInfo161 },  // Inst #1669 = STFSX
  { 1670,	3,	0,	4,	477,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo60 },  // Inst #1670 = STH
  { 1671,	3,	0,	4,	477,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo140 },  // Inst #1671 = STH8
  { 1672,	3,	0,	4,	477,	0|(1ULL<<MCID::MayStore), 0x54ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1672 = STHBRX
  { 1673,	3,	0,	4,	484,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo66 },  // Inst #1673 = STHCIX
  { 1674,	3,	0,	4,	202,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, ImplicitList1, OperandInfo143 },  // Inst #1674 = STHCX
  { 1675,	3,	0,	4,	302,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1675 = STHEPX
  { 1676,	4,	1,	4,	280,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo267 },  // Inst #1676 = STHU
  { 1677,	4,	1,	4,	280,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo268 },  // Inst #1677 = STHU8
  { 1678,	4,	1,	4,	281,	0|(1ULL<<MCID::MayStore), 0x54ULL, nullptr, nullptr, OperandInfo269 },  // Inst #1678 = STHUX
  { 1679,	4,	1,	4,	281,	0|(1ULL<<MCID::MayStore), 0x54ULL, nullptr, nullptr, OperandInfo270 },  // Inst #1679 = STHUX8
  { 1680,	3,	0,	4,	218,	0|(1ULL<<MCID::MayStore), 0x54ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1680 = STHX
  { 1681,	3,	0,	4,	218,	0|(1ULL<<MCID::MayStore), 0x54ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1681 = STHX8
  { 1682,	3,	0,	4,	218,	0|(1ULL<<MCID::MayStore), 0xcULL, nullptr, nullptr, OperandInfo149 },  // Inst #1682 = STHXTLS
  { 1683,	3,	0,	4,	218,	0|(1ULL<<MCID::MayStore), 0xcULL, nullptr, nullptr, OperandInfo149 },  // Inst #1683 = STHXTLS_
  { 1684,	3,	0,	4,	218,	0|(1ULL<<MCID::MayStore), 0xcULL, nullptr, nullptr, OperandInfo150 },  // Inst #1684 = STHXTLS_32
  { 1685,	3,	0,	4,	223,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo60 },  // Inst #1685 = STMW
  { 1686,	0,	0,	4,	316,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #1686 = STOP
  { 1687,	3,	0,	4,	91,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo233 },  // Inst #1687 = STQ
  { 1688,	3,	0,	4,	92,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, ImplicitList1, OperandInfo164 },  // Inst #1688 = STQCX
  { 1689,	3,	0,	4,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr, OperandInfo164 },  // Inst #1689 = STQX_PSEUDO
  { 1690,	3,	0,	4,	221,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo54 },  // Inst #1690 = STSWI
  { 1691,	3,	0,	4,	225,	0|(1ULL<<MCID::MayStore), 0x50ULL, nullptr, nullptr, OperandInfo165 },  // Inst #1691 = STVEBX
  { 1692,	3,	0,	4,	225,	0|(1ULL<<MCID::MayStore), 0x50ULL, nullptr, nullptr, OperandInfo165 },  // Inst #1692 = STVEHX
  { 1693,	3,	0,	4,	225,	0|(1ULL<<MCID::MayStore), 0x50ULL, nullptr, nullptr, OperandInfo165 },  // Inst #1693 = STVEWX
  { 1694,	3,	0,	4,	225,	0|(1ULL<<MCID::MayStore), 0x50ULL, nullptr, nullptr, OperandInfo165 },  // Inst #1694 = STVX
  { 1695,	3,	0,	4,	225,	0|(1ULL<<MCID::MayStore), 0x50ULL, nullptr, nullptr, OperandInfo165 },  // Inst #1695 = STVXL
  { 1696,	3,	0,	4,	477,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo60 },  // Inst #1696 = STW
  { 1697,	3,	0,	4,	477,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo140 },  // Inst #1697 = STW8
  { 1698,	3,	0,	4,	292,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo54 },  // Inst #1698 = STWAT
  { 1699,	3,	0,	4,	477,	0|(1ULL<<MCID::MayStore), 0x54ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1699 = STWBRX
  { 1700,	3,	0,	4,	484,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo66 },  // Inst #1700 = STWCIX
  { 1701,	3,	0,	4,	202,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, ImplicitList1, OperandInfo143 },  // Inst #1701 = STWCX
  { 1702,	3,	0,	4,	302,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1702 = STWEPX
  { 1703,	4,	1,	4,	280,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo267 },  // Inst #1703 = STWU
  { 1704,	4,	1,	4,	280,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo268 },  // Inst #1704 = STWU8
  { 1705,	4,	1,	4,	281,	0|(1ULL<<MCID::MayStore), 0x54ULL, nullptr, nullptr, OperandInfo269 },  // Inst #1705 = STWUX
  { 1706,	4,	1,	4,	281,	0|(1ULL<<MCID::MayStore), 0x54ULL, nullptr, nullptr, OperandInfo270 },  // Inst #1706 = STWUX8
  { 1707,	3,	0,	4,	218,	0|(1ULL<<MCID::MayStore), 0x54ULL, nullptr, nullptr, OperandInfo143 },  // Inst #1707 = STWX
  { 1708,	3,	0,	4,	218,	0|(1ULL<<MCID::MayStore), 0x54ULL, nullptr, nullptr, OperandInfo148 },  // Inst #1708 = STWX8
  { 1709,	3,	0,	4,	218,	0|(1ULL<<MCID::MayStore), 0xcULL, nullptr, nullptr, OperandInfo149 },  // Inst #1709 = STWXTLS
  { 1710,	3,	0,	4,	218,	0|(1ULL<<MCID::MayStore), 0xcULL, nullptr, nullptr, OperandInfo149 },  // Inst #1710 = STWXTLS_
  { 1711,	3,	0,	4,	218,	0|(1ULL<<MCID::MayStore), 0xcULL, nullptr, nullptr, OperandInfo150 },  // Inst #1711 = STWXTLS_32
  { 1712,	3,	0,	4,	217,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo167 },  // Inst #1712 = STXSD
  { 1713,	3,	0,	4,	217,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo61 },  // Inst #1713 = STXSDX
  { 1714,	3,	0,	4,	217,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo61 },  // Inst #1714 = STXSIBX
  { 1715,	3,	0,	4,	217,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo169 },  // Inst #1715 = STXSIBXv
  { 1716,	3,	0,	4,	217,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo61 },  // Inst #1716 = STXSIHX
  { 1717,	3,	0,	4,	217,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo169 },  // Inst #1717 = STXSIHXv
  { 1718,	3,	0,	4,	217,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo61 },  // Inst #1718 = STXSIWX
  { 1719,	3,	0,	4,	217,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo167 },  // Inst #1719 = STXSSP
  { 1720,	3,	0,	4,	217,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo65 },  // Inst #1720 = STXSSPX
  { 1721,	3,	0,	4,	226,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo168 },  // Inst #1721 = STXV
  { 1722,	3,	0,	4,	226,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo169 },  // Inst #1722 = STXVB16X
  { 1723,	3,	0,	4,	226,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo169 },  // Inst #1723 = STXVD2X
  { 1724,	3,	0,	4,	226,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo169 },  // Inst #1724 = STXVH8X
  { 1725,	3,	0,	4,	227,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1725 = STXVL
  { 1726,	3,	0,	4,	227,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo171 },  // Inst #1726 = STXVLL
  { 1727,	3,	0,	4,	486,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo172 },  // Inst #1727 = STXVP
  { 1728,	3,	0,	4,	486,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo173 },  // Inst #1728 = STXVPX
  { 1729,	3,	0,	4,	481,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo169 },  // Inst #1729 = STXVRBX
  { 1730,	3,	0,	4,	481,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo169 },  // Inst #1730 = STXVRDX
  { 1731,	3,	0,	4,	481,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo169 },  // Inst #1731 = STXVRHX
  { 1732,	3,	0,	4,	481,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo169 },  // Inst #1732 = STXVRWX
  { 1733,	3,	0,	4,	226,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo169 },  // Inst #1733 = STXVW4X
  { 1734,	3,	0,	4,	226,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo169 },  // Inst #1734 = STXVX
  { 1735,	3,	1,	4,	405,	0, 0x8ULL, nullptr, nullptr, OperandInfo66 },  // Inst #1735 = SUBF
  { 1736,	3,	1,	4,	405,	0, 0x8ULL, nullptr, nullptr, OperandInfo68 },  // Inst #1736 = SUBF8
  { 1737,	3,	1,	4,	405,	0, 0x8ULL, nullptr, ImplicitList3, OperandInfo68 },  // Inst #1737 = SUBF8O
  { 1738,	3,	1,	4,	420,	0, 0x8ULL, nullptr, ImplicitList4, OperandInfo68 },  // Inst #1738 = SUBF8O_rec
  { 1739,	3,	1,	4,	405,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo68 },  // Inst #1739 = SUBF8_rec
  { 1740,	3,	1,	4,	424,	0, 0xcULL, nullptr, ImplicitList5, OperandInfo66 },  // Inst #1740 = SUBFC
  { 1741,	3,	1,	4,	424,	0, 0xcULL, nullptr, ImplicitList5, OperandInfo68 },  // Inst #1741 = SUBFC8
  { 1742,	3,	1,	4,	424,	0, 0xcULL, nullptr, ImplicitList6, OperandInfo68 },  // Inst #1742 = SUBFC8O
  { 1743,	3,	1,	4,	247,	0, 0xcULL, nullptr, ImplicitList7, OperandInfo68 },  // Inst #1743 = SUBFC8O_rec
  { 1744,	3,	1,	4,	425,	0, 0xcULL, nullptr, ImplicitList8, OperandInfo68 },  // Inst #1744 = SUBFC8_rec
  { 1745,	3,	1,	4,	424,	0, 0xcULL, nullptr, ImplicitList6, OperandInfo66 },  // Inst #1745 = SUBFCO
  { 1746,	3,	1,	4,	247,	0, 0xcULL, nullptr, ImplicitList7, OperandInfo66 },  // Inst #1746 = SUBFCO_rec
  { 1747,	3,	1,	4,	425,	0, 0xcULL, nullptr, ImplicitList8, OperandInfo66 },  // Inst #1747 = SUBFC_rec
  { 1748,	3,	1,	4,	405,	0, 0x8ULL, ImplicitList5, ImplicitList5, OperandInfo66 },  // Inst #1748 = SUBFE
  { 1749,	3,	1,	4,	405,	0, 0x8ULL, ImplicitList5, ImplicitList5, OperandInfo68 },  // Inst #1749 = SUBFE8
  { 1750,	3,	1,	4,	405,	0, 0x8ULL, ImplicitList5, ImplicitList6, OperandInfo68 },  // Inst #1750 = SUBFE8O
  { 1751,	3,	1,	4,	420,	0, 0x8ULL, ImplicitList5, ImplicitList7, OperandInfo68 },  // Inst #1751 = SUBFE8O_rec
  { 1752,	3,	1,	4,	420,	0, 0x8ULL, ImplicitList5, ImplicitList8, OperandInfo68 },  // Inst #1752 = SUBFE8_rec
  { 1753,	3,	1,	4,	405,	0, 0x8ULL, ImplicitList5, ImplicitList6, OperandInfo66 },  // Inst #1753 = SUBFEO
  { 1754,	3,	1,	4,	420,	0, 0x8ULL, ImplicitList5, ImplicitList7, OperandInfo66 },  // Inst #1754 = SUBFEO_rec
  { 1755,	3,	1,	4,	420,	0, 0x8ULL, ImplicitList5, ImplicitList8, OperandInfo66 },  // Inst #1755 = SUBFE_rec
  { 1756,	3,	1,	4,	405,	0, 0x8ULL, nullptr, ImplicitList5, OperandInfo54 },  // Inst #1756 = SUBFIC
  { 1757,	3,	1,	4,	405,	0, 0x8ULL, nullptr, ImplicitList5, OperandInfo53 },  // Inst #1757 = SUBFIC8
  { 1758,	2,	1,	4,	395,	0, 0x8ULL, ImplicitList5, ImplicitList5, OperandInfo80 },  // Inst #1758 = SUBFME
  { 1759,	2,	1,	4,	395,	0, 0x8ULL, ImplicitList5, ImplicitList5, OperandInfo81 },  // Inst #1759 = SUBFME8
  { 1760,	2,	1,	4,	395,	0, 0x8ULL, ImplicitList5, ImplicitList6, OperandInfo81 },  // Inst #1760 = SUBFME8O
  { 1761,	2,	1,	4,	417,	0, 0x8ULL, ImplicitList5, ImplicitList7, OperandInfo81 },  // Inst #1761 = SUBFME8O_rec
  { 1762,	2,	1,	4,	417,	0, 0x8ULL, ImplicitList5, ImplicitList8, OperandInfo81 },  // Inst #1762 = SUBFME8_rec
  { 1763,	2,	1,	4,	395,	0, 0x8ULL, ImplicitList5, ImplicitList6, OperandInfo80 },  // Inst #1763 = SUBFMEO
  { 1764,	2,	1,	4,	417,	0, 0x8ULL, ImplicitList5, ImplicitList7, OperandInfo80 },  // Inst #1764 = SUBFMEO_rec
  { 1765,	2,	1,	4,	417,	0, 0x8ULL, ImplicitList5, ImplicitList8, OperandInfo80 },  // Inst #1765 = SUBFME_rec
  { 1766,	3,	1,	4,	405,	0, 0x8ULL, nullptr, ImplicitList3, OperandInfo66 },  // Inst #1766 = SUBFO
  { 1767,	3,	1,	4,	420,	0, 0x8ULL, nullptr, ImplicitList4, OperandInfo66 },  // Inst #1767 = SUBFO_rec
  { 1768,	2,	1,	4,	395,	0, 0x8ULL, ImplicitList5, ImplicitList5, OperandInfo80 },  // Inst #1768 = SUBFZE
  { 1769,	2,	1,	4,	395,	0, 0x8ULL, ImplicitList5, ImplicitList5, OperandInfo81 },  // Inst #1769 = SUBFZE8
  { 1770,	2,	1,	4,	395,	0, 0x8ULL, ImplicitList5, ImplicitList6, OperandInfo81 },  // Inst #1770 = SUBFZE8O
  { 1771,	2,	1,	4,	417,	0, 0x8ULL, ImplicitList5, ImplicitList7, OperandInfo81 },  // Inst #1771 = SUBFZE8O_rec
  { 1772,	2,	1,	4,	417,	0, 0x8ULL, ImplicitList5, ImplicitList8, OperandInfo81 },  // Inst #1772 = SUBFZE8_rec
  { 1773,	2,	1,	4,	395,	0, 0x8ULL, ImplicitList5, ImplicitList6, OperandInfo80 },  // Inst #1773 = SUBFZEO
  { 1774,	2,	1,	4,	417,	0, 0x8ULL, ImplicitList5, ImplicitList7, OperandInfo80 },  // Inst #1774 = SUBFZEO_rec
  { 1775,	2,	1,	4,	417,	0, 0x8ULL, ImplicitList5, ImplicitList8, OperandInfo80 },  // Inst #1775 = SUBFZE_rec
  { 1776,	3,	1,	4,	405,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo66 },  // Inst #1776 = SUBF_rec
  { 1777,	1,	0,	4,	190,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #1777 = SYNC
  { 1778,	1,	0,	4,	139,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo179 },  // Inst #1778 = TABORT
  { 1779,	3,	0,	4,	104,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo107 },  // Inst #1779 = TABORTDC
  { 1780,	3,	0,	4,	104,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo275 },  // Inst #1780 = TABORTDCI
  { 1781,	3,	0,	4,	104,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo107 },  // Inst #1781 = TABORTWC
  { 1782,	3,	0,	4,	104,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo275 },  // Inst #1782 = TABORTWCI
  { 1783,	1,	0,	4,	335,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList18, nullptr, OperandInfo88 },  // Inst #1783 = TAILB
  { 1784,	1,	0,	4,	335,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList18, nullptr, OperandInfo88 },  // Inst #1784 = TAILB8
  { 1785,	1,	0,	4,	335,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList18, nullptr, OperandInfo2 },  // Inst #1785 = TAILBA
  { 1786,	1,	0,	4,	335,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList18, nullptr, OperandInfo2 },  // Inst #1786 = TAILBA8
  { 1787,	0,	0,	4,	335,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList14, nullptr, nullptr },  // Inst #1787 = TAILBCTR
  { 1788,	0,	0,	4,	335,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList16, nullptr, nullptr },  // Inst #1788 = TAILBCTR8
  { 1789,	1,	0,	4,	126,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo3 },  // Inst #1789 = TBEGIN
  { 1790,	2,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo162 },  // Inst #1790 = TBEGIN_RET
  { 1791,	1,	1,	4,	207,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo177 },  // Inst #1791 = TCHECK
  { 1792,	1,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo179 },  // Inst #1792 = TCHECK_RET
  { 1793,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList18, nullptr, OperandInfo276 },  // Inst #1793 = TCRETURNai
  { 1794,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList18, nullptr, OperandInfo276 },  // Inst #1794 = TCRETURNai8
  { 1795,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList18, nullptr, OperandInfo277 },  // Inst #1795 = TCRETURNdi
  { 1796,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList18, nullptr, OperandInfo277 },  // Inst #1796 = TCRETURNdi8
  { 1797,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList18, nullptr, OperandInfo278 },  // Inst #1797 = TCRETURNri
  { 1798,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList18, nullptr, OperandInfo279 },  // Inst #1798 = TCRETURNri8
  { 1799,	3,	0,	4,	108,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo280 },  // Inst #1799 = TD
  { 1800,	3,	0,	4,	108,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo281 },  // Inst #1800 = TDI
  { 1801,	1,	0,	4,	201,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo3 },  // Inst #1801 = TEND
  { 1802,	0,	0,	4,	310,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #1802 = TLBIA
  { 1803,	2,	0,	4,	224,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo80 },  // Inst #1803 = TLBIE
  { 1804,	1,	0,	4,	198,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo179 },  // Inst #1804 = TLBIEL
  { 1805,	2,	0,	4,	301,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo80 },  // Inst #1805 = TLBIVAX
  { 1806,	1,	0,	4,	489,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo179 },  // Inst #1806 = TLBLD
  { 1807,	1,	0,	4,	489,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo179 },  // Inst #1807 = TLBLI
  { 1808,	0,	0,	4,	301,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #1808 = TLBRE
  { 1809,	3,	1,	4,	489,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo54 },  // Inst #1809 = TLBRE2
  { 1810,	2,	0,	4,	301,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo80 },  // Inst #1810 = TLBSX
  { 1811,	3,	0,	4,	489,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66 },  // Inst #1811 = TLBSX2
  { 1812,	3,	0,	4,	489,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66 },  // Inst #1812 = TLBSX2D
  { 1813,	0,	0,	4,	189,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #1813 = TLBSYNC
  { 1814,	0,	0,	4,	301,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #1814 = TLBWE
  { 1815,	3,	0,	4,	489,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo54 },  // Inst #1815 = TLBWE2
  { 1816,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo66 },  // Inst #1816 = TLSGDAIX
  { 1817,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo68 },  // Inst #1817 = TLSGDAIX8
  { 1818,	0,	0,	4,	360,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #1818 = TRAP
  { 1819,	0,	0,	4,	416,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, nullptr },  // Inst #1819 = TRECHKPT
  { 1820,	1,	0,	4,	139,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo179 },  // Inst #1820 = TRECLAIM
  { 1821,	1,	0,	4,	139,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo3 },  // Inst #1821 = TSR
  { 1822,	3,	0,	4,	361,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo107 },  // Inst #1822 = TW
  { 1823,	3,	0,	4,	109,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo275 },  // Inst #1823 = TWI
  { 1824,	0,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr },  // Inst #1824 = UNENCODED_NOP
  { 1825,	3,	2,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66 },  // Inst #1825 = UpdateGBR
  { 1826,	3,	1,	4,	143,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1826 = VABSDUB
  { 1827,	3,	1,	4,	143,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1827 = VABSDUH
  { 1828,	3,	1,	4,	143,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1828 = VABSDUW
  { 1829,	3,	1,	4,	355,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1829 = VADDCUQ
  { 1830,	3,	1,	4,	376,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1830 = VADDCUW
  { 1831,	4,	1,	4,	359,	0, 0x0ULL, nullptr, nullptr, OperandInfo282 },  // Inst #1831 = VADDECUQ
  { 1832,	4,	1,	4,	359,	0, 0x0ULL, nullptr, nullptr, OperandInfo282 },  // Inst #1832 = VADDEUQM
  { 1833,	3,	1,	4,	324,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1833 = VADDFP
  { 1834,	3,	1,	4,	376,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1834 = VADDSBS
  { 1835,	3,	1,	4,	376,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1835 = VADDSHS
  { 1836,	3,	1,	4,	376,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1836 = VADDSWS
  { 1837,	3,	1,	4,	409,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1837 = VADDUBM
  { 1838,	3,	1,	4,	376,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1838 = VADDUBS
  { 1839,	3,	1,	4,	409,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1839 = VADDUDM
  { 1840,	3,	1,	4,	409,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1840 = VADDUHM
  { 1841,	3,	1,	4,	376,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1841 = VADDUHS
  { 1842,	3,	1,	4,	356,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1842 = VADDUQM
  { 1843,	3,	1,	4,	409,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1843 = VADDUWM
  { 1844,	3,	1,	4,	376,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1844 = VADDUWS
  { 1845,	3,	1,	4,	410,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1845 = VAND
  { 1846,	3,	1,	4,	410,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1846 = VANDC
  { 1847,	3,	1,	4,	376,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1847 = VAVGSB
  { 1848,	3,	1,	4,	376,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1848 = VAVGSH
  { 1849,	3,	1,	4,	376,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1849 = VAVGSW
  { 1850,	3,	1,	4,	376,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1850 = VAVGUB
  { 1851,	3,	1,	4,	376,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1851 = VAVGUH
  { 1852,	3,	1,	4,	376,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1852 = VAVGUW
  { 1853,	3,	1,	4,	144,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1853 = VBPERMD
  { 1854,	3,	1,	4,	464,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1854 = VBPERMQ
  { 1855,	3,	1,	4,	319,	0, 0x28ULL, nullptr, nullptr, OperandInfo283 },  // Inst #1855 = VCFSX
  { 1856,	2,	1,	4,	319,	0, 0x28ULL, nullptr, nullptr, OperandInfo97 },  // Inst #1856 = VCFSX_0
  { 1857,	3,	1,	4,	339,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1857 = VCFUGED
  { 1858,	3,	1,	4,	319,	0, 0x28ULL, nullptr, nullptr, OperandInfo283 },  // Inst #1858 = VCFUX
  { 1859,	2,	1,	4,	319,	0, 0x28ULL, nullptr, nullptr, OperandInfo97 },  // Inst #1859 = VCFUX_0
  { 1860,	3,	1,	4,	288,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1860 = VCIPHER
  { 1861,	3,	1,	4,	288,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1861 = VCIPHERLAST
  { 1862,	3,	1,	4,	465,	0, 0x0ULL, nullptr, nullptr, OperandInfo284 },  // Inst #1862 = VCLRLB
  { 1863,	3,	1,	4,	465,	0, 0x0ULL, nullptr, nullptr, OperandInfo284 },  // Inst #1863 = VCLRRB
  { 1864,	2,	1,	4,	366,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #1864 = VCLZB
  { 1865,	2,	1,	4,	366,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #1865 = VCLZD
  { 1866,	3,	1,	4,	339,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1866 = VCLZDM
  { 1867,	2,	1,	4,	366,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #1867 = VCLZH
  { 1868,	2,	1,	4,	460,	0, 0x0ULL, nullptr, nullptr, OperandInfo285 },  // Inst #1868 = VCLZLSBB
  { 1869,	2,	1,	4,	366,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #1869 = VCLZW
  { 1870,	3,	1,	4,	377,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1870 = VCMPBFP
  { 1871,	3,	1,	4,	377,	0, 0x28ULL, nullptr, ImplicitList20, OperandInfo96 },  // Inst #1871 = VCMPBFP_rec
  { 1872,	3,	1,	4,	377,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1872 = VCMPEQFP
  { 1873,	3,	1,	4,	377,	0, 0x28ULL, nullptr, ImplicitList20, OperandInfo96 },  // Inst #1873 = VCMPEQFP_rec
  { 1874,	3,	1,	4,	142,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1874 = VCMPEQUB
  { 1875,	3,	1,	4,	377,	0, 0x28ULL, nullptr, ImplicitList20, OperandInfo96 },  // Inst #1875 = VCMPEQUB_rec
  { 1876,	3,	1,	4,	142,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1876 = VCMPEQUD
  { 1877,	3,	1,	4,	377,	0, 0x28ULL, nullptr, ImplicitList20, OperandInfo96 },  // Inst #1877 = VCMPEQUD_rec
  { 1878,	3,	1,	4,	142,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1878 = VCMPEQUH
  { 1879,	3,	1,	4,	377,	0, 0x28ULL, nullptr, ImplicitList20, OperandInfo96 },  // Inst #1879 = VCMPEQUH_rec
  { 1880,	3,	1,	4,	378,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1880 = VCMPEQUQ
  { 1881,	3,	1,	4,	378,	0, 0x28ULL, nullptr, ImplicitList20, OperandInfo96 },  // Inst #1881 = VCMPEQUQ_rec
  { 1882,	3,	1,	4,	142,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1882 = VCMPEQUW
  { 1883,	3,	1,	4,	377,	0, 0x28ULL, nullptr, ImplicitList20, OperandInfo96 },  // Inst #1883 = VCMPEQUW_rec
  { 1884,	3,	1,	4,	377,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1884 = VCMPGEFP
  { 1885,	3,	1,	4,	377,	0, 0x28ULL, nullptr, ImplicitList20, OperandInfo96 },  // Inst #1885 = VCMPGEFP_rec
  { 1886,	3,	1,	4,	377,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1886 = VCMPGTFP
  { 1887,	3,	1,	4,	377,	0, 0x28ULL, nullptr, ImplicitList20, OperandInfo96 },  // Inst #1887 = VCMPGTFP_rec
  { 1888,	3,	1,	4,	142,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1888 = VCMPGTSB
  { 1889,	3,	1,	4,	377,	0, 0x28ULL, nullptr, ImplicitList20, OperandInfo96 },  // Inst #1889 = VCMPGTSB_rec
  { 1890,	3,	1,	4,	142,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1890 = VCMPGTSD
  { 1891,	3,	1,	4,	377,	0, 0x28ULL, nullptr, ImplicitList20, OperandInfo96 },  // Inst #1891 = VCMPGTSD_rec
  { 1892,	3,	1,	4,	142,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1892 = VCMPGTSH
  { 1893,	3,	1,	4,	377,	0, 0x28ULL, nullptr, ImplicitList20, OperandInfo96 },  // Inst #1893 = VCMPGTSH_rec
  { 1894,	3,	1,	4,	378,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1894 = VCMPGTSQ
  { 1895,	3,	1,	4,	378,	0, 0x28ULL, nullptr, ImplicitList20, OperandInfo96 },  // Inst #1895 = VCMPGTSQ_rec
  { 1896,	3,	1,	4,	142,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1896 = VCMPGTSW
  { 1897,	3,	1,	4,	377,	0, 0x28ULL, nullptr, ImplicitList20, OperandInfo96 },  // Inst #1897 = VCMPGTSW_rec
  { 1898,	3,	1,	4,	142,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1898 = VCMPGTUB
  { 1899,	3,	1,	4,	377,	0, 0x28ULL, nullptr, ImplicitList20, OperandInfo96 },  // Inst #1899 = VCMPGTUB_rec
  { 1900,	3,	1,	4,	142,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1900 = VCMPGTUD
  { 1901,	3,	1,	4,	377,	0, 0x28ULL, nullptr, ImplicitList20, OperandInfo96 },  // Inst #1901 = VCMPGTUD_rec
  { 1902,	3,	1,	4,	142,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1902 = VCMPGTUH
  { 1903,	3,	1,	4,	377,	0, 0x28ULL, nullptr, ImplicitList20, OperandInfo96 },  // Inst #1903 = VCMPGTUH_rec
  { 1904,	3,	1,	4,	378,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1904 = VCMPGTUQ
  { 1905,	3,	1,	4,	378,	0, 0x28ULL, nullptr, ImplicitList20, OperandInfo96 },  // Inst #1905 = VCMPGTUQ_rec
  { 1906,	3,	1,	4,	142,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1906 = VCMPGTUW
  { 1907,	3,	1,	4,	377,	0, 0x28ULL, nullptr, ImplicitList20, OperandInfo96 },  // Inst #1907 = VCMPGTUW_rec
  { 1908,	3,	1,	4,	142,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1908 = VCMPNEB
  { 1909,	3,	1,	4,	377,	0, 0x28ULL, nullptr, ImplicitList20, OperandInfo96 },  // Inst #1909 = VCMPNEB_rec
  { 1910,	3,	1,	4,	142,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1910 = VCMPNEH
  { 1911,	3,	1,	4,	377,	0, 0x28ULL, nullptr, ImplicitList20, OperandInfo96 },  // Inst #1911 = VCMPNEH_rec
  { 1912,	3,	1,	4,	142,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1912 = VCMPNEW
  { 1913,	3,	1,	4,	377,	0, 0x28ULL, nullptr, ImplicitList20, OperandInfo96 },  // Inst #1913 = VCMPNEW_rec
  { 1914,	3,	1,	4,	142,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1914 = VCMPNEZB
  { 1915,	3,	1,	4,	377,	0, 0x28ULL, nullptr, ImplicitList20, OperandInfo96 },  // Inst #1915 = VCMPNEZB_rec
  { 1916,	3,	1,	4,	142,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1916 = VCMPNEZH
  { 1917,	3,	1,	4,	377,	0, 0x28ULL, nullptr, ImplicitList20, OperandInfo96 },  // Inst #1917 = VCMPNEZH_rec
  { 1918,	3,	1,	4,	142,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1918 = VCMPNEZW
  { 1919,	3,	1,	4,	377,	0, 0x28ULL, nullptr, ImplicitList20, OperandInfo96 },  // Inst #1919 = VCMPNEZW_rec
  { 1920,	3,	1,	4,	379,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo286 },  // Inst #1920 = VCMPSQ
  { 1921,	3,	1,	4,	379,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo286 },  // Inst #1921 = VCMPUQ
  { 1922,	3,	1,	4,	379,	0, 0x0ULL, nullptr, nullptr, OperandInfo287 },  // Inst #1922 = VCNTMBB
  { 1923,	3,	1,	4,	379,	0, 0x0ULL, nullptr, nullptr, OperandInfo287 },  // Inst #1923 = VCNTMBD
  { 1924,	3,	1,	4,	379,	0, 0x0ULL, nullptr, nullptr, OperandInfo287 },  // Inst #1924 = VCNTMBH
  { 1925,	3,	1,	4,	379,	0, 0x0ULL, nullptr, nullptr, OperandInfo287 },  // Inst #1925 = VCNTMBW
  { 1926,	3,	1,	4,	319,	0, 0x28ULL, nullptr, nullptr, OperandInfo283 },  // Inst #1926 = VCTSXS
  { 1927,	2,	1,	4,	319,	0, 0x28ULL, nullptr, nullptr, OperandInfo97 },  // Inst #1927 = VCTSXS_0
  { 1928,	3,	1,	4,	319,	0, 0x28ULL, nullptr, nullptr, OperandInfo283 },  // Inst #1928 = VCTUXS
  { 1929,	2,	1,	4,	319,	0, 0x28ULL, nullptr, nullptr, OperandInfo97 },  // Inst #1929 = VCTUXS_0
  { 1930,	2,	1,	4,	366,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #1930 = VCTZB
  { 1931,	2,	1,	4,	366,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #1931 = VCTZD
  { 1932,	3,	1,	4,	339,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1932 = VCTZDM
  { 1933,	2,	1,	4,	366,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #1933 = VCTZH
  { 1934,	2,	1,	4,	460,	0, 0x0ULL, nullptr, nullptr, OperandInfo285 },  // Inst #1934 = VCTZLSBB
  { 1935,	2,	1,	4,	366,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #1935 = VCTZW
  { 1936,	3,	1,	4,	352,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1936 = VDIVESD
  { 1937,	3,	1,	4,	345,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1937 = VDIVESQ
  { 1938,	3,	1,	4,	353,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1938 = VDIVESW
  { 1939,	3,	1,	4,	352,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1939 = VDIVEUD
  { 1940,	3,	1,	4,	345,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1940 = VDIVEUQ
  { 1941,	3,	1,	4,	353,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1941 = VDIVEUW
  { 1942,	3,	1,	4,	348,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1942 = VDIVSD
  { 1943,	3,	1,	4,	345,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1943 = VDIVSQ
  { 1944,	3,	1,	4,	350,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1944 = VDIVSW
  { 1945,	3,	1,	4,	348,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1945 = VDIVUD
  { 1946,	3,	1,	4,	345,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1946 = VDIVUQ
  { 1947,	3,	1,	4,	350,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1947 = VDIVUW
  { 1948,	3,	1,	4,	409,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #1948 = VEQV
  { 1949,	2,	1,	4,	364,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #1949 = VEXPANDBM
  { 1950,	2,	1,	4,	364,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #1950 = VEXPANDDM
  { 1951,	2,	1,	4,	364,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #1951 = VEXPANDHM
  { 1952,	2,	1,	4,	364,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #1952 = VEXPANDQM
  { 1953,	2,	1,	4,	364,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #1953 = VEXPANDWM
  { 1954,	2,	1,	4,	329,	0, 0x28ULL, nullptr, nullptr, OperandInfo97 },  // Inst #1954 = VEXPTEFP
  { 1955,	4,	1,	4,	467,	0, 0x0ULL, nullptr, nullptr, OperandInfo288 },  // Inst #1955 = VEXTDDVLX
  { 1956,	4,	1,	4,	467,	0, 0x0ULL, nullptr, nullptr, OperandInfo288 },  // Inst #1956 = VEXTDDVRX
  { 1957,	4,	1,	4,	467,	0, 0x0ULL, nullptr, nullptr, OperandInfo288 },  // Inst #1957 = VEXTDUBVLX
  { 1958,	4,	1,	4,	467,	0, 0x0ULL, nullptr, nullptr, OperandInfo288 },  // Inst #1958 = VEXTDUBVRX
  { 1959,	4,	1,	4,	467,	0, 0x0ULL, nullptr, nullptr, OperandInfo288 },  // Inst #1959 = VEXTDUHVLX
  { 1960,	4,	1,	4,	467,	0, 0x0ULL, nullptr, nullptr, OperandInfo288 },  // Inst #1960 = VEXTDUHVRX
  { 1961,	4,	1,	4,	467,	0, 0x0ULL, nullptr, nullptr, OperandInfo288 },  // Inst #1961 = VEXTDUWVLX
  { 1962,	4,	1,	4,	467,	0, 0x0ULL, nullptr, nullptr, OperandInfo288 },  // Inst #1962 = VEXTDUWVRX
  { 1963,	2,	1,	4,	364,	0, 0x0ULL, nullptr, nullptr, OperandInfo285 },  // Inst #1963 = VEXTRACTBM
  { 1964,	3,	1,	4,	466,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo283 },  // Inst #1964 = VEXTRACTD
  { 1965,	2,	1,	4,	364,	0, 0x0ULL, nullptr, nullptr, OperandInfo285 },  // Inst #1965 = VEXTRACTDM
  { 1966,	2,	1,	4,	364,	0, 0x0ULL, nullptr, nullptr, OperandInfo285 },  // Inst #1966 = VEXTRACTHM
  { 1967,	2,	1,	4,	364,	0, 0x0ULL, nullptr, nullptr, OperandInfo285 },  // Inst #1967 = VEXTRACTQM
  { 1968,	3,	1,	4,	466,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo283 },  // Inst #1968 = VEXTRACTUB
  { 1969,	3,	1,	4,	466,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo283 },  // Inst #1969 = VEXTRACTUH
  { 1970,	3,	1,	4,	466,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo283 },  // Inst #1970 = VEXTRACTUW
  { 1971,	2,	1,	4,	364,	0, 0x0ULL, nullptr, nullptr, OperandInfo285 },  // Inst #1971 = VEXTRACTWM
  { 1972,	2,	1,	4,	399,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #1972 = VEXTSB2D
  { 1973,	2,	1,	4,	399,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo289 },  // Inst #1973 = VEXTSB2Ds
  { 1974,	2,	1,	4,	399,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #1974 = VEXTSB2W
  { 1975,	2,	1,	4,	399,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo289 },  // Inst #1975 = VEXTSB2Ws
  { 1976,	2,	1,	4,	400,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #1976 = VEXTSD2Q
  { 1977,	2,	1,	4,	399,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #1977 = VEXTSH2D
  { 1978,	2,	1,	4,	399,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo289 },  // Inst #1978 = VEXTSH2Ds
  { 1979,	2,	1,	4,	399,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #1979 = VEXTSH2W
  { 1980,	2,	1,	4,	399,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo289 },  // Inst #1980 = VEXTSH2Ws
  { 1981,	2,	1,	4,	399,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #1981 = VEXTSW2D
  { 1982,	2,	1,	4,	399,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo289 },  // Inst #1982 = VEXTSW2Ds
  { 1983,	3,	1,	4,	466,	0, 0x0ULL, nullptr, nullptr, OperandInfo290 },  // Inst #1983 = VEXTUBLX
  { 1984,	3,	1,	4,	466,	0, 0x0ULL, nullptr, nullptr, OperandInfo290 },  // Inst #1984 = VEXTUBRX
  { 1985,	3,	1,	4,	466,	0, 0x0ULL, nullptr, nullptr, OperandInfo290 },  // Inst #1985 = VEXTUHLX
  { 1986,	3,	1,	4,	466,	0, 0x0ULL, nullptr, nullptr, OperandInfo290 },  // Inst #1986 = VEXTUHRX
  { 1987,	3,	1,	4,	466,	0, 0x0ULL, nullptr, nullptr, OperandInfo290 },  // Inst #1987 = VEXTUWLX
  { 1988,	3,	1,	4,	466,	0, 0x0ULL, nullptr, nullptr, OperandInfo290 },  // Inst #1988 = VEXTUWRX
  { 1989,	2,	1,	4,	461,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #1989 = VGBBD
  { 1990,	3,	1,	4,	339,	0, 0x0ULL, nullptr, nullptr, OperandInfo287 },  // Inst #1990 = VGNB
  { 1991,	4,	1,	4,	467,	0, 0x0ULL, nullptr, nullptr, OperandInfo291 },  // Inst #1991 = VINSBLX
  { 1992,	4,	1,	4,	467,	0, 0x0ULL, nullptr, nullptr, OperandInfo291 },  // Inst #1992 = VINSBRX
  { 1993,	4,	1,	4,	467,	0, 0x0ULL, nullptr, nullptr, OperandInfo292 },  // Inst #1993 = VINSBVLX
  { 1994,	4,	1,	4,	467,	0, 0x0ULL, nullptr, nullptr, OperandInfo292 },  // Inst #1994 = VINSBVRX
  { 1995,	4,	1,	4,	467,	0, 0x0ULL, nullptr, nullptr, OperandInfo293 },  // Inst #1995 = VINSD
  { 1996,	4,	1,	4,	467,	0, 0x0ULL, nullptr, nullptr, OperandInfo294 },  // Inst #1996 = VINSDLX
  { 1997,	4,	1,	4,	467,	0, 0x0ULL, nullptr, nullptr, OperandInfo294 },  // Inst #1997 = VINSDRX
  { 1998,	4,	1,	4,	167,	0, 0x0ULL, nullptr, nullptr, OperandInfo295 },  // Inst #1998 = VINSERTB
  { 1999,	3,	1,	4,	466,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo283 },  // Inst #1999 = VINSERTD
  { 2000,	4,	1,	4,	167,	0, 0x0ULL, nullptr, nullptr, OperandInfo295 },  // Inst #2000 = VINSERTH
  { 2001,	3,	1,	4,	466,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo283 },  // Inst #2001 = VINSERTW
  { 2002,	4,	1,	4,	467,	0, 0x0ULL, nullptr, nullptr, OperandInfo291 },  // Inst #2002 = VINSHLX
  { 2003,	4,	1,	4,	467,	0, 0x0ULL, nullptr, nullptr, OperandInfo291 },  // Inst #2003 = VINSHRX
  { 2004,	4,	1,	4,	467,	0, 0x0ULL, nullptr, nullptr, OperandInfo292 },  // Inst #2004 = VINSHVLX
  { 2005,	4,	1,	4,	467,	0, 0x0ULL, nullptr, nullptr, OperandInfo292 },  // Inst #2005 = VINSHVRX
  { 2006,	4,	1,	4,	467,	0, 0x0ULL, nullptr, nullptr, OperandInfo296 },  // Inst #2006 = VINSW
  { 2007,	4,	1,	4,	467,	0, 0x0ULL, nullptr, nullptr, OperandInfo291 },  // Inst #2007 = VINSWLX
  { 2008,	4,	1,	4,	467,	0, 0x0ULL, nullptr, nullptr, OperandInfo291 },  // Inst #2008 = VINSWRX
  { 2009,	4,	1,	4,	467,	0, 0x0ULL, nullptr, nullptr, OperandInfo292 },  // Inst #2009 = VINSWVLX
  { 2010,	4,	1,	4,	467,	0, 0x0ULL, nullptr, nullptr, OperandInfo292 },  // Inst #2010 = VINSWVRX
  { 2011,	2,	1,	4,	319,	0, 0x28ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2011 = VLOGEFP
  { 2012,	4,	1,	4,	328,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo282 },  // Inst #2012 = VMADDFP
  { 2013,	3,	1,	4,	376,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2013 = VMAXFP
  { 2014,	3,	1,	4,	411,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2014 = VMAXSB
  { 2015,	3,	1,	4,	411,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2015 = VMAXSD
  { 2016,	3,	1,	4,	411,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2016 = VMAXSH
  { 2017,	3,	1,	4,	411,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2017 = VMAXSW
  { 2018,	3,	1,	4,	411,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2018 = VMAXUB
  { 2019,	3,	1,	4,	411,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2019 = VMAXUD
  { 2020,	3,	1,	4,	411,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2020 = VMAXUH
  { 2021,	3,	1,	4,	411,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2021 = VMAXUW
  { 2022,	4,	1,	4,	146,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x28ULL, nullptr, nullptr, OperandInfo282 },  // Inst #2022 = VMHADDSHS
  { 2023,	4,	1,	4,	146,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x28ULL, nullptr, nullptr, OperandInfo282 },  // Inst #2023 = VMHRADDSHS
  { 2024,	3,	1,	4,	376,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2024 = VMINFP
  { 2025,	3,	1,	4,	411,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2025 = VMINSB
  { 2026,	3,	1,	4,	411,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2026 = VMINSD
  { 2027,	3,	1,	4,	411,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2027 = VMINSH
  { 2028,	3,	1,	4,	411,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2028 = VMINSW
  { 2029,	3,	1,	4,	411,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2029 = VMINUB
  { 2030,	3,	1,	4,	411,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2030 = VMINUD
  { 2031,	3,	1,	4,	411,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2031 = VMINUH
  { 2032,	3,	1,	4,	411,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2032 = VMINUW
  { 2033,	4,	1,	4,	146,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo282 },  // Inst #2033 = VMLADDUHM
  { 2034,	3,	1,	4,	349,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2034 = VMODSD
  { 2035,	3,	1,	4,	346,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2035 = VMODSQ
  { 2036,	3,	1,	4,	351,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2036 = VMODSW
  { 2037,	3,	1,	4,	349,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2037 = VMODUD
  { 2038,	3,	1,	4,	346,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2038 = VMODUQ
  { 2039,	3,	1,	4,	351,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2039 = VMODUW
  { 2040,	3,	1,	4,	410,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2040 = VMRGEW
  { 2041,	3,	1,	4,	464,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2041 = VMRGHB
  { 2042,	3,	1,	4,	464,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2042 = VMRGHH
  { 2043,	3,	1,	4,	464,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2043 = VMRGHW
  { 2044,	3,	1,	4,	464,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2044 = VMRGLB
  { 2045,	3,	1,	4,	464,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2045 = VMRGLH
  { 2046,	3,	1,	4,	464,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2046 = VMRGLW
  { 2047,	3,	1,	4,	410,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2047 = VMRGOW
  { 2048,	4,	1,	4,	497,	0, 0x0ULL, nullptr, nullptr, OperandInfo282 },  // Inst #2048 = VMSUMCUD
  { 2049,	4,	1,	4,	146,	0, 0x28ULL, nullptr, nullptr, OperandInfo282 },  // Inst #2049 = VMSUMMBM
  { 2050,	4,	1,	4,	146,	0, 0x28ULL, nullptr, nullptr, OperandInfo282 },  // Inst #2050 = VMSUMSHM
  { 2051,	4,	1,	4,	146,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x28ULL, nullptr, nullptr, OperandInfo282 },  // Inst #2051 = VMSUMSHS
  { 2052,	4,	1,	4,	146,	0, 0x28ULL, nullptr, nullptr, OperandInfo282 },  // Inst #2052 = VMSUMUBM
  { 2053,	4,	1,	4,	146,	0, 0x0ULL, nullptr, nullptr, OperandInfo282 },  // Inst #2053 = VMSUMUDM
  { 2054,	4,	1,	4,	146,	0, 0x28ULL, nullptr, nullptr, OperandInfo282 },  // Inst #2054 = VMSUMUHM
  { 2055,	4,	1,	4,	146,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x28ULL, nullptr, nullptr, OperandInfo282 },  // Inst #2055 = VMSUMUHS
  { 2056,	2,	1,	4,	354,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2056 = VMUL10CUQ
  { 2057,	3,	1,	4,	355,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2057 = VMUL10ECUQ
  { 2058,	3,	1,	4,	355,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2058 = VMUL10EUQ
  { 2059,	2,	1,	4,	354,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2059 = VMUL10UQ
  { 2060,	3,	1,	4,	495,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2060 = VMULESB
  { 2061,	3,	1,	4,	496,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2061 = VMULESD
  { 2062,	3,	1,	4,	495,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2062 = VMULESH
  { 2063,	3,	1,	4,	495,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2063 = VMULESW
  { 2064,	3,	1,	4,	495,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2064 = VMULEUB
  { 2065,	3,	1,	4,	496,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2065 = VMULEUD
  { 2066,	3,	1,	4,	495,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2066 = VMULEUH
  { 2067,	3,	1,	4,	495,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2067 = VMULEUW
  { 2068,	3,	1,	4,	456,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2068 = VMULHSD
  { 2069,	3,	1,	4,	496,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2069 = VMULHSW
  { 2070,	3,	1,	4,	456,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2070 = VMULHUD
  { 2071,	3,	1,	4,	496,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2071 = VMULHUW
  { 2072,	3,	1,	4,	456,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2072 = VMULLD
  { 2073,	3,	1,	4,	495,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2073 = VMULOSB
  { 2074,	3,	1,	4,	496,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2074 = VMULOSD
  { 2075,	3,	1,	4,	495,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2075 = VMULOSH
  { 2076,	3,	1,	4,	495,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2076 = VMULOSW
  { 2077,	3,	1,	4,	495,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2077 = VMULOUB
  { 2078,	3,	1,	4,	496,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2078 = VMULOUD
  { 2079,	3,	1,	4,	495,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2079 = VMULOUH
  { 2080,	3,	1,	4,	495,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2080 = VMULOUW
  { 2081,	3,	1,	4,	147,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2081 = VMULUWM
  { 2082,	3,	1,	4,	409,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2082 = VNAND
  { 2083,	3,	1,	4,	288,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2083 = VNCIPHER
  { 2084,	3,	1,	4,	288,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2084 = VNCIPHERLAST
  { 2085,	2,	1,	4,	399,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2085 = VNEGD
  { 2086,	2,	1,	4,	399,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2086 = VNEGW
  { 2087,	4,	1,	4,	328,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo282 },  // Inst #2087 = VNMSUBFP
  { 2088,	3,	1,	4,	410,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2088 = VNOR
  { 2089,	3,	1,	4,	410,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2089 = VOR
  { 2090,	3,	1,	4,	409,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2090 = VORC
  { 2091,	3,	1,	4,	339,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2091 = VPDEPD
  { 2092,	4,	1,	4,	166,	0, 0x28ULL, nullptr, nullptr, OperandInfo282 },  // Inst #2092 = VPERM
  { 2093,	4,	1,	4,	166,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo282 },  // Inst #2093 = VPERMR
  { 2094,	4,	1,	4,	166,	0, 0x0ULL, nullptr, nullptr, OperandInfo282 },  // Inst #2094 = VPERMXOR
  { 2095,	3,	1,	4,	339,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2095 = VPEXTD
  { 2096,	3,	1,	4,	464,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2096 = VPKPX
  { 2097,	3,	1,	4,	464,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2097 = VPKSDSS
  { 2098,	3,	1,	4,	464,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2098 = VPKSDUS
  { 2099,	3,	1,	4,	464,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2099 = VPKSHSS
  { 2100,	3,	1,	4,	464,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2100 = VPKSHUS
  { 2101,	3,	1,	4,	464,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2101 = VPKSWSS
  { 2102,	3,	1,	4,	464,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2102 = VPKSWUS
  { 2103,	3,	1,	4,	464,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2103 = VPKUDUM
  { 2104,	3,	1,	4,	464,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2104 = VPKUDUS
  { 2105,	3,	1,	4,	464,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2105 = VPKUHUM
  { 2106,	3,	1,	4,	464,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2106 = VPKUHUS
  { 2107,	3,	1,	4,	464,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2107 = VPKUWUM
  { 2108,	3,	1,	4,	464,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2108 = VPKUWUS
  { 2109,	3,	1,	4,	288,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2109 = VPMSUMB
  { 2110,	3,	1,	4,	288,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2110 = VPMSUMD
  { 2111,	3,	1,	4,	288,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2111 = VPMSUMH
  { 2112,	3,	1,	4,	288,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2112 = VPMSUMW
  { 2113,	2,	1,	4,	367,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2113 = VPOPCNTB
  { 2114,	2,	1,	4,	366,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2114 = VPOPCNTD
  { 2115,	2,	1,	4,	367,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2115 = VPOPCNTH
  { 2116,	2,	1,	4,	366,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2116 = VPOPCNTW
  { 2117,	2,	1,	4,	366,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2117 = VPRTYBD
  { 2118,	2,	1,	4,	460,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2118 = VPRTYBQ
  { 2119,	2,	1,	4,	366,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2119 = VPRTYBW
  { 2120,	2,	1,	4,	319,	0, 0x28ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2120 = VREFP
  { 2121,	2,	1,	4,	319,	0, 0x28ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2121 = VRFIM
  { 2122,	2,	1,	4,	319,	0, 0x28ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2122 = VRFIN
  { 2123,	2,	1,	4,	319,	0, 0x28ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2123 = VRFIP
  { 2124,	2,	1,	4,	319,	0, 0x28ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2124 = VRFIZ
  { 2125,	3,	1,	4,	410,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2125 = VRLB
  { 2126,	3,	1,	4,	410,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2126 = VRLD
  { 2127,	4,	1,	4,	102,	0, 0x0ULL, nullptr, nullptr, OperandInfo297 },  // Inst #2127 = VRLDMI
  { 2128,	3,	1,	4,	410,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2128 = VRLDNM
  { 2129,	3,	1,	4,	410,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2129 = VRLH
  { 2130,	3,	1,	4,	384,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2130 = VRLQ
  { 2131,	4,	1,	4,	385,	0, 0x0ULL, nullptr, nullptr, OperandInfo297 },  // Inst #2131 = VRLQMI
  { 2132,	3,	1,	4,	384,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2132 = VRLQNM
  { 2133,	3,	1,	4,	410,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2133 = VRLW
  { 2134,	4,	1,	4,	102,	0, 0x0ULL, nullptr, nullptr, OperandInfo297 },  // Inst #2134 = VRLWMI
  { 2135,	3,	1,	4,	410,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2135 = VRLWNM
  { 2136,	2,	1,	4,	319,	0, 0x28ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2136 = VRSQRTEFP
  { 2137,	2,	1,	4,	337,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2137 = VSBOX
  { 2138,	4,	1,	4,	102,	0, 0x28ULL, nullptr, nullptr, OperandInfo282 },  // Inst #2138 = VSEL
  { 2139,	4,	1,	4,	383,	0, 0x0ULL, nullptr, nullptr, OperandInfo298 },  // Inst #2139 = VSHASIGMAD
  { 2140,	4,	1,	4,	383,	0, 0x0ULL, nullptr, nullptr, OperandInfo298 },  // Inst #2140 = VSHASIGMAW
  { 2141,	3,	1,	4,	464,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2141 = VSL
  { 2142,	3,	1,	4,	410,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2142 = VSLB
  { 2143,	3,	1,	4,	409,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2143 = VSLD
  { 2144,	4,	1,	4,	467,	0, 0x0ULL, nullptr, nullptr, OperandInfo94 },  // Inst #2144 = VSLDBI
  { 2145,	4,	1,	4,	166,	0, 0x28ULL, nullptr, nullptr, OperandInfo94 },  // Inst #2145 = VSLDOI
  { 2146,	3,	1,	4,	410,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2146 = VSLH
  { 2147,	3,	1,	4,	464,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2147 = VSLO
  { 2148,	3,	1,	4,	384,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2148 = VSLQ
  { 2149,	3,	1,	4,	464,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2149 = VSLV
  { 2150,	3,	1,	4,	410,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2150 = VSLW
  { 2151,	3,	1,	4,	165,	0, 0x28ULL, nullptr, nullptr, OperandInfo283 },  // Inst #2151 = VSPLTB
  { 2152,	3,	1,	4,	165,	0, 0x28ULL, nullptr, nullptr, OperandInfo299 },  // Inst #2152 = VSPLTBs
  { 2153,	3,	1,	4,	165,	0, 0x28ULL, nullptr, nullptr, OperandInfo283 },  // Inst #2153 = VSPLTH
  { 2154,	3,	1,	4,	165,	0, 0x28ULL, nullptr, nullptr, OperandInfo299 },  // Inst #2154 = VSPLTHs
  { 2155,	2,	1,	4,	462,	0, 0x28ULL, nullptr, nullptr, OperandInfo201 },  // Inst #2155 = VSPLTISB
  { 2156,	2,	1,	4,	462,	0, 0x28ULL, nullptr, nullptr, OperandInfo201 },  // Inst #2156 = VSPLTISH
  { 2157,	2,	1,	4,	457,	0, 0x28ULL, nullptr, nullptr, OperandInfo201 },  // Inst #2157 = VSPLTISW
  { 2158,	3,	1,	4,	165,	0, 0x28ULL, nullptr, nullptr, OperandInfo283 },  // Inst #2158 = VSPLTW
  { 2159,	3,	1,	4,	464,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2159 = VSR
  { 2160,	3,	1,	4,	410,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2160 = VSRAB
  { 2161,	3,	1,	4,	409,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2161 = VSRAD
  { 2162,	3,	1,	4,	410,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2162 = VSRAH
  { 2163,	3,	1,	4,	384,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2163 = VSRAQ
  { 2164,	3,	1,	4,	410,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2164 = VSRAW
  { 2165,	3,	1,	4,	410,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2165 = VSRB
  { 2166,	3,	1,	4,	409,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2166 = VSRD
  { 2167,	4,	1,	4,	467,	0, 0x0ULL, nullptr, nullptr, OperandInfo94 },  // Inst #2167 = VSRDBI
  { 2168,	3,	1,	4,	410,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2168 = VSRH
  { 2169,	3,	1,	4,	464,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2169 = VSRO
  { 2170,	3,	1,	4,	384,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2170 = VSRQ
  { 2171,	3,	1,	4,	464,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2171 = VSRV
  { 2172,	3,	1,	4,	410,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2172 = VSRW
  { 2173,	2,	1,	4,	459,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2173 = VSTRIBL
  { 2174,	2,	1,	4,	428,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList20, OperandInfo97 },  // Inst #2174 = VSTRIBL_rec
  { 2175,	2,	1,	4,	459,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2175 = VSTRIBR
  { 2176,	2,	1,	4,	428,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList20, OperandInfo97 },  // Inst #2176 = VSTRIBR_rec
  { 2177,	2,	1,	4,	459,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2177 = VSTRIHL
  { 2178,	2,	1,	4,	428,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList20, OperandInfo97 },  // Inst #2178 = VSTRIHL_rec
  { 2179,	2,	1,	4,	459,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2179 = VSTRIHR
  { 2180,	2,	1,	4,	428,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList20, OperandInfo97 },  // Inst #2180 = VSTRIHR_rec
  { 2181,	3,	1,	4,	355,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2181 = VSUBCUQ
  { 2182,	3,	1,	4,	376,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2182 = VSUBCUW
  { 2183,	4,	1,	4,	359,	0, 0x0ULL, nullptr, nullptr, OperandInfo282 },  // Inst #2183 = VSUBECUQ
  { 2184,	4,	1,	4,	359,	0, 0x0ULL, nullptr, nullptr, OperandInfo282 },  // Inst #2184 = VSUBEUQM
  { 2185,	3,	1,	4,	325,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2185 = VSUBFP
  { 2186,	3,	1,	4,	376,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2186 = VSUBSBS
  { 2187,	3,	1,	4,	376,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2187 = VSUBSHS
  { 2188,	3,	1,	4,	376,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2188 = VSUBSWS
  { 2189,	3,	1,	4,	409,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2189 = VSUBUBM
  { 2190,	3,	1,	4,	376,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2190 = VSUBUBS
  { 2191,	3,	1,	4,	409,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2191 = VSUBUDM
  { 2192,	3,	1,	4,	409,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2192 = VSUBUHM
  { 2193,	3,	1,	4,	376,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2193 = VSUBUHS
  { 2194,	3,	1,	4,	356,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2194 = VSUBUQM
  { 2195,	3,	1,	4,	409,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2195 = VSUBUWM
  { 2196,	3,	1,	4,	376,	0, 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2196 = VSUBUWS
  { 2197,	3,	1,	4,	495,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2197 = VSUM2SWS
  { 2198,	3,	1,	4,	495,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2198 = VSUM4SBS
  { 2199,	3,	1,	4,	495,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2199 = VSUM4SHS
  { 2200,	3,	1,	4,	495,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2200 = VSUM4UBS
  { 2201,	3,	1,	4,	468,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2201 = VSUMSWS
  { 2202,	2,	1,	4,	461,	0, 0x28ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2202 = VUPKHPX
  { 2203,	2,	1,	4,	461,	0, 0x28ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2203 = VUPKHSB
  { 2204,	2,	1,	4,	461,	0, 0x28ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2204 = VUPKHSH
  { 2205,	2,	1,	4,	461,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2205 = VUPKHSW
  { 2206,	2,	1,	4,	461,	0, 0x28ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2206 = VUPKLPX
  { 2207,	2,	1,	4,	461,	0, 0x28ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2207 = VUPKLSB
  { 2208,	2,	1,	4,	461,	0, 0x28ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2208 = VUPKLSH
  { 2209,	2,	1,	4,	461,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2209 = VUPKLSW
  { 2210,	3,	1,	4,	390,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2210 = VXOR
  { 2211,	1,	1,	4,	390,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x28ULL, nullptr, nullptr, OperandInfo187 },  // Inst #2211 = V_SET0
  { 2212,	1,	1,	4,	390,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x28ULL, nullptr, nullptr, OperandInfo187 },  // Inst #2212 = V_SET0B
  { 2213,	1,	1,	4,	390,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x28ULL, nullptr, nullptr, OperandInfo187 },  // Inst #2213 = V_SET0H
  { 2214,	1,	1,	4,	458,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x28ULL, nullptr, nullptr, OperandInfo187 },  // Inst #2214 = V_SETALLONES
  { 2215,	1,	1,	4,	458,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x28ULL, nullptr, nullptr, OperandInfo187 },  // Inst #2215 = V_SETALLONESB
  { 2216,	1,	1,	4,	458,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x28ULL, nullptr, nullptr, OperandInfo187 },  // Inst #2216 = V_SETALLONESH
  { 2217,	1,	0,	4,	127,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #2217 = WAIT
  { 2218,	1,	0,	4,	311,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo179 },  // Inst #2218 = WRTEE
  { 2219,	1,	0,	4,	311,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3 },  // Inst #2219 = WRTEEI
  { 2220,	3,	1,	4,	404,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo66 },  // Inst #2220 = XOR
  { 2221,	3,	1,	4,	404,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo68 },  // Inst #2221 = XOR8
  { 2222,	3,	1,	4,	404,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo68 },  // Inst #2222 = XOR8_rec
  { 2223,	3,	1,	4,	404,	0, 0x8ULL, nullptr, nullptr, OperandInfo54 },  // Inst #2223 = XORI
  { 2224,	3,	1,	4,	404,	0, 0x8ULL, nullptr, nullptr, OperandInfo53 },  // Inst #2224 = XORI8
  { 2225,	3,	1,	4,	404,	0, 0x8ULL, nullptr, nullptr, OperandInfo54 },  // Inst #2225 = XORIS
  { 2226,	3,	1,	4,	404,	0, 0x8ULL, nullptr, nullptr, OperandInfo53 },  // Inst #2226 = XORIS8
  { 2227,	3,	1,	4,	404,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo66 },  // Inst #2227 = XOR_rec
  { 2228,	2,	1,	4,	401,	0, 0x0ULL, ImplicitList18, nullptr, OperandInfo300 },  // Inst #2228 = XSABSDP
  { 2229,	2,	1,	4,	402,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2229 = XSABSQP
  { 2230,	3,	1,	4,	326,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList18, nullptr, OperandInfo301 },  // Inst #2230 = XSADDDP
  { 2231,	3,	1,	4,	342,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2231 = XSADDQP
  { 2232,	3,	1,	4,	342,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2232 = XSADDQPO
  { 2233,	3,	1,	4,	326,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo302 },  // Inst #2233 = XSADDSP
  { 2234,	3,	1,	4,	113,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo303 },  // Inst #2234 = XSCMPEQDP
  { 2235,	3,	1,	4,	113,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo304 },  // Inst #2235 = XSCMPEXPDP
  { 2236,	3,	1,	4,	168,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo286 },  // Inst #2236 = XSCMPEXPQP
  { 2237,	3,	1,	4,	113,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo303 },  // Inst #2237 = XSCMPGEDP
  { 2238,	3,	1,	4,	113,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo303 },  // Inst #2238 = XSCMPGTDP
  { 2239,	3,	1,	4,	113,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo304 },  // Inst #2239 = XSCMPODP
  { 2240,	3,	1,	4,	168,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo286 },  // Inst #2240 = XSCMPOQP
  { 2241,	3,	1,	4,	113,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo304 },  // Inst #2241 = XSCMPUDP
  { 2242,	3,	1,	4,	168,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo286 },  // Inst #2242 = XSCMPUQP
  { 2243,	3,	1,	4,	124,	0, 0x0ULL, ImplicitList18, nullptr, OperandInfo301 },  // Inst #2243 = XSCPSGNDP
  { 2244,	3,	1,	4,	410,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2244 = XSCPSGNQP
  { 2245,	2,	1,	4,	320,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo300 },  // Inst #2245 = XSCVDPHP
  { 2246,	2,	1,	4,	340,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo305 },  // Inst #2246 = XSCVDPQP
  { 2247,	2,	1,	4,	320,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo300 },  // Inst #2247 = XSCVDPSP
  { 2248,	2,	1,	4,	320,	0, 0x0ULL, nullptr, nullptr, OperandInfo306 },  // Inst #2248 = XSCVDPSPN
  { 2249,	2,	1,	4,	320,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo300 },  // Inst #2249 = XSCVDPSXDS
  { 2250,	2,	1,	4,	320,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo307 },  // Inst #2250 = XSCVDPSXDSs
  { 2251,	2,	1,	4,	320,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo300 },  // Inst #2251 = XSCVDPSXWS
  { 2252,	2,	1,	4,	320,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo307 },  // Inst #2252 = XSCVDPSXWSs
  { 2253,	2,	1,	4,	320,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo300 },  // Inst #2253 = XSCVDPUXDS
  { 2254,	2,	1,	4,	320,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo307 },  // Inst #2254 = XSCVDPUXDSs
  { 2255,	2,	1,	4,	320,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo300 },  // Inst #2255 = XSCVDPUXWS
  { 2256,	2,	1,	4,	320,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo307 },  // Inst #2256 = XSCVDPUXWSs
  { 2257,	2,	1,	4,	163,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo300 },  // Inst #2257 = XSCVHPDP
  { 2258,	2,	1,	4,	340,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo308 },  // Inst #2258 = XSCVQPDP
  { 2259,	2,	1,	4,	340,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo308 },  // Inst #2259 = XSCVQPDPO
  { 2260,	2,	1,	4,	340,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2260 = XSCVQPSDZ
  { 2261,	2,	1,	4,	341,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2261 = XSCVQPSQZ
  { 2262,	2,	1,	4,	340,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2262 = XSCVQPSWZ
  { 2263,	2,	1,	4,	340,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2263 = XSCVQPUDZ
  { 2264,	2,	1,	4,	341,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2264 = XSCVQPUQZ
  { 2265,	2,	1,	4,	340,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2265 = XSCVQPUWZ
  { 2266,	2,	1,	4,	340,	0, 0x0ULL, nullptr, nullptr, OperandInfo305 },  // Inst #2266 = XSCVSDQP
  { 2267,	2,	1,	4,	320,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo300 },  // Inst #2267 = XSCVSPDP
  { 2268,	2,	1,	4,	368,	0, 0x0ULL, nullptr, nullptr, OperandInfo309 },  // Inst #2268 = XSCVSPDPN
  { 2269,	2,	1,	4,	341,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2269 = XSCVSQQP
  { 2270,	2,	1,	4,	320,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo300 },  // Inst #2270 = XSCVSXDDP
  { 2271,	2,	1,	4,	320,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo310 },  // Inst #2271 = XSCVSXDSP
  { 2272,	2,	1,	4,	340,	0, 0x0ULL, nullptr, nullptr, OperandInfo305 },  // Inst #2272 = XSCVUDQP
  { 2273,	2,	1,	4,	341,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2273 = XSCVUQQP
  { 2274,	2,	1,	4,	320,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo300 },  // Inst #2274 = XSCVUXDDP
  { 2275,	2,	1,	4,	320,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo310 },  // Inst #2275 = XSCVUXDSP
  { 2276,	3,	1,	4,	271,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo301 },  // Inst #2276 = XSDIVDP
  { 2277,	3,	1,	4,	173,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2277 = XSDIVQP
  { 2278,	3,	1,	4,	173,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2278 = XSDIVQPO
  { 2279,	3,	1,	4,	274,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo302 },  // Inst #2279 = XSDIVSP
  { 2280,	3,	1,	4,	138,	0, 0x0ULL, nullptr, nullptr, OperandInfo311 },  // Inst #2280 = XSIEXPDP
  { 2281,	3,	1,	4,	410,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo312 },  // Inst #2281 = XSIEXPQP
  { 2282,	4,	1,	4,	155,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList18, nullptr, OperandInfo313 },  // Inst #2282 = XSMADDADP
  { 2283,	4,	1,	4,	155,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo314 },  // Inst #2283 = XSMADDASP
  { 2284,	4,	1,	4,	155,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo313 },  // Inst #2284 = XSMADDMDP
  { 2285,	4,	1,	4,	155,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo314 },  // Inst #2285 = XSMADDMSP
  { 2286,	4,	1,	4,	171,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo315 },  // Inst #2286 = XSMADDQP
  { 2287,	4,	1,	4,	171,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo315 },  // Inst #2287 = XSMADDQPO
  { 2288,	3,	1,	4,	380,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo301 },  // Inst #2288 = XSMAXCDP
  { 2289,	3,	1,	4,	357,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2289 = XSMAXCQP
  { 2290,	3,	1,	4,	380,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList18, nullptr, OperandInfo301 },  // Inst #2290 = XSMAXDP
  { 2291,	3,	1,	4,	380,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo303 },  // Inst #2291 = XSMAXJDP
  { 2292,	3,	1,	4,	380,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo301 },  // Inst #2292 = XSMINCDP
  { 2293,	3,	1,	4,	357,	0, 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2293 = XSMINCQP
  { 2294,	3,	1,	4,	380,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList18, nullptr, OperandInfo301 },  // Inst #2294 = XSMINDP
  { 2295,	3,	1,	4,	380,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo303 },  // Inst #2295 = XSMINJDP
  { 2296,	4,	1,	4,	155,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList18, nullptr, OperandInfo313 },  // Inst #2296 = XSMSUBADP
  { 2297,	4,	1,	4,	155,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo314 },  // Inst #2297 = XSMSUBASP
  { 2298,	4,	1,	4,	155,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo313 },  // Inst #2298 = XSMSUBMDP
  { 2299,	4,	1,	4,	155,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo314 },  // Inst #2299 = XSMSUBMSP
  { 2300,	4,	1,	4,	171,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo315 },  // Inst #2300 = XSMSUBQP
  { 2301,	4,	1,	4,	171,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo315 },  // Inst #2301 = XSMSUBQPO
  { 2302,	3,	1,	4,	327,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList18, nullptr, OperandInfo301 },  // Inst #2302 = XSMULDP
  { 2303,	3,	1,	4,	344,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2303 = XSMULQP
  { 2304,	3,	1,	4,	344,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2304 = XSMULQPO
  { 2305,	3,	1,	4,	327,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo302 },  // Inst #2305 = XSMULSP
  { 2306,	2,	1,	4,	401,	0, 0x0ULL, ImplicitList18, nullptr, OperandInfo300 },  // Inst #2306 = XSNABSDP
  { 2307,	2,	1,	4,	401,	0, 0x0ULL, ImplicitList18, nullptr, OperandInfo307 },  // Inst #2307 = XSNABSDPs
  { 2308,	2,	1,	4,	402,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2308 = XSNABSQP
  { 2309,	2,	1,	4,	401,	0, 0x0ULL, ImplicitList18, nullptr, OperandInfo300 },  // Inst #2309 = XSNEGDP
  { 2310,	2,	1,	4,	402,	0, 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2310 = XSNEGQP
  { 2311,	4,	1,	4,	155,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList18, nullptr, OperandInfo313 },  // Inst #2311 = XSNMADDADP
  { 2312,	4,	1,	4,	155,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo314 },  // Inst #2312 = XSNMADDASP
  { 2313,	4,	1,	4,	155,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo313 },  // Inst #2313 = XSNMADDMDP
  { 2314,	4,	1,	4,	155,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo314 },  // Inst #2314 = XSNMADDMSP
  { 2315,	4,	1,	4,	171,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo315 },  // Inst #2315 = XSNMADDQP
  { 2316,	4,	1,	4,	171,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo315 },  // Inst #2316 = XSNMADDQPO
  { 2317,	4,	1,	4,	155,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList18, nullptr, OperandInfo313 },  // Inst #2317 = XSNMSUBADP
  { 2318,	4,	1,	4,	155,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo314 },  // Inst #2318 = XSNMSUBASP
  { 2319,	4,	1,	4,	155,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo313 },  // Inst #2319 = XSNMSUBMDP
  { 2320,	4,	1,	4,	155,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo314 },  // Inst #2320 = XSNMSUBMSP
  { 2321,	4,	1,	4,	171,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo315 },  // Inst #2321 = XSNMSUBQP
  { 2322,	4,	1,	4,	171,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo315 },  // Inst #2322 = XSNMSUBQPO
  { 2323,	2,	1,	4,	320,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo300 },  // Inst #2323 = XSRDPI
  { 2324,	2,	1,	4,	320,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo300 },  // Inst #2324 = XSRDPIC
  { 2325,	2,	1,	4,	320,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo300 },  // Inst #2325 = XSRDPIM
  { 2326,	2,	1,	4,	320,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo300 },  // Inst #2326 = XSRDPIP
  { 2327,	2,	1,	4,	320,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo300 },  // Inst #2327 = XSRDPIZ
  { 2328,	2,	1,	4,	320,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo300 },  // Inst #2328 = XSREDP
  { 2329,	2,	1,	4,	320,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo307 },  // Inst #2329 = XSRESP
  { 2330,	4,	1,	4,	169,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo316 },  // Inst #2330 = XSRQPI
  { 2331,	4,	1,	4,	169,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo316 },  // Inst #2331 = XSRQPIX
  { 2332,	4,	1,	4,	169,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo316 },  // Inst #2332 = XSRQPXP
  { 2333,	2,	1,	4,	320,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo310 },  // Inst #2333 = XSRSP
  { 2334,	2,	1,	4,	320,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo300 },  // Inst #2334 = XSRSQRTEDP
  { 2335,	2,	1,	4,	320,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo307 },  // Inst #2335 = XSRSQRTESP
  { 2336,	2,	1,	4,	263,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo300 },  // Inst #2336 = XSSQRTDP
  { 2337,	2,	1,	4,	174,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2337 = XSSQRTQP
  { 2338,	2,	1,	4,	174,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2338 = XSSQRTQPO
  { 2339,	2,	1,	4,	268,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo307 },  // Inst #2339 = XSSQRTSP
  { 2340,	3,	1,	4,	326,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo301 },  // Inst #2340 = XSSUBDP
  { 2341,	3,	1,	4,	342,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2341 = XSSUBQP
  { 2342,	3,	1,	4,	342,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo96 },  // Inst #2342 = XSSUBQPO
  { 2343,	3,	1,	4,	326,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo302 },  // Inst #2343 = XSSUBSP
  { 2344,	3,	1,	4,	113,	0, 0x0ULL, ImplicitList18, nullptr, OperandInfo304 },  // Inst #2344 = XSTDIVDP
  { 2345,	2,	1,	4,	369,	0, 0x0ULL, ImplicitList18, nullptr, OperandInfo317 },  // Inst #2345 = XSTSQRTDP
  { 2346,	3,	1,	4,	111,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo318 },  // Inst #2346 = XSTSTDCDP
  { 2347,	3,	1,	4,	355,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo319 },  // Inst #2347 = XSTSTDCQP
  { 2348,	3,	1,	4,	111,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo318 },  // Inst #2348 = XSTSTDCSP
  { 2349,	2,	1,	4,	401,	0, 0x0ULL, nullptr, nullptr, OperandInfo188 },  // Inst #2349 = XSXEXPDP
  { 2350,	2,	1,	4,	402,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2350 = XSXEXPQP
  { 2351,	2,	1,	4,	112,	0, 0x0ULL, nullptr, nullptr, OperandInfo188 },  // Inst #2351 = XSXSIGDP
  { 2352,	2,	1,	4,	354,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo97 },  // Inst #2352 = XSXSIGQP
  { 2353,	2,	1,	4,	402,	0, 0x0ULL, ImplicitList18, nullptr, OperandInfo320 },  // Inst #2353 = XVABSDP
  { 2354,	2,	1,	4,	402,	0, 0x0ULL, ImplicitList18, nullptr, OperandInfo320 },  // Inst #2354 = XVABSSP
  { 2355,	3,	1,	4,	324,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList18, nullptr, OperandInfo321 },  // Inst #2355 = XVADDDP
  { 2356,	3,	1,	4,	324,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList18, nullptr, OperandInfo321 },  // Inst #2356 = XVADDSP
  { 2357,	3,	1,	4,	446,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo322 },  // Inst #2357 = XVBF16GER2
  { 2358,	4,	1,	4,	447,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo323 },  // Inst #2358 = XVBF16GER2NN
  { 2359,	4,	1,	4,	447,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo323 },  // Inst #2359 = XVBF16GER2NP
  { 2360,	4,	1,	4,	447,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo323 },  // Inst #2360 = XVBF16GER2PN
  { 2361,	4,	1,	4,	447,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo323 },  // Inst #2361 = XVBF16GER2PP
  { 2362,	3,	1,	4,	377,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo321 },  // Inst #2362 = XVCMPEQDP
  { 2363,	3,	1,	4,	377,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, ImplicitList20, OperandInfo321 },  // Inst #2363 = XVCMPEQDP_rec
  { 2364,	3,	1,	4,	377,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo321 },  // Inst #2364 = XVCMPEQSP
  { 2365,	3,	1,	4,	377,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, ImplicitList20, OperandInfo321 },  // Inst #2365 = XVCMPEQSP_rec
  { 2366,	3,	1,	4,	377,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo321 },  // Inst #2366 = XVCMPGEDP
  { 2367,	3,	1,	4,	377,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, ImplicitList20, OperandInfo321 },  // Inst #2367 = XVCMPGEDP_rec
  { 2368,	3,	1,	4,	377,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo321 },  // Inst #2368 = XVCMPGESP
  { 2369,	3,	1,	4,	377,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, ImplicitList20, OperandInfo321 },  // Inst #2369 = XVCMPGESP_rec
  { 2370,	3,	1,	4,	377,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo321 },  // Inst #2370 = XVCMPGTDP
  { 2371,	3,	1,	4,	377,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, ImplicitList20, OperandInfo321 },  // Inst #2371 = XVCMPGTDP_rec
  { 2372,	3,	1,	4,	377,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo321 },  // Inst #2372 = XVCMPGTSP
  { 2373,	3,	1,	4,	377,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, ImplicitList20, OperandInfo321 },  // Inst #2373 = XVCMPGTSP_rec
  { 2374,	3,	1,	4,	410,	0, 0x0ULL, ImplicitList18, nullptr, OperandInfo321 },  // Inst #2374 = XVCPSGNDP
  { 2375,	3,	1,	4,	410,	0, 0x0ULL, ImplicitList18, nullptr, OperandInfo321 },  // Inst #2375 = XVCPSGNSP
  { 2376,	2,	1,	4,	463,	0, 0x0ULL, nullptr, nullptr, OperandInfo320 },  // Inst #2376 = XVCVBF16SPN
  { 2377,	2,	1,	4,	319,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo320 },  // Inst #2377 = XVCVDPSP
  { 2378,	2,	1,	4,	319,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo320 },  // Inst #2378 = XVCVDPSXDS
  { 2379,	2,	1,	4,	319,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo320 },  // Inst #2379 = XVCVDPSXWS
  { 2380,	2,	1,	4,	319,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo320 },  // Inst #2380 = XVCVDPUXDS
  { 2381,	2,	1,	4,	319,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo320 },  // Inst #2381 = XVCVDPUXWS
  { 2382,	2,	1,	4,	370,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo320 },  // Inst #2382 = XVCVHPSP
  { 2383,	2,	1,	4,	321,	0, 0x0ULL, nullptr, nullptr, OperandInfo320 },  // Inst #2383 = XVCVSPBF16
  { 2384,	2,	1,	4,	319,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo320 },  // Inst #2384 = XVCVSPDP
  { 2385,	2,	1,	4,	319,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo320 },  // Inst #2385 = XVCVSPHP
  { 2386,	2,	1,	4,	319,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo320 },  // Inst #2386 = XVCVSPSXDS
  { 2387,	2,	1,	4,	319,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo320 },  // Inst #2387 = XVCVSPSXWS
  { 2388,	2,	1,	4,	319,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo320 },  // Inst #2388 = XVCVSPUXDS
  { 2389,	2,	1,	4,	319,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo320 },  // Inst #2389 = XVCVSPUXWS
  { 2390,	2,	1,	4,	319,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo320 },  // Inst #2390 = XVCVSXDDP
  { 2391,	2,	1,	4,	319,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo320 },  // Inst #2391 = XVCVSXDSP
  { 2392,	2,	1,	4,	319,	0, 0x0ULL, ImplicitList18, nullptr, OperandInfo320 },  // Inst #2392 = XVCVSXWDP
  { 2393,	2,	1,	4,	319,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo320 },  // Inst #2393 = XVCVSXWSP
  { 2394,	2,	1,	4,	319,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo320 },  // Inst #2394 = XVCVUXDDP
  { 2395,	2,	1,	4,	319,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo320 },  // Inst #2395 = XVCVUXDSP
  { 2396,	2,	1,	4,	319,	0, 0x0ULL, ImplicitList18, nullptr, OperandInfo320 },  // Inst #2396 = XVCVUXWDP
  { 2397,	2,	1,	4,	319,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo320 },  // Inst #2397 = XVCVUXWSP
  { 2398,	3,	1,	4,	276,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo321 },  // Inst #2398 = XVDIVDP
  { 2399,	3,	1,	4,	275,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo321 },  // Inst #2399 = XVDIVSP
  { 2400,	3,	1,	4,	446,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo322 },  // Inst #2400 = XVF16GER2
  { 2401,	4,	1,	4,	447,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo323 },  // Inst #2401 = XVF16GER2NN
  { 2402,	4,	1,	4,	447,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo323 },  // Inst #2402 = XVF16GER2NP
  { 2403,	4,	1,	4,	447,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo323 },  // Inst #2403 = XVF16GER2PN
  { 2404,	4,	1,	4,	447,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo323 },  // Inst #2404 = XVF16GER2PP
  { 2405,	3,	1,	4,	446,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo322 },  // Inst #2405 = XVF32GER
  { 2406,	4,	1,	4,	447,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo323 },  // Inst #2406 = XVF32GERNN
  { 2407,	4,	1,	4,	447,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo323 },  // Inst #2407 = XVF32GERNP
  { 2408,	4,	1,	4,	447,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo323 },  // Inst #2408 = XVF32GERPN
  { 2409,	4,	1,	4,	447,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo323 },  // Inst #2409 = XVF32GERPP
  { 2410,	3,	1,	4,	446,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo324 },  // Inst #2410 = XVF64GER
  { 2411,	4,	1,	4,	447,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo325 },  // Inst #2411 = XVF64GERNN
  { 2412,	4,	1,	4,	447,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo325 },  // Inst #2412 = XVF64GERNP
  { 2413,	4,	1,	4,	447,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo325 },  // Inst #2413 = XVF64GERPN
  { 2414,	4,	1,	4,	447,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo325 },  // Inst #2414 = XVF64GERPP
  { 2415,	3,	1,	4,	446,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo322 },  // Inst #2415 = XVI16GER2
  { 2416,	4,	1,	4,	447,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo323 },  // Inst #2416 = XVI16GER2PP
  { 2417,	3,	1,	4,	446,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo322 },  // Inst #2417 = XVI16GER2S
  { 2418,	4,	1,	4,	447,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo323 },  // Inst #2418 = XVI16GER2SPP
  { 2419,	3,	1,	4,	446,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo322 },  // Inst #2419 = XVI4GER8
  { 2420,	4,	1,	4,	447,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo323 },  // Inst #2420 = XVI4GER8PP
  { 2421,	3,	1,	4,	446,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo322 },  // Inst #2421 = XVI8GER4
  { 2422,	4,	1,	4,	447,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo323 },  // Inst #2422 = XVI8GER4PP
  { 2423,	4,	1,	4,	448,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo323 },  // Inst #2423 = XVI8GER4SPP
  { 2424,	3,	1,	4,	410,	0, 0x0ULL, nullptr, nullptr, OperandInfo321 },  // Inst #2424 = XVIEXPDP
  { 2425,	3,	1,	4,	410,	0, 0x0ULL, nullptr, nullptr, OperandInfo321 },  // Inst #2425 = XVIEXPSP
  { 2426,	4,	1,	4,	328,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList18, nullptr, OperandInfo326 },  // Inst #2426 = XVMADDADP
  { 2427,	4,	1,	4,	328,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList18, nullptr, OperandInfo326 },  // Inst #2427 = XVMADDASP
  { 2428,	4,	1,	4,	328,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo326 },  // Inst #2428 = XVMADDMDP
  { 2429,	4,	1,	4,	328,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo326 },  // Inst #2429 = XVMADDMSP
  { 2430,	3,	1,	4,	376,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList18, nullptr, OperandInfo321 },  // Inst #2430 = XVMAXDP
  { 2431,	3,	1,	4,	376,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList18, nullptr, OperandInfo321 },  // Inst #2431 = XVMAXSP
  { 2432,	3,	1,	4,	376,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList18, nullptr, OperandInfo321 },  // Inst #2432 = XVMINDP
  { 2433,	3,	1,	4,	376,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList18, nullptr, OperandInfo321 },  // Inst #2433 = XVMINSP
  { 2434,	4,	1,	4,	328,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList18, nullptr, OperandInfo326 },  // Inst #2434 = XVMSUBADP
  { 2435,	4,	1,	4,	328,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList18, nullptr, OperandInfo326 },  // Inst #2435 = XVMSUBASP
  { 2436,	4,	1,	4,	328,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo326 },  // Inst #2436 = XVMSUBMDP
  { 2437,	4,	1,	4,	328,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo326 },  // Inst #2437 = XVMSUBMSP
  { 2438,	3,	1,	4,	324,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList18, nullptr, OperandInfo321 },  // Inst #2438 = XVMULDP
  { 2439,	3,	1,	4,	324,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList18, nullptr, OperandInfo321 },  // Inst #2439 = XVMULSP
  { 2440,	2,	1,	4,	402,	0, 0x0ULL, ImplicitList18, nullptr, OperandInfo320 },  // Inst #2440 = XVNABSDP
  { 2441,	2,	1,	4,	402,	0, 0x0ULL, ImplicitList18, nullptr, OperandInfo320 },  // Inst #2441 = XVNABSSP
  { 2442,	2,	1,	4,	402,	0, 0x0ULL, ImplicitList18, nullptr, OperandInfo320 },  // Inst #2442 = XVNEGDP
  { 2443,	2,	1,	4,	402,	0, 0x0ULL, ImplicitList18, nullptr, OperandInfo320 },  // Inst #2443 = XVNEGSP
  { 2444,	4,	1,	4,	328,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList18, nullptr, OperandInfo326 },  // Inst #2444 = XVNMADDADP
  { 2445,	4,	1,	4,	328,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList18, nullptr, OperandInfo326 },  // Inst #2445 = XVNMADDASP
  { 2446,	4,	1,	4,	328,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo326 },  // Inst #2446 = XVNMADDMDP
  { 2447,	4,	1,	4,	328,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo326 },  // Inst #2447 = XVNMADDMSP
  { 2448,	4,	1,	4,	328,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList18, nullptr, OperandInfo326 },  // Inst #2448 = XVNMSUBADP
  { 2449,	4,	1,	4,	328,	0|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList18, nullptr, OperandInfo326 },  // Inst #2449 = XVNMSUBASP
  { 2450,	4,	1,	4,	328,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo326 },  // Inst #2450 = XVNMSUBMDP
  { 2451,	4,	1,	4,	328,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo326 },  // Inst #2451 = XVNMSUBMSP
  { 2452,	2,	1,	4,	319,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo320 },  // Inst #2452 = XVRDPI
  { 2453,	2,	1,	4,	319,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo320 },  // Inst #2453 = XVRDPIC
  { 2454,	2,	1,	4,	319,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo320 },  // Inst #2454 = XVRDPIM
  { 2455,	2,	1,	4,	319,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo320 },  // Inst #2455 = XVRDPIP
  { 2456,	2,	1,	4,	319,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo320 },  // Inst #2456 = XVRDPIZ
  { 2457,	2,	1,	4,	319,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo320 },  // Inst #2457 = XVREDP
  { 2458,	2,	1,	4,	319,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo320 },  // Inst #2458 = XVRESP
  { 2459,	2,	1,	4,	319,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo320 },  // Inst #2459 = XVRSPI
  { 2460,	2,	1,	4,	319,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo320 },  // Inst #2460 = XVRSPIC
  { 2461,	2,	1,	4,	319,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo320 },  // Inst #2461 = XVRSPIM
  { 2462,	2,	1,	4,	319,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo320 },  // Inst #2462 = XVRSPIP
  { 2463,	2,	1,	4,	319,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, nullptr, nullptr, OperandInfo320 },  // Inst #2463 = XVRSPIZ
  { 2464,	2,	1,	4,	319,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo320 },  // Inst #2464 = XVRSQRTEDP
  { 2465,	2,	1,	4,	319,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo320 },  // Inst #2465 = XVRSQRTESP
  { 2466,	2,	1,	4,	265,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo320 },  // Inst #2466 = XVSQRTDP
  { 2467,	2,	1,	4,	266,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo320 },  // Inst #2467 = XVSQRTSP
  { 2468,	3,	1,	4,	324,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo321 },  // Inst #2468 = XVSUBDP
  { 2469,	3,	1,	4,	324,	0|(1ULL<<MCID::MayRaiseFPException), 0x0ULL, ImplicitList18, nullptr, OperandInfo321 },  // Inst #2469 = XVSUBSP
  { 2470,	3,	1,	4,	145,	0, 0x0ULL, ImplicitList18, nullptr, OperandInfo327 },  // Inst #2470 = XVTDIVDP
  { 2471,	3,	1,	4,	145,	0, 0x0ULL, ImplicitList18, nullptr, OperandInfo327 },  // Inst #2471 = XVTDIVSP
  { 2472,	2,	1,	4,	364,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo328 },  // Inst #2472 = XVTLSBB
  { 2473,	2,	1,	4,	371,	0, 0x0ULL, ImplicitList18, nullptr, OperandInfo328 },  // Inst #2473 = XVTSQRTDP
  { 2474,	2,	1,	4,	371,	0, 0x0ULL, ImplicitList18, nullptr, OperandInfo328 },  // Inst #2474 = XVTSQRTSP
  { 2475,	3,	1,	4,	376,	0, 0x0ULL, nullptr, nullptr, OperandInfo329 },  // Inst #2475 = XVTSTDCDP
  { 2476,	3,	1,	4,	376,	0, 0x0ULL, nullptr, nullptr, OperandInfo329 },  // Inst #2476 = XVTSTDCSP
  { 2477,	2,	1,	4,	402,	0, 0x0ULL, nullptr, nullptr, OperandInfo320 },  // Inst #2477 = XVXEXPDP
  { 2478,	2,	1,	4,	402,	0, 0x0ULL, nullptr, nullptr, OperandInfo320 },  // Inst #2478 = XVXEXPSP
  { 2479,	2,	1,	4,	403,	0, 0x0ULL, nullptr, nullptr, OperandInfo320 },  // Inst #2479 = XVXSIGDP
  { 2480,	2,	1,	4,	403,	0, 0x0ULL, nullptr, nullptr, OperandInfo320 },  // Inst #2480 = XVXSIGSP
  { 2481,	4,	1,	8,	470,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo330 },  // Inst #2481 = XXBLENDVB
  { 2482,	4,	1,	8,	470,	0, 0x80ULL, nullptr, nullptr, OperandInfo330 },  // Inst #2482 = XXBLENDVD
  { 2483,	4,	1,	8,	470,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo330 },  // Inst #2483 = XXBLENDVH
  { 2484,	4,	1,	8,	470,	0, 0x80ULL, nullptr, nullptr, OperandInfo330 },  // Inst #2484 = XXBLENDVW
  { 2485,	2,	1,	4,	461,	0, 0x0ULL, nullptr, nullptr, OperandInfo320 },  // Inst #2485 = XXBRD
  { 2486,	2,	1,	4,	461,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo320 },  // Inst #2486 = XXBRH
  { 2487,	2,	1,	4,	461,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo320 },  // Inst #2487 = XXBRQ
  { 2488,	2,	1,	4,	461,	0, 0x0ULL, nullptr, nullptr, OperandInfo320 },  // Inst #2488 = XXBRW
  { 2489,	5,	1,	8,	471,	0, 0x80ULL, nullptr, nullptr, OperandInfo331 },  // Inst #2489 = XXEVAL
  { 2490,	3,	1,	4,	464,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo332 },  // Inst #2490 = XXEXTRACTUW
  { 2491,	3,	1,	4,	358,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo333 },  // Inst #2491 = XXGENPCVBM
  { 2492,	3,	1,	4,	465,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo333 },  // Inst #2492 = XXGENPCVDM
  { 2493,	3,	1,	4,	465,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo333 },  // Inst #2493 = XXGENPCVHM
  { 2494,	3,	1,	4,	465,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo333 },  // Inst #2494 = XXGENPCVWM
  { 2495,	4,	1,	4,	166,	0, 0x0ULL, nullptr, nullptr, OperandInfo334 },  // Inst #2495 = XXINSERTW
  { 2496,	3,	1,	4,	409,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo321 },  // Inst #2496 = XXLAND
  { 2497,	3,	1,	4,	409,	0, 0x0ULL, nullptr, nullptr, OperandInfo321 },  // Inst #2497 = XXLANDC
  { 2498,	3,	1,	4,	391,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo321 },  // Inst #2498 = XXLEQV
  { 2499,	1,	1,	4,	391,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Bitcast)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo335 },  // Inst #2499 = XXLEQVOnes
  { 2500,	3,	1,	4,	409,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo321 },  // Inst #2500 = XXLNAND
  { 2501,	3,	1,	4,	409,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo321 },  // Inst #2501 = XXLNOR
  { 2502,	3,	1,	4,	409,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo321 },  // Inst #2502 = XXLOR
  { 2503,	3,	1,	4,	409,	0, 0x0ULL, nullptr, nullptr, OperandInfo321 },  // Inst #2503 = XXLORC
  { 2504,	3,	1,	4,	409,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo301 },  // Inst #2504 = XXLORf
  { 2505,	3,	1,	4,	391,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo321 },  // Inst #2505 = XXLXOR
  { 2506,	1,	1,	4,	391,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo336 },  // Inst #2506 = XXLXORdpz
  { 2507,	1,	1,	4,	391,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo337 },  // Inst #2507 = XXLXORspz
  { 2508,	1,	1,	4,	391,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo335 },  // Inst #2508 = XXLXORz
  { 2509,	2,	1,	4,	454,	0, 0x0ULL, nullptr, nullptr, OperandInfo338 },  // Inst #2509 = XXMFACC
  { 2510,	3,	1,	4,	165,	0, 0x0ULL, nullptr, nullptr, OperandInfo321 },  // Inst #2510 = XXMRGHW
  { 2511,	3,	1,	4,	165,	0, 0x0ULL, nullptr, nullptr, OperandInfo321 },  // Inst #2511 = XXMRGLW
  { 2512,	2,	1,	4,	453,	0, 0x0ULL, nullptr, nullptr, OperandInfo338 },  // Inst #2512 = XXMTACC
  { 2513,	3,	1,	4,	165,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo321 },  // Inst #2513 = XXPERM
  { 2514,	4,	1,	4,	165,	0, 0x0ULL, nullptr, nullptr, OperandInfo339 },  // Inst #2514 = XXPERMDI
  { 2515,	3,	1,	4,	165,	0, 0x0ULL, nullptr, nullptr, OperandInfo340 },  // Inst #2515 = XXPERMDIs
  { 2516,	3,	1,	4,	165,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo321 },  // Inst #2516 = XXPERMR
  { 2517,	5,	1,	8,	472,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x80ULL, nullptr, nullptr, OperandInfo331 },  // Inst #2517 = XXPERMX
  { 2518,	4,	1,	4,	103,	0, 0x0ULL, nullptr, nullptr, OperandInfo330 },  // Inst #2518 = XXSEL
  { 2519,	1,	1,	4,	445,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo341 },  // Inst #2519 = XXSETACCZ
  { 2520,	4,	1,	4,	165,	0, 0x0ULL, nullptr, nullptr, OperandInfo339 },  // Inst #2520 = XXSLDWI
  { 2521,	3,	1,	4,	165,	0, 0x0ULL, nullptr, nullptr, OperandInfo340 },  // Inst #2521 = XXSLDWIs
  { 2522,	4,	1,	8,	470,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x80ULL, nullptr, nullptr, OperandInfo342 },  // Inst #2522 = XXSPLTI32DX
  { 2523,	2,	1,	4,	462,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo170 },  // Inst #2523 = XXSPLTIB
  { 2524,	2,	1,	8,	469,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x80ULL, nullptr, nullptr, OperandInfo170 },  // Inst #2524 = XXSPLTIDP
  { 2525,	2,	1,	8,	469,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x80ULL, nullptr, nullptr, OperandInfo170 },  // Inst #2525 = XXSPLTIW
  { 2526,	3,	1,	4,	165,	0, 0x0ULL, nullptr, nullptr, OperandInfo343 },  // Inst #2526 = XXSPLTW
  { 2527,	3,	1,	4,	165,	0, 0x0ULL, nullptr, nullptr, OperandInfo340 },  // Inst #2527 = XXSPLTWs
  { 2528,	3,	0,	4,	335,	0|(1ULL<<MCID::Branch), 0x38ULL, ImplicitList14, ImplicitList12, OperandInfo344 },  // Inst #2528 = gBC
  { 2529,	3,	0,	4,	289,	0|(1ULL<<MCID::Branch), 0x38ULL, ImplicitList14, ImplicitList12, OperandInfo345 },  // Inst #2529 = gBCA
  { 2530,	4,	0,	4,	289,	0|(1ULL<<MCID::Branch), 0x38ULL, ImplicitList14, ImplicitList12, OperandInfo346 },  // Inst #2530 = gBCAat
  { 2531,	3,	0,	4,	336,	0|(1ULL<<MCID::Branch), 0x38ULL, ImplicitList26, ImplicitList12, OperandInfo347 },  // Inst #2531 = gBCCTR
  { 2532,	3,	0,	4,	336,	0|(1ULL<<MCID::Branch), 0x38ULL, ImplicitList26, ImplicitList36, OperandInfo347 },  // Inst #2532 = gBCCTRL
  { 2533,	3,	0,	4,	335,	0|(1ULL<<MCID::Branch), 0x38ULL, ImplicitList14, ImplicitList36, OperandInfo344 },  // Inst #2533 = gBCL
  { 2534,	3,	0,	4,	289,	0|(1ULL<<MCID::Branch), 0x38ULL, ImplicitList14, ImplicitList36, OperandInfo345 },  // Inst #2534 = gBCLA
  { 2535,	4,	0,	4,	289,	0|(1ULL<<MCID::Branch), 0x38ULL, ImplicitList14, ImplicitList36, OperandInfo346 },  // Inst #2535 = gBCLAat
  { 2536,	3,	0,	4,	333,	0|(1ULL<<MCID::Branch), 0x38ULL, ImplicitList26, ImplicitList12, OperandInfo347 },  // Inst #2536 = gBCLR
  { 2537,	3,	0,	4,	333,	0|(1ULL<<MCID::Branch), 0x38ULL, ImplicitList26, ImplicitList36, OperandInfo347 },  // Inst #2537 = gBCLRL
  { 2538,	4,	0,	4,	335,	0|(1ULL<<MCID::Branch), 0x38ULL, ImplicitList14, ImplicitList36, OperandInfo348 },  // Inst #2538 = gBCLat
  { 2539,	4,	0,	4,	335,	0|(1ULL<<MCID::Branch), 0x38ULL, ImplicitList14, ImplicitList12, OperandInfo348 },  // Inst #2539 = gBCat
};

extern const char PPCInstrNameData[] = {
  /* 0 */ 'G', '_', 'F', 'L', 'O', 'G', '1', '0', 0,
  /* 9 */ 'M', 'T', 'F', 'S', 'B', '0', 0,
  /* 16 */ 'V', '_', 'S', 'E', 'T', '0', 0,
  /* 23 */ 'V', 'C', 'T', 'S', 'X', 'S', '_', '0', 0,
  /* 32 */ 'V', 'C', 'T', 'U', 'X', 'S', '_', '0', 0,
  /* 41 */ 'V', 'C', 'F', 'S', 'X', '_', '0', 0,
  /* 49 */ 'V', 'C', 'F', 'U', 'X', '_', '0', 0,
  /* 57 */ 'M', 'T', 'F', 'S', 'B', '1', 0,
  /* 64 */ 'A', 'D', 'D', 'I', 'S', 'd', 't', 'p', 'r', 'e', 'l', 'H', 'A', '3', '2', 0,
  /* 80 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '3', '2', 0,
  /* 100 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '3', '2', 0,
  /* 120 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '3', '2', 0,
  /* 141 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '3', '2', 0,
  /* 161 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '3', '2', 0,
  /* 182 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '3', '2', 0,
  /* 202 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '3', '2', 0,
  /* 218 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '3', '2', 0,
  /* 238 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '3', '2', 0,
  /* 258 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '3', '2', 0,
  /* 277 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '3', '2', 0,
  /* 298 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '3', '2', 0,
  /* 318 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'g', 'd', 'L', '3', '2', 0,
  /* 331 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'l', 'd', 'L', '3', '2', 0,
  /* 344 */ 'L', 'D', 'g', 'o', 't', 'T', 'p', 'r', 'e', 'l', 'L', '3', '2', 0,
  /* 358 */ 'A', 'D', 'D', 'I', 'd', 't', 'p', 'r', 'e', 'l', 'L', '3', '2', 0,
  /* 372 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'g', 'd', 'L', 'A', 'D', 'D', 'R', '3', '2', 0,
  /* 389 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'l', 'd', 'L', 'A', 'D', 'D', 'R', '3', '2', 0,
  /* 406 */ 'G', 'E', 'T', 't', 'l', 's', 'l', 'd', 'A', 'D', 'D', 'R', '3', '2', 0,
  /* 421 */ 'G', 'E', 'T', 't', 'l', 's', 'A', 'D', 'D', 'R', '3', '2', 0,
  /* 434 */ 'P', 'R', 'E', 'P', 'A', 'R', 'E', '_', 'P', 'R', 'O', 'B', 'E', 'D', '_', 'A', 'L', 'L', 'O', 'C', 'A', '_', '3', '2', 0,
  /* 459 */ 'L', 'W', 'A', '_', '3', '2', 0,
  /* 466 */ 'P', 'R', 'O', 'B', 'E', 'D', '_', 'S', 'T', 'A', 'C', 'K', 'A', 'L', 'L', 'O', 'C', '_', '3', '2', 0,
  /* 487 */ 'P', 'R', 'E', 'P', 'A', 'R', 'E', '_', 'P', 'R', 'O', 'B', 'E', 'D', '_', 'A', 'L', 'L', 'O', 'C', 'A', '_', 'N', 'E', 'G', 'S', 'I', 'Z', 'E', '_', 'S', 'A', 'M', 'E', '_', 'R', 'E', 'G', '_', '3', '2', 0,
  /* 529 */ 'S', 'R', 'A', 'D', 'I', '_', '3', '2', 0,
  /* 538 */ 'R', 'L', 'D', 'I', 'C', 'L', '_', '3', '2', 0,
  /* 548 */ 'R', 'L', 'D', 'I', 'C', 'R', '_', '3', '2', 0,
  /* 558 */ 'S', 'T', 'B', 'X', 'T', 'L', 'S', '_', '3', '2', 0,
  /* 569 */ 'S', 'T', 'H', 'X', 'T', 'L', 'S', '_', '3', '2', 0,
  /* 580 */ 'S', 'T', 'W', 'X', 'T', 'L', 'S', '_', '3', '2', 0,
  /* 591 */ 'L', 'B', 'Z', 'X', 'T', 'L', 'S', '_', '3', '2', 0,
  /* 602 */ 'L', 'H', 'Z', 'X', 'T', 'L', 'S', '_', '3', '2', 0,
  /* 613 */ 'L', 'W', 'Z', 'X', 'T', 'L', 'S', '_', '3', '2', 0,
  /* 624 */ 'E', 'X', 'T', 'S', 'W', '_', '3', '2', 0,
  /* 633 */ 'L', 'W', 'A', 'X', '_', '3', '2', 0,
  /* 641 */ 'D', 'F', 'L', 'O', 'A', 'D', 'f', '3', '2', 0,
  /* 651 */ 'X', 'F', 'L', 'O', 'A', 'D', 'f', '3', '2', 0,
  /* 661 */ 'D', 'F', 'S', 'T', 'O', 'R', 'E', 'f', '3', '2', 0,
  /* 672 */ 'X', 'F', 'S', 'T', 'O', 'R', 'E', 'f', '3', '2', 0,
  /* 683 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'L', 'o', 'n', 'g', 'J', 'm', 'p', '3', '2', 0,
  /* 701 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'S', 'e', 't', 'J', 'm', 'p', '3', '2', 0,
  /* 718 */ 'T', 'L', 'B', 'R', 'E', '2', 0,
  /* 725 */ 'T', 'L', 'B', 'W', 'E', '2', 0,
  /* 732 */ 'G', '_', 'F', 'L', 'O', 'G', '2', 0,
  /* 740 */ 'G', '_', 'F', 'E', 'X', 'P', '2', 0,
  /* 748 */ 'P', 'M', 'X', 'V', 'B', 'F', '1', '6', 'G', 'E', 'R', '2', 0,
  /* 761 */ 'P', 'M', 'X', 'V', 'F', '1', '6', 'G', 'E', 'R', '2', 0,
  /* 773 */ 'P', 'M', 'X', 'V', 'I', '1', '6', 'G', 'E', 'R', '2', 0,
  /* 785 */ 'T', 'L', 'B', 'S', 'X', '2', 0,
  /* 792 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '6', '4', 0,
  /* 812 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '6', '4', 0,
  /* 832 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '6', '4', 0,
  /* 853 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '6', '4', 0,
  /* 873 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '6', '4', 0,
  /* 894 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '6', '4', 0,
  /* 914 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '6', '4', 0,
  /* 930 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '6', '4', 0,
  /* 950 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '6', '4', 0,
  /* 970 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '6', '4', 0,
  /* 989 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '6', '4', 0,
  /* 1010 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '6', '4', 0,
  /* 1030 */ 'D', 'S', 'T', '6', '4', 0,
  /* 1036 */ 'D', 'S', 'T', 'S', 'T', '6', '4', 0,
  /* 1044 */ 'D', 'S', 'T', 'T', '6', '4', 0,
  /* 1051 */ 'D', 'S', 'T', 'S', 'T', 'T', '6', '4', 0,
  /* 1060 */ 'E', 'X', 'T', 'S', 'B', '8', '_', '3', '2', '_', '6', '4', 0,
  /* 1073 */ 'E', 'X', 'T', 'S', 'H', '8', '_', '3', '2', '_', '6', '4', 0,
  /* 1086 */ 'E', 'X', 'T', 'S', 'W', 'S', 'L', 'I', '_', '3', '2', '_', '6', '4', 0,
  /* 1101 */ 'R', 'L', 'D', 'I', 'C', 'L', '_', '3', '2', '_', '6', '4', 0,
  /* 1114 */ 'E', 'X', 'T', 'S', 'W', '_', '3', '2', '_', '6', '4', 0,
  /* 1126 */ 'P', 'R', 'E', 'P', 'A', 'R', 'E', '_', 'P', 'R', 'O', 'B', 'E', 'D', '_', 'A', 'L', 'L', 'O', 'C', 'A', '_', '6', '4', 0,
  /* 1151 */ 'P', 'R', 'O', 'B', 'E', 'D', '_', 'S', 'T', 'A', 'C', 'K', 'A', 'L', 'L', 'O', 'C', '_', '6', '4', 0,
  /* 1172 */ 'P', 'R', 'E', 'P', 'A', 'R', 'E', '_', 'P', 'R', 'O', 'B', 'E', 'D', '_', 'A', 'L', 'L', 'O', 'C', 'A', '_', 'N', 'E', 'G', 'S', 'I', 'Z', 'E', '_', 'S', 'A', 'M', 'E', '_', 'R', 'E', 'G', '_', '6', '4', 0,
  /* 1214 */ 'D', 'F', 'L', 'O', 'A', 'D', 'f', '6', '4', 0,
  /* 1224 */ 'X', 'F', 'L', 'O', 'A', 'D', 'f', '6', '4', 0,
  /* 1234 */ 'D', 'F', 'S', 'T', 'O', 'R', 'E', 'f', '6', '4', 0,
  /* 1245 */ 'X', 'F', 'S', 'T', 'O', 'R', 'E', 'f', '6', '4', 0,
  /* 1256 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'L', 'o', 'n', 'g', 'J', 'm', 'p', '6', '4', 0,
  /* 1274 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'S', 'e', 't', 'J', 'm', 'p', '6', '4', 0,
  /* 1291 */ 'A', 'D', 'D', '4', 0,
  /* 1296 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'S', 'P', 'E', '4', 0,
  /* 1311 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'S', 'P', 'E', '4', 0,
  /* 1323 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'F', '4', 0,
  /* 1336 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'F', '4', 0,
  /* 1346 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'I', '4', 0,
  /* 1359 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'I', '4', 0,
  /* 1369 */ 'P', 'M', 'X', 'V', 'I', '8', 'G', 'E', 'R', '4', 0,
  /* 1380 */ 'X', 'V', 'C', 'V', 'S', 'P', 'B', 'F', '1', '6', 0,
  /* 1391 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'F', '1', '6', 0,
  /* 1405 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'F', '1', '6', 0,
  /* 1416 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '1', '6', 0,
  /* 1436 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '1', '6', 0,
  /* 1456 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '1', '6', 0,
  /* 1477 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '1', '6', 0,
  /* 1497 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '1', '6', 0,
  /* 1518 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '1', '6', 0,
  /* 1538 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '6', 0,
  /* 1554 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '6', 0,
  /* 1574 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '1', '6', 0,
  /* 1594 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '1', '6', 0,
  /* 1613 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '1', '6', 0,
  /* 1634 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '1', '6', 0,
  /* 1654 */ 'N', 'O', 'P', '_', 'G', 'T', '_', 'P', 'W', 'R', '6', 0,
  /* 1666 */ 'N', 'O', 'P', '_', 'G', 'T', '_', 'P', 'W', 'R', '7', 0,
  /* 1678 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '1', '2', '8', 0,
  /* 1699 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '1', '2', '8', 0,
  /* 1720 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '1', '2', '8', 0,
  /* 1742 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '1', '2', '8', 0,
  /* 1763 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '2', '8', 0,
  /* 1780 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '2', '8', 0,
  /* 1801 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '1', '2', '8', 0,
  /* 1822 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '1', '2', '8', 0,
  /* 1842 */ 'T', 'A', 'I', 'L', 'B', 'A', '8', 0,
  /* 1850 */ 'P', 'L', 'H', 'A', '8', 0,
  /* 1856 */ 'A', 'D', 'D', 'I', 'S', 't', 'o', 'c', 'H', 'A', '8', 0,
  /* 1868 */ 'B', 'L', 'A', '8', 0,
  /* 1873 */ 'P', 'L', 'W', 'A', '8', 0,
  /* 1879 */ 'T', 'A', 'I', 'L', 'B', '8', 0,
  /* 1886 */ 'C', 'M', 'P', 'B', '8', 0,
  /* 1892 */ 'C', 'M', 'P', 'R', 'B', '8', 0,
  /* 1899 */ 'E', 'X', 'T', 'S', 'B', '8', 0,
  /* 1906 */ 'S', 'E', 'T', 'B', '8', 0,
  /* 1912 */ 'M', 'F', 'T', 'B', '8', 0,
  /* 1918 */ 'P', 'O', 'P', 'C', 'N', 'T', 'B', '8', 0,
  /* 1927 */ 'P', 'S', 'T', 'B', '8', 0,
  /* 1933 */ 'S', 'E', 'T', 'N', 'B', 'C', '8', 0,
  /* 1941 */ 'S', 'E', 'T', 'B', 'C', '8', 0,
  /* 1948 */ 'A', 'D', 'D', 'C', '8', 0,
  /* 1954 */ 'A', 'N', 'D', 'C', '8', 0,
  /* 1960 */ 'S', 'U', 'B', 'F', 'C', '8', 0,
  /* 1967 */ 'A', 'D', 'D', 'I', 'C', '8', 0,
  /* 1974 */ 'S', 'U', 'B', 'F', 'I', 'C', '8', 0,
  /* 1982 */ 'D', 'Y', 'N', 'A', 'L', 'L', 'O', 'C', '8', 0,
  /* 1992 */ 'O', 'R', 'C', '8', 0,
  /* 1997 */ 'A', 'D', 'D', '8', 0,
  /* 2002 */ 'M', 'A', 'D', 'D', 'L', 'D', '8', 0,
  /* 2010 */ 'N', 'A', 'N', 'D', '8', 0,
  /* 2016 */ 'C', 'F', 'E', 'N', 'C', 'E', '8', 0,
  /* 2024 */ 'A', 'D', 'D', 'E', '8', 0,
  /* 2030 */ 'S', 'U', 'B', 'F', 'E', '8', 0,
  /* 2037 */ 'A', 'D', 'D', 'M', 'E', '8', 0,
  /* 2044 */ 'S', 'U', 'B', 'F', 'M', 'E', '8', 0,
  /* 2052 */ 'A', 'D', 'D', 'Z', 'E', '8', 0,
  /* 2059 */ 'S', 'U', 'B', 'F', 'Z', 'E', '8', 0,
  /* 2067 */ 'S', 'U', 'B', 'F', '8', 0,
  /* 2073 */ 'M', 'F', 'O', 'C', 'R', 'F', '8', 0,
  /* 2081 */ 'M', 'T', 'O', 'C', 'R', 'F', '8', 0,
  /* 2089 */ 'M', 'T', 'C', 'R', 'F', '8', 0,
  /* 2096 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'F', '8', 0,
  /* 2109 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'F', '8', 0,
  /* 2119 */ 'N', 'E', 'G', '8', 0,
  /* 2124 */ 'E', 'X', 'T', 'S', 'H', '8', 0,
  /* 2131 */ 'P', 'S', 'T', 'H', '8', 0,
  /* 2137 */ 'P', 'A', 'D', 'D', 'I', '8', 0,
  /* 2144 */ 'M', 'U', 'L', 'L', 'I', '8', 0,
  /* 2151 */ 'P', 'L', 'I', '8', 0,
  /* 2156 */ 'R', 'L', 'W', 'I', 'M', 'I', '8', 0,
  /* 2164 */ 'X', 'O', 'R', 'I', '8', 0,
  /* 2170 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '8', 0,
  /* 2189 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'I', '8', 0,
  /* 2202 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '8', 0,
  /* 2221 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '8', 0,
  /* 2241 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '8', 0,
  /* 2260 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '8', 0,
  /* 2280 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '8', 0,
  /* 2299 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '8', 0,
  /* 2314 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '8', 0,
  /* 2333 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '8', 0,
  /* 2352 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '8', 0,
  /* 2370 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'I', '8', 0,
  /* 2380 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '8', 0,
  /* 2400 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '8', 0,
  /* 2419 */ 'H', 'A', 'S', 'H', 'C', 'H', 'K', '8', 0,
  /* 2428 */ 'B', 'L', '8', 0,
  /* 2432 */ 'I', 'S', 'E', 'L', '8', 0,
  /* 2438 */ 'B', 'C', 'T', 'R', 'L', '8', 0,
  /* 2445 */ 'B', 'C', 'C', 'T', 'R', 'L', '8', 0,
  /* 2453 */ 'B', 'C', 'C', 'C', 'T', 'R', 'L', '8', 0,
  /* 2462 */ 'R', 'L', 'W', 'I', 'N', 'M', '8', 0,
  /* 2470 */ 'R', 'L', 'W', 'N', 'M', '8', 0,
  /* 2477 */ 'H', 'A', 'S', 'H', 'C', 'H', 'K', 'P', '8', 0,
  /* 2487 */ 'H', 'A', 'S', 'H', 'S', 'T', 'P', '8', 0,
  /* 2496 */ 'S', 'E', 'T', 'N', 'B', 'C', 'R', '8', 0,
  /* 2505 */ 'S', 'E', 'T', 'B', 'C', 'R', '8', 0,
  /* 2513 */ 'M', 'F', 'C', 'R', '8', 0,
  /* 2519 */ 'P', 'M', 'X', 'V', 'I', '4', 'G', 'E', 'R', '8', 0,
  /* 2530 */ 'B', 'L', 'R', '8', 0,
  /* 2535 */ 'M', 'F', 'L', 'R', '8', 0,
  /* 2541 */ 'M', 'T', 'L', 'R', '8', 0,
  /* 2547 */ 'B', 'D', 'Z', 'L', 'R', '8', 0,
  /* 2554 */ 'B', 'D', 'N', 'Z', 'L', 'R', '8', 0,
  /* 2562 */ 'M', 'o', 'v', 'e', 'P', 'C', 't', 'o', 'L', 'R', '8', 0,
  /* 2574 */ 'N', 'O', 'R', '8', 0,
  /* 2579 */ 'X', 'O', 'R', '8', 0,
  /* 2584 */ 'M', 'F', 'S', 'P', 'R', '8', 0,
  /* 2591 */ 'M', 'T', 'S', 'P', 'R', '8', 0,
  /* 2598 */ 'T', 'A', 'I', 'L', 'B', 'C', 'T', 'R', '8', 0,
  /* 2608 */ 'B', 'C', 'C', 'T', 'R', '8', 0,
  /* 2615 */ 'B', 'C', 'C', 'C', 'T', 'R', '8', 0,
  /* 2623 */ 'M', 'F', 'C', 'T', 'R', '8', 0,
  /* 2630 */ 'M', 'T', 'C', 'T', 'R', '8', 0,
  /* 2637 */ 'A', 'D', 'D', 'I', 'S', '8', 0,
  /* 2644 */ 'L', 'I', 'S', '8', 0,
  /* 2649 */ 'X', 'O', 'R', 'I', 'S', '8', 0,
  /* 2656 */ 'D', 'Y', 'N', 'A', 'R', 'E', 'A', 'O', 'F', 'F', 'S', 'E', 'T', '8', 0,
  /* 2671 */ 'A', 'N', 'D', 'I', '_', 'r', 'e', 'c', '_', '1', '_', 'E', 'Q', '_', 'B', 'I', 'T', '8', 0,
  /* 2690 */ 'A', 'N', 'D', 'I', '_', 'r', 'e', 'c', '_', '1', '_', 'G', 'T', '_', 'B', 'I', 'T', '8', 0,
  /* 2709 */ 'H', 'A', 'S', 'H', 'S', 'T', '8', 0,
  /* 2717 */ 'L', 'H', 'A', 'U', '8', 0,
  /* 2723 */ 'S', 'T', 'B', 'U', '8', 0,
  /* 2729 */ 'S', 'T', 'H', 'U', '8', 0,
  /* 2735 */ 'S', 'T', 'W', 'U', '8', 0,
  /* 2741 */ 'L', 'B', 'Z', 'U', '8', 0,
  /* 2747 */ 'L', 'H', 'Z', 'U', '8', 0,
  /* 2753 */ 'L', 'W', 'Z', 'U', '8', 0,
  /* 2759 */ 'E', 'Q', 'V', '8', 0,
  /* 2764 */ 'S', 'L', 'W', '8', 0,
  /* 2769 */ 'S', 'R', 'W', '8', 0,
  /* 2774 */ 'P', 'S', 'T', 'W', '8', 0,
  /* 2780 */ 'C', 'N', 'T', 'L', 'Z', 'W', '8', 0,
  /* 2788 */ 'C', 'N', 'T', 'T', 'Z', 'W', '8', 0,
  /* 2796 */ 'L', 'H', 'A', 'X', '8', 0,
  /* 2802 */ 'S', 'T', 'B', 'X', '8', 0,
  /* 2808 */ 'A', 'D', 'D', 'E', 'X', '8', 0,
  /* 2815 */ 'S', 'T', 'H', 'X', '8', 0,
  /* 2821 */ 'T', 'L', 'S', 'G', 'D', 'A', 'I', 'X', '8', 0,
  /* 2831 */ 'L', 'H', 'B', 'R', 'X', '8', 0,
  /* 2838 */ 'L', 'W', 'B', 'R', 'X', '8', 0,
  /* 2845 */ 'L', 'H', 'A', 'U', 'X', '8', 0,
  /* 2852 */ 'S', 'T', 'B', 'U', 'X', '8', 0,
  /* 2859 */ 'S', 'T', 'H', 'U', 'X', '8', 0,
  /* 2866 */ 'S', 'T', 'W', 'U', 'X', '8', 0,
  /* 2873 */ 'L', 'B', 'Z', 'U', 'X', '8', 0,
  /* 2880 */ 'L', 'H', 'Z', 'U', 'X', '8', 0,
  /* 2887 */ 'L', 'W', 'Z', 'U', 'X', '8', 0,
  /* 2894 */ 'S', 'T', 'W', 'X', '8', 0,
  /* 2900 */ 'L', 'B', 'Z', 'X', '8', 0,
  /* 2906 */ 'L', 'H', 'Z', 'X', '8', 0,
  /* 2912 */ 'L', 'W', 'Z', 'X', '8', 0,
  /* 2918 */ 'C', 'P', '_', 'C', 'O', 'P', 'Y', '8', 0,
  /* 2927 */ 'P', 'L', 'B', 'Z', '8', 0,
  /* 2933 */ 'B', 'D', 'Z', '8', 0,
  /* 2938 */ 'P', 'L', 'H', 'Z', '8', 0,
  /* 2944 */ 'B', 'D', 'N', 'Z', '8', 0,
  /* 2950 */ 'P', 'L', 'W', 'Z', '8', 0,
  /* 2956 */ 'A', 'D', 'D', 'I', 't', 'o', 'c', '8', 0,
  /* 2965 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'a', 'i', '8', 0,
  /* 2977 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'd', 'i', '8', 0,
  /* 2989 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'r', 'i', '8', 0,
  /* 3001 */ 'E', 'V', 'M', 'H', 'E', 'G', 'S', 'M', 'F', 'A', 'A', 0,
  /* 3013 */ 'E', 'V', 'M', 'H', 'O', 'G', 'S', 'M', 'F', 'A', 'A', 0,
  /* 3025 */ 'E', 'V', 'M', 'W', 'S', 'M', 'F', 'A', 'A', 0,
  /* 3035 */ 'E', 'V', 'M', 'W', 'S', 'S', 'F', 'A', 'A', 0,
  /* 3045 */ 'E', 'V', 'M', 'H', 'E', 'G', 'S', 'M', 'I', 'A', 'A', 0,
  /* 3057 */ 'E', 'V', 'M', 'H', 'O', 'G', 'S', 'M', 'I', 'A', 'A', 0,
  /* 3069 */ 'E', 'V', 'M', 'W', 'S', 'M', 'I', 'A', 'A', 0,
  /* 3079 */ 'E', 'V', 'M', 'H', 'E', 'G', 'U', 'M', 'I', 'A', 'A', 0,
  /* 3091 */ 'E', 'V', 'M', 'H', 'O', 'G', 'U', 'M', 'I', 'A', 'A', 0,
  /* 3103 */ 'E', 'V', 'M', 'W', 'U', 'M', 'I', 'A', 'A', 0,
  /* 3113 */ 'D', 'C', 'B', 'A', 0,
  /* 3118 */ 'T', 'A', 'I', 'L', 'B', 'A', 0,
  /* 3125 */ 'L', 'D', 't', 'o', 'c', 'B', 'A', 0,
  /* 3133 */ 'g', 'B', 'C', 'A', 0,
  /* 3138 */ 'B', 'C', 'C', 'A', 0,
  /* 3143 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'F', 'A', 0,
  /* 3153 */ 'E', 'V', 'M', 'W', 'H', 'S', 'M', 'F', 'A', 0,
  /* 3163 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'F', 'A', 0,
  /* 3173 */ 'E', 'V', 'M', 'W', 'S', 'M', 'F', 'A', 0,
  /* 3182 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'F', 'A', 0,
  /* 3192 */ 'E', 'V', 'M', 'W', 'H', 'S', 'S', 'F', 'A', 0,
  /* 3202 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'F', 'A', 0,
  /* 3212 */ 'E', 'V', 'M', 'W', 'S', 'S', 'F', 'A', 0,
  /* 3221 */ 'P', 'L', 'H', 'A', 0,
  /* 3226 */ 'A', 'D', 'D', 'I', 'S', 't', 'o', 'c', 'H', 'A', 0,
  /* 3237 */ 'A', 'D', 'D', 'I', 'S', 't', 'l', 's', 'g', 'd', 'H', 'A', 0,
  /* 3250 */ 'A', 'D', 'D', 'I', 'S', 't', 'l', 's', 'l', 'd', 'H', 'A', 0,
  /* 3263 */ 'A', 'D', 'D', 'I', 'S', 'g', 'o', 't', 'T', 'p', 'r', 'e', 'l', 'H', 'A', 0,
  /* 3279 */ 'A', 'D', 'D', 'I', 'S', 'd', 't', 'p', 'r', 'e', 'l', 'H', 'A', 0,
  /* 3293 */ 'S', 'L', 'B', 'I', 'A', 0,
  /* 3299 */ 'T', 'L', 'B', 'I', 'A', 0,
  /* 3305 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'I', 'A', 0,
  /* 3315 */ 'E', 'V', 'M', 'W', 'H', 'S', 'M', 'I', 'A', 0,
  /* 3325 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'I', 'A', 0,
  /* 3335 */ 'E', 'V', 'M', 'W', 'S', 'M', 'I', 'A', 0,
  /* 3344 */ 'E', 'V', 'M', 'H', 'E', 'U', 'M', 'I', 'A', 0,
  /* 3354 */ 'E', 'V', 'M', 'W', 'H', 'U', 'M', 'I', 'A', 0,
  /* 3364 */ 'E', 'V', 'M', 'W', 'L', 'U', 'M', 'I', 'A', 0,
  /* 3374 */ 'E', 'V', 'M', 'H', 'O', 'U', 'M', 'I', 'A', 0,
  /* 3384 */ 'E', 'V', 'M', 'W', 'U', 'M', 'I', 'A', 0,
  /* 3393 */ 'B', 'L', 'A', 0,
  /* 3397 */ 'g', 'B', 'C', 'L', 'A', 0,
  /* 3403 */ 'B', 'C', 'C', 'L', 'A', 0,
  /* 3409 */ 'B', 'D', 'Z', 'L', 'A', 0,
  /* 3415 */ 'B', 'D', 'N', 'Z', 'L', 'A', 0,
  /* 3422 */ 'G', '_', 'F', 'M', 'A', 0,
  /* 3428 */ 'G', '_', 'S', 'T', 'R', 'I', 'C', 'T', '_', 'F', 'M', 'A', 0,
  /* 3441 */ 'E', 'V', 'M', 'R', 'A', 0,
  /* 3447 */ 'P', 'L', 'W', 'A', 0,
  /* 3452 */ 'M', 'T', 'V', 'S', 'R', 'W', 'A', 0,
  /* 3460 */ 'M', 'T', 'V', 'R', 'W', 'A', 0,
  /* 3467 */ 'B', 'D', 'Z', 'A', 0,
  /* 3472 */ 'B', 'D', 'N', 'Z', 'A', 0,
  /* 3478 */ 'V', '_', 'S', 'E', 'T', '0', 'B', 0,
  /* 3486 */ 'V', 'S', 'R', 'A', 'B', 0,
  /* 3492 */ 'R', 'F', 'E', 'B', 'B', 0,
  /* 3498 */ 'V', 'C', 'N', 'T', 'M', 'B', 'B', 0,
  /* 3506 */ 'X', 'V', 'T', 'L', 'S', 'B', 'B', 0,
  /* 3514 */ 'V', 'C', 'L', 'Z', 'L', 'S', 'B', 'B', 0,
  /* 3523 */ 'V', 'C', 'T', 'Z', 'L', 'S', 'B', 'B', 0,
  /* 3532 */ 'V', 'C', 'M', 'P', 'N', 'E', 'B', 0,
  /* 3540 */ 'V', 'M', 'R', 'G', 'H', 'B', 0,
  /* 3547 */ 'X', 'X', 'S', 'P', 'L', 'T', 'I', 'B', 0,
  /* 3556 */ 'V', 'M', 'R', 'G', 'L', 'B', 0,
  /* 3563 */ 'T', 'A', 'I', 'L', 'B', 0,
  /* 3569 */ 'V', 'C', 'L', 'R', 'L', 'B', 0,
  /* 3576 */ 'V', 'R', 'L', 'B', 0,
  /* 3581 */ 'V', 'S', 'L', 'B', 0,
  /* 3586 */ 'V', 'P', 'M', 'S', 'U', 'M', 'B', 0,
  /* 3594 */ 'V', 'G', 'N', 'B', 0,
  /* 3599 */ 'C', 'M', 'P', 'B', 0,
  /* 3604 */ 'C', 'M', 'P', 'E', 'Q', 'B', 0,
  /* 3611 */ 'C', 'L', 'R', 'B', 'H', 'R', 'B', 0,
  /* 3619 */ 'C', 'M', 'P', 'R', 'B', 0,
  /* 3625 */ 'V', 'C', 'L', 'R', 'R', 'B', 0,
  /* 3632 */ 'V', 'S', 'R', 'B', 0,
  /* 3637 */ 'V', 'M', 'U', 'L', 'E', 'S', 'B', 0,
  /* 3645 */ 'V', '_', 'S', 'E', 'T', 'A', 'L', 'L', 'O', 'N', 'E', 'S', 'B', 0,
  /* 3659 */ 'V', 'A', 'V', 'G', 'S', 'B', 0,
  /* 3666 */ 'V', 'U', 'P', 'K', 'H', 'S', 'B', 0,
  /* 3674 */ 'V', 'S', 'P', 'L', 'T', 'I', 'S', 'B', 0,
  /* 3683 */ 'V', 'U', 'P', 'K', 'L', 'S', 'B', 0,
  /* 3691 */ 'V', 'M', 'I', 'N', 'S', 'B', 0,
  /* 3698 */ 'V', 'M', 'U', 'L', 'O', 'S', 'B', 0,
  /* 3706 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'B', 0,
  /* 3715 */ 'E', 'V', 'E', 'X', 'T', 'S', 'B', 0,
  /* 3723 */ 'V', 'M', 'A', 'X', 'S', 'B', 0,
  /* 3730 */ 'S', 'E', 'T', 'B', 0,
  /* 3735 */ 'M', 'F', 'T', 'B', 0,
  /* 3740 */ 'V', 'S', 'P', 'L', 'T', 'B', 0,
  /* 3747 */ 'V', 'P', 'O', 'P', 'C', 'N', 'T', 'B', 0,
  /* 3756 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'B', 0,
  /* 3765 */ 'P', 'S', 'T', 'B', 0,
  /* 3770 */ 'R', 'e', 'a', 'd', 'T', 'B', 0,
  /* 3777 */ 'V', 'A', 'B', 'S', 'D', 'U', 'B', 0,
  /* 3785 */ 'V', 'M', 'U', 'L', 'E', 'U', 'B', 0,
  /* 3793 */ 'V', 'A', 'V', 'G', 'U', 'B', 0,
  /* 3800 */ 'V', 'M', 'I', 'N', 'U', 'B', 0,
  /* 3807 */ 'V', 'M', 'U', 'L', 'O', 'U', 'B', 0,
  /* 3815 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'B', 0,
  /* 3824 */ 'E', 'F', 'D', 'S', 'U', 'B', 0,
  /* 3831 */ 'G', '_', 'F', 'S', 'U', 'B', 0,
  /* 3838 */ 'G', '_', 'S', 'T', 'R', 'I', 'C', 'T', '_', 'F', 'S', 'U', 'B', 0,
  /* 3852 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'F', 'S', 'U', 'B', 0,
  /* 3869 */ 'F', 'M', 'S', 'U', 'B', 0,
  /* 3875 */ 'F', 'N', 'M', 'S', 'U', 'B', 0,
  /* 3882 */ 'E', 'F', 'S', 'S', 'U', 'B', 0,
  /* 3889 */ 'E', 'V', 'F', 'S', 'S', 'U', 'B', 0,
  /* 3897 */ 'G', '_', 'S', 'U', 'B', 0,
  /* 3903 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'S', 'U', 'B', 0,
  /* 3919 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'U', 'B', 0,
  /* 3930 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'B', 0,
  /* 3939 */ 'V', 'M', 'A', 'X', 'U', 'B', 0,
  /* 3946 */ 'X', 'X', 'B', 'L', 'E', 'N', 'D', 'V', 'B', 0,
  /* 3956 */ 'V', 'C', 'M', 'P', 'N', 'E', 'Z', 'B', 0,
  /* 3965 */ 'V', 'C', 'L', 'Z', 'B', 0,
  /* 3971 */ 'V', 'C', 'T', 'Z', 'B', 0,
  /* 3977 */ 'S', 'E', 'T', 'N', 'B', 'C', 0,
  /* 3984 */ 'S', 'E', 'T', 'B', 'C', 0,
  /* 3990 */ 'g', 'B', 'C', 0,
  /* 3994 */ 'X', 'X', 'M', 'F', 'A', 'C', 'C', 0,
  /* 4002 */ 'X', 'X', 'M', 'T', 'A', 'C', 'C', 0,
  /* 4010 */ 'B', 'U', 'I', 'L', 'D', '_', 'U', 'A', 'C', 'C', 0,
  /* 4021 */ 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'U', 'A', 'C', 'C', 0,
  /* 4034 */ 'S', 'P', 'I', 'L', 'L', '_', 'U', 'A', 'C', 'C', 0,
  /* 4045 */ 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'A', 'C', 'C', 0,
  /* 4057 */ 'S', 'P', 'I', 'L', 'L', '_', 'A', 'C', 'C', 0,
  /* 4067 */ 'B', 'C', 'C', 0,
  /* 4071 */ 'A', 'D', 'D', 'C', 0,
  /* 4076 */ 'X', 'X', 'L', 'A', 'N', 'D', 'C', 0,
  /* 4084 */ 'C', 'R', 'A', 'N', 'D', 'C', 0,
  /* 4091 */ 'E', 'V', 'A', 'N', 'D', 'C', 0,
  /* 4098 */ 'T', 'A', 'B', 'O', 'R', 'T', 'D', 'C', 0,
  /* 4107 */ 'S', 'U', 'B', 'F', 'C', 0,
  /* 4113 */ 'S', 'U', 'B', 'I', 'C', 0,
  /* 4119 */ 'A', 'D', 'D', 'I', 'C', 0,
  /* 4125 */ 'R', 'L', 'D', 'I', 'C', 0,
  /* 4131 */ 'S', 'U', 'B', 'F', 'I', 'C', 0,
  /* 4138 */ 'X', 'S', 'R', 'D', 'P', 'I', 'C', 0,
  /* 4146 */ 'X', 'V', 'R', 'D', 'P', 'I', 'C', 0,
  /* 4154 */ 'X', 'V', 'R', 'S', 'P', 'I', 'C', 0,
  /* 4162 */ 'G', '_', 'I', 'N', 'T', 'R', 'I', 'N', 'S', 'I', 'C', 0,
  /* 4174 */ 'I', 'C', 'B', 'L', 'C', 0,
  /* 4180 */ 'B', 'R', 'I', 'N', 'C', 0,
  /* 4186 */ 'G', '_', 'F', 'P', 'T', 'R', 'U', 'N', 'C', 0,
  /* 4196 */ 'G', '_', 'I', 'N', 'T', 'R', 'I', 'N', 'S', 'I', 'C', '_', 'T', 'R', 'U', 'N', 'C', 0,
  /* 4214 */ 'G', '_', 'T', 'R', 'U', 'N', 'C', 0,
  /* 4222 */ 'G', '_', 'B', 'U', 'I', 'L', 'D', '_', 'V', 'E', 'C', 'T', 'O', 'R', '_', 'T', 'R', 'U', 'N', 'C', 0,
  /* 4243 */ 'S', 'L', 'B', 'S', 'Y', 'N', 'C', 0,
  /* 4251 */ 'T', 'L', 'B', 'S', 'Y', 'N', 'C', 0,
  /* 4259 */ 'M', 'S', 'G', 'S', 'Y', 'N', 'C', 0,
  /* 4267 */ 'I', 'S', 'Y', 'N', 'C', 0,
  /* 4273 */ 'M', 'S', 'Y', 'N', 'C', 0,
  /* 4279 */ 'G', '_', 'D', 'Y', 'N', '_', 'S', 'T', 'A', 'C', 'K', 'A', 'L', 'L', 'O', 'C', 0,
  /* 4296 */ 'D', 'Y', 'N', 'A', 'L', 'L', 'O', 'C', 0,
  /* 4305 */ 'B', 'L', '8', '_', 'N', 'O', 'T', 'O', 'C', 0,
  /* 4315 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'V', 'S', 'F', 'R', 'C', 0,
  /* 4331 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'V', 'S', 'F', 'R', 'C', 0,
  /* 4344 */ 'X', 'X', 'L', 'O', 'R', 'C', 0,
  /* 4351 */ 'C', 'R', 'O', 'R', 'C', 0,
  /* 4357 */ 'E', 'V', 'O', 'R', 'C', 0,
  /* 4363 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'V', 'R', 'R', 'C', 0,
  /* 4378 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'V', 'R', 'R', 'C', 0,
  /* 4390 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'V', 'S', 'S', 'R', 'C', 0,
  /* 4406 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'V', 'S', 'S', 'R', 'C', 0,
  /* 4419 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'V', 'S', 'R', 'C', 0,
  /* 4434 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'V', 'S', 'R', 'C', 0,
  /* 4446 */ 'S', 'C', 0,
  /* 4449 */ 'T', 'A', 'B', 'O', 'R', 'T', 'W', 'C', 0,
  /* 4458 */ 'V', 'E', 'X', 'T', 'S', 'B', '2', 'D', 0,
  /* 4467 */ 'V', 'E', 'X', 'T', 'S', 'H', '2', 'D', 0,
  /* 4476 */ 'V', 'E', 'X', 'T', 'S', 'W', '2', 'D', 0,
  /* 4485 */ 'T', 'L', 'B', 'S', 'X', '2', 'D', 0,
  /* 4493 */ 'G', '_', 'F', 'M', 'A', 'D', 0,
  /* 4500 */ 'V', 'S', 'H', 'A', 'S', 'I', 'G', 'M', 'A', 'D', 0,
  /* 4511 */ 'G', '_', 'I', 'N', 'D', 'E', 'X', 'E', 'D', '_', 'S', 'E', 'X', 'T', 'L', 'O', 'A', 'D', 0,
  /* 4530 */ 'G', '_', 'S', 'E', 'X', 'T', 'L', 'O', 'A', 'D', 0,
  /* 4541 */ 'G', '_', 'I', 'N', 'D', 'E', 'X', 'E', 'D', '_', 'Z', 'E', 'X', 'T', 'L', 'O', 'A', 'D', 0,
  /* 4560 */ 'G', '_', 'Z', 'E', 'X', 'T', 'L', 'O', 'A', 'D', 0,
  /* 4571 */ 'G', '_', 'I', 'N', 'D', 'E', 'X', 'E', 'D', '_', 'L', 'O', 'A', 'D', 0,
  /* 4586 */ 'G', '_', 'L', 'O', 'A', 'D', 0,
  /* 4593 */ 'V', 'S', 'R', 'A', 'D', 0,
  /* 4599 */ 'V', 'G', 'B', 'B', 'D', 0,
  /* 4605 */ 'V', 'C', 'N', 'T', 'M', 'B', 'D', 0,
  /* 4613 */ 'V', 'P', 'R', 'T', 'Y', 'B', 'D', 0,
  /* 4621 */ 'E', 'F', 'D', 'A', 'D', 'D', 0,
  /* 4628 */ 'G', '_', 'V', 'E', 'C', 'R', 'E', 'D', 'U', 'C', 'E', '_', 'F', 'A', 'D', 'D', 0,
  /* 4645 */ 'G', '_', 'F', 'A', 'D', 'D', 0,
  /* 4652 */ 'G', '_', 'V', 'E', 'C', 'R', 'E', 'D', 'U', 'C', 'E', '_', 'S', 'E', 'Q', '_', 'F', 'A', 'D', 'D', 0,
  /* 4673 */ 'G', '_', 'S', 'T', 'R', 'I', 'C', 'T', '_', 'F', 'A', 'D', 'D', 0,
  /* 4687 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'F', 'A', 'D', 'D', 0,
  /* 4704 */ 'F', 'M', 'A', 'D', 'D', 0,
  /* 4710 */ 'F', 'N', 'M', 'A', 'D', 'D', 0,
  /* 4717 */ 'E', 'F', 'S', 'A', 'D', 'D', 0,
  /* 4724 */ 'E', 'V', 'F', 'S', 'A', 'D', 'D', 0,
  /* 4732 */ 'G', '_', 'V', 'E', 'C', 'R', 'E', 'D', 'U', 'C', 'E', '_', 'A', 'D', 'D', 0,
  /* 4748 */ 'G', '_', 'A', 'D', 'D', 0,
  /* 4754 */ 'G', '_', 'P', 'T', 'R', '_', 'A', 'D', 'D', 0,
  /* 4764 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'A', 'D', 'D', 0,
  /* 4780 */ 'E', 'V', 'L', 'D', 'D', 0,
  /* 4786 */ 'M', 'T', 'V', 'S', 'R', 'D', 'D', 0,
  /* 4794 */ 'E', 'V', 'S', 'T', 'D', 'D', 0,
  /* 4801 */ 'V', 'C', 'F', 'U', 'G', 'E', 'D', 0,
  /* 4809 */ 'E', 'F', 'S', 'C', 'F', 'D', 0,
  /* 4816 */ 'P', 'L', 'F', 'D', 0,
  /* 4821 */ 'P', 'S', 'T', 'F', 'D', 0,
  /* 4827 */ 'F', 'N', 'E', 'G', 'D', 0,
  /* 4833 */ 'V', 'N', 'E', 'G', 'D', 0,
  /* 4839 */ 'M', 'A', 'D', 'D', 'H', 'D', 0,
  /* 4846 */ 'M', 'U', 'L', 'H', 'D', 0,
  /* 4852 */ 'F', 'C', 'F', 'I', 'D', 0,
  /* 4858 */ 'H', 'R', 'F', 'I', 'D', 0,
  /* 4864 */ 'E', 'F', 'D', 'C', 'F', 'S', 'I', 'D', 0,
  /* 4873 */ 'F', 'C', 'T', 'I', 'D', 0,
  /* 4879 */ 'E', 'F', 'D', 'C', 'F', 'U', 'I', 'D', 0,
  /* 4888 */ 'T', 'L', 'B', 'L', 'D', 0,
  /* 4894 */ 'M', 'A', 'D', 'D', 'L', 'D', 0,
  /* 4901 */ 'F', 'S', 'E', 'L', 'D', 0,
  /* 4907 */ 'V', 'M', 'U', 'L', 'L', 'D', 0,
  /* 4914 */ 'C', 'M', 'P', 'L', 'D', 0,
  /* 4920 */ 'M', 'F', 'V', 'S', 'R', 'L', 'D', 0,
  /* 4928 */ 'V', 'R', 'L', 'D', 0,
  /* 4933 */ 'V', 'S', 'L', 'D', 0,
  /* 4938 */ 'S', 'P', 'I', 'L', 'L', 'T', 'O', 'V', 'S', 'R', '_', 'L', 'D', 0,
  /* 4952 */ 'F', 'R', 'I', 'M', 'D', 0,
  /* 4958 */ 'V', 'B', 'P', 'E', 'R', 'M', 'D', 0,
  /* 4966 */ 'V', 'P', 'M', 'S', 'U', 'M', 'D', 0,
  /* 4974 */ 'X', 'X', 'L', 'A', 'N', 'D', 0,
  /* 4981 */ 'X', 'X', 'L', 'N', 'A', 'N', 'D', 0,
  /* 4989 */ 'C', 'R', 'N', 'A', 'N', 'D', 0,
  /* 4996 */ 'E', 'V', 'N', 'A', 'N', 'D', 0,
  /* 5003 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'N', 'A', 'N', 'D', 0,
  /* 5020 */ 'C', 'R', 'A', 'N', 'D', 0,
  /* 5026 */ 'E', 'V', 'A', 'N', 'D', 0,
  /* 5032 */ 'G', '_', 'V', 'E', 'C', 'R', 'E', 'D', 'U', 'C', 'E', '_', 'A', 'N', 'D', 0,
  /* 5048 */ 'G', '_', 'A', 'N', 'D', 0,
  /* 5054 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'A', 'N', 'D', 0,
  /* 5070 */ 'T', 'E', 'N', 'D', 0,
  /* 5075 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 5088 */ 'F', 'C', 'P', 'S', 'G', 'N', 'D', 0,
  /* 5096 */ 'F', 'R', 'I', 'N', 'D', 0,
  /* 5102 */ 'G', '_', 'B', 'R', 'C', 'O', 'N', 'D', 0,
  /* 5111 */ 'S', 'E', 'T', 'R', 'N', 'D', 0,
  /* 5118 */ 'G', '_', 'L', 'L', 'R', 'O', 'U', 'N', 'D', 0,
  /* 5128 */ 'G', '_', 'L', 'R', 'O', 'U', 'N', 'D', 0,
  /* 5137 */ 'G', '_', 'I', 'N', 'T', 'R', 'I', 'N', 'S', 'I', 'C', '_', 'R', 'O', 'U', 'N', 'D', 0,
  /* 5155 */ 'G', '_', 'I', 'N', 'T', 'R', 'I', 'N', 'S', 'I', 'C', '_', 'F', 'P', 'T', 'R', 'U', 'N', 'C', '_', 'R', 'O', 'U', 'N', 'D', 0,
  /* 5181 */ 'F', 'C', 'M', 'P', 'O', 'D', 0,
  /* 5188 */ 'V', 'P', 'D', 'E', 'P', 'D', 0,
  /* 5195 */ 'F', 'R', 'I', 'P', 'D', 0,
  /* 5201 */ 'C', 'M', 'P', 'D', 0,
  /* 5206 */ 'L', 'O', 'A', 'D', '_', 'S', 'T', 'A', 'C', 'K', '_', 'G', 'U', 'A', 'R', 'D', 0,
  /* 5223 */ 'X', 'X', 'B', 'R', 'D', 0,
  /* 5229 */ 'B', 'U', 'I', 'L', 'D', '_', 'Q', 'U', 'A', 'D', 'W', 'O', 'R', 'D', 0,
  /* 5244 */ 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'Q', 'U', 'A', 'D', 'W', 'O', 'R', 'D', 0,
  /* 5261 */ 'S', 'P', 'I', 'L', 'L', '_', 'Q', 'U', 'A', 'D', 'W', 'O', 'R', 'D', 0,
  /* 5276 */ 'S', 'P', 'L', 'I', 'T', '_', 'Q', 'U', 'A', 'D', 'W', 'O', 'R', 'D', 0,
  /* 5291 */ 'M', 'T', 'M', 'S', 'R', 'D', 0,
  /* 5298 */ 'M', 'F', 'V', 'S', 'R', 'D', 0,
  /* 5305 */ 'M', 'T', 'V', 'S', 'R', 'D', 0,
  /* 5312 */ 'M', 'F', 'V', 'R', 'D', 0,
  /* 5318 */ 'M', 'T', 'V', 'R', 'D', 0,
  /* 5324 */ 'F', 'A', 'B', 'S', 'D', 0,
  /* 5330 */ 'F', 'N', 'A', 'B', 'S', 'D', 0,
  /* 5337 */ 'V', 'M', 'O', 'D', 'S', 'D', 0,
  /* 5344 */ 'V', 'M', 'U', 'L', 'E', 'S', 'D', 0,
  /* 5352 */ 'V', 'D', 'I', 'V', 'E', 'S', 'D', 0,
  /* 5360 */ 'V', 'M', 'U', 'L', 'H', 'S', 'D', 0,
  /* 5368 */ 'V', 'M', 'I', 'N', 'S', 'D', 0,
  /* 5375 */ 'V', 'I', 'N', 'S', 'D', 0,
  /* 5381 */ 'V', 'M', 'U', 'L', 'O', 'S', 'D', 0,
  /* 5389 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'D', 0,
  /* 5398 */ 'V', 'D', 'I', 'V', 'S', 'D', 0,
  /* 5405 */ 'V', 'M', 'A', 'X', 'S', 'D', 0,
  /* 5412 */ 'P', 'L', 'X', 'S', 'D', 0,
  /* 5418 */ 'P', 'S', 'T', 'X', 'S', 'D', 0,
  /* 5425 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'D', 0,
  /* 5435 */ 'V', 'P', 'O', 'P', 'C', 'N', 'T', 'D', 0,
  /* 5444 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'D', 0,
  /* 5453 */ 'P', 'S', 'T', 'D', 0,
  /* 5458 */ 'V', 'P', 'E', 'X', 'T', 'D', 0,
  /* 5465 */ 'V', 'M', 'S', 'U', 'M', 'C', 'U', 'D', 0,
  /* 5474 */ 'V', 'M', 'O', 'D', 'U', 'D', 0,
  /* 5481 */ 'V', 'M', 'U', 'L', 'E', 'U', 'D', 0,
  /* 5489 */ 'V', 'D', 'I', 'V', 'E', 'U', 'D', 0,
  /* 5497 */ 'V', 'M', 'U', 'L', 'H', 'U', 'D', 0,
  /* 5505 */ 'V', 'M', 'I', 'N', 'U', 'D', 0,
  /* 5512 */ 'V', 'M', 'U', 'L', 'O', 'U', 'D', 0,
  /* 5520 */ 'F', 'C', 'M', 'P', 'U', 'D', 0,
  /* 5527 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'D', 0,
  /* 5536 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'D', 0,
  /* 5545 */ 'V', 'D', 'I', 'V', 'U', 'D', 0,
  /* 5552 */ 'V', 'M', 'A', 'X', 'U', 'D', 0,
  /* 5559 */ 'X', 'X', 'B', 'L', 'E', 'N', 'D', 'V', 'D', 0,
  /* 5569 */ 'D', 'I', 'V', 'D', 0,
  /* 5574 */ 'F', 'R', 'I', 'Z', 'D', 0,
  /* 5580 */ 'V', 'C', 'L', 'Z', 'D', 0,
  /* 5586 */ 'C', 'N', 'T', 'L', 'Z', 'D', 0,
  /* 5593 */ 'V', 'C', 'T', 'Z', 'D', 0,
  /* 5599 */ 'C', 'N', 'T', 'T', 'Z', 'D', 0,
  /* 5606 */ 'P', 'S', 'E', 'U', 'D', 'O', '_', 'P', 'R', 'O', 'B', 'E', 0,
  /* 5619 */ 'M', 'F', 'B', 'H', 'R', 'B', 'E', 0,
  /* 5627 */ 'G', '_', 'S', 'S', 'U', 'B', 'E', 0,
  /* 5635 */ 'G', '_', 'U', 'S', 'U', 'B', 'E', 0,
  /* 5643 */ 'G', '_', 'F', 'E', 'N', 'C', 'E', 0,
  /* 5651 */ 'A', 'R', 'I', 'T', 'H', '_', 'F', 'E', 'N', 'C', 'E', 0,
  /* 5663 */ 'R', 'E', 'G', '_', 'S', 'E', 'Q', 'U', 'E', 'N', 'C', 'E', 0,
  /* 5676 */ 'M', 'F', 'F', 'S', 'C', 'E', 0,
  /* 5683 */ 'G', '_', 'S', 'A', 'D', 'D', 'E', 0,
  /* 5691 */ 'G', '_', 'U', 'A', 'D', 'D', 'E', 0,
  /* 5699 */ 'D', 'I', 'V', 'D', 'E', 0,
  /* 5705 */ 'G', '_', 'F', 'M', 'I', 'N', 'N', 'U', 'M', '_', 'I', 'E', 'E', 'E', 0,
  /* 5720 */ 'G', '_', 'F', 'M', 'A', 'X', 'N', 'U', 'M', '_', 'I', 'E', 'E', 'E', 0,
  /* 5735 */ 'S', 'L', 'B', 'M', 'F', 'E', 'E', 0,
  /* 5743 */ 'W', 'R', 'T', 'E', 'E', 0,
  /* 5749 */ 'S', 'U', 'B', 'F', 'E', 0,
  /* 5755 */ 'E', 'V', 'L', 'W', 'H', 'E', 0,
  /* 5762 */ 'E', 'V', 'S', 'T', 'W', 'H', 'E', 0,
  /* 5770 */ 'S', 'L', 'B', 'I', 'E', 0,
  /* 5776 */ 'T', 'L', 'B', 'I', 'E', 0,
  /* 5782 */ 'G', '_', 'J', 'U', 'M', 'P', '_', 'T', 'A', 'B', 'L', 'E', 0,
  /* 5795 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 5802 */ 'A', 'D', 'D', 'M', 'E', 0,
  /* 5808 */ 'S', 'U', 'B', 'F', 'M', 'E', 0,
  /* 5815 */ 'G', '_', 'M', 'E', 'M', 'C', 'P', 'Y', '_', 'I', 'N', 'L', 'I', 'N', 'E', 0,
  /* 5831 */ 'L', 'O', 'C', 'A', 'L', '_', 'E', 'S', 'C', 'A', 'P', 'E', 0,
  /* 5844 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'S', 'P', 'E', 0,
  /* 5858 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'S', 'P', 'E', 0,
  /* 5869 */ 'T', 'L', 'B', 'R', 'E', 0,
  /* 5875 */ 'F', 'R', 'E', 0,
  /* 5879 */ 'G', '_', 'I', 'N', 'D', 'E', 'X', 'E', 'D', '_', 'S', 'T', 'O', 'R', 'E', 0,
  /* 5895 */ 'G', '_', 'S', 'T', 'O', 'R', 'E', 0,
  /* 5903 */ 'G', '_', 'B', 'I', 'T', 'R', 'E', 'V', 'E', 'R', 'S', 'E', 0,
  /* 5916 */ 'S', 'L', 'B', 'M', 'T', 'E', 0,
  /* 5923 */ 'F', 'R', 'S', 'Q', 'R', 'T', 'E', 0,
  /* 5931 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 5941 */ 'G', '_', 'G', 'L', 'O', 'B', 'A', 'L', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 5956 */ 'M', 'F', 'V', 'R', 'S', 'A', 'V', 'E', 0,
  /* 5965 */ 'M', 'T', 'V', 'R', 'S', 'A', 'V', 'E', 0,
  /* 5974 */ 'G', '_', 'M', 'E', 'M', 'M', 'O', 'V', 'E', 0,
  /* 5984 */ 'T', 'L', 'B', 'W', 'E', 0,
  /* 5990 */ 'D', 'I', 'V', 'W', 'E', 0,
  /* 5996 */ 'E', 'V', 'S', 'T', 'W', 'W', 'E', 0,
  /* 6004 */ 'A', 'D', 'D', 'Z', 'E', 0,
  /* 6010 */ 'G', '_', 'F', 'R', 'E', 'E', 'Z', 'E', 0,
  /* 6019 */ 'S', 'U', 'B', 'F', 'Z', 'E', 0,
  /* 6026 */ 'G', '_', 'F', 'C', 'A', 'N', 'O', 'N', 'I', 'C', 'A', 'L', 'I', 'Z', 'E', 0,
  /* 6042 */ 'D', 'C', 'B', 'F', 0,
  /* 6047 */ 'S', 'U', 'B', 'F', 0,
  /* 6052 */ 'G', '_', 'C', 'T', 'L', 'Z', '_', 'Z', 'E', 'R', 'O', '_', 'U', 'N', 'D', 'E', 'F', 0,
  /* 6070 */ 'G', '_', 'C', 'T', 'T', 'Z', '_', 'Z', 'E', 'R', 'O', '_', 'U', 'N', 'D', 'E', 'F', 0,
  /* 6088 */ 'G', '_', 'I', 'M', 'P', 'L', 'I', 'C', 'I', 'T', '_', 'D', 'E', 'F', 0,
  /* 6103 */ 'D', 'B', 'G', '_', 'I', 'N', 'S', 'T', 'R', '_', 'R', 'E', 'F', 0,
  /* 6117 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'F', 0,
  /* 6126 */ 'E', 'V', 'M', 'W', 'H', 'S', 'M', 'F', 0,
  /* 6135 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'F', 0,
  /* 6144 */ 'E', 'V', 'M', 'W', 'S', 'M', 'F', 0,
  /* 6152 */ 'M', 'C', 'R', 'F', 0,
  /* 6157 */ 'M', 'F', 'O', 'C', 'R', 'F', 0,
  /* 6164 */ 'M', 'T', 'O', 'C', 'R', 'F', 0,
  /* 6171 */ 'M', 'T', 'C', 'R', 'F', 0,
  /* 6177 */ 'E', 'F', 'D', 'C', 'F', 'S', 'F', 0,
  /* 6185 */ 'E', 'F', 'S', 'C', 'F', 'S', 'F', 0,
  /* 6193 */ 'E', 'V', 'F', 'S', 'C', 'F', 'S', 'F', 0,
  /* 6202 */ 'M', 'T', 'F', 'S', 'F', 0,
  /* 6208 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'F', 0,
  /* 6217 */ 'E', 'V', 'M', 'W', 'H', 'S', 'S', 'F', 0,
  /* 6226 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'F', 0,
  /* 6235 */ 'E', 'V', 'M', 'W', 'S', 'S', 'F', 0,
  /* 6243 */ 'E', 'F', 'D', 'C', 'T', 'S', 'F', 0,
  /* 6251 */ 'E', 'F', 'S', 'C', 'T', 'S', 'F', 0,
  /* 6259 */ 'E', 'V', 'F', 'S', 'C', 'T', 'S', 'F', 0,
  /* 6268 */ 'E', 'F', 'D', 'C', 'F', 'U', 'F', 0,
  /* 6276 */ 'E', 'F', 'S', 'C', 'F', 'U', 'F', 0,
  /* 6284 */ 'E', 'V', 'F', 'S', 'C', 'F', 'U', 'F', 0,
  /* 6293 */ 'E', 'F', 'D', 'C', 'T', 'U', 'F', 0,
  /* 6301 */ 'E', 'F', 'S', 'C', 'T', 'U', 'F', 0,
  /* 6309 */ 'E', 'V', 'F', 'S', 'C', 'T', 'U', 'F', 0,
  /* 6318 */ 'S', 'L', 'B', 'I', 'E', 'G', 0,
  /* 6325 */ 'E', 'F', 'D', 'N', 'E', 'G', 0,
  /* 6332 */ 'G', '_', 'F', 'N', 'E', 'G', 0,
  /* 6339 */ 'E', 'F', 'S', 'N', 'E', 'G', 0,
  /* 6346 */ 'E', 'V', 'F', 'S', 'N', 'E', 'G', 0,
  /* 6354 */ 'E', 'V', 'N', 'E', 'G', 0,
  /* 6360 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 6375 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 6389 */ 'G', '_', 'S', 'E', 'X', 'T', '_', 'I', 'N', 'R', 'E', 'G', 0,
  /* 6402 */ 'S', 'U', 'B', 'R', 'E', 'G', '_', 'T', 'O', '_', 'R', 'E', 'G', 0,
  /* 6416 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', 0,
  /* 6433 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'X', 'C', 'H', 'G', 0,
  /* 6450 */ 'G', '_', 'F', 'L', 'O', 'G', 0,
  /* 6457 */ 'G', '_', 'V', 'A', 'A', 'R', 'G', 0,
  /* 6465 */ 'P', 'R', 'E', 'A', 'L', 'L', 'O', 'C', 'A', 'T', 'E', 'D', '_', 'A', 'R', 'G', 0,
  /* 6482 */ 'V', '_', 'S', 'E', 'T', '0', 'H', 0,
  /* 6490 */ 'V', 'S', 'R', 'A', 'H', 0,
  /* 6496 */ 'V', 'C', 'N', 'T', 'M', 'B', 'H', 0,
  /* 6504 */ 'E', 'V', 'L', 'D', 'H', 0,
  /* 6510 */ 'E', 'V', 'S', 'T', 'D', 'H', 0,
  /* 6517 */ 'V', 'C', 'M', 'P', 'N', 'E', 'H', 0,
  /* 6525 */ 'V', 'M', 'R', 'G', 'H', 'H', 0,
  /* 6532 */ 'V', 'M', 'R', 'G', 'L', 'H', 0,
  /* 6539 */ 'V', 'R', 'L', 'H', 0,
  /* 6544 */ 'V', 'S', 'L', 'H', 0,
  /* 6549 */ 'G', '_', 'S', 'M', 'U', 'L', 'H', 0,
  /* 6557 */ 'G', '_', 'U', 'M', 'U', 'L', 'H', 0,
  /* 6565 */ 'V', 'P', 'M', 'S', 'U', 'M', 'H', 0,
  /* 6573 */ 'X', 'X', 'B', 'R', 'H', 0,
  /* 6579 */ 'V', 'S', 'R', 'H', 0,
  /* 6584 */ 'V', 'M', 'U', 'L', 'E', 'S', 'H', 0,
  /* 6592 */ 'V', '_', 'S', 'E', 'T', 'A', 'L', 'L', 'O', 'N', 'E', 'S', 'H', 0,
  /* 6606 */ 'V', 'A', 'V', 'G', 'S', 'H', 0,
  /* 6613 */ 'V', 'U', 'P', 'K', 'H', 'S', 'H', 0,
  /* 6621 */ 'V', 'S', 'P', 'L', 'T', 'I', 'S', 'H', 0,
  /* 6630 */ 'V', 'U', 'P', 'K', 'L', 'S', 'H', 0,
  /* 6638 */ 'V', 'M', 'I', 'N', 'S', 'H', 0,
  /* 6645 */ 'V', 'M', 'U', 'L', 'O', 'S', 'H', 0,
  /* 6653 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'H', 0,
  /* 6662 */ 'E', 'V', 'E', 'X', 'T', 'S', 'H', 0,
  /* 6670 */ 'V', 'M', 'A', 'X', 'S', 'H', 0,
  /* 6677 */ 'V', 'S', 'P', 'L', 'T', 'H', 0,
  /* 6684 */ 'V', 'P', 'O', 'P', 'C', 'N', 'T', 'H', 0,
  /* 6693 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'H', 0,
  /* 6702 */ 'P', 'S', 'T', 'H', 0,
  /* 6707 */ 'V', 'A', 'B', 'S', 'D', 'U', 'H', 0,
  /* 6715 */ 'V', 'M', 'U', 'L', 'E', 'U', 'H', 0,
  /* 6723 */ 'V', 'A', 'V', 'G', 'U', 'H', 0,
  /* 6730 */ 'V', 'M', 'I', 'N', 'U', 'H', 0,
  /* 6737 */ 'V', 'M', 'U', 'L', 'O', 'U', 'H', 0,
  /* 6745 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'H', 0,
  /* 6754 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'U', 'H', 0,
  /* 6765 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'H', 0,
  /* 6774 */ 'V', 'M', 'A', 'X', 'U', 'H', 0,
  /* 6781 */ 'X', 'X', 'B', 'L', 'E', 'N', 'D', 'V', 'H', 0,
  /* 6791 */ 'V', 'C', 'M', 'P', 'N', 'E', 'Z', 'H', 0,
  /* 6800 */ 'V', 'C', 'L', 'Z', 'H', 0,
  /* 6806 */ 'V', 'C', 'T', 'Z', 'H', 0,
  /* 6812 */ 'D', 'C', 'B', 'I', 0,
  /* 6817 */ 'I', 'C', 'B', 'I', 0,
  /* 6822 */ 'V', 'S', 'L', 'D', 'B', 'I', 0,
  /* 6829 */ 'V', 'S', 'R', 'D', 'B', 'I', 0,
  /* 6836 */ 'S', 'U', 'B', 'I', 0,
  /* 6841 */ 'D', 'C', 'C', 'C', 'I', 0,
  /* 6847 */ 'I', 'C', 'C', 'C', 'I', 0,
  /* 6853 */ 'T', 'A', 'B', 'O', 'R', 'T', 'D', 'C', 'I', 0,
  /* 6863 */ 'R', 'F', 'C', 'I', 0,
  /* 6868 */ 'R', 'F', 'M', 'C', 'I', 0,
  /* 6874 */ 'T', 'A', 'B', 'O', 'R', 'T', 'W', 'C', 'I', 0,
  /* 6884 */ 'S', 'R', 'A', 'D', 'I', 0,
  /* 6890 */ 'P', 'A', 'D', 'D', 'I', 0,
  /* 6896 */ 'R', 'F', 'D', 'I', 0,
  /* 6901 */ 'C', 'M', 'P', 'L', 'D', 'I', 0,
  /* 6908 */ 'C', 'L', 'R', 'L', 'S', 'L', 'D', 'I', 0,
  /* 6917 */ 'E', 'X', 'T', 'L', 'D', 'I', 0,
  /* 6924 */ 'X', 'X', 'P', 'E', 'R', 'M', 'D', 'I', 0,
  /* 6933 */ 'C', 'M', 'P', 'D', 'I', 0,
  /* 6939 */ 'C', 'L', 'R', 'R', 'D', 'I', 0,
  /* 6946 */ 'I', 'N', 'S', 'R', 'D', 'I', 0,
  /* 6953 */ 'R', 'O', 'T', 'R', 'D', 'I', 0,
  /* 6960 */ 'E', 'X', 'T', 'R', 'D', 'I', 0,
  /* 6967 */ 'T', 'D', 'I', 0,
  /* 6971 */ 'W', 'R', 'T', 'E', 'E', 'I', 0,
  /* 6978 */ 'R', 'F', 'I', 0,
  /* 6982 */ 'M', 'T', 'F', 'S', 'F', 'I', 0,
  /* 6989 */ 'E', 'V', 'S', 'P', 'L', 'A', 'T', 'F', 'I', 0,
  /* 6999 */ 'E', 'V', 'M', 'E', 'R', 'G', 'E', 'H', 'I', 0,
  /* 7009 */ 'E', 'V', 'M', 'E', 'R', 'G', 'E', 'L', 'O', 'H', 'I', 0,
  /* 7021 */ 'D', 'B', 'G', '_', 'P', 'H', 'I', 0,
  /* 7029 */ 'T', 'L', 'B', 'L', 'I', 0,
  /* 7035 */ 'M', 'U', 'L', 'L', 'I', 0,
  /* 7041 */ 'P', 'L', 'I', 0,
  /* 7045 */ 'E', 'X', 'T', 'S', 'W', 'S', 'L', 'I', 0,
  /* 7054 */ 'M', 'T', 'V', 'S', 'R', 'B', 'M', 'I', 0,
  /* 7063 */ 'V', 'R', 'L', 'D', 'M', 'I', 0,
  /* 7070 */ 'R', 'L', 'D', 'I', 'M', 'I', 0,
  /* 7077 */ 'R', 'L', 'W', 'I', 'M', 'I', 0,
  /* 7084 */ 'V', 'R', 'L', 'Q', 'M', 'I', 0,
  /* 7091 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'I', 0,
  /* 7100 */ 'E', 'V', 'M', 'W', 'H', 'S', 'M', 'I', 0,
  /* 7109 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'I', 0,
  /* 7118 */ 'E', 'V', 'M', 'W', 'S', 'M', 'I', 0,
  /* 7126 */ 'E', 'V', 'M', 'H', 'E', 'U', 'M', 'I', 0,
  /* 7135 */ 'E', 'V', 'M', 'W', 'H', 'U', 'M', 'I', 0,
  /* 7144 */ 'E', 'V', 'M', 'W', 'L', 'U', 'M', 'I', 0,
  /* 7153 */ 'E', 'V', 'M', 'H', 'O', 'U', 'M', 'I', 0,
  /* 7162 */ 'E', 'V', 'M', 'W', 'U', 'M', 'I', 0,
  /* 7170 */ 'V', 'R', 'L', 'W', 'M', 'I', 0,
  /* 7177 */ 'M', 'F', 'F', 'S', 'C', 'R', 'N', 'I', 0,
  /* 7186 */ 'M', 'F', 'F', 'S', 'C', 'D', 'R', 'N', 'I', 0,
  /* 7196 */ 'V', 'S', 'L', 'D', 'O', 'I', 0,
  /* 7203 */ 'X', 'S', 'R', 'D', 'P', 'I', 0,
  /* 7210 */ 'X', 'V', 'R', 'D', 'P', 'I', 0,
  /* 7217 */ 'X', 'S', 'R', 'Q', 'P', 'I', 0,
  /* 7224 */ 'X', 'V', 'R', 'S', 'P', 'I', 0,
  /* 7231 */ 'X', 'O', 'R', 'I', 0,
  /* 7236 */ 'E', 'F', 'D', 'C', 'F', 'S', 'I', 0,
  /* 7244 */ 'E', 'F', 'S', 'C', 'F', 'S', 'I', 0,
  /* 7252 */ 'E', 'V', 'F', 'S', 'C', 'F', 'S', 'I', 0,
  /* 7261 */ 'G', '_', 'F', 'P', 'T', 'O', 'S', 'I', 0,
  /* 7270 */ 'E', 'F', 'D', 'C', 'T', 'S', 'I', 0,
  /* 7278 */ 'E', 'F', 'S', 'C', 'T', 'S', 'I', 0,
  /* 7286 */ 'E', 'V', 'F', 'S', 'C', 'T', 'S', 'I', 0,
  /* 7295 */ 'E', 'V', 'S', 'P', 'L', 'A', 'T', 'I', 0,
  /* 7304 */ 'L', 'D', 't', 'o', 'c', 'J', 'T', 'I', 0,
  /* 7313 */ 'E', 'F', 'D', 'C', 'F', 'U', 'I', 0,
  /* 7321 */ 'E', 'F', 'S', 'C', 'F', 'U', 'I', 0,
  /* 7329 */ 'E', 'V', 'F', 'S', 'C', 'F', 'U', 'I', 0,
  /* 7338 */ 'G', '_', 'F', 'P', 'T', 'O', 'U', 'I', 0,
  /* 7347 */ 'E', 'F', 'D', 'C', 'T', 'U', 'I', 0,
  /* 7355 */ 'E', 'F', 'S', 'C', 'T', 'U', 'I', 0,
  /* 7363 */ 'E', 'V', 'F', 'S', 'C', 'T', 'U', 'I', 0,
  /* 7372 */ 'S', 'R', 'A', 'W', 'I', 0,
  /* 7378 */ 'X', 'X', 'S', 'L', 'D', 'W', 'I', 0,
  /* 7386 */ 'C', 'M', 'P', 'L', 'W', 'I', 0,
  /* 7393 */ 'E', 'V', 'R', 'L', 'W', 'I', 0,
  /* 7400 */ 'C', 'L', 'R', 'L', 'S', 'L', 'W', 'I', 0,
  /* 7409 */ 'I', 'N', 'S', 'L', 'W', 'I', 0,
  /* 7416 */ 'E', 'V', 'S', 'L', 'W', 'I', 0,
  /* 7423 */ 'E', 'X', 'T', 'L', 'W', 'I', 0,
  /* 7430 */ 'G', '_', 'F', 'P', 'O', 'W', 'I', 0,
  /* 7438 */ 'C', 'M', 'P', 'W', 'I', 0,
  /* 7444 */ 'C', 'L', 'R', 'R', 'W', 'I', 0,
  /* 7451 */ 'I', 'N', 'S', 'R', 'W', 'I', 0,
  /* 7458 */ 'R', 'O', 'T', 'R', 'W', 'I', 0,
  /* 7465 */ 'E', 'X', 'T', 'R', 'W', 'I', 0,
  /* 7472 */ 'L', 'S', 'W', 'I', 0,
  /* 7477 */ 'S', 'T', 'S', 'W', 'I', 0,
  /* 7483 */ 'T', 'W', 'I', 0,
  /* 7487 */ 'T', 'C', 'H', 'E', 'C', 'K', 0,
  /* 7494 */ 'H', 'A', 'S', 'H', 'C', 'H', 'K', 0,
  /* 7502 */ 'G', '_', 'P', 'T', 'R', 'M', 'A', 'S', 'K', 0,
  /* 7512 */ 'X', 'X', 'E', 'V', 'A', 'L', 0,
  /* 7519 */ 'V', 'S', 'T', 'R', 'I', 'B', 'L', 0,
  /* 7527 */ 'g', 'B', 'C', 'L', 0,
  /* 7532 */ 'B', 'C', 'C', 'L', 0,
  /* 7537 */ 'R', 'L', 'D', 'C', 'L', 0,
  /* 7543 */ 'R', 'L', 'D', 'I', 'C', 'L', 0,
  /* 7550 */ 'G', 'C', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 7559 */ 'D', 'B', 'G', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 7569 */ 'E', 'H', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 7578 */ 'A', 'N', 'N', 'O', 'T', 'A', 'T', 'I', 'O', 'N', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 7595 */ 'T', 'L', 'B', 'I', 'E', 'L', 0,
  /* 7602 */ 'I', 'C', 'A', 'L', 'L', '_', 'B', 'R', 'A', 'N', 'C', 'H', '_', 'F', 'U', 'N', 'N', 'E', 'L', 0,
  /* 7622 */ 'G', 'E', 'T', 't', 'l', 's', 'l', 'd', 'A', 'D', 'D', 'R', 'P', 'C', 'R', 'E', 'L', 0,
  /* 7640 */ 'G', 'E', 'T', 't', 'l', 's', 'A', 'D', 'D', 'R', 'P', 'C', 'R', 'E', 'L', 0,
  /* 7656 */ 'I', 'S', 'E', 'L', 0,
  /* 7661 */ 'E', 'V', 'S', 'E', 'L', 0,
  /* 7667 */ 'X', 'X', 'S', 'E', 'L', 0,
  /* 7673 */ 'D', 'C', 'B', 'F', 'L', 0,
  /* 7679 */ 'V', 'S', 'T', 'R', 'I', 'H', 'L', 0,
  /* 7687 */ 'G', '_', 'F', 'S', 'H', 'L', 0,
  /* 7694 */ 'G', '_', 'S', 'H', 'L', 0,
  /* 7700 */ 'G', '_', 'F', 'C', 'E', 'I', 'L', 0,
  /* 7708 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'T', 'A', 'I', 'L', '_', 'C', 'A', 'L', 'L', 0,
  /* 7728 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'T', 'Y', 'P', 'E', 'D', '_', 'E', 'V', 'E', 'N', 'T', '_', 'C', 'A', 'L', 'L', 0,
  /* 7755 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'E', 'V', 'E', 'N', 'T', '_', 'C', 'A', 'L', 'L', 0,
  /* 7776 */ 'F', 'E', 'N', 'T', 'R', 'Y', '_', 'C', 'A', 'L', 'L', 0,
  /* 7788 */ 'D', 'S', 'S', 'A', 'L', 'L', 0,
  /* 7795 */ 'K', 'I', 'L', 'L', 0,
  /* 7800 */ 'L', 'X', 'V', 'L', 'L', 0,
  /* 7806 */ 'S', 'T', 'X', 'V', 'L', 'L', 0,
  /* 7813 */ 'B', 'L', 'R', 'L', 0,
  /* 7818 */ 'g', 'B', 'C', 'L', 'R', 'L', 0,
  /* 7825 */ 'B', 'C', 'C', 'L', 'R', 'L', 0,
  /* 7832 */ 'B', 'D', 'Z', 'L', 'R', 'L', 0,
  /* 7839 */ 'B', 'D', 'N', 'Z', 'L', 'R', 'L', 0,
  /* 7847 */ 'B', 'C', 'T', 'R', 'L', 0,
  /* 7853 */ 'g', 'B', 'C', 'C', 'T', 'R', 'L', 0,
  /* 7861 */ 'B', 'C', 'C', 'C', 'T', 'R', 'L', 0,
  /* 7869 */ 'M', 'F', 'F', 'S', 'L', 0,
  /* 7875 */ 'L', 'V', 'S', 'L', 0,
  /* 7880 */ 'G', '_', 'R', 'O', 'T', 'L', 0,
  /* 7887 */ 'E', 'F', 'D', 'M', 'U', 'L', 0,
  /* 7894 */ 'G', '_', 'V', 'E', 'C', 'R', 'E', 'D', 'U', 'C', 'E', '_', 'F', 'M', 'U', 'L', 0,
  /* 7911 */ 'G', '_', 'F', 'M', 'U', 'L', 0,
  /* 7918 */ 'G', '_', 'V', 'E', 'C', 'R', 'E', 'D', 'U', 'C', 'E', '_', 'S', 'E', 'Q', '_', 'F', 'M', 'U', 'L', 0,
  /* 7939 */ 'G', '_', 'S', 'T', 'R', 'I', 'C', 'T', '_', 'F', 'M', 'U', 'L', 0,
  /* 7953 */ 'E', 'F', 'S', 'M', 'U', 'L', 0,
  /* 7960 */ 'E', 'V', 'F', 'S', 'M', 'U', 'L', 0,
  /* 7968 */ 'G', '_', 'V', 'E', 'C', 'R', 'E', 'D', 'U', 'C', 'E', '_', 'M', 'U', 'L', 0,
  /* 7984 */ 'G', '_', 'M', 'U', 'L', 0,
  /* 7990 */ 'L', 'X', 'V', 'L', 0,
  /* 7995 */ 'S', 'T', 'X', 'V', 'L', 0,
  /* 8001 */ 'L', 'B', 'A', 'R', 'X', 'L', 0,
  /* 8008 */ 'L', 'D', 'A', 'R', 'X', 'L', 0,
  /* 8015 */ 'L', 'H', 'A', 'R', 'X', 'L', 0,
  /* 8022 */ 'L', 'Q', 'A', 'R', 'X', 'L', 0,
  /* 8029 */ 'L', 'W', 'A', 'R', 'X', 'L', 0,
  /* 8036 */ 'L', 'V', 'X', 'L', 0,
  /* 8041 */ 'S', 'T', 'V', 'X', 'L', 0,
  /* 8047 */ 'D', 'C', 'B', 'Z', 'L', 0,
  /* 8053 */ 'B', 'D', 'Z', 'L', 0,
  /* 8058 */ 'B', 'D', 'N', 'Z', 'L', 0,
  /* 8064 */ 'L', 'D', 't', 'o', 'c', 'L', 0,
  /* 8071 */ 'A', 'D', 'D', 'I', 't', 'o', 'c', 'L', 0,
  /* 8080 */ 'L', 'W', 'Z', 't', 'o', 'c', 'L', 0,
  /* 8088 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'g', 'd', 'L', 0,
  /* 8099 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'l', 'd', 'L', 0,
  /* 8110 */ 'L', 'D', 'g', 'o', 't', 'T', 'p', 'r', 'e', 'l', 'L', 0,
  /* 8122 */ 'A', 'D', 'D', 'I', 'd', 't', 'p', 'r', 'e', 'l', 'L', 0,
  /* 8134 */ 'V', 'E', 'X', 'P', 'A', 'N', 'D', 'B', 'M', 0,
  /* 8144 */ 'V', 'M', 'S', 'U', 'M', 'M', 'B', 'M', 0,
  /* 8153 */ 'M', 'T', 'V', 'S', 'R', 'B', 'M', 0,
  /* 8161 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'B', 'M', 0,
  /* 8172 */ 'V', 'S', 'U', 'B', 'U', 'B', 'M', 0,
  /* 8180 */ 'V', 'A', 'D', 'D', 'U', 'B', 'M', 0,
  /* 8188 */ 'V', 'M', 'S', 'U', 'M', 'U', 'B', 'M', 0,
  /* 8197 */ 'X', 'X', 'G', 'E', 'N', 'P', 'C', 'V', 'B', 'M', 0,
  /* 8208 */ 'V', 'E', 'X', 'P', 'A', 'N', 'D', 'D', 'M', 0,
  /* 8218 */ 'M', 'T', 'V', 'S', 'R', 'D', 'M', 0,
  /* 8226 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'D', 'M', 0,
  /* 8237 */ 'V', 'S', 'U', 'B', 'U', 'D', 'M', 0,
  /* 8245 */ 'V', 'A', 'D', 'D', 'U', 'D', 'M', 0,
  /* 8253 */ 'V', 'M', 'S', 'U', 'M', 'U', 'D', 'M', 0,
  /* 8262 */ 'X', 'X', 'G', 'E', 'N', 'P', 'C', 'V', 'D', 'M', 0,
  /* 8273 */ 'V', 'C', 'L', 'Z', 'D', 'M', 0,
  /* 8280 */ 'C', 'N', 'T', 'L', 'Z', 'D', 'M', 0,
  /* 8288 */ 'V', 'C', 'T', 'Z', 'D', 'M', 0,
  /* 8295 */ 'C', 'N', 'T', 'T', 'Z', 'D', 'M', 0,
  /* 8303 */ 'G', '_', 'F', 'R', 'E', 'M', 0,
  /* 8310 */ 'G', '_', 'S', 'T', 'R', 'I', 'C', 'T', '_', 'F', 'R', 'E', 'M', 0,
  /* 8324 */ 'G', '_', 'S', 'R', 'E', 'M', 0,
  /* 8331 */ 'G', '_', 'U', 'R', 'E', 'M', 0,
  /* 8338 */ 'G', '_', 'S', 'D', 'I', 'V', 'R', 'E', 'M', 0,
  /* 8348 */ 'G', '_', 'U', 'D', 'I', 'V', 'R', 'E', 'M', 0,
  /* 8358 */ 'V', 'E', 'X', 'P', 'A', 'N', 'D', 'H', 'M', 0,
  /* 8368 */ 'M', 'T', 'V', 'S', 'R', 'H', 'M', 0,
  /* 8376 */ 'V', 'M', 'S', 'U', 'M', 'S', 'H', 'M', 0,
  /* 8385 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'H', 'M', 0,
  /* 8396 */ 'V', 'S', 'U', 'B', 'U', 'H', 'M', 0,
  /* 8404 */ 'V', 'M', 'L', 'A', 'D', 'D', 'U', 'H', 'M', 0,
  /* 8414 */ 'V', 'A', 'D', 'D', 'U', 'H', 'M', 0,
  /* 8422 */ 'V', 'M', 'S', 'U', 'M', 'U', 'H', 'M', 0,
  /* 8431 */ 'X', 'X', 'G', 'E', 'N', 'P', 'C', 'V', 'H', 'M', 0,
  /* 8442 */ 'T', 'R', 'E', 'C', 'L', 'A', 'I', 'M', 0,
  /* 8451 */ 'V', 'R', 'F', 'I', 'M', 0,
  /* 8457 */ 'X', 'S', 'R', 'D', 'P', 'I', 'M', 0,
  /* 8465 */ 'X', 'V', 'R', 'D', 'P', 'I', 'M', 0,
  /* 8473 */ 'X', 'V', 'R', 'S', 'P', 'I', 'M', 0,
  /* 8481 */ 'S', 'E', 'T', 'F', 'L', 'M', 0,
  /* 8488 */ 'V', 'R', 'L', 'D', 'N', 'M', 0,
  /* 8495 */ 'R', 'L', 'W', 'I', 'N', 'M', 0,
  /* 8502 */ 'V', 'R', 'L', 'Q', 'N', 'M', 0,
  /* 8509 */ 'V', 'R', 'L', 'W', 'N', 'M', 0,
  /* 8516 */ 'V', 'E', 'X', 'P', 'A', 'N', 'D', 'Q', 'M', 0,
  /* 8526 */ 'M', 'T', 'V', 'S', 'R', 'Q', 'M', 0,
  /* 8534 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'Q', 'M', 0,
  /* 8545 */ 'V', 'S', 'U', 'B', 'U', 'Q', 'M', 0,
  /* 8553 */ 'V', 'A', 'D', 'D', 'U', 'Q', 'M', 0,
  /* 8561 */ 'V', 'S', 'U', 'B', 'E', 'U', 'Q', 'M', 0,
  /* 8570 */ 'V', 'A', 'D', 'D', 'E', 'U', 'Q', 'M', 0,
  /* 8579 */ 'V', 'P', 'E', 'R', 'M', 0,
  /* 8585 */ 'X', 'X', 'P', 'E', 'R', 'M', 0,
  /* 8592 */ 'B', 'L', 'A', '8', '_', 'R', 'M', 0,
  /* 8600 */ 'B', 'L', '8', '_', 'R', 'M', 0,
  /* 8607 */ 'B', 'C', 'T', 'R', 'L', '8', '_', 'R', 'M', 0,
  /* 8617 */ 'B', 'L', 'A', '_', 'R', 'M', 0,
  /* 8624 */ 'B', 'L', '8', '_', 'N', 'O', 'T', 'O', 'C', '_', 'R', 'M', 0,
  /* 8637 */ 'B', 'L', '_', 'R', 'M', 0,
  /* 8643 */ 'B', 'C', 'T', 'R', 'L', '_', 'R', 'M', 0,
  /* 8652 */ 'B', 'L', 'A', '8', '_', 'N', 'O', 'P', '_', 'R', 'M', 0,
  /* 8664 */ 'B', 'L', '8', '_', 'N', 'O', 'P', '_', 'R', 'M', 0,
  /* 8675 */ 'B', 'L', '_', 'N', 'O', 'P', '_', 'R', 'M', 0,
  /* 8685 */ 'B', 'C', 'T', 'R', 'L', '8', '_', 'L', 'D', 'i', 'n', 't', 'o', '_', 't', 'o', 'c', '_', 'R', 'M', 0,
  /* 8706 */ 'B', 'C', 'T', 'R', 'L', '_', 'L', 'W', 'Z', 'i', 'n', 't', 'o', '_', 't', 'o', 'c', '_', 'R', 'M', 0,
  /* 8727 */ 'I', 'N', 'L', 'I', 'N', 'E', 'A', 'S', 'M', 0,
  /* 8737 */ 'V', 'P', 'K', 'U', 'D', 'U', 'M', 0,
  /* 8745 */ 'V', 'P', 'K', 'U', 'H', 'U', 'M', 0,
  /* 8753 */ 'G', '_', 'F', 'M', 'I', 'N', 'I', 'M', 'U', 'M', 0,
  /* 8764 */ 'G', '_', 'F', 'M', 'A', 'X', 'I', 'M', 'U', 'M', 0,
  /* 8775 */ 'G', '_', 'F', 'M', 'I', 'N', 'N', 'U', 'M', 0,
  /* 8785 */ 'G', '_', 'F', 'M', 'A', 'X', 'N', 'U', 'M', 0,
  /* 8795 */ 'V', 'P', 'K', 'U', 'W', 'U', 'M', 0,
  /* 8803 */ 'V', 'E', 'X', 'P', 'A', 'N', 'D', 'W', 'M', 0,
  /* 8813 */ 'M', 'T', 'V', 'S', 'R', 'W', 'M', 0,
  /* 8821 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'W', 'M', 0,
  /* 8832 */ 'V', 'S', 'U', 'B', 'U', 'W', 'M', 0,
  /* 8840 */ 'V', 'A', 'D', 'D', 'U', 'W', 'M', 0,
  /* 8848 */ 'V', 'M', 'U', 'L', 'U', 'W', 'M', 0,
  /* 8856 */ 'X', 'X', 'G', 'E', 'N', 'P', 'C', 'V', 'W', 'M', 0,
  /* 8867 */ 'E', 'V', 'M', 'H', 'E', 'G', 'S', 'M', 'F', 'A', 'N', 0,
  /* 8879 */ 'E', 'V', 'M', 'H', 'O', 'G', 'S', 'M', 'F', 'A', 'N', 0,
  /* 8891 */ 'E', 'V', 'M', 'W', 'S', 'M', 'F', 'A', 'N', 0,
  /* 8901 */ 'E', 'V', 'M', 'W', 'S', 'S', 'F', 'A', 'N', 0,
  /* 8911 */ 'E', 'V', 'M', 'H', 'E', 'G', 'S', 'M', 'I', 'A', 'N', 0,
  /* 8923 */ 'E', 'V', 'M', 'H', 'O', 'G', 'S', 'M', 'I', 'A', 'N', 0,
  /* 8935 */ 'E', 'V', 'M', 'W', 'S', 'M', 'I', 'A', 'N', 0,
  /* 8945 */ 'E', 'V', 'M', 'H', 'E', 'G', 'U', 'M', 'I', 'A', 'N', 0,
  /* 8957 */ 'E', 'V', 'M', 'H', 'O', 'G', 'U', 'M', 'I', 'A', 'N', 0,
  /* 8969 */ 'E', 'V', 'M', 'W', 'U', 'M', 'I', 'A', 'N', 0,
  /* 8979 */ 'G', '_', 'I', 'N', 'T', 'R', 'I', 'N', 'S', 'I', 'C', '_', 'R', 'O', 'U', 'N', 'D', 'E', 'V', 'E', 'N', 0,
  /* 9001 */ 'G', '_', 'A', 'S', 'S', 'E', 'R', 'T', '_', 'A', 'L', 'I', 'G', 'N', 0,
  /* 9016 */ 'G', '_', 'F', 'C', 'O', 'P', 'Y', 'S', 'I', 'G', 'N', 0,
  /* 9028 */ 'V', 'R', 'F', 'I', 'N', 0,
  /* 9034 */ 'T', 'B', 'E', 'G', 'I', 'N', 0,
  /* 9041 */ 'G', '_', 'V', 'E', 'C', 'R', 'E', 'D', 'U', 'C', 'E', '_', 'F', 'M', 'I', 'N', 0,
  /* 9058 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'F', 'M', 'I', 'N', 0,
  /* 9075 */ 'G', '_', 'V', 'E', 'C', 'R', 'E', 'D', 'U', 'C', 'E', '_', 'S', 'M', 'I', 'N', 0,
  /* 9092 */ 'G', '_', 'S', 'M', 'I', 'N', 0,
  /* 9099 */ 'G', '_', 'V', 'E', 'C', 'R', 'E', 'D', 'U', 'C', 'E', '_', 'U', 'M', 'I', 'N', 0,
  /* 9116 */ 'G', '_', 'U', 'M', 'I', 'N', 0,
  /* 9123 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'U', 'M', 'I', 'N', 0,
  /* 9140 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'M', 'I', 'N', 0,
  /* 9156 */ 'M', 'F', 'S', 'R', 'I', 'N', 0,
  /* 9163 */ 'M', 'T', 'S', 'R', 'I', 'N', 0,
  /* 9170 */ 'G', '_', 'F', 'S', 'I', 'N', 0,
  /* 9177 */ 'P', 'M', 'X', 'V', 'B', 'F', '1', '6', 'G', 'E', 'R', '2', 'N', 'N', 0,
  /* 9192 */ 'P', 'M', 'X', 'V', 'F', '1', '6', 'G', 'E', 'R', '2', 'N', 'N', 0,
  /* 9206 */ 'P', 'M', 'X', 'V', 'F', '3', '2', 'G', 'E', 'R', 'N', 'N', 0,
  /* 9219 */ 'P', 'M', 'X', 'V', 'F', '6', '4', 'G', 'E', 'R', 'N', 'N', 0,
  /* 9232 */ 'C', 'F', 'I', '_', 'I', 'N', 'S', 'T', 'R', 'U', 'C', 'T', 'I', 'O', 'N', 0,
  /* 9248 */ 'P', 'M', 'X', 'V', 'B', 'F', '1', '6', 'G', 'E', 'R', '2', 'P', 'N', 0,
  /* 9263 */ 'P', 'M', 'X', 'V', 'F', '1', '6', 'G', 'E', 'R', '2', 'P', 'N', 0,
  /* 9277 */ 'X', 'S', 'C', 'V', 'S', 'P', 'D', 'P', 'N', 0,
  /* 9287 */ 'P', 'M', 'X', 'V', 'F', '3', '2', 'G', 'E', 'R', 'P', 'N', 0,
  /* 9300 */ 'P', 'M', 'X', 'V', 'F', '6', '4', 'G', 'E', 'R', 'P', 'N', 0,
  /* 9313 */ 'X', 'V', 'C', 'V', 'B', 'F', '1', '6', 'S', 'P', 'N', 0,
  /* 9325 */ 'X', 'S', 'C', 'V', 'D', 'P', 'S', 'P', 'N', 0,
  /* 9335 */ 'D', 'A', 'R', 'N', 0,
  /* 9340 */ 'M', 'F', 'F', 'S', 'C', 'R', 'N', 0,
  /* 9348 */ 'M', 'F', 'F', 'S', 'C', 'D', 'R', 'N', 0,
  /* 9357 */ 'A', 'T', 'T', 'N', 0,
  /* 9362 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'D', 'O', 'W', 'N', 0,
  /* 9379 */ 'A', 'D', 'D', '4', 'O', 0,
  /* 9385 */ 'A', 'D', 'D', 'C', '8', 'O', 0,
  /* 9392 */ 'S', 'U', 'B', 'F', 'C', '8', 'O', 0,
  /* 9400 */ 'A', 'D', 'D', '8', 'O', 0,
  /* 9406 */ 'A', 'D', 'D', 'E', '8', 'O', 0,
  /* 9413 */ 'S', 'U', 'B', 'F', 'E', '8', 'O', 0,
  /* 9421 */ 'A', 'D', 'D', 'M', 'E', '8', 'O', 0,
  /* 9429 */ 'S', 'U', 'B', 'F', 'M', 'E', '8', 'O', 0,
  /* 9438 */ 'A', 'D', 'D', 'Z', 'E', '8', 'O', 0,
  /* 9446 */ 'S', 'U', 'B', 'F', 'Z', 'E', '8', 'O', 0,
  /* 9455 */ 'S', 'U', 'B', 'F', '8', 'O', 0,
  /* 9462 */ 'N', 'E', 'G', '8', 'O', 0,
  /* 9468 */ 'G', '_', 'S', 'S', 'U', 'B', 'O', 0,
  /* 9476 */ 'G', '_', 'U', 'S', 'U', 'B', 'O', 0,
  /* 9484 */ 'A', 'D', 'D', 'C', 'O', 0,
  /* 9490 */ 'S', 'U', 'B', 'F', 'C', 'O', 0,
  /* 9497 */ 'G', '_', 'S', 'A', 'D', 'D', 'O', 0,
  /* 9505 */ 'G', '_', 'U', 'A', 'D', 'D', 'O', 0,
  /* 9513 */ 'M', 'U', 'L', 'L', 'D', 'O', 0,
  /* 9520 */ 'L', 'Q', 'X', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 9531 */ 'S', 'T', 'Q', 'X', '_', 'P', 'S', 'E', 'U', 'D', 'O', 0,
  /* 9543 */ 'D', 'I', 'V', 'D', 'O', 0,
  /* 9549 */ 'A', 'D', 'D', 'E', 'O', 0,
  /* 9555 */ 'D', 'I', 'V', 'D', 'E', 'O', 0,
  /* 9562 */ 'S', 'U', 'B', 'F', 'E', 'O', 0,
  /* 9569 */ 'A', 'D', 'D', 'M', 'E', 'O', 0,
  /* 9576 */ 'S', 'U', 'B', 'F', 'M', 'E', 'O', 0,
  /* 9584 */ 'D', 'I', 'V', 'W', 'E', 'O', 0,
  /* 9591 */ 'A', 'D', 'D', 'Z', 'E', 'O', 0,
  /* 9598 */ 'S', 'U', 'B', 'F', 'Z', 'E', 'O', 0,
  /* 9606 */ 'S', 'U', 'B', 'F', 'O', 0,
  /* 9612 */ 'N', 'E', 'G', 'O', 0,
  /* 9617 */ 'E', 'V', 'S', 'T', 'W', 'H', 'O', 0,
  /* 9625 */ 'P', 's', 'e', 'u', 'd', 'o', 'E', 'I', 'E', 'I', 'O', 0,
  /* 9637 */ 'E', 'n', 'f', 'o', 'r', 'c', 'e', 'I', 'E', 'I', 'O', 0,
  /* 9649 */ 'E', 'V', 'M', 'E', 'R', 'G', 'E', 'L', 'O', 0,
  /* 9659 */ 'E', 'V', 'M', 'E', 'R', 'G', 'E', 'H', 'I', 'L', 'O', 0,
  /* 9671 */ 'V', 'S', 'L', 'O', 0,
  /* 9676 */ 'G', '_', 'S', 'M', 'U', 'L', 'O', 0,
  /* 9684 */ 'G', '_', 'U', 'M', 'U', 'L', 'O', 0,
  /* 9692 */ 'X', 'S', 'C', 'V', 'Q', 'P', 'D', 'P', 'O', 0,
  /* 9702 */ 'X', 'S', 'N', 'M', 'S', 'U', 'B', 'Q', 'P', 'O', 0,
  /* 9713 */ 'X', 'S', 'M', 'S', 'U', 'B', 'Q', 'P', 'O', 0,
  /* 9723 */ 'X', 'S', 'S', 'U', 'B', 'Q', 'P', 'O', 0,
  /* 9732 */ 'X', 'S', 'N', 'M', 'A', 'D', 'D', 'Q', 'P', 'O', 0,
  /* 9743 */ 'X', 'S', 'M', 'A', 'D', 'D', 'Q', 'P', 'O', 0,
  /* 9753 */ 'X', 'S', 'A', 'D', 'D', 'Q', 'P', 'O', 0,
  /* 9762 */ 'X', 'S', 'M', 'U', 'L', 'Q', 'P', 'O', 0,
  /* 9771 */ 'X', 'S', 'S', 'Q', 'R', 'T', 'Q', 'P', 'O', 0,
  /* 9781 */ 'X', 'S', 'D', 'I', 'V', 'Q', 'P', 'O', 0,
  /* 9790 */ 'G', '_', 'B', 'Z', 'E', 'R', 'O', 0,
  /* 9798 */ 'V', 'S', 'R', 'O', 0,
  /* 9803 */ 'D', 'I', 'V', 'D', 'U', 'O', 0,
  /* 9810 */ 'D', 'I', 'V', 'D', 'E', 'U', 'O', 0,
  /* 9818 */ 'D', 'I', 'V', 'W', 'E', 'U', 'O', 0,
  /* 9826 */ 'D', 'I', 'V', 'W', 'U', 'O', 0,
  /* 9833 */ 'M', 'U', 'L', 'L', 'W', 'O', 0,
  /* 9840 */ 'D', 'I', 'V', 'W', 'O', 0,
  /* 9846 */ 'E', 'V', 'S', 'T', 'W', 'W', 'O', 0,
  /* 9854 */ 'S', 'T', 'A', 'C', 'K', 'M', 'A', 'P', 0,
  /* 9863 */ 'N', 'A', 'P', 0,
  /* 9867 */ 'T', 'R', 'A', 'P', 0,
  /* 9872 */ 'G', '_', 'B', 'S', 'W', 'A', 'P', 0,
  /* 9880 */ 'X', 'S', 'N', 'M', 'S', 'U', 'B', 'A', 'D', 'P', 0,
  /* 9891 */ 'X', 'V', 'N', 'M', 'S', 'U', 'B', 'A', 'D', 'P', 0,
  /* 9902 */ 'X', 'S', 'M', 'S', 'U', 'B', 'A', 'D', 'P', 0,
  /* 9912 */ 'X', 'V', 'M', 'S', 'U', 'B', 'A', 'D', 'P', 0,
  /* 9922 */ 'X', 'S', 'N', 'M', 'A', 'D', 'D', 'A', 'D', 'P', 0,
  /* 9933 */ 'X', 'V', 'N', 'M', 'A', 'D', 'D', 'A', 'D', 'P', 0,
  /* 9944 */ 'X', 'S', 'M', 'A', 'D', 'D', 'A', 'D', 'P', 0,
  /* 9954 */ 'X', 'V', 'M', 'A', 'D', 'D', 'A', 'D', 'P', 0,
  /* 9964 */ 'X', 'S', 'S', 'U', 'B', 'D', 'P', 0,
  /* 9972 */ 'X', 'V', 'S', 'U', 'B', 'D', 'P', 0,
  /* 9980 */ 'X', 'S', 'T', 'S', 'T', 'D', 'C', 'D', 'P', 0,
  /* 9990 */ 'X', 'V', 'T', 'S', 'T', 'D', 'C', 'D', 'P', 0,
  /* 10000 */ 'X', 'S', 'M', 'I', 'N', 'C', 'D', 'P', 0,
  /* 10009 */ 'X', 'S', 'M', 'A', 'X', 'C', 'D', 'P', 0,
  /* 10018 */ 'X', 'S', 'A', 'D', 'D', 'D', 'P', 0,
  /* 10026 */ 'X', 'V', 'A', 'D', 'D', 'D', 'P', 0,
  /* 10034 */ 'X', 'S', 'C', 'V', 'S', 'X', 'D', 'D', 'P', 0,
  /* 10044 */ 'X', 'V', 'C', 'V', 'S', 'X', 'D', 'D', 'P', 0,
  /* 10054 */ 'X', 'S', 'C', 'V', 'U', 'X', 'D', 'D', 'P', 0,
  /* 10064 */ 'X', 'V', 'C', 'V', 'U', 'X', 'D', 'D', 'P', 0,
  /* 10074 */ 'X', 'S', 'C', 'M', 'P', 'G', 'E', 'D', 'P', 0,
  /* 10084 */ 'X', 'V', 'C', 'M', 'P', 'G', 'E', 'D', 'P', 0,
  /* 10094 */ 'X', 'S', 'R', 'E', 'D', 'P', 0,
  /* 10101 */ 'X', 'V', 'R', 'E', 'D', 'P', 0,
  /* 10108 */ 'X', 'S', 'R', 'S', 'Q', 'R', 'T', 'E', 'D', 'P', 0,
  /* 10119 */ 'X', 'V', 'R', 'S', 'Q', 'R', 'T', 'E', 'D', 'P', 0,
  /* 10130 */ 'X', 'S', 'N', 'E', 'G', 'D', 'P', 0,
  /* 10138 */ 'X', 'V', 'N', 'E', 'G', 'D', 'P', 0,
  /* 10146 */ 'X', 'S', 'X', 'S', 'I', 'G', 'D', 'P', 0,
  /* 10155 */ 'X', 'V', 'X', 'S', 'I', 'G', 'D', 'P', 0,
  /* 10164 */ 'X', 'X', 'S', 'P', 'L', 'T', 'I', 'D', 'P', 0,
  /* 10174 */ 'X', 'S', 'M', 'I', 'N', 'J', 'D', 'P', 0,
  /* 10183 */ 'X', 'S', 'M', 'A', 'X', 'J', 'D', 'P', 0,
  /* 10192 */ 'X', 'S', 'M', 'U', 'L', 'D', 'P', 0,
  /* 10200 */ 'X', 'V', 'M', 'U', 'L', 'D', 'P', 0,
  /* 10208 */ 'X', 'S', 'N', 'M', 'S', 'U', 'B', 'M', 'D', 'P', 0,
  /* 10219 */ 'X', 'V', 'N', 'M', 'S', 'U', 'B', 'M', 'D', 'P', 0,
  /* 10230 */ 'X', 'S', 'M', 'S', 'U', 'B', 'M', 'D', 'P', 0,
  /* 10240 */ 'X', 'V', 'M', 'S', 'U', 'B', 'M', 'D', 'P', 0,
  /* 10250 */ 'X', 'S', 'N', 'M', 'A', 'D', 'D', 'M', 'D', 'P', 0,
  /* 10261 */ 'X', 'V', 'N', 'M', 'A', 'D', 'D', 'M', 'D', 'P', 0,
  /* 10272 */ 'X', 'S', 'M', 'A', 'D', 'D', 'M', 'D', 'P', 0,
  /* 10282 */ 'X', 'V', 'M', 'A', 'D', 'D', 'M', 'D', 'P', 0,
  /* 10292 */ 'X', 'S', 'C', 'P', 'S', 'G', 'N', 'D', 'P', 0,
  /* 10302 */ 'X', 'V', 'C', 'P', 'S', 'G', 'N', 'D', 'P', 0,
  /* 10312 */ 'X', 'S', 'M', 'I', 'N', 'D', 'P', 0,
  /* 10320 */ 'X', 'V', 'M', 'I', 'N', 'D', 'P', 0,
  /* 10328 */ 'X', 'S', 'C', 'M', 'P', 'O', 'D', 'P', 0,
  /* 10337 */ 'X', 'S', 'C', 'V', 'H', 'P', 'D', 'P', 0,
  /* 10346 */ 'X', 'S', 'C', 'V', 'Q', 'P', 'D', 'P', 0,
  /* 10355 */ 'X', 'S', 'C', 'V', 'S', 'P', 'D', 'P', 0,
  /* 10364 */ 'X', 'V', 'C', 'V', 'S', 'P', 'D', 'P', 0,
  /* 10373 */ 'X', 'S', 'I', 'E', 'X', 'P', 'D', 'P', 0,
  /* 10382 */ 'X', 'V', 'I', 'E', 'X', 'P', 'D', 'P', 0,
  /* 10391 */ 'X', 'S', 'C', 'M', 'P', 'E', 'X', 'P', 'D', 'P', 0,
  /* 10402 */ 'X', 'S', 'X', 'E', 'X', 'P', 'D', 'P', 0,
  /* 10411 */ 'X', 'V', 'X', 'E', 'X', 'P', 'D', 'P', 0,
  /* 10420 */ 'X', 'S', 'C', 'M', 'P', 'E', 'Q', 'D', 'P', 0,
  /* 10430 */ 'X', 'V', 'C', 'M', 'P', 'E', 'Q', 'D', 'P', 0,
  /* 10440 */ 'X', 'S', 'N', 'A', 'B', 'S', 'D', 'P', 0,
  /* 10449 */ 'X', 'V', 'N', 'A', 'B', 'S', 'D', 'P', 0,
  /* 10458 */ 'X', 'S', 'A', 'B', 'S', 'D', 'P', 0,
  /* 10466 */ 'X', 'V', 'A', 'B', 'S', 'D', 'P', 0,
  /* 10474 */ 'X', 'S', 'C', 'M', 'P', 'G', 'T', 'D', 'P', 0,
  /* 10484 */ 'X', 'V', 'C', 'M', 'P', 'G', 'T', 'D', 'P', 0,
  /* 10494 */ 'X', 'S', 'S', 'Q', 'R', 'T', 'D', 'P', 0,
  /* 10503 */ 'X', 'S', 'T', 'S', 'Q', 'R', 'T', 'D', 'P', 0,
  /* 10513 */ 'X', 'V', 'T', 'S', 'Q', 'R', 'T', 'D', 'P', 0,
  /* 10523 */ 'X', 'V', 'S', 'Q', 'R', 'T', 'D', 'P', 0,
  /* 10532 */ 'X', 'S', 'C', 'M', 'P', 'U', 'D', 'P', 0,
  /* 10541 */ 'X', 'S', 'D', 'I', 'V', 'D', 'P', 0,
  /* 10549 */ 'X', 'S', 'T', 'D', 'I', 'V', 'D', 'P', 0,
  /* 10558 */ 'X', 'V', 'T', 'D', 'I', 'V', 'D', 'P', 0,
  /* 10567 */ 'X', 'V', 'D', 'I', 'V', 'D', 'P', 0,
  /* 10575 */ 'X', 'V', 'C', 'V', 'S', 'X', 'W', 'D', 'P', 0,
  /* 10585 */ 'X', 'V', 'C', 'V', 'U', 'X', 'W', 'D', 'P', 0,
  /* 10595 */ 'X', 'S', 'M', 'A', 'X', 'D', 'P', 0,
  /* 10603 */ 'X', 'V', 'M', 'A', 'X', 'D', 'P', 0,
  /* 10611 */ 'C', 'T', 'R', 'L', '_', 'D', 'E', 'P', 0,
  /* 10620 */ 'D', 'C', 'B', 'F', 'E', 'P', 0,
  /* 10627 */ 'I', 'C', 'B', 'I', 'E', 'P', 0,
  /* 10634 */ 'D', 'C', 'B', 'Z', 'L', 'E', 'P', 0,
  /* 10642 */ 'D', 'C', 'B', 'T', 'E', 'P', 0,
  /* 10649 */ 'D', 'C', 'B', 'S', 'T', 'E', 'P', 0,
  /* 10657 */ 'D', 'C', 'B', 'T', 'S', 'T', 'E', 'P', 0,
  /* 10666 */ 'D', 'C', 'B', 'Z', 'E', 'P', 0,
  /* 10673 */ 'V', 'C', 'M', 'P', 'B', 'F', 'P', 0,
  /* 10681 */ 'V', 'N', 'M', 'S', 'U', 'B', 'F', 'P', 0,
  /* 10690 */ 'V', 'S', 'U', 'B', 'F', 'P', 0,
  /* 10697 */ 'V', 'M', 'A', 'D', 'D', 'F', 'P', 0,
  /* 10705 */ 'V', 'A', 'D', 'D', 'F', 'P', 0,
  /* 10712 */ 'V', 'L', 'O', 'G', 'E', 'F', 'P', 0,
  /* 10720 */ 'V', 'C', 'M', 'P', 'G', 'E', 'F', 'P', 0,
  /* 10729 */ 'V', 'R', 'E', 'F', 'P', 0,
  /* 10735 */ 'V', 'E', 'X', 'P', 'T', 'E', 'F', 'P', 0,
  /* 10744 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'E', 'F', 'P', 0,
  /* 10754 */ 'V', 'M', 'I', 'N', 'F', 'P', 0,
  /* 10761 */ 'G', '_', 'S', 'I', 'T', 'O', 'F', 'P', 0,
  /* 10770 */ 'G', '_', 'U', 'I', 'T', 'O', 'F', 'P', 0,
  /* 10779 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'F', 'P', 0,
  /* 10788 */ 'V', 'C', 'M', 'P', 'G', 'T', 'F', 'P', 0,
  /* 10797 */ 'V', 'M', 'A', 'X', 'F', 'P', 0,
  /* 10804 */ 'X', 'S', 'C', 'V', 'D', 'P', 'H', 'P', 0,
  /* 10813 */ 'X', 'V', 'C', 'V', 'S', 'P', 'H', 'P', 0,
  /* 10822 */ 'V', 'R', 'F', 'I', 'P', 0,
  /* 10828 */ 'X', 'S', 'R', 'D', 'P', 'I', 'P', 0,
  /* 10836 */ 'X', 'V', 'R', 'D', 'P', 'I', 'P', 0,
  /* 10844 */ 'X', 'V', 'R', 'S', 'P', 'I', 'P', 0,
  /* 10852 */ 'H', 'A', 'S', 'H', 'C', 'H', 'K', 'P', 0,
  /* 10861 */ 'D', 'C', 'B', 'F', 'L', 'P', 0,
  /* 10868 */ 'G', '_', 'F', 'C', 'M', 'P', 0,
  /* 10875 */ 'G', '_', 'I', 'C', 'M', 'P', 0,
  /* 10882 */ 'P', 'M', 'X', 'V', 'B', 'F', '1', '6', 'G', 'E', 'R', '2', 'N', 'P', 0,
  /* 10897 */ 'P', 'M', 'X', 'V', 'F', '1', '6', 'G', 'E', 'R', '2', 'N', 'P', 0,
  /* 10911 */ 'P', 'M', 'X', 'V', 'F', '3', '2', 'G', 'E', 'R', 'N', 'P', 0,
  /* 10924 */ 'P', 'M', 'X', 'V', 'F', '6', '4', 'G', 'E', 'R', 'N', 'P', 0,
  /* 10937 */ 'B', 'L', 'A', '8', '_', 'N', 'O', 'P', 0,
  /* 10946 */ 'B', 'L', '8', '_', 'N', 'O', 'P', 0,
  /* 10954 */ 'U', 'N', 'E', 'N', 'C', 'O', 'D', 'E', 'D', '_', 'N', 'O', 'P', 0,
  /* 10968 */ 'B', 'L', '_', 'N', 'O', 'P', 0,
  /* 10975 */ 'G', '_', 'C', 'T', 'P', 'O', 'P', 0,
  /* 10983 */ 'S', 'T', 'O', 'P', 0,
  /* 10988 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'O', 'P', 0,
  /* 11001 */ 'F', 'A', 'U', 'L', 'T', 'I', 'N', 'G', '_', 'O', 'P', 0,
  /* 11013 */ 'P', 'M', 'X', 'V', 'B', 'F', '1', '6', 'G', 'E', 'R', '2', 'P', 'P', 0,
  /* 11028 */ 'P', 'M', 'X', 'V', 'F', '1', '6', 'G', 'E', 'R', '2', 'P', 'P', 0,
  /* 11042 */ 'P', 'M', 'X', 'V', 'I', '1', '6', 'G', 'E', 'R', '2', 'P', 'P', 0,
  /* 11056 */ 'P', 'M', 'X', 'V', 'I', '8', 'G', 'E', 'R', '4', 'P', 'P', 0,
  /* 11069 */ 'P', 'M', 'X', 'V', 'I', '4', 'G', 'E', 'R', '8', 'P', 'P', 0,
  /* 11082 */ 'P', 'M', 'X', 'V', 'F', '3', '2', 'G', 'E', 'R', 'P', 'P', 0,
  /* 11095 */ 'P', 'M', 'X', 'V', 'F', '6', '4', 'G', 'E', 'R', 'P', 'P', 0,
  /* 11108 */ 'P', 'M', 'X', 'V', 'I', '1', '6', 'G', 'E', 'R', '2', 'S', 'P', 'P', 0,
  /* 11123 */ 'P', 'M', 'X', 'V', 'I', '8', 'G', 'E', 'R', '4', 'S', 'P', 'P', 0,
  /* 11137 */ 'X', 'S', 'N', 'M', 'S', 'U', 'B', 'Q', 'P', 0,
  /* 11147 */ 'X', 'S', 'M', 'S', 'U', 'B', 'Q', 'P', 0,
  /* 11156 */ 'X', 'S', 'S', 'U', 'B', 'Q', 'P', 0,
  /* 11164 */ 'X', 'S', 'T', 'S', 'T', 'D', 'C', 'Q', 'P', 0,
  /* 11174 */ 'X', 'S', 'M', 'I', 'N', 'C', 'Q', 'P', 0,
  /* 11183 */ 'X', 'S', 'M', 'A', 'X', 'C', 'Q', 'P', 0,
  /* 11192 */ 'X', 'S', 'N', 'M', 'A', 'D', 'D', 'Q', 'P', 0,
  /* 11202 */ 'X', 'S', 'M', 'A', 'D', 'D', 'Q', 'P', 0,
  /* 11211 */ 'X', 'S', 'A', 'D', 'D', 'Q', 'P', 0,
  /* 11219 */ 'X', 'S', 'C', 'V', 'S', 'D', 'Q', 'P', 0,
  /* 11228 */ 'X', 'S', 'C', 'V', 'U', 'D', 'Q', 'P', 0,
  /* 11237 */ 'X', 'S', 'N', 'E', 'G', 'Q', 'P', 0,
  /* 11245 */ 'X', 'S', 'X', 'S', 'I', 'G', 'Q', 'P', 0,
  /* 11254 */ 'X', 'S', 'M', 'U', 'L', 'Q', 'P', 0,
  /* 11262 */ 'X', 'S', 'C', 'P', 'S', 'G', 'N', 'Q', 'P', 0,
  /* 11272 */ 'X', 'S', 'C', 'M', 'P', 'O', 'Q', 'P', 0,
  /* 11281 */ 'X', 'S', 'C', 'V', 'D', 'P', 'Q', 'P', 0,
  /* 11290 */ 'X', 'S', 'I', 'E', 'X', 'P', 'Q', 'P', 0,
  /* 11299 */ 'X', 'S', 'C', 'M', 'P', 'E', 'X', 'P', 'Q', 'P', 0,
  /* 11310 */ 'X', 'S', 'X', 'E', 'X', 'P', 'Q', 'P', 0,
  /* 11319 */ 'X', 'S', 'C', 'V', 'S', 'Q', 'Q', 'P', 0,
  /* 11328 */ 'X', 'S', 'C', 'V', 'U', 'Q', 'Q', 'P', 0,
  /* 11337 */ 'X', 'S', 'N', 'A', 'B', 'S', 'Q', 'P', 0,
  /* 11346 */ 'X', 'S', 'A', 'B', 'S', 'Q', 'P', 0,
  /* 11354 */ 'X', 'S', 'S', 'Q', 'R', 'T', 'Q', 'P', 0,
  /* 11363 */ 'X', 'S', 'C', 'M', 'P', 'U', 'Q', 'P', 0,
  /* 11372 */ 'X', 'S', 'D', 'I', 'V', 'Q', 'P', 0,
  /* 11380 */ 'X', 'S', 'N', 'M', 'S', 'U', 'B', 'A', 'S', 'P', 0,
  /* 11391 */ 'X', 'V', 'N', 'M', 'S', 'U', 'B', 'A', 'S', 'P', 0,
  /* 11402 */ 'X', 'S', 'M', 'S', 'U', 'B', 'A', 'S', 'P', 0,
  /* 11412 */ 'X', 'V', 'M', 'S', 'U', 'B', 'A', 'S', 'P', 0,
  /* 11422 */ 'X', 'S', 'N', 'M', 'A', 'D', 'D', 'A', 'S', 'P', 0,
  /* 11433 */ 'X', 'V', 'N', 'M', 'A', 'D', 'D', 'A', 'S', 'P', 0,
  /* 11444 */ 'X', 'S', 'M', 'A', 'D', 'D', 'A', 'S', 'P', 0,
  /* 11454 */ 'X', 'V', 'M', 'A', 'D', 'D', 'A', 'S', 'P', 0,
  /* 11464 */ 'X', 'S', 'S', 'U', 'B', 'S', 'P', 0,
  /* 11472 */ 'X', 'V', 'S', 'U', 'B', 'S', 'P', 0,
  /* 11480 */ 'X', 'S', 'T', 'S', 'T', 'D', 'C', 'S', 'P', 0,
  /* 11490 */ 'X', 'V', 'T', 'S', 'T', 'D', 'C', 'S', 'P', 0,
  /* 11500 */ 'X', 'S', 'A', 'D', 'D', 'S', 'P', 0,
  /* 11508 */ 'X', 'V', 'A', 'D', 'D', 'S', 'P', 0,
  /* 11516 */ 'X', 'S', 'C', 'V', 'S', 'X', 'D', 'S', 'P', 0,
  /* 11526 */ 'X', 'V', 'C', 'V', 'S', 'X', 'D', 'S', 'P', 0,
  /* 11536 */ 'X', 'S', 'C', 'V', 'U', 'X', 'D', 'S', 'P', 0,
  /* 11546 */ 'X', 'V', 'C', 'V', 'U', 'X', 'D', 'S', 'P', 0,
  /* 11556 */ 'X', 'V', 'C', 'M', 'P', 'G', 'E', 'S', 'P', 0,
  /* 11566 */ 'X', 'S', 'R', 'E', 'S', 'P', 0,
  /* 11573 */ 'X', 'V', 'R', 'E', 'S', 'P', 0,
  /* 11580 */ 'X', 'S', 'R', 'S', 'Q', 'R', 'T', 'E', 'S', 'P', 0,
  /* 11591 */ 'X', 'V', 'R', 'S', 'Q', 'R', 'T', 'E', 'S', 'P', 0,
  /* 11602 */ 'X', 'V', 'N', 'E', 'G', 'S', 'P', 0,
  /* 11610 */ 'X', 'V', 'X', 'S', 'I', 'G', 'S', 'P', 0,
  /* 11619 */ 'X', 'S', 'M', 'U', 'L', 'S', 'P', 0,
  /* 11627 */ 'X', 'V', 'M', 'U', 'L', 'S', 'P', 0,
  /* 11635 */ 'X', 'S', 'N', 'M', 'S', 'U', 'B', 'M', 'S', 'P', 0,
  /* 11646 */ 'X', 'V', 'N', 'M', 'S', 'U', 'B', 'M', 'S', 'P', 0,
  /* 11657 */ 'X', 'S', 'M', 'S', 'U', 'B', 'M', 'S', 'P', 0,
  /* 11667 */ 'X', 'V', 'M', 'S', 'U', 'B', 'M', 'S', 'P', 0,
  /* 11677 */ 'X', 'S', 'N', 'M', 'A', 'D', 'D', 'M', 'S', 'P', 0,
  /* 11688 */ 'X', 'V', 'N', 'M', 'A', 'D', 'D', 'M', 'S', 'P', 0,
  /* 11699 */ 'X', 'S', 'M', 'A', 'D', 'D', 'M', 'S', 'P', 0,
  /* 11709 */ 'X', 'V', 'M', 'A', 'D', 'D', 'M', 'S', 'P', 0,
  /* 11719 */ 'X', 'V', 'C', 'P', 'S', 'G', 'N', 'S', 'P', 0,
  /* 11729 */ 'X', 'V', 'M', 'I', 'N', 'S', 'P', 0,
  /* 11737 */ 'X', 'S', 'C', 'V', 'D', 'P', 'S', 'P', 0,
  /* 11746 */ 'X', 'V', 'C', 'V', 'D', 'P', 'S', 'P', 0,
  /* 11755 */ 'X', 'V', 'C', 'V', 'H', 'P', 'S', 'P', 0,
  /* 11764 */ 'X', 'V', 'I', 'E', 'X', 'P', 'S', 'P', 0,
  /* 11773 */ 'X', 'V', 'X', 'E', 'X', 'P', 'S', 'P', 0,
  /* 11782 */ 'X', 'V', 'C', 'M', 'P', 'E', 'Q', 'S', 'P', 0,
  /* 11792 */ 'F', 'R', 'S', 'P', 0,
  /* 11797 */ 'X', 'S', 'R', 'S', 'P', 0,
  /* 11803 */ 'X', 'V', 'N', 'A', 'B', 'S', 'S', 'P', 0,
  /* 11812 */ 'X', 'V', 'A', 'B', 'S', 'S', 'P', 0,
  /* 11820 */ 'P', 'L', 'X', 'S', 'S', 'P', 0,
  /* 11827 */ 'P', 'S', 'T', 'X', 'S', 'S', 'P', 0,
  /* 11835 */ 'X', 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'P', 0,
  /* 11845 */ 'X', 'S', 'S', 'Q', 'R', 'T', 'S', 'P', 0,
  /* 11854 */ 'X', 'V', 'T', 'S', 'Q', 'R', 'T', 'S', 'P', 0,
  /* 11864 */ 'X', 'V', 'S', 'Q', 'R', 'T', 'S', 'P', 0,
  /* 11873 */ 'X', 'S', 'D', 'I', 'V', 'S', 'P', 0,
  /* 11881 */ 'X', 'V', 'T', 'D', 'I', 'V', 'S', 'P', 0,
  /* 11890 */ 'X', 'V', 'D', 'I', 'V', 'S', 'P', 0,
  /* 11898 */ 'X', 'V', 'C', 'V', 'S', 'X', 'W', 'S', 'P', 0,
  /* 11908 */ 'X', 'V', 'C', 'V', 'U', 'X', 'W', 'S', 'P', 0,
  /* 11918 */ 'X', 'V', 'M', 'A', 'X', 'S', 'P', 0,
  /* 11926 */ 'H', 'A', 'S', 'H', 'S', 'T', 'P', 0,
  /* 11934 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'U', 'P', 0,
  /* 11949 */ 'P', 'R', 'E', 'A', 'L', 'L', 'O', 'C', 'A', 'T', 'E', 'D', '_', 'S', 'E', 'T', 'U', 'P', 0,
  /* 11968 */ 'P', 'L', 'X', 'V', 'P', 0,
  /* 11974 */ 'P', 'S', 'T', 'X', 'V', 'P', 0,
  /* 11981 */ 'G', '_', 'F', 'E', 'X', 'P', 0,
  /* 11988 */ 'X', 'S', 'R', 'Q', 'P', 'X', 'P', 0,
  /* 11996 */ 'V', 'E', 'X', 'T', 'S', 'D', '2', 'Q', 0,
  /* 12005 */ 'V', 'S', 'R', 'A', 'Q', 0,
  /* 12011 */ 'V', 'P', 'R', 'T', 'Y', 'B', 'Q', 0,
  /* 12019 */ 'E', 'F', 'D', 'C', 'M', 'P', 'E', 'Q', 0,
  /* 12028 */ 'E', 'F', 'S', 'C', 'M', 'P', 'E', 'Q', 0,
  /* 12037 */ 'E', 'V', 'F', 'S', 'C', 'M', 'P', 'E', 'Q', 0,
  /* 12047 */ 'E', 'V', 'C', 'M', 'P', 'E', 'Q', 0,
  /* 12055 */ 'E', 'F', 'D', 'T', 'S', 'T', 'E', 'Q', 0,
  /* 12064 */ 'E', 'F', 'S', 'T', 'S', 'T', 'E', 'Q', 0,
  /* 12073 */ 'E', 'V', 'F', 'S', 'T', 'S', 'T', 'E', 'Q', 0,
  /* 12083 */ 'L', 'X', 'V', 'K', 'Q', 0,
  /* 12089 */ 'I', 'C', 'B', 'L', 'Q', 0,
  /* 12095 */ 'V', 'R', 'L', 'Q', 0,
  /* 12100 */ 'V', 'S', 'L', 'Q', 0,
  /* 12105 */ 'V', 'B', 'P', 'E', 'R', 'M', 'Q', 0,
  /* 12113 */ 'X', 'X', 'B', 'R', 'Q', 0,
  /* 12119 */ 'V', 'S', 'R', 'Q', 0,
  /* 12124 */ 'V', 'M', 'O', 'D', 'S', 'Q', 0,
  /* 12131 */ 'V', 'D', 'I', 'V', 'E', 'S', 'Q', 0,
  /* 12139 */ 'V', 'C', 'M', 'P', 'S', 'Q', 0,
  /* 12146 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'Q', 0,
  /* 12155 */ 'V', 'D', 'I', 'V', 'S', 'Q', 0,
  /* 12162 */ 'S', 'T', 'Q', 0,
  /* 12166 */ 'V', 'M', 'U', 'L', '1', '0', 'U', 'Q', 0,
  /* 12175 */ 'V', 'M', 'U', 'L', '1', '0', 'C', 'U', 'Q', 0,
  /* 12185 */ 'V', 'S', 'U', 'B', 'C', 'U', 'Q', 0,
  /* 12193 */ 'V', 'A', 'D', 'D', 'C', 'U', 'Q', 0,
  /* 12201 */ 'V', 'M', 'U', 'L', '1', '0', 'E', 'C', 'U', 'Q', 0,
  /* 12212 */ 'V', 'S', 'U', 'B', 'E', 'C', 'U', 'Q', 0,
  /* 12221 */ 'V', 'A', 'D', 'D', 'E', 'C', 'U', 'Q', 0,
  /* 12230 */ 'V', 'M', 'O', 'D', 'U', 'Q', 0,
  /* 12237 */ 'V', 'M', 'U', 'L', '1', '0', 'E', 'U', 'Q', 0,
  /* 12247 */ 'V', 'D', 'I', 'V', 'E', 'U', 'Q', 0,
  /* 12255 */ 'V', 'C', 'M', 'P', 'U', 'Q', 0,
  /* 12262 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'Q', 0,
  /* 12271 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'Q', 0,
  /* 12280 */ 'V', 'D', 'I', 'V', 'U', 'Q', 0,
  /* 12287 */ 'M', 'B', 'A', 'R', 0,
  /* 12292 */ 'U', 'p', 'd', 'a', 't', 'e', 'G', 'B', 'R', 0,
  /* 12302 */ 'V', 'S', 'T', 'R', 'I', 'B', 'R', 0,
  /* 12310 */ 'G', '_', 'B', 'R', 0,
  /* 12315 */ 'I', 'N', 'L', 'I', 'N', 'E', 'A', 'S', 'M', '_', 'B', 'R', 0,
  /* 12328 */ 'S', 'E', 'T', 'N', 'B', 'C', 'R', 0,
  /* 12336 */ 'S', 'E', 'T', 'B', 'C', 'R', 0,
  /* 12343 */ 'M', 'F', 'D', 'C', 'R', 0,
  /* 12349 */ 'R', 'L', 'D', 'C', 'R', 0,
  /* 12355 */ 'M', 'T', 'D', 'C', 'R', 0,
  /* 12361 */ 'M', 'F', 'C', 'R', 0,
  /* 12366 */ 'R', 'L', 'D', 'I', 'C', 'R', 0,
  /* 12373 */ 'M', 'F', 'U', 'D', 'S', 'C', 'R', 0,
  /* 12381 */ 'M', 'T', 'U', 'D', 'S', 'C', 'R', 0,
  /* 12389 */ 'M', 'F', 'V', 'S', 'C', 'R', 0,
  /* 12396 */ 'M', 'T', 'V', 'S', 'C', 'R', 0,
  /* 12403 */ 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'C', 'R', 0,
  /* 12414 */ 'S', 'P', 'I', 'L', 'L', '_', 'C', 'R', 0,
  /* 12423 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'g', 'd', 'L', 'A', 'D', 'D', 'R', 0,
  /* 12438 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'l', 'd', 'L', 'A', 'D', 'D', 'R', 0,
  /* 12453 */ 'G', '_', 'B', 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', 'R', 0,
  /* 12466 */ 'G', 'E', 'T', 't', 'l', 's', 'l', 'd', 'A', 'D', 'D', 'R', 0,
  /* 12479 */ 'G', 'E', 'T', 't', 'l', 's', 'A', 'D', 'D', 'R', 0,
  /* 12490 */ 'P', 'M', 'X', 'V', 'F', '3', '2', 'G', 'E', 'R', 0,
  /* 12501 */ 'P', 'M', 'X', 'V', 'F', '6', '4', 'G', 'E', 'R', 0,
  /* 12512 */ 'V', 'N', 'C', 'I', 'P', 'H', 'E', 'R', 0,
  /* 12521 */ 'V', 'C', 'I', 'P', 'H', 'E', 'R', 0,
  /* 12529 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'F', 'U', 'N', 'C', 'T', 'I', 'O', 'N', '_', 'E', 'N', 'T', 'E', 'R', 0,
  /* 12554 */ 'G', '_', 'R', 'E', 'A', 'D', 'C', 'Y', 'C', 'L', 'E', 'C', 'O', 'U', 'N', 'T', 'E', 'R', 0,
  /* 12573 */ 'G', '_', 'R', 'E', 'A', 'D', '_', 'R', 'E', 'G', 'I', 'S', 'T', 'E', 'R', 0,
  /* 12589 */ 'G', '_', 'W', 'R', 'I', 'T', 'E', '_', 'R', 'E', 'G', 'I', 'S', 'T', 'E', 'R', 0,
  /* 12606 */ 'V', 'S', 'T', 'R', 'I', 'H', 'R', 0,
  /* 12614 */ 'G', '_', 'A', 'S', 'H', 'R', 0,
  /* 12621 */ 'G', '_', 'F', 'S', 'H', 'R', 0,
  /* 12628 */ 'G', '_', 'L', 'S', 'H', 'R', 0,
  /* 12635 */ 'K', 'I', 'L', 'L', '_', 'P', 'A', 'I', 'R', 0,
  /* 12645 */ 'B', 'L', 'R', 0,
  /* 12649 */ 'g', 'B', 'C', 'L', 'R', 0,
  /* 12655 */ 'B', 'C', 'C', 'L', 'R', 0,
  /* 12661 */ 'M', 'F', 'L', 'R', 0,
  /* 12666 */ 'M', 'T', 'L', 'R', 0,
  /* 12671 */ 'B', 'D', 'Z', 'L', 'R', 0,
  /* 12677 */ 'B', 'D', 'N', 'Z', 'L', 'R', 0,
  /* 12684 */ 'M', 'o', 'v', 'e', 'P', 'C', 't', 'o', 'L', 'R', 0,
  /* 12695 */ 'M', 'o', 'v', 'e', 'G', 'O', 'T', 't', 'o', 'L', 'R', 0,
  /* 12707 */ 'F', 'M', 'R', 0,
  /* 12711 */ 'M', 'F', 'P', 'M', 'R', 0,
  /* 12717 */ 'M', 'T', 'P', 'M', 'R', 0,
  /* 12723 */ 'V', 'P', 'E', 'R', 'M', 'R', 0,
  /* 12730 */ 'X', 'X', 'P', 'E', 'R', 'M', 'R', 0,
  /* 12738 */ 'X', 'X', 'L', 'O', 'R', 0,
  /* 12744 */ 'X', 'X', 'L', 'N', 'O', 'R', 0,
  /* 12751 */ 'C', 'R', 'N', 'O', 'R', 0,
  /* 12757 */ 'E', 'V', 'N', 'O', 'R', 0,
  /* 12763 */ 'G', '_', 'F', 'F', 'L', 'O', 'O', 'R', 0,
  /* 12772 */ 'C', 'R', 'O', 'R', 0,
  /* 12777 */ 'G', '_', 'B', 'U', 'I', 'L', 'D', '_', 'V', 'E', 'C', 'T', 'O', 'R', 0,
  /* 12792 */ 'G', '_', 'S', 'H', 'U', 'F', 'F', 'L', 'E', '_', 'V', 'E', 'C', 'T', 'O', 'R', 0,
  /* 12809 */ 'E', 'V', 'O', 'R', 0,
  /* 12814 */ 'X', 'X', 'L', 'X', 'O', 'R', 0,
  /* 12821 */ 'V', 'P', 'E', 'R', 'M', 'X', 'O', 'R', 0,
  /* 12830 */ 'C', 'R', 'X', 'O', 'R', 0,
  /* 12836 */ 'E', 'V', 'X', 'O', 'R', 0,
  /* 12842 */ 'G', '_', 'V', 'E', 'C', 'R', 'E', 'D', 'U', 'C', 'E', '_', 'X', 'O', 'R', 0,
  /* 12858 */ 'G', '_', 'X', 'O', 'R', 0,
  /* 12864 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'X', 'O', 'R', 0,
  /* 12880 */ 'G', '_', 'V', 'E', 'C', 'R', 'E', 'D', 'U', 'C', 'E', '_', 'O', 'R', 0,
  /* 12895 */ 'G', '_', 'O', 'R', 0,
  /* 12900 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'O', 'R', 0,
  /* 12915 */ 'M', 'F', 'S', 'P', 'R', 0,
  /* 12921 */ 'M', 'T', 'S', 'P', 'R', 0,
  /* 12927 */ 'M', 'F', 'S', 'R', 0,
  /* 12932 */ 'M', 'F', 'M', 'S', 'R', 0,
  /* 12938 */ 'M', 'T', 'M', 'S', 'R', 0,
  /* 12944 */ 'M', 'T', 'S', 'R', 0,
  /* 12949 */ 'L', 'V', 'S', 'R', 0,
  /* 12954 */ 'T', 'A', 'I', 'L', 'B', 'C', 'T', 'R', 0,
  /* 12963 */ 'g', 'B', 'C', 'C', 'T', 'R', 0,
  /* 12970 */ 'B', 'C', 'C', 'C', 'T', 'R', 0,
  /* 12977 */ 'M', 'F', 'C', 'T', 'R', 0,
  /* 12983 */ 'M', 'T', 'C', 'T', 'R', 0,
  /* 12989 */ 'G', '_', 'R', 'O', 'T', 'R', 0,
  /* 12996 */ 'G', '_', 'I', 'N', 'T', 'T', 'O', 'P', 'T', 'R', 0,
  /* 13007 */ 'P', 'M', 'X', 'V', 'I', '1', '6', 'G', 'E', 'R', '2', 'S', 0,
  /* 13020 */ 'E', 'F', 'D', 'A', 'B', 'S', 0,
  /* 13027 */ 'G', '_', 'F', 'A', 'B', 'S', 0,
  /* 13034 */ 'E', 'F', 'D', 'N', 'A', 'B', 'S', 0,
  /* 13042 */ 'E', 'F', 'S', 'N', 'A', 'B', 'S', 0,
  /* 13050 */ 'E', 'V', 'F', 'S', 'N', 'A', 'B', 'S', 0,
  /* 13059 */ 'E', 'F', 'S', 'A', 'B', 'S', 0,
  /* 13066 */ 'E', 'V', 'F', 'S', 'A', 'B', 'S', 0,
  /* 13074 */ 'E', 'V', 'A', 'B', 'S', 0,
  /* 13080 */ 'G', '_', 'A', 'B', 'S', 0,
  /* 13086 */ 'V', 'S', 'U', 'M', '4', 'S', 'B', 'S', 0,
  /* 13095 */ 'V', 'S', 'U', 'B', 'S', 'B', 'S', 0,
  /* 13103 */ 'V', 'A', 'D', 'D', 'S', 'B', 'S', 0,
  /* 13111 */ 'V', 'S', 'U', 'M', '4', 'U', 'B', 'S', 0,
  /* 13120 */ 'V', 'S', 'U', 'B', 'U', 'B', 'S', 0,
  /* 13128 */ 'V', 'A', 'D', 'D', 'U', 'B', 'S', 0,
  /* 13136 */ 'F', 'S', 'U', 'B', 'S', 0,
  /* 13142 */ 'F', 'M', 'S', 'U', 'B', 'S', 0,
  /* 13149 */ 'F', 'N', 'M', 'S', 'U', 'B', 'S', 0,
  /* 13157 */ 'F', 'A', 'D', 'D', 'S', 0,
  /* 13163 */ 'F', 'M', 'A', 'D', 'D', 'S', 0,
  /* 13170 */ 'F', 'N', 'M', 'A', 'D', 'D', 'S', 0,
  /* 13178 */ 'F', 'C', 'F', 'I', 'D', 'S', 0,
  /* 13185 */ 'D', 'C', 'B', 'T', 'D', 'S', 0,
  /* 13192 */ 'D', 'C', 'B', 'T', 'S', 'T', 'D', 'S', 0,
  /* 13201 */ 'X', 'S', 'C', 'V', 'D', 'P', 'S', 'X', 'D', 'S', 0,
  /* 13212 */ 'X', 'V', 'C', 'V', 'D', 'P', 'S', 'X', 'D', 'S', 0,
  /* 13223 */ 'X', 'V', 'C', 'V', 'S', 'P', 'S', 'X', 'D', 'S', 0,
  /* 13234 */ 'X', 'S', 'C', 'V', 'D', 'P', 'U', 'X', 'D', 'S', 0,
  /* 13245 */ 'X', 'V', 'C', 'V', 'D', 'P', 'U', 'X', 'D', 'S', 0,
  /* 13256 */ 'X', 'V', 'C', 'V', 'S', 'P', 'U', 'X', 'D', 'S', 0,
  /* 13267 */ 'V', '_', 'S', 'E', 'T', 'A', 'L', 'L', 'O', 'N', 'E', 'S', 0,
  /* 13280 */ 'F', 'R', 'E', 'S', 0,
  /* 13285 */ 'F', 'R', 'S', 'Q', 'R', 'T', 'E', 'S', 0,
  /* 13294 */ 'G', '_', 'U', 'N', 'M', 'E', 'R', 'G', 'E', '_', 'V', 'A', 'L', 'U', 'E', 'S', 0,
  /* 13311 */ 'G', '_', 'M', 'E', 'R', 'G', 'E', '_', 'V', 'A', 'L', 'U', 'E', 'S', 0,
  /* 13326 */ 'E', 'F', 'D', 'C', 'F', 'S', 0,
  /* 13333 */ 'M', 'F', 'F', 'S', 0,
  /* 13338 */ 'P', 'L', 'F', 'S', 0,
  /* 13343 */ 'M', 'C', 'R', 'F', 'S', 0,
  /* 13349 */ 'P', 'S', 'T', 'F', 'S', 0,
  /* 13355 */ 'F', 'N', 'E', 'G', 'S', 0,
  /* 13361 */ 'V', 'S', 'U', 'M', '4', 'S', 'H', 'S', 0,
  /* 13370 */ 'V', 'S', 'U', 'B', 'S', 'H', 'S', 0,
  /* 13378 */ 'V', 'M', 'H', 'A', 'D', 'D', 'S', 'H', 'S', 0,
  /* 13388 */ 'V', 'M', 'H', 'R', 'A', 'D', 'D', 'S', 'H', 'S', 0,
  /* 13399 */ 'V', 'A', 'D', 'D', 'S', 'H', 'S', 0,
  /* 13407 */ 'V', 'M', 'S', 'U', 'M', 'S', 'H', 'S', 0,
  /* 13416 */ 'V', 'S', 'U', 'B', 'U', 'H', 'S', 0,
  /* 13424 */ 'V', 'A', 'D', 'D', 'U', 'H', 'S', 0,
  /* 13432 */ 'V', 'M', 'S', 'U', 'M', 'U', 'H', 'S', 0,
  /* 13441 */ 'S', 'U', 'B', 'I', 'S', 0,
  /* 13447 */ 'S', 'U', 'B', 'P', 'C', 'I', 'S', 0,
  /* 13455 */ 'A', 'D', 'D', 'P', 'C', 'I', 'S', 0,
  /* 13463 */ 'A', 'D', 'D', 'I', 'S', 0,
  /* 13469 */ 'L', 'I', 'S', 0,
  /* 13473 */ 'X', 'O', 'R', 'I', 'S', 0,
  /* 13479 */ 'E', 'V', 'S', 'R', 'W', 'I', 'S', 0,
  /* 13487 */ 'F', 'S', 'E', 'L', 'S', 0,
  /* 13493 */ 'A', 'D', 'D', '4', 'T', 'L', 'S', 0,
  /* 13501 */ 'A', 'D', 'D', '8', 'T', 'L', 'S', 0,
  /* 13509 */ 'I', 'C', 'B', 'T', 'L', 'S', 0,
  /* 13516 */ 'S', 'T', 'B', 'X', 'T', 'L', 'S', 0,
  /* 13524 */ 'L', 'D', 'X', 'T', 'L', 'S', 0,
  /* 13531 */ 'S', 'T', 'D', 'X', 'T', 'L', 'S', 0,
  /* 13539 */ 'S', 'T', 'H', 'X', 'T', 'L', 'S', 0,
  /* 13547 */ 'S', 'T', 'W', 'X', 'T', 'L', 'S', 0,
  /* 13555 */ 'L', 'B', 'Z', 'X', 'T', 'L', 'S', 0,
  /* 13563 */ 'L', 'H', 'Z', 'X', 'T', 'L', 'S', 0,
  /* 13571 */ 'L', 'W', 'Z', 'X', 'T', 'L', 'S', 0,
  /* 13579 */ 'B', 'L', '8', '_', 'T', 'L', 'S', 0,
  /* 13587 */ 'B', 'L', '8', '_', 'N', 'O', 'T', 'O', 'C', '_', 'T', 'L', 'S', 0,
  /* 13601 */ 'B', 'L', '_', 'T', 'L', 'S', 0,
  /* 13608 */ 'B', 'L', '8', '_', 'N', 'O', 'P', '_', 'T', 'L', 'S', 0,
  /* 13620 */ 'F', 'M', 'U', 'L', 'S', 0,
  /* 13626 */ 'F', 'R', 'I', 'M', 'S', 0,
  /* 13632 */ 'F', 'C', 'P', 'S', 'G', 'N', 'S', 0,
  /* 13640 */ 'F', 'R', 'I', 'N', 'S', 0,
  /* 13646 */ 'G', '_', 'F', 'C', 'O', 'S', 0,
  /* 13653 */ 'E', 'V', 'L', 'W', 'H', 'O', 'S', 0,
  /* 13661 */ 'F', 'C', 'M', 'P', 'O', 'S', 0,
  /* 13668 */ 'D', 'C', 'B', 'F', 'P', 'S', 0,
  /* 13675 */ 'F', 'R', 'I', 'P', 'S', 0,
  /* 13681 */ 'D', 'C', 'B', 'S', 'T', 'P', 'S', 0,
  /* 13689 */ 'G', '_', 'C', 'O', 'N', 'C', 'A', 'T', '_', 'V', 'E', 'C', 'T', 'O', 'R', 'S', 0,
  /* 13706 */ 'C', 'O', 'P', 'Y', '_', 'T', 'O', '_', 'R', 'E', 'G', 'C', 'L', 'A', 'S', 'S', 0,
  /* 13723 */ 'G', '_', 'I', 'S', '_', 'F', 'P', 'C', 'L', 'A', 'S', 'S', 0,
  /* 13736 */ 'F', 'A', 'B', 'S', 'S', 0,
  /* 13742 */ 'F', 'N', 'A', 'B', 'S', 'S', 0,
  /* 13749 */ 'V', 'P', 'K', 'S', 'D', 'S', 'S', 0,
  /* 13757 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '_', 'W', 'I', 'T', 'H', '_', 'S', 'U', 'C', 'C', 'E', 'S', 'S', 0,
  /* 13787 */ 'V', 'P', 'K', 'S', 'H', 'S', 'S', 0,
  /* 13795 */ 'V', 'P', 'K', 'S', 'W', 'S', 'S', 0,
  /* 13803 */ 'G', '_', 'I', 'N', 'T', 'R', 'I', 'N', 'S', 'I', 'C', '_', 'W', '_', 'S', 'I', 'D', 'E', '_', 'E', 'F', 'F', 'E', 'C', 'T', 'S', 0,
  /* 13830 */ 'E', 'V', 'C', 'M', 'P', 'G', 'T', 'S', 0,
  /* 13839 */ 'E', 'V', 'C', 'M', 'P', 'L', 'T', 'S', 0,
  /* 13848 */ 'F', 'S', 'Q', 'R', 'T', 'S', 0,
  /* 13855 */ 'F', 'C', 'F', 'I', 'D', 'U', 'S', 0,
  /* 13863 */ 'V', 'P', 'K', 'S', 'D', 'U', 'S', 0,
  /* 13871 */ 'V', 'P', 'K', 'U', 'D', 'U', 'S', 0,
  /* 13879 */ 'V', 'P', 'K', 'S', 'H', 'U', 'S', 0,
  /* 13887 */ 'V', 'P', 'K', 'U', 'H', 'U', 'S', 0,
  /* 13895 */ 'F', 'C', 'M', 'P', 'U', 'S', 0,
  /* 13902 */ 'V', 'P', 'K', 'S', 'W', 'U', 'S', 0,
  /* 13910 */ 'V', 'P', 'K', 'U', 'W', 'U', 'S', 0,
  /* 13918 */ 'F', 'D', 'I', 'V', 'S', 0,
  /* 13924 */ 'E', 'V', 'S', 'R', 'W', 'S', 0,
  /* 13931 */ 'M', 'T', 'V', 'S', 'R', 'W', 'S', 0,
  /* 13939 */ 'V', 'S', 'U', 'M', '2', 'S', 'W', 'S', 0,
  /* 13948 */ 'V', 'S', 'U', 'B', 'S', 'W', 'S', 0,
  /* 13956 */ 'V', 'A', 'D', 'D', 'S', 'W', 'S', 0,
  /* 13964 */ 'V', 'S', 'U', 'M', 'S', 'W', 'S', 0,
  /* 13972 */ 'V', 'S', 'U', 'B', 'U', 'W', 'S', 0,
  /* 13980 */ 'V', 'A', 'D', 'D', 'U', 'W', 'S', 0,
  /* 13988 */ 'E', 'V', 'D', 'I', 'V', 'W', 'S', 0,
  /* 13996 */ 'X', 'S', 'C', 'V', 'D', 'P', 'S', 'X', 'W', 'S', 0,
  /* 14007 */ 'X', 'V', 'C', 'V', 'D', 'P', 'S', 'X', 'W', 'S', 0,
  /* 14018 */ 'X', 'V', 'C', 'V', 'S', 'P', 'S', 'X', 'W', 'S', 0,
  /* 14029 */ 'X', 'S', 'C', 'V', 'D', 'P', 'U', 'X', 'W', 'S', 0,
  /* 14040 */ 'X', 'V', 'C', 'V', 'D', 'P', 'U', 'X', 'W', 'S', 0,
  /* 14051 */ 'X', 'V', 'C', 'V', 'S', 'P', 'U', 'X', 'W', 'S', 0,
  /* 14062 */ 'V', 'C', 'T', 'S', 'X', 'S', 0,
  /* 14069 */ 'V', 'C', 'T', 'U', 'X', 'S', 0,
  /* 14076 */ 'F', 'R', 'I', 'Z', 'S', 0,
  /* 14082 */ 'L', 'D', 'A', 'T', 0,
  /* 14087 */ 'S', 'T', 'D', 'A', 'T', 0,
  /* 14093 */ 'E', 'V', 'L', 'H', 'H', 'E', 'S', 'P', 'L', 'A', 'T', 0,
  /* 14105 */ 'E', 'V', 'L', 'W', 'H', 'S', 'P', 'L', 'A', 'T', 0,
  /* 14116 */ 'E', 'V', 'L', 'H', 'H', 'O', 'S', 'S', 'P', 'L', 'A', 'T', 0,
  /* 14129 */ 'E', 'V', 'L', 'H', 'H', 'O', 'U', 'S', 'P', 'L', 'A', 'T', 0,
  /* 14142 */ 'E', 'V', 'L', 'W', 'W', 'S', 'P', 'L', 'A', 'T', 0,
  /* 14153 */ 'G', '_', 'S', 'S', 'U', 'B', 'S', 'A', 'T', 0,
  /* 14163 */ 'G', '_', 'U', 'S', 'U', 'B', 'S', 'A', 'T', 0,
  /* 14173 */ 'G', '_', 'S', 'A', 'D', 'D', 'S', 'A', 'T', 0,
  /* 14183 */ 'G', '_', 'U', 'A', 'D', 'D', 'S', 'A', 'T', 0,
  /* 14193 */ 'G', '_', 'S', 'S', 'H', 'L', 'S', 'A', 'T', 0,
  /* 14203 */ 'G', '_', 'U', 'S', 'H', 'L', 'S', 'A', 'T', 0,
  /* 14213 */ 'G', '_', 'S', 'M', 'U', 'L', 'F', 'I', 'X', 'S', 'A', 'T', 0,
  /* 14226 */ 'G', '_', 'U', 'M', 'U', 'L', 'F', 'I', 'X', 'S', 'A', 'T', 0,
  /* 14239 */ 'G', '_', 'S', 'D', 'I', 'V', 'F', 'I', 'X', 'S', 'A', 'T', 0,
  /* 14252 */ 'G', '_', 'U', 'D', 'I', 'V', 'F', 'I', 'X', 'S', 'A', 'T', 0,
  /* 14265 */ 'L', 'W', 'A', 'T', 0,
  /* 14270 */ 'S', 'T', 'W', 'A', 'T', 0,
  /* 14276 */ 'D', 'C', 'B', 'T', 0,
  /* 14281 */ 'I', 'C', 'B', 'T', 0,
  /* 14286 */ 'G', '_', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 0,
  /* 14296 */ 'G', '_', 'S', 'E', 'L', 'E', 'C', 'T', 0,
  /* 14305 */ 'G', '_', 'B', 'R', 'I', 'N', 'D', 'I', 'R', 'E', 'C', 'T', 0,
  /* 14318 */ 'D', 'C', 'B', 'T', 'C', 'T', 0,
  /* 14325 */ 'D', 'C', 'B', 'T', 'S', 'T', 'C', 'T', 0,
  /* 14334 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'R', 'E', 'T', 0,
  /* 14348 */ 'T', 'C', 'H', 'E', 'C', 'K', '_', 'R', 'E', 'T', 0,
  /* 14359 */ 'T', 'B', 'E', 'G', 'I', 'N', '_', 'R', 'E', 'T', 0,
  /* 14370 */ 'C', 'R', '6', 'S', 'E', 'T', 0,
  /* 14377 */ 'D', 'Y', 'N', 'A', 'R', 'E', 'A', 'O', 'F', 'F', 'S', 'E', 'T', 0,
  /* 14391 */ 'G', '_', 'M', 'E', 'M', 'S', 'E', 'T', 0,
  /* 14400 */ 'C', 'R', '6', 'U', 'N', 'S', 'E', 'T', 0,
  /* 14409 */ 'C', 'R', 'U', 'N', 'S', 'E', 'T', 0,
  /* 14417 */ 'C', 'R', 'S', 'E', 'T', 0,
  /* 14423 */ 'E', 'F', 'D', 'C', 'M', 'P', 'G', 'T', 0,
  /* 14432 */ 'E', 'F', 'S', 'C', 'M', 'P', 'G', 'T', 0,
  /* 14441 */ 'E', 'V', 'F', 'S', 'C', 'M', 'P', 'G', 'T', 0,
  /* 14451 */ 'E', 'F', 'D', 'T', 'S', 'T', 'G', 'T', 0,
  /* 14460 */ 'E', 'F', 'S', 'T', 'S', 'T', 'G', 'T', 0,
  /* 14469 */ 'E', 'V', 'F', 'S', 'T', 'S', 'T', 'G', 'T', 0,
  /* 14479 */ 'W', 'A', 'I', 'T', 0,
  /* 14484 */ 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'C', 'R', 'B', 'I', 'T', 0,
  /* 14498 */ 'S', 'P', 'I', 'L', 'L', '_', 'C', 'R', 'B', 'I', 'T', 0,
  /* 14510 */ 'A', 'N', 'D', 'I', '_', 'r', 'e', 'c', '_', '1', '_', 'E', 'Q', '_', 'B', 'I', 'T', 0,
  /* 14528 */ 'A', 'N', 'D', 'I', '_', 'r', 'e', 'c', '_', '1', '_', 'G', 'T', '_', 'B', 'I', 'T', 0,
  /* 14546 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'F', 'U', 'N', 'C', 'T', 'I', 'O', 'N', '_', 'E', 'X', 'I', 'T', 0,
  /* 14570 */ 'G', '_', 'B', 'R', 'J', 'T', 0,
  /* 14577 */ 'G', '_', 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'V', 'E', 'C', 'T', 'O', 'R', '_', 'E', 'L', 'T', 0,
  /* 14598 */ 'G', '_', 'I', 'N', 'S', 'E', 'R', 'T', '_', 'V', 'E', 'C', 'T', 'O', 'R', '_', 'E', 'L', 'T', 0,
  /* 14618 */ 'E', 'F', 'D', 'C', 'M', 'P', 'L', 'T', 0,
  /* 14627 */ 'E', 'F', 'S', 'C', 'M', 'P', 'L', 'T', 0,
  /* 14636 */ 'E', 'V', 'F', 'S', 'C', 'M', 'P', 'L', 'T', 0,
  /* 14646 */ 'E', 'F', 'D', 'T', 'S', 'T', 'L', 'T', 0,
  /* 14655 */ 'E', 'F', 'S', 'T', 'S', 'T', 'L', 'T', 0,
  /* 14664 */ 'E', 'V', 'F', 'S', 'T', 'S', 'T', 'L', 'T', 0,
  /* 14674 */ 'G', '_', 'F', 'C', 'O', 'N', 'S', 'T', 'A', 'N', 'T', 0,
  /* 14686 */ 'G', '_', 'C', 'O', 'N', 'S', 'T', 'A', 'N', 'T', 0,
  /* 14697 */ 'S', 'T', 'A', 'T', 'E', 'P', 'O', 'I', 'N', 'T', 0,
  /* 14708 */ 'P', 'A', 'T', 'C', 'H', 'P', 'O', 'I', 'N', 'T', 0,
  /* 14719 */ 'G', '_', 'P', 'T', 'R', 'T', 'O', 'I', 'N', 'T', 0,
  /* 14730 */ 'G', '_', 'F', 'R', 'I', 'N', 'T', 0,
  /* 14738 */ 'G', '_', 'I', 'N', 'T', 'R', 'I', 'N', 'S', 'I', 'C', '_', 'L', 'R', 'I', 'N', 'T', 0,
  /* 14756 */ 'G', '_', 'F', 'N', 'E', 'A', 'R', 'B', 'Y', 'I', 'N', 'T', 0,
  /* 14769 */ 'P', 'P', 'C', '3', '2', 'G', 'O', 'T', 0,
  /* 14778 */ 'P', 'P', 'C', '3', '2', 'P', 'I', 'C', 'G', 'O', 'T', 0,
  /* 14790 */ 'L', 'D', 't', 'o', 'c', 'C', 'P', 'T', 0,
  /* 14799 */ 'T', 'R', 'E', 'C', 'H', 'K', 'P', 'T', 0,
  /* 14808 */ 'G', '_', 'V', 'A', 'S', 'T', 'A', 'R', 'T', 0,
  /* 14818 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 14833 */ 'G', '_', 'I', 'N', 'S', 'E', 'R', 'T', 0,
  /* 14842 */ 'T', 'A', 'B', 'O', 'R', 'T', 0,
  /* 14849 */ 'C', 'P', '_', 'A', 'B', 'O', 'R', 'T', 0,
  /* 14858 */ 'G', '_', 'F', 'S', 'Q', 'R', 'T', 0,
  /* 14866 */ 'G', '_', 'S', 'T', 'R', 'I', 'C', 'T', '_', 'F', 'S', 'Q', 'R', 'T', 0,
  /* 14881 */ 'F', 'T', 'S', 'Q', 'R', 'T', 0,
  /* 14888 */ 'G', '_', 'B', 'I', 'T', 'C', 'A', 'S', 'T', 0,
  /* 14898 */ 'G', '_', 'A', 'D', 'D', 'R', 'S', 'P', 'A', 'C', 'E', '_', 'C', 'A', 'S', 'T', 0,
  /* 14915 */ 'V', 'N', 'C', 'I', 'P', 'H', 'E', 'R', 'L', 'A', 'S', 'T', 0,
  /* 14928 */ 'V', 'C', 'I', 'P', 'H', 'E', 'R', 'L', 'A', 'S', 'T', 0,
  /* 14940 */ 'D', 'C', 'B', 'S', 'T', 0,
  /* 14946 */ 'D', 'S', 'T', 0,
  /* 14950 */ 'H', 'A', 'S', 'H', 'S', 'T', 0,
  /* 14957 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', '_', 'L', 'I', 'S', 'T', 0,
  /* 14972 */ 'D', 'C', 'B', 'T', 'S', 'T', 0,
  /* 14979 */ 'D', 'S', 'T', 'S', 'T', 0,
  /* 14985 */ 'S', 'P', 'I', 'L', 'L', 'T', 'O', 'V', 'S', 'R', '_', 'S', 'T', 0,
  /* 14999 */ 'D', 'C', 'B', 'T', 'T', 0,
  /* 15005 */ 'D', 'S', 'T', 'T', 0,
  /* 15010 */ 'D', 'C', 'B', 'T', 'S', 'T', 'T', 0,
  /* 15018 */ 'D', 'S', 'T', 'S', 'T', 'T', 0,
  /* 15025 */ 'G', '_', 'F', 'P', 'E', 'X', 'T', 0,
  /* 15033 */ 'G', '_', 'S', 'E', 'X', 'T', 0,
  /* 15040 */ 'G', '_', 'A', 'S', 'S', 'E', 'R', 'T', '_', 'S', 'E', 'X', 'T', 0,
  /* 15054 */ 'G', '_', 'A', 'N', 'Y', 'E', 'X', 'T', 0,
  /* 15063 */ 'G', '_', 'Z', 'E', 'X', 'T', 0,
  /* 15070 */ 'G', '_', 'A', 'S', 'S', 'E', 'R', 'T', '_', 'Z', 'E', 'X', 'T', 0,
  /* 15084 */ 'L', 'H', 'A', 'U', 0,
  /* 15089 */ 'S', 'T', 'B', 'U', 0,
  /* 15094 */ 'L', 'F', 'D', 'U', 0,
  /* 15099 */ 'S', 'T', 'F', 'D', 'U', 0,
  /* 15105 */ 'M', 'A', 'D', 'D', 'H', 'D', 'U', 0,
  /* 15113 */ 'M', 'U', 'L', 'H', 'D', 'U', 0,
  /* 15120 */ 'F', 'C', 'F', 'I', 'D', 'U', 0,
  /* 15127 */ 'F', 'C', 'T', 'I', 'D', 'U', 0,
  /* 15134 */ 'L', 'D', 'U', 0,
  /* 15138 */ 'S', 'T', 'D', 'U', 0,
  /* 15143 */ 'D', 'I', 'V', 'D', 'U', 0,
  /* 15149 */ 'D', 'I', 'V', 'D', 'E', 'U', 0,
  /* 15156 */ 'D', 'I', 'V', 'W', 'E', 'U', 0,
  /* 15163 */ 'S', 'T', 'H', 'U', 0,
  /* 15168 */ 'E', 'V', 'S', 'R', 'W', 'I', 'U', 0,
  /* 15176 */ 'E', 'V', 'L', 'W', 'H', 'O', 'U', 0,
  /* 15184 */ 'L', 'F', 'S', 'U', 0,
  /* 15189 */ 'S', 'T', 'F', 'S', 'U', 0,
  /* 15195 */ 'E', 'V', 'C', 'M', 'P', 'G', 'T', 'U', 0,
  /* 15204 */ 'E', 'V', 'C', 'M', 'P', 'L', 'T', 'U', 0,
  /* 15213 */ 'M', 'U', 'L', 'H', 'W', 'U', 0,
  /* 15220 */ 'F', 'C', 'T', 'I', 'W', 'U', 0,
  /* 15227 */ 'E', 'V', 'S', 'R', 'W', 'U', 0,
  /* 15234 */ 'S', 'T', 'W', 'U', 0,
  /* 15239 */ 'E', 'V', 'D', 'I', 'V', 'W', 'U', 0,
  /* 15247 */ 'L', 'B', 'Z', 'U', 0,
  /* 15252 */ 'L', 'H', 'Z', 'U', 0,
  /* 15257 */ 'L', 'W', 'Z', 'U', 0,
  /* 15262 */ 'S', 'L', 'B', 'M', 'F', 'E', 'V', 0,
  /* 15270 */ 'E', 'F', 'D', 'D', 'I', 'V', 0,
  /* 15277 */ 'G', '_', 'F', 'D', 'I', 'V', 0,
  /* 15284 */ 'G', '_', 'S', 'T', 'R', 'I', 'C', 'T', '_', 'F', 'D', 'I', 'V', 0,
  /* 15298 */ 'E', 'F', 'S', 'D', 'I', 'V', 0,
  /* 15305 */ 'E', 'V', 'F', 'S', 'D', 'I', 'V', 0,
  /* 15313 */ 'G', '_', 'S', 'D', 'I', 'V', 0,
  /* 15320 */ 'F', 'T', 'D', 'I', 'V', 0,
  /* 15326 */ 'G', '_', 'U', 'D', 'I', 'V', 0,
  /* 15333 */ 'V', 'S', 'L', 'V', 0,
  /* 15338 */ 'X', 'X', 'L', 'E', 'Q', 'V', 0,
  /* 15345 */ 'C', 'R', 'E', 'Q', 'V', 0,
  /* 15351 */ 'E', 'V', 'E', 'Q', 'V', 0,
  /* 15357 */ 'V', 'S', 'R', 'V', 0,
  /* 15362 */ 'P', 'L', 'X', 'V', 0,
  /* 15367 */ 'P', 'S', 'T', 'X', 'V', 0,
  /* 15373 */ 'V', 'E', 'X', 'T', 'S', 'B', '2', 'W', 0,
  /* 15382 */ 'V', 'E', 'X', 'T', 'S', 'H', '2', 'W', 0,
  /* 15391 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'F', 'A', 'A', 'W', 0,
  /* 15403 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'F', 'A', 'A', 'W', 0,
  /* 15415 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'F', 'A', 'A', 'W', 0,
  /* 15427 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'F', 'A', 'A', 'W', 0,
  /* 15439 */ 'E', 'V', 'A', 'D', 'D', 'S', 'M', 'I', 'A', 'A', 'W', 0,
  /* 15451 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'I', 'A', 'A', 'W', 0,
  /* 15463 */ 'E', 'V', 'S', 'U', 'B', 'F', 'S', 'M', 'I', 'A', 'A', 'W', 0,
  /* 15476 */ 'E', 'V', 'M', 'W', 'L', 'S', 'M', 'I', 'A', 'A', 'W', 0,
  /* 15488 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'I', 'A', 'A', 'W', 0,
  /* 15500 */ 'E', 'V', 'A', 'D', 'D', 'U', 'M', 'I', 'A', 'A', 'W', 0,
  /* 15512 */ 'E', 'V', 'M', 'H', 'E', 'U', 'M', 'I', 'A', 'A', 'W', 0,
  /* 15524 */ 'E', 'V', 'S', 'U', 'B', 'F', 'U', 'M', 'I', 'A', 'A', 'W', 0,
  /* 15537 */ 'E', 'V', 'M', 'W', 'L', 'U', 'M', 'I', 'A', 'A', 'W', 0,
  /* 15549 */ 'E', 'V', 'M', 'H', 'O', 'U', 'M', 'I', 'A', 'A', 'W', 0,
  /* 15561 */ 'E', 'V', 'A', 'D', 'D', 'S', 'S', 'I', 'A', 'A', 'W', 0,
  /* 15573 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'I', 'A', 'A', 'W', 0,
  /* 15585 */ 'E', 'V', 'S', 'U', 'B', 'F', 'S', 'S', 'I', 'A', 'A', 'W', 0,
  /* 15598 */ 'E', 'V', 'M', 'W', 'L', 'S', 'S', 'I', 'A', 'A', 'W', 0,
  /* 15610 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'I', 'A', 'A', 'W', 0,
  /* 15622 */ 'E', 'V', 'A', 'D', 'D', 'U', 'S', 'I', 'A', 'A', 'W', 0,
  /* 15634 */ 'E', 'V', 'M', 'H', 'E', 'U', 'S', 'I', 'A', 'A', 'W', 0,
  /* 15646 */ 'E', 'V', 'S', 'U', 'B', 'F', 'U', 'S', 'I', 'A', 'A', 'W', 0,
  /* 15659 */ 'E', 'V', 'M', 'W', 'L', 'U', 'S', 'I', 'A', 'A', 'W', 0,
  /* 15671 */ 'E', 'V', 'M', 'H', 'O', 'U', 'S', 'I', 'A', 'A', 'W', 0,
  /* 15683 */ 'V', 'S', 'H', 'A', 'S', 'I', 'G', 'M', 'A', 'W', 0,
  /* 15694 */ 'V', 'S', 'R', 'A', 'W', 0,
  /* 15700 */ 'V', 'C', 'N', 'T', 'M', 'B', 'W', 0,
  /* 15708 */ 'V', 'P', 'R', 'T', 'Y', 'B', 'W', 0,
  /* 15716 */ 'E', 'V', 'A', 'D', 'D', 'W', 0,
  /* 15723 */ 'E', 'V', 'L', 'D', 'W', 0,
  /* 15729 */ 'E', 'V', 'R', 'N', 'D', 'W', 0,
  /* 15736 */ 'E', 'V', 'S', 'T', 'D', 'W', 0,
  /* 15743 */ 'V', 'M', 'R', 'G', 'E', 'W', 0,
  /* 15750 */ 'V', 'C', 'M', 'P', 'N', 'E', 'W', 0,
  /* 15758 */ 'E', 'V', 'S', 'U', 'B', 'F', 'W', 0,
  /* 15766 */ 'E', 'V', 'S', 'U', 'B', 'I', 'F', 'W', 0,
  /* 15775 */ 'V', 'N', 'E', 'G', 'W', 0,
  /* 15781 */ 'V', 'M', 'R', 'G', 'H', 'W', 0,
  /* 15788 */ 'X', 'X', 'M', 'R', 'G', 'H', 'W', 0,
  /* 15796 */ 'M', 'U', 'L', 'H', 'W', 0,
  /* 15802 */ 'E', 'V', 'A', 'D', 'D', 'I', 'W', 0,
  /* 15810 */ 'F', 'C', 'T', 'I', 'W', 0,
  /* 15816 */ 'X', 'X', 'S', 'P', 'L', 'T', 'I', 'W', 0,
  /* 15825 */ 'V', 'M', 'R', 'G', 'L', 'W', 0,
  /* 15832 */ 'X', 'X', 'M', 'R', 'G', 'L', 'W', 0,
  /* 15840 */ 'M', 'U', 'L', 'L', 'W', 0,
  /* 15846 */ 'C', 'M', 'P', 'L', 'W', 0,
  /* 15852 */ 'E', 'V', 'R', 'L', 'W', 0,
  /* 15858 */ 'E', 'V', 'S', 'L', 'W', 0,
  /* 15864 */ 'L', 'M', 'W', 0,
  /* 15868 */ 'S', 'T', 'M', 'W', 0,
  /* 15873 */ 'V', 'P', 'M', 'S', 'U', 'M', 'W', 0,
  /* 15881 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'F', 'A', 'N', 'W', 0,
  /* 15893 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'F', 'A', 'N', 'W', 0,
  /* 15905 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'F', 'A', 'N', 'W', 0,
  /* 15917 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'F', 'A', 'N', 'W', 0,
  /* 15929 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'I', 'A', 'N', 'W', 0,
  /* 15941 */ 'E', 'V', 'M', 'W', 'L', 'S', 'M', 'I', 'A', 'N', 'W', 0,
  /* 15953 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'I', 'A', 'N', 'W', 0,
  /* 15965 */ 'E', 'V', 'M', 'H', 'E', 'U', 'M', 'I', 'A', 'N', 'W', 0,
  /* 15977 */ 'E', 'V', 'M', 'W', 'L', 'U', 'M', 'I', 'A', 'N', 'W', 0,
  /* 15989 */ 'E', 'V', 'M', 'H', 'O', 'U', 'M', 'I', 'A', 'N', 'W', 0,
  /* 16001 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'I', 'A', 'N', 'W', 0,
  /* 16013 */ 'E', 'V', 'M', 'W', 'L', 'S', 'S', 'I', 'A', 'N', 'W', 0,
  /* 16025 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'I', 'A', 'N', 'W', 0,
  /* 16037 */ 'E', 'V', 'M', 'H', 'E', 'U', 'S', 'I', 'A', 'N', 'W', 0,
  /* 16049 */ 'E', 'V', 'M', 'W', 'L', 'U', 'S', 'I', 'A', 'N', 'W', 0,
  /* 16061 */ 'E', 'V', 'M', 'H', 'O', 'U', 'S', 'I', 'A', 'N', 'W', 0,
  /* 16073 */ 'V', 'M', 'R', 'G', 'O', 'W', 0,
  /* 16080 */ 'G', '_', 'F', 'P', 'O', 'W', 0,
  /* 16087 */ 'C', 'M', 'P', 'W', 0,
  /* 16092 */ 'X', 'X', 'B', 'R', 'W', 0,
  /* 16098 */ 'V', 'S', 'R', 'W', 0,
  /* 16103 */ 'V', 'M', 'O', 'D', 'S', 'W', 0,
  /* 16110 */ 'V', 'M', 'U', 'L', 'E', 'S', 'W', 0,
  /* 16118 */ 'V', 'D', 'I', 'V', 'E', 'S', 'W', 0,
  /* 16126 */ 'V', 'A', 'V', 'G', 'S', 'W', 0,
  /* 16133 */ 'V', 'U', 'P', 'K', 'H', 'S', 'W', 0,
  /* 16141 */ 'V', 'M', 'U', 'L', 'H', 'S', 'W', 0,
  /* 16149 */ 'V', 'S', 'P', 'L', 'T', 'I', 'S', 'W', 0,
  /* 16158 */ 'V', 'U', 'P', 'K', 'L', 'S', 'W', 0,
  /* 16166 */ 'E', 'V', 'C', 'N', 'T', 'L', 'S', 'W', 0,
  /* 16175 */ 'V', 'M', 'I', 'N', 'S', 'W', 0,
  /* 16182 */ 'V', 'I', 'N', 'S', 'W', 0,
  /* 16188 */ 'V', 'M', 'U', 'L', 'O', 'S', 'W', 0,
  /* 16196 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'W', 0,
  /* 16205 */ 'E', 'X', 'T', 'S', 'W', 0,
  /* 16211 */ 'V', 'D', 'I', 'V', 'S', 'W', 0,
  /* 16218 */ 'V', 'M', 'A', 'X', 'S', 'W', 0,
  /* 16225 */ 'V', 'S', 'P', 'L', 'T', 'W', 0,
  /* 16232 */ 'X', 'X', 'S', 'P', 'L', 'T', 'W', 0,
  /* 16240 */ 'V', 'P', 'O', 'P', 'C', 'N', 'T', 'W', 0,
  /* 16249 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'W', 0,
  /* 16258 */ 'X', 'X', 'I', 'N', 'S', 'E', 'R', 'T', 'W', 0,
  /* 16268 */ 'S', 'P', 'E', 'S', 'T', 'W', 0,
  /* 16275 */ 'P', 'S', 'T', 'W', 0,
  /* 16280 */ 'V', 'S', 'U', 'B', 'C', 'U', 'W', 0,
  /* 16288 */ 'V', 'A', 'D', 'D', 'C', 'U', 'W', 0,
  /* 16296 */ 'V', 'M', 'O', 'D', 'U', 'W', 0,
  /* 16303 */ 'V', 'A', 'B', 'S', 'D', 'U', 'W', 0,
  /* 16311 */ 'V', 'M', 'U', 'L', 'E', 'U', 'W', 0,
  /* 16319 */ 'V', 'D', 'I', 'V', 'E', 'U', 'W', 0,
  /* 16327 */ 'V', 'A', 'V', 'G', 'U', 'W', 0,
  /* 16334 */ 'V', 'M', 'U', 'L', 'H', 'U', 'W', 0,
  /* 16342 */ 'V', 'M', 'I', 'N', 'U', 'W', 0,
  /* 16349 */ 'V', 'M', 'U', 'L', 'O', 'U', 'W', 0,
  /* 16357 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'W', 0,
  /* 16366 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'U', 'W', 0,
  /* 16377 */ 'X', 'X', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'U', 'W', 0,
  /* 16389 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'W', 0,
  /* 16398 */ 'V', 'D', 'I', 'V', 'U', 'W', 0,
  /* 16405 */ 'V', 'M', 'A', 'X', 'U', 'W', 0,
  /* 16412 */ 'X', 'X', 'B', 'L', 'E', 'N', 'D', 'V', 'W', 0,
  /* 16422 */ 'D', 'I', 'V', 'W', 0,
  /* 16427 */ 'V', 'C', 'M', 'P', 'N', 'E', 'Z', 'W', 0,
  /* 16436 */ 'V', 'C', 'L', 'Z', 'W', 0,
  /* 16442 */ 'E', 'V', 'C', 'N', 'T', 'L', 'Z', 'W', 0,
  /* 16451 */ 'V', 'C', 'T', 'Z', 'W', 0,
  /* 16457 */ 'C', 'N', 'T', 'T', 'Z', 'W', 0,
  /* 16464 */ 'L', 'X', 'V', 'D', '2', 'X', 0,
  /* 16471 */ 'S', 'T', 'X', 'V', 'D', '2', 'X', 0,
  /* 16479 */ 'L', 'X', 'V', 'W', '4', 'X', 0,
  /* 16486 */ 'S', 'T', 'X', 'V', 'W', '4', 'X', 0,
  /* 16494 */ 'L', 'X', 'V', 'B', '1', '6', 'X', 0,
  /* 16502 */ 'S', 'T', 'X', 'V', 'B', '1', '6', 'X', 0,
  /* 16511 */ 'L', 'X', 'V', 'H', '8', 'X', 0,
  /* 16518 */ 'S', 'T', 'X', 'V', 'H', '8', 'X', 0,
  /* 16526 */ 'L', 'H', 'A', 'X', 0,
  /* 16531 */ 'G', '_', 'V', 'E', 'C', 'R', 'E', 'D', 'U', 'C', 'E', '_', 'F', 'M', 'A', 'X', 0,
  /* 16548 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'F', 'M', 'A', 'X', 0,
  /* 16565 */ 'G', '_', 'V', 'E', 'C', 'R', 'E', 'D', 'U', 'C', 'E', '_', 'S', 'M', 'A', 'X', 0,
  /* 16582 */ 'G', '_', 'S', 'M', 'A', 'X', 0,
  /* 16589 */ 'G', '_', 'V', 'E', 'C', 'R', 'E', 'D', 'U', 'C', 'E', '_', 'U', 'M', 'A', 'X', 0,
  /* 16606 */ 'G', '_', 'U', 'M', 'A', 'X', 0,
  /* 16613 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'U', 'M', 'A', 'X', 0,
  /* 16630 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'M', 'A', 'X', 0,
  /* 16646 */ 'T', 'L', 'B', 'I', 'V', 'A', 'X', 0,
  /* 16654 */ 'L', 'F', 'I', 'W', 'A', 'X', 0,
  /* 16661 */ 'L', 'I', 'W', 'A', 'X', 0,
  /* 16667 */ 'L', 'X', 'S', 'I', 'W', 'A', 'X', 0,
  /* 16675 */ 'L', 'W', 'A', 'X', 0,
  /* 16680 */ 'L', 'V', 'E', 'B', 'X', 0,
  /* 16686 */ 'S', 'T', 'V', 'E', 'B', 'X', 0,
  /* 16693 */ 'S', 'T', 'X', 'S', 'I', 'B', 'X', 0,
  /* 16701 */ 'L', 'X', 'V', 'R', 'B', 'X', 0,
  /* 16708 */ 'S', 'T', 'X', 'V', 'R', 'B', 'X', 0,
  /* 16716 */ 'S', 'T', 'B', 'X', 0,
  /* 16721 */ 'S', 'T', 'B', 'C', 'X', 0,
  /* 16727 */ 'S', 'T', 'D', 'C', 'X', 0,
  /* 16733 */ 'S', 'T', 'H', 'C', 'X', 0,
  /* 16739 */ 'S', 'T', 'Q', 'C', 'X', 0,
  /* 16745 */ 'S', 'T', 'W', 'C', 'X', 0,
  /* 16751 */ 'X', 'X', 'S', 'P', 'L', 'T', 'I', '3', '2', 'D', 'X', 0,
  /* 16763 */ 'E', 'V', 'L', 'D', 'D', 'X', 0,
  /* 16770 */ 'E', 'V', 'S', 'T', 'D', 'D', 'X', 0,
  /* 16778 */ 'L', 'F', 'D', 'X', 0,
  /* 16783 */ 'S', 'T', 'F', 'D', 'X', 0,
  /* 16789 */ 'S', 'P', 'I', 'L', 'L', 'T', 'O', 'V', 'S', 'R', '_', 'L', 'D', 'X', 0,
  /* 16804 */ 'L', 'X', 'V', 'R', 'D', 'X', 0,
  /* 16811 */ 'S', 'T', 'X', 'V', 'R', 'D', 'X', 0,
  /* 16819 */ 'L', 'X', 'S', 'D', 'X', 0,
  /* 16825 */ 'S', 'T', 'X', 'S', 'D', 'X', 0,
  /* 16832 */ 'S', 'T', 'D', 'X', 0,
  /* 16837 */ 'A', 'D', 'D', 'E', 'X', 0,
  /* 16843 */ 'G', '_', 'F', 'R', 'A', 'M', 'E', '_', 'I', 'N', 'D', 'E', 'X', 0,
  /* 16857 */ 'E', 'V', 'L', 'W', 'H', 'E', 'X', 0,
  /* 16865 */ 'E', 'V', 'S', 'T', 'W', 'H', 'E', 'X', 0,
  /* 16874 */ 'E', 'V', 'S', 'T', 'W', 'W', 'E', 'X', 0,
  /* 16883 */ 'G', '_', 'S', 'B', 'F', 'X', 0,
  /* 16890 */ 'G', '_', 'U', 'B', 'F', 'X', 0,
  /* 16897 */ 'E', 'V', 'L', 'D', 'H', 'X', 0,
  /* 16904 */ 'E', 'V', 'S', 'T', 'D', 'H', 'X', 0,
  /* 16912 */ 'L', 'V', 'E', 'H', 'X', 0,
  /* 16918 */ 'S', 'T', 'V', 'E', 'H', 'X', 0,
  /* 16925 */ 'S', 'T', 'X', 'S', 'I', 'H', 'X', 0,
  /* 16933 */ 'L', 'X', 'V', 'R', 'H', 'X', 0,
  /* 16940 */ 'S', 'T', 'X', 'V', 'R', 'H', 'X', 0,
  /* 16948 */ 'S', 'T', 'H', 'X', 0,
  /* 16953 */ 'G', 'E', 'T', 't', 'l', 's', 'A', 'D', 'D', 'R', '3', '2', 'A', 'I', 'X', 0,
  /* 16969 */ 'G', 'E', 'T', 't', 'l', 's', 'A', 'D', 'D', 'R', '6', '4', 'A', 'I', 'X', 0,
  /* 16985 */ 'T', 'L', 'S', 'G', 'D', 'A', 'I', 'X', 0,
  /* 16994 */ 'S', 'T', 'B', 'C', 'I', 'X', 0,
  /* 17001 */ 'L', 'D', 'C', 'I', 'X', 0,
  /* 17007 */ 'S', 'T', 'D', 'C', 'I', 'X', 0,
  /* 17014 */ 'S', 'T', 'H', 'C', 'I', 'X', 0,
  /* 17021 */ 'S', 'T', 'W', 'C', 'I', 'X', 0,
  /* 17028 */ 'L', 'B', 'Z', 'C', 'I', 'X', 0,
  /* 17035 */ 'L', 'H', 'Z', 'C', 'I', 'X', 0,
  /* 17042 */ 'L', 'W', 'Z', 'C', 'I', 'X', 0,
  /* 17049 */ 'G', '_', 'S', 'M', 'U', 'L', 'F', 'I', 'X', 0,
  /* 17059 */ 'G', '_', 'U', 'M', 'U', 'L', 'F', 'I', 'X', 0,
  /* 17069 */ 'G', '_', 'S', 'D', 'I', 'V', 'F', 'I', 'X', 0,
  /* 17079 */ 'G', '_', 'U', 'D', 'I', 'V', 'F', 'I', 'X', 0,
  /* 17089 */ 'X', 'S', 'R', 'Q', 'P', 'I', 'X', 0,
  /* 17097 */ 'V', 'I', 'N', 'S', 'B', 'L', 'X', 0,
  /* 17105 */ 'V', 'E', 'X', 'T', 'U', 'B', 'L', 'X', 0,
  /* 17114 */ 'V', 'I', 'N', 'S', 'D', 'L', 'X', 0,
  /* 17122 */ 'V', 'I', 'N', 'S', 'H', 'L', 'X', 0,
  /* 17130 */ 'V', 'E', 'X', 'T', 'U', 'H', 'L', 'X', 0,
  /* 17139 */ 'V', 'I', 'N', 'S', 'B', 'V', 'L', 'X', 0,
  /* 17148 */ 'V', 'E', 'X', 'T', 'D', 'U', 'B', 'V', 'L', 'X', 0,
  /* 17159 */ 'V', 'E', 'X', 'T', 'D', 'D', 'V', 'L', 'X', 0,
  /* 17169 */ 'V', 'I', 'N', 'S', 'H', 'V', 'L', 'X', 0,
  /* 17178 */ 'V', 'E', 'X', 'T', 'D', 'U', 'H', 'V', 'L', 'X', 0,
  /* 17189 */ 'V', 'I', 'N', 'S', 'W', 'V', 'L', 'X', 0,
  /* 17198 */ 'V', 'E', 'X', 'T', 'D', 'U', 'W', 'V', 'L', 'X', 0,
  /* 17209 */ 'V', 'I', 'N', 'S', 'W', 'L', 'X', 0,
  /* 17217 */ 'V', 'E', 'X', 'T', 'U', 'W', 'L', 'X', 0,
  /* 17226 */ 'X', 'X', 'P', 'E', 'R', 'M', 'X', 0,
  /* 17234 */ 'V', 'S', 'B', 'O', 'X', 0,
  /* 17240 */ 'E', 'V', 'S', 'T', 'W', 'H', 'O', 'X', 0,
  /* 17249 */ 'E', 'V', 'S', 'T', 'W', 'W', 'O', 'X', 0,
  /* 17258 */ 'L', 'B', 'E', 'P', 'X', 0,
  /* 17264 */ 'S', 'T', 'B', 'E', 'P', 'X', 0,
  /* 17271 */ 'L', 'F', 'D', 'E', 'P', 'X', 0,
  /* 17278 */ 'S', 'T', 'F', 'D', 'E', 'P', 'X', 0,
  /* 17286 */ 'L', 'H', 'E', 'P', 'X', 0,
  /* 17292 */ 'S', 'T', 'H', 'E', 'P', 'X', 0,
  /* 17299 */ 'L', 'W', 'E', 'P', 'X', 0,
  /* 17305 */ 'S', 'T', 'W', 'E', 'P', 'X', 0,
  /* 17312 */ 'V', 'U', 'P', 'K', 'H', 'P', 'X', 0,
  /* 17320 */ 'V', 'P', 'K', 'P', 'X', 0,
  /* 17326 */ 'V', 'U', 'P', 'K', 'L', 'P', 'X', 0,
  /* 17334 */ 'L', 'X', 'S', 'S', 'P', 'X', 0,
  /* 17341 */ 'S', 'T', 'X', 'S', 'S', 'P', 'X', 0,
  /* 17349 */ 'L', 'X', 'V', 'P', 'X', 0,
  /* 17355 */ 'S', 'T', 'X', 'V', 'P', 'X', 0,
  /* 17362 */ 'L', 'B', 'A', 'R', 'X', 0,
  /* 17368 */ 'L', 'D', 'A', 'R', 'X', 0,
  /* 17374 */ 'L', 'H', 'A', 'R', 'X', 0,
  /* 17380 */ 'L', 'Q', 'A', 'R', 'X', 0,
  /* 17386 */ 'L', 'W', 'A', 'R', 'X', 0,
  /* 17392 */ 'L', 'D', 'B', 'R', 'X', 0,
  /* 17398 */ 'S', 'T', 'D', 'B', 'R', 'X', 0,
  /* 17405 */ 'L', 'H', 'B', 'R', 'X', 0,
  /* 17411 */ 'S', 'T', 'H', 'B', 'R', 'X', 0,
  /* 17418 */ 'V', 'I', 'N', 'S', 'B', 'R', 'X', 0,
  /* 17426 */ 'V', 'E', 'X', 'T', 'U', 'B', 'R', 'X', 0,
  /* 17435 */ 'L', 'W', 'B', 'R', 'X', 0,
  /* 17441 */ 'S', 'T', 'W', 'B', 'R', 'X', 0,
  /* 17448 */ 'V', 'I', 'N', 'S', 'D', 'R', 'X', 0,
  /* 17456 */ 'V', 'I', 'N', 'S', 'H', 'R', 'X', 0,
  /* 17464 */ 'V', 'E', 'X', 'T', 'U', 'H', 'R', 'X', 0,
  /* 17473 */ 'V', 'I', 'N', 'S', 'B', 'V', 'R', 'X', 0,
  /* 17482 */ 'V', 'E', 'X', 'T', 'D', 'U', 'B', 'V', 'R', 'X', 0,
  /* 17493 */ 'V', 'E', 'X', 'T', 'D', 'D', 'V', 'R', 'X', 0,
  /* 17503 */ 'V', 'I', 'N', 'S', 'H', 'V', 'R', 'X', 0,
  /* 17512 */ 'V', 'E', 'X', 'T', 'D', 'U', 'H', 'V', 'R', 'X', 0,
  /* 17523 */ 'V', 'I', 'N', 'S', 'W', 'V', 'R', 'X', 0,
  /* 17532 */ 'V', 'E', 'X', 'T', 'D', 'U', 'W', 'V', 'R', 'X', 0,
  /* 17543 */ 'V', 'I', 'N', 'S', 'W', 'R', 'X', 0,
  /* 17551 */ 'V', 'E', 'X', 'T', 'U', 'W', 'R', 'X', 0,
  /* 17560 */ 'M', 'C', 'R', 'X', 'R', 'X', 0,
  /* 17567 */ 'T', 'L', 'B', 'S', 'X', 0,
  /* 17573 */ 'L', 'X', 'V', 'D', 'S', 'X', 0,
  /* 17580 */ 'V', 'C', 'F', 'S', 'X', 0,
  /* 17586 */ 'L', 'F', 'S', 'X', 0,
  /* 17591 */ 'S', 'T', 'F', 'S', 'X', 0,
  /* 17597 */ 'E', 'V', 'L', 'W', 'H', 'O', 'S', 'X', 0,
  /* 17606 */ 'L', 'X', 'V', 'W', 'S', 'X', 0,
  /* 17613 */ 'E', 'V', 'L', 'H', 'H', 'E', 'S', 'P', 'L', 'A', 'T', 'X', 0,
  /* 17626 */ 'E', 'V', 'L', 'W', 'H', 'S', 'P', 'L', 'A', 'T', 'X', 0,
  /* 17638 */ 'E', 'V', 'L', 'H', 'H', 'O', 'S', 'S', 'P', 'L', 'A', 'T', 'X', 0,
  /* 17652 */ 'E', 'V', 'L', 'H', 'H', 'O', 'U', 'S', 'P', 'L', 'A', 'T', 'X', 0,
  /* 17666 */ 'E', 'V', 'L', 'W', 'W', 'S', 'P', 'L', 'A', 'T', 'X', 0,
  /* 17678 */ 'S', 'P', 'I', 'L', 'L', 'T', 'O', 'V', 'S', 'R', '_', 'S', 'T', 'X', 0,
  /* 17693 */ 'L', 'H', 'A', 'U', 'X', 0,
  /* 17699 */ 'L', 'W', 'A', 'U', 'X', 0,
  /* 17705 */ 'S', 'T', 'B', 'U', 'X', 0,
  /* 17711 */ 'L', 'F', 'D', 'U', 'X', 0,
  /* 17717 */ 'S', 'T', 'F', 'D', 'U', 'X', 0,
  /* 17724 */ 'L', 'D', 'U', 'X', 0,
  /* 17729 */ 'S', 'T', 'D', 'U', 'X', 0,
  /* 17735 */ 'V', 'C', 'F', 'U', 'X', 0,
  /* 17741 */ 'S', 'T', 'H', 'U', 'X', 0,
  /* 17747 */ 'E', 'V', 'L', 'W', 'H', 'O', 'U', 'X', 0,
  /* 17756 */ 'L', 'F', 'S', 'U', 'X', 0,
  /* 17762 */ 'S', 'T', 'F', 'S', 'U', 'X', 0,
  /* 17769 */ 'S', 'T', 'W', 'U', 'X', 0,
  /* 17775 */ 'L', 'B', 'Z', 'U', 'X', 0,
  /* 17781 */ 'L', 'H', 'Z', 'U', 'X', 0,
  /* 17787 */ 'L', 'W', 'Z', 'U', 'X', 0,
  /* 17793 */ 'L', 'V', 'X', 0,
  /* 17797 */ 'S', 'T', 'V', 'X', 0,
  /* 17802 */ 'L', 'X', 'V', 'X', 0,
  /* 17807 */ 'S', 'T', 'X', 'V', 'X', 0,
  /* 17813 */ 'E', 'V', 'L', 'D', 'W', 'X', 0,
  /* 17820 */ 'E', 'V', 'S', 'T', 'D', 'W', 'X', 0,
  /* 17828 */ 'L', 'V', 'E', 'W', 'X', 0,
  /* 17834 */ 'S', 'T', 'V', 'E', 'W', 'X', 0,
  /* 17841 */ 'S', 'T', 'F', 'I', 'W', 'X', 0,
  /* 17848 */ 'S', 'T', 'X', 'S', 'I', 'W', 'X', 0,
  /* 17856 */ 'S', 'T', 'I', 'W', 'X', 0,
  /* 17862 */ 'L', 'X', 'V', 'R', 'W', 'X', 0,
  /* 17869 */ 'S', 'T', 'X', 'V', 'R', 'W', 'X', 0,
  /* 17877 */ 'S', 'P', 'E', 'S', 'T', 'W', 'X', 0,
  /* 17885 */ 'L', 'X', 'S', 'I', 'B', 'Z', 'X', 0,
  /* 17893 */ 'L', 'B', 'Z', 'X', 0,
  /* 17898 */ 'L', 'X', 'S', 'I', 'H', 'Z', 'X', 0,
  /* 17906 */ 'L', 'H', 'Z', 'X', 0,
  /* 17911 */ 'L', 'F', 'I', 'W', 'Z', 'X', 0,
  /* 17918 */ 'L', 'I', 'W', 'Z', 'X', 0,
  /* 17924 */ 'L', 'X', 'S', 'I', 'W', 'Z', 'X', 0,
  /* 17932 */ 'S', 'P', 'E', 'L', 'W', 'Z', 'X', 0,
  /* 17940 */ 'G', '_', 'M', 'E', 'M', 'C', 'P', 'Y', 0,
  /* 17949 */ 'C', 'P', '_', 'C', 'O', 'P', 'Y', 0,
  /* 17957 */ 'D', 'C', 'B', 'Z', 0,
  /* 17962 */ 'P', 'L', 'B', 'Z', 0,
  /* 17967 */ 'X', 'X', 'S', 'E', 'T', 'A', 'C', 'C', 'Z', 0,
  /* 17977 */ 'B', 'D', 'Z', 0,
  /* 17981 */ 'E', 'F', 'D', 'C', 'T', 'S', 'I', 'D', 'Z', 0,
  /* 17991 */ 'F', 'C', 'T', 'I', 'D', 'Z', 0,
  /* 17998 */ 'E', 'F', 'D', 'C', 'T', 'U', 'I', 'D', 'Z', 0,
  /* 18008 */ 'X', 'S', 'C', 'V', 'Q', 'P', 'S', 'D', 'Z', 0,
  /* 18018 */ 'X', 'S', 'C', 'V', 'Q', 'P', 'U', 'D', 'Z', 0,
  /* 18028 */ 'P', 'L', 'H', 'Z', 0,
  /* 18033 */ 'V', 'R', 'F', 'I', 'Z', 0,
  /* 18039 */ 'X', 'S', 'R', 'D', 'P', 'I', 'Z', 0,
  /* 18047 */ 'X', 'V', 'R', 'D', 'P', 'I', 'Z', 0,
  /* 18055 */ 'X', 'V', 'R', 'S', 'P', 'I', 'Z', 0,
  /* 18063 */ 'E', 'F', 'D', 'C', 'T', 'S', 'I', 'Z', 0,
  /* 18072 */ 'E', 'F', 'S', 'C', 'T', 'S', 'I', 'Z', 0,
  /* 18081 */ 'E', 'V', 'F', 'S', 'C', 'T', 'S', 'I', 'Z', 0,
  /* 18091 */ 'E', 'F', 'D', 'C', 'T', 'U', 'I', 'Z', 0,
  /* 18100 */ 'E', 'F', 'S', 'C', 'T', 'U', 'I', 'Z', 0,
  /* 18109 */ 'E', 'V', 'F', 'S', 'C', 'T', 'U', 'I', 'Z', 0,
  /* 18119 */ 'G', '_', 'C', 'T', 'L', 'Z', 0,
  /* 18126 */ 'B', 'D', 'N', 'Z', 0,
  /* 18131 */ 'X', 'S', 'C', 'V', 'Q', 'P', 'S', 'Q', 'Z', 0,
  /* 18141 */ 'X', 'S', 'C', 'V', 'Q', 'P', 'U', 'Q', 'Z', 0,
  /* 18151 */ 'G', '_', 'C', 'T', 'T', 'Z', 0,
  /* 18158 */ 'F', 'C', 'T', 'I', 'D', 'U', 'Z', 0,
  /* 18166 */ 'F', 'C', 'T', 'I', 'W', 'U', 'Z', 0,
  /* 18174 */ 'F', 'C', 'T', 'I', 'W', 'Z', 0,
  /* 18181 */ 'S', 'P', 'E', 'L', 'W', 'Z', 0,
  /* 18188 */ 'P', 'L', 'W', 'Z', 0,
  /* 18193 */ 'M', 'F', 'V', 'S', 'R', 'W', 'Z', 0,
  /* 18201 */ 'M', 'T', 'V', 'S', 'R', 'W', 'Z', 0,
  /* 18209 */ 'M', 'F', 'V', 'R', 'W', 'Z', 0,
  /* 18216 */ 'M', 'T', 'V', 'R', 'W', 'Z', 0,
  /* 18223 */ 'X', 'S', 'C', 'V', 'Q', 'P', 'S', 'W', 'Z', 0,
  /* 18233 */ 'X', 'S', 'C', 'V', 'Q', 'P', 'U', 'W', 'Z', 0,
  /* 18243 */ 'A', 'D', 'D', '8', 'T', 'L', 'S', '_', 0,
  /* 18252 */ 'S', 'T', 'B', 'X', 'T', 'L', 'S', '_', 0,
  /* 18261 */ 'L', 'D', 'X', 'T', 'L', 'S', '_', 0,
  /* 18269 */ 'S', 'T', 'D', 'X', 'T', 'L', 'S', '_', 0,
  /* 18278 */ 'S', 'T', 'H', 'X', 'T', 'L', 'S', '_', 0,
  /* 18287 */ 'S', 'T', 'W', 'X', 'T', 'L', 'S', '_', 0,
  /* 18296 */ 'L', 'B', 'Z', 'X', 'T', 'L', 'S', '_', 0,
  /* 18305 */ 'L', 'H', 'Z', 'X', 'T', 'L', 'S', '_', 0,
  /* 18314 */ 'L', 'W', 'Z', 'X', 'T', 'L', 'S', '_', 0,
  /* 18323 */ 'B', 'L', '8', '_', 'T', 'L', 'S', '_', 0,
  /* 18332 */ 'M', 'T', 'F', 'S', 'F', 'b', 0,
  /* 18339 */ 'M', 'T', 'F', 'S', 'F', 'I', 'b', 0,
  /* 18347 */ 'R', 'L', 'D', 'I', 'C', 'L', '_', '3', '2', '_', 'r', 'e', 'c', 0,
  /* 18361 */ 'E', 'X', 'T', 'S', 'W', 'S', 'L', 'I', '_', '3', '2', '_', '6', '4', '_', 'r', 'e', 'c', 0,
  /* 18380 */ 'E', 'X', 'T', 'S', 'W', '_', '3', '2', '_', '6', '4', '_', 'r', 'e', 'c', 0,
  /* 18396 */ 'A', 'D', 'D', '4', '_', 'r', 'e', 'c', 0,
  /* 18405 */ 'E', 'X', 'T', 'S', 'B', '8', '_', 'r', 'e', 'c', 0,
  /* 18416 */ 'A', 'D', 'D', 'C', '8', '_', 'r', 'e', 'c', 0,
  /* 18426 */ 'A', 'N', 'D', 'C', '8', '_', 'r', 'e', 'c', 0,
  /* 18436 */ 'S', 'U', 'B', 'F', 'C', '8', '_', 'r', 'e', 'c', 0,
  /* 18447 */ 'O', 'R', 'C', '8', '_', 'r', 'e', 'c', 0,
  /* 18456 */ 'A', 'D', 'D', '8', '_', 'r', 'e', 'c', 0,
  /* 18465 */ 'N', 'A', 'N', 'D', '8', '_', 'r', 'e', 'c', 0,
  /* 18475 */ 'A', 'D', 'D', 'E', '8', '_', 'r', 'e', 'c', 0,
  /* 18485 */ 'S', 'U', 'B', 'F', 'E', '8', '_', 'r', 'e', 'c', 0,
  /* 18496 */ 'A', 'D', 'D', 'M', 'E', '8', '_', 'r', 'e', 'c', 0,
  /* 18507 */ 'S', 'U', 'B', 'F', 'M', 'E', '8', '_', 'r', 'e', 'c', 0,
  /* 18519 */ 'C', 'P', '_', 'P', 'A', 'S', 'T', 'E', '8', '_', 'r', 'e', 'c', 0,
  /* 18533 */ 'A', 'D', 'D', 'Z', 'E', '8', '_', 'r', 'e', 'c', 0,
  /* 18544 */ 'S', 'U', 'B', 'F', 'Z', 'E', '8', '_', 'r', 'e', 'c', 0,
  /* 18556 */ 'S', 'U', 'B', 'F', '8', '_', 'r', 'e', 'c', 0,
  /* 18566 */ 'N', 'E', 'G', '8', '_', 'r', 'e', 'c', 0,
  /* 18575 */ 'E', 'X', 'T', 'S', 'H', '8', '_', 'r', 'e', 'c', 0,
  /* 18586 */ 'A', 'N', 'D', 'I', '8', '_', 'r', 'e', 'c', 0,
  /* 18596 */ 'R', 'L', 'W', 'I', 'M', 'I', '8', '_', 'r', 'e', 'c', 0,
  /* 18608 */ 'R', 'L', 'W', 'I', 'N', 'M', '8', '_', 'r', 'e', 'c', 0,
  /* 18620 */ 'R', 'L', 'W', 'N', 'M', '8', '_', 'r', 'e', 'c', 0,
  /* 18631 */ 'N', 'O', 'R', '8', '_', 'r', 'e', 'c', 0,
  /* 18640 */ 'X', 'O', 'R', '8', '_', 'r', 'e', 'c', 0,
  /* 18649 */ 'A', 'N', 'D', 'I', 'S', '8', '_', 'r', 'e', 'c', 0,
  /* 18660 */ 'E', 'Q', 'V', '8', '_', 'r', 'e', 'c', 0,
  /* 18669 */ 'S', 'L', 'W', '8', '_', 'r', 'e', 'c', 0,
  /* 18678 */ 'S', 'R', 'W', '8', '_', 'r', 'e', 'c', 0,
  /* 18687 */ 'C', 'N', 'T', 'L', 'Z', 'W', '8', '_', 'r', 'e', 'c', 0,
  /* 18699 */ 'C', 'N', 'T', 'T', 'Z', 'W', '8', '_', 'r', 'e', 'c', 0,
  /* 18711 */ 'V', 'C', 'M', 'P', 'N', 'E', 'B', '_', 'r', 'e', 'c', 0,
  /* 18723 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'B', '_', 'r', 'e', 'c', 0,
  /* 18736 */ 'E', 'X', 'T', 'S', 'B', '_', 'r', 'e', 'c', 0,
  /* 18746 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'B', '_', 'r', 'e', 'c', 0,
  /* 18759 */ 'B', 'C', 'D', 'S', 'U', 'B', '_', 'r', 'e', 'c', 0,
  /* 18770 */ 'F', 'S', 'U', 'B', '_', 'r', 'e', 'c', 0,
  /* 18779 */ 'F', 'M', 'S', 'U', 'B', '_', 'r', 'e', 'c', 0,
  /* 18789 */ 'F', 'N', 'M', 'S', 'U', 'B', '_', 'r', 'e', 'c', 0,
  /* 18800 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'B', '_', 'r', 'e', 'c', 0,
  /* 18813 */ 'V', 'C', 'M', 'P', 'N', 'E', 'Z', 'B', '_', 'r', 'e', 'c', 0,
  /* 18826 */ 'A', 'D', 'D', 'C', '_', 'r', 'e', 'c', 0,
  /* 18835 */ 'A', 'N', 'D', 'C', '_', 'r', 'e', 'c', 0,
  /* 18844 */ 'S', 'U', 'B', 'F', 'C', '_', 'r', 'e', 'c', 0,
  /* 18854 */ 'S', 'U', 'B', 'I', 'C', '_', 'r', 'e', 'c', 0,
  /* 18864 */ 'A', 'D', 'D', 'I', 'C', '_', 'r', 'e', 'c', 0,
  /* 18874 */ 'R', 'L', 'D', 'I', 'C', '_', 'r', 'e', 'c', 0,
  /* 18884 */ 'B', 'C', 'D', 'T', 'R', 'U', 'N', 'C', '_', 'r', 'e', 'c', 0,
  /* 18897 */ 'B', 'C', 'D', 'U', 'T', 'R', 'U', 'N', 'C', '_', 'r', 'e', 'c', 0,
  /* 18911 */ 'O', 'R', 'C', '_', 'r', 'e', 'c', 0,
  /* 18919 */ 'S', 'R', 'A', 'D', '_', 'r', 'e', 'c', 0,
  /* 18928 */ 'B', 'C', 'D', 'A', 'D', 'D', '_', 'r', 'e', 'c', 0,
  /* 18939 */ 'F', 'A', 'D', 'D', '_', 'r', 'e', 'c', 0,
  /* 18948 */ 'F', 'M', 'A', 'D', 'D', '_', 'r', 'e', 'c', 0,
  /* 18958 */ 'F', 'N', 'M', 'A', 'D', 'D', '_', 'r', 'e', 'c', 0,
  /* 18969 */ 'F', 'N', 'E', 'G', 'D', '_', 'r', 'e', 'c', 0,
  /* 18979 */ 'M', 'U', 'L', 'H', 'D', '_', 'r', 'e', 'c', 0,
  /* 18989 */ 'F', 'C', 'F', 'I', 'D', '_', 'r', 'e', 'c', 0,
  /* 18999 */ 'F', 'C', 'T', 'I', 'D', '_', 'r', 'e', 'c', 0,
  /* 19009 */ 'F', 'S', 'E', 'L', 'D', '_', 'r', 'e', 'c', 0,
  /* 19019 */ 'M', 'U', 'L', 'L', 'D', '_', 'r', 'e', 'c', 0,
  /* 19029 */ 'S', 'L', 'D', '_', 'r', 'e', 'c', 0,
  /* 19037 */ 'F', 'R', 'I', 'M', 'D', '_', 'r', 'e', 'c', 0,
  /* 19047 */ 'N', 'A', 'N', 'D', '_', 'r', 'e', 'c', 0,
  /* 19056 */ 'F', 'C', 'P', 'S', 'G', 'N', 'D', '_', 'r', 'e', 'c', 0,
  /* 19068 */ 'F', 'R', 'I', 'N', 'D', '_', 'r', 'e', 'c', 0,
  /* 19078 */ 'F', 'R', 'I', 'P', 'D', '_', 'r', 'e', 'c', 0,
  /* 19088 */ 'S', 'R', 'D', '_', 'r', 'e', 'c', 0,
  /* 19096 */ 'F', 'A', 'B', 'S', 'D', '_', 'r', 'e', 'c', 0,
  /* 19106 */ 'F', 'N', 'A', 'B', 'S', 'D', '_', 'r', 'e', 'c', 0,
  /* 19117 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'D', '_', 'r', 'e', 'c', 0,
  /* 19130 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'D', '_', 'r', 'e', 'c', 0,
  /* 19143 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'D', '_', 'r', 'e', 'c', 0,
  /* 19156 */ 'D', 'I', 'V', 'D', '_', 'r', 'e', 'c', 0,
  /* 19165 */ 'F', 'R', 'I', 'Z', 'D', '_', 'r', 'e', 'c', 0,
  /* 19175 */ 'C', 'N', 'T', 'L', 'Z', 'D', '_', 'r', 'e', 'c', 0,
  /* 19186 */ 'C', 'N', 'T', 'T', 'Z', 'D', '_', 'r', 'e', 'c', 0,
  /* 19197 */ 'A', 'D', 'D', 'E', '_', 'r', 'e', 'c', 0,
  /* 19206 */ 'D', 'I', 'V', 'D', 'E', '_', 'r', 'e', 'c', 0,
  /* 19216 */ 'S', 'L', 'B', 'F', 'E', 'E', '_', 'r', 'e', 'c', 0,
  /* 19227 */ 'S', 'U', 'B', 'F', 'E', '_', 'r', 'e', 'c', 0,
  /* 19237 */ 'A', 'D', 'D', 'M', 'E', '_', 'r', 'e', 'c', 0,
  /* 19247 */ 'S', 'U', 'B', 'F', 'M', 'E', '_', 'r', 'e', 'c', 0,
  /* 19258 */ 'F', 'R', 'E', '_', 'r', 'e', 'c', 0,
  /* 19266 */ 'F', 'R', 'S', 'Q', 'R', 'T', 'E', '_', 'r', 'e', 'c', 0,
  /* 19278 */ 'C', 'P', '_', 'P', 'A', 'S', 'T', 'E', '_', 'r', 'e', 'c', 0,
  /* 19291 */ 'D', 'I', 'V', 'W', 'E', '_', 'r', 'e', 'c', 0,
  /* 19301 */ 'A', 'D', 'D', 'Z', 'E', '_', 'r', 'e', 'c', 0,
  /* 19311 */ 'S', 'U', 'B', 'F', 'Z', 'E', '_', 'r', 'e', 'c', 0,
  /* 19322 */ 'S', 'U', 'B', 'F', '_', 'r', 'e', 'c', 0,
  /* 19331 */ 'M', 'T', 'F', 'S', 'F', '_', 'r', 'e', 'c', 0,
  /* 19341 */ 'N', 'E', 'G', '_', 'r', 'e', 'c', 0,
  /* 19349 */ 'V', 'C', 'M', 'P', 'N', 'E', 'H', '_', 'r', 'e', 'c', 0,
  /* 19361 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'H', '_', 'r', 'e', 'c', 0,
  /* 19374 */ 'E', 'X', 'T', 'S', 'H', '_', 'r', 'e', 'c', 0,
  /* 19384 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'H', '_', 'r', 'e', 'c', 0,
  /* 19397 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'H', '_', 'r', 'e', 'c', 0,
  /* 19410 */ 'V', 'C', 'M', 'P', 'N', 'E', 'Z', 'H', '_', 'r', 'e', 'c', 0,
  /* 19423 */ 'S', 'R', 'A', 'D', 'I', '_', 'r', 'e', 'c', 0,
  /* 19433 */ 'C', 'L', 'R', 'L', 'S', 'L', 'D', 'I', '_', 'r', 'e', 'c', 0,
  /* 19446 */ 'E', 'X', 'T', 'L', 'D', 'I', '_', 'r', 'e', 'c', 0,
  /* 19457 */ 'A', 'N', 'D', 'I', '_', 'r', 'e', 'c', 0,
  /* 19466 */ 'C', 'L', 'R', 'R', 'D', 'I', '_', 'r', 'e', 'c', 0,
  /* 19477 */ 'I', 'N', 'S', 'R', 'D', 'I', '_', 'r', 'e', 'c', 0,
  /* 19488 */ 'R', 'O', 'T', 'R', 'D', 'I', '_', 'r', 'e', 'c', 0,
  /* 19499 */ 'E', 'X', 'T', 'R', 'D', 'I', '_', 'r', 'e', 'c', 0,
  /* 19510 */ 'M', 'T', 'F', 'S', 'F', 'I', '_', 'r', 'e', 'c', 0,
  /* 19521 */ 'E', 'X', 'T', 'S', 'W', 'S', 'L', 'I', '_', 'r', 'e', 'c', 0,
  /* 19534 */ 'R', 'L', 'D', 'I', 'M', 'I', '_', 'r', 'e', 'c', 0,
  /* 19545 */ 'R', 'L', 'W', 'I', 'M', 'I', '_', 'r', 'e', 'c', 0,
  /* 19556 */ 'S', 'R', 'A', 'W', 'I', '_', 'r', 'e', 'c', 0,
  /* 19566 */ 'C', 'L', 'R', 'L', 'S', 'L', 'W', 'I', '_', 'r', 'e', 'c', 0,
  /* 19579 */ 'I', 'N', 'S', 'L', 'W', 'I', '_', 'r', 'e', 'c', 0,
  /* 19590 */ 'E', 'X', 'T', 'L', 'W', 'I', '_', 'r', 'e', 'c', 0,
  /* 19601 */ 'C', 'L', 'R', 'R', 'W', 'I', '_', 'r', 'e', 'c', 0,
  /* 19612 */ 'I', 'N', 'S', 'R', 'W', 'I', '_', 'r', 'e', 'c', 0,
  /* 19623 */ 'R', 'O', 'T', 'R', 'W', 'I', '_', 'r', 'e', 'c', 0,
  /* 19634 */ 'E', 'X', 'T', 'R', 'W', 'I', '_', 'r', 'e', 'c', 0,
  /* 19645 */ 'V', 'S', 'T', 'R', 'I', 'B', 'L', '_', 'r', 'e', 'c', 0,
  /* 19657 */ 'R', 'L', 'D', 'C', 'L', '_', 'r', 'e', 'c', 0,
  /* 19667 */ 'R', 'L', 'D', 'I', 'C', 'L', '_', 'r', 'e', 'c', 0,
  /* 19678 */ 'V', 'S', 'T', 'R', 'I', 'H', 'L', '_', 'r', 'e', 'c', 0,
  /* 19690 */ 'F', 'M', 'U', 'L', '_', 'r', 'e', 'c', 0,
  /* 19699 */ 'R', 'L', 'W', 'I', 'N', 'M', '_', 'r', 'e', 'c', 0,
  /* 19710 */ 'R', 'L', 'W', 'N', 'M', '_', 'r', 'e', 'c', 0,
  /* 19720 */ 'B', 'C', 'D', 'C', 'F', 'N', '_', 'r', 'e', 'c', 0,
  /* 19731 */ 'B', 'C', 'D', 'C', 'P', 'S', 'G', 'N', '_', 'r', 'e', 'c', 0,
  /* 19744 */ 'B', 'C', 'D', 'S', 'E', 'T', 'S', 'G', 'N', '_', 'r', 'e', 'c', 0,
  /* 19758 */ 'B', 'C', 'D', 'C', 'T', 'N', '_', 'r', 'e', 'c', 0,
  /* 19769 */ 'A', 'D', 'D', '4', 'O', '_', 'r', 'e', 'c', 0,
  /* 19779 */ 'A', 'D', 'D', 'C', '8', 'O', '_', 'r', 'e', 'c', 0,
  /* 19790 */ 'S', 'U', 'B', 'F', 'C', '8', 'O', '_', 'r', 'e', 'c', 0,
  /* 19802 */ 'A', 'D', 'D', '8', 'O', '_', 'r', 'e', 'c', 0,
  /* 19812 */ 'A', 'D', 'D', 'E', '8', 'O', '_', 'r', 'e', 'c', 0,
  /* 19823 */ 'S', 'U', 'B', 'F', 'E', '8', 'O', '_', 'r', 'e', 'c', 0,
  /* 19835 */ 'A', 'D', 'D', 'M', 'E', '8', 'O', '_', 'r', 'e', 'c', 0,
  /* 19847 */ 'S', 'U', 'B', 'F', 'M', 'E', '8', 'O', '_', 'r', 'e', 'c', 0,
  /* 19860 */ 'A', 'D', 'D', 'Z', 'E', '8', 'O', '_', 'r', 'e', 'c', 0,
  /* 19872 */ 'S', 'U', 'B', 'F', 'Z', 'E', '8', 'O', '_', 'r', 'e', 'c', 0,
  /* 19885 */ 'S', 'U', 'B', 'F', '8', 'O', '_', 'r', 'e', 'c', 0,
  /* 19896 */ 'N', 'E', 'G', '8', 'O', '_', 'r', 'e', 'c', 0,
  /* 19906 */ 'A', 'D', 'D', 'C', 'O', '_', 'r', 'e', 'c', 0,
  /* 19916 */ 'S', 'U', 'B', 'F', 'C', 'O', '_', 'r', 'e', 'c', 0,
  /* 19927 */ 'M', 'U', 'L', 'L', 'D', 'O', '_', 'r', 'e', 'c', 0,
  /* 19938 */ 'D', 'I', 'V', 'D', 'O', '_', 'r', 'e', 'c', 0,
  /* 19948 */ 'A', 'D', 'D', 'E', 'O', '_', 'r', 'e', 'c', 0,
  /* 19958 */ 'D', 'I', 'V', 'D', 'E', 'O', '_', 'r', 'e', 'c', 0,
  /* 19969 */ 'S', 'U', 'B', 'F', 'E', 'O', '_', 'r', 'e', 'c', 0,
  /* 19980 */ 'A', 'D', 'D', 'M', 'E', 'O', '_', 'r', 'e', 'c', 0,
  /* 19991 */ 'S', 'U', 'B', 'F', 'M', 'E', 'O', '_', 'r', 'e', 'c', 0,
  /* 20003 */ 'D', 'I', 'V', 'W', 'E', 'O', '_', 'r', 'e', 'c', 0,
  /* 20014 */ 'A', 'D', 'D', 'Z', 'E', 'O', '_', 'r', 'e', 'c', 0,
  /* 20025 */ 'S', 'U', 'B', 'F', 'Z', 'E', 'O', '_', 'r', 'e', 'c', 0,
  /* 20037 */ 'S', 'U', 'B', 'F', 'O', '_', 'r', 'e', 'c', 0,
  /* 20047 */ 'N', 'E', 'G', 'O', '_', 'r', 'e', 'c', 0,
  /* 20056 */ 'D', 'I', 'V', 'D', 'U', 'O', '_', 'r', 'e', 'c', 0,
  /* 20067 */ 'D', 'I', 'V', 'D', 'E', 'U', 'O', '_', 'r', 'e', 'c', 0,
  /* 20079 */ 'D', 'I', 'V', 'W', 'E', 'U', 'O', '_', 'r', 'e', 'c', 0,
  /* 20091 */ 'D', 'I', 'V', 'W', 'U', 'O', '_', 'r', 'e', 'c', 0,
  /* 20102 */ 'M', 'U', 'L', 'L', 'W', 'O', '_', 'r', 'e', 'c', 0,
  /* 20113 */ 'D', 'I', 'V', 'W', 'O', '_', 'r', 'e', 'c', 0,
  /* 20123 */ 'X', 'V', 'C', 'M', 'P', 'G', 'E', 'D', 'P', '_', 'r', 'e', 'c', 0,
  /* 20137 */ 'X', 'V', 'C', 'M', 'P', 'E', 'Q', 'D', 'P', '_', 'r', 'e', 'c', 0,
  /* 20151 */ 'X', 'V', 'C', 'M', 'P', 'G', 'T', 'D', 'P', '_', 'r', 'e', 'c', 0,
  /* 20165 */ 'V', 'C', 'M', 'P', 'B', 'F', 'P', '_', 'r', 'e', 'c', 0,
  /* 20177 */ 'V', 'C', 'M', 'P', 'G', 'E', 'F', 'P', '_', 'r', 'e', 'c', 0,
  /* 20190 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'F', 'P', '_', 'r', 'e', 'c', 0,
  /* 20203 */ 'V', 'C', 'M', 'P', 'G', 'T', 'F', 'P', '_', 'r', 'e', 'c', 0,
  /* 20216 */ 'X', 'V', 'C', 'M', 'P', 'G', 'E', 'S', 'P', '_', 'r', 'e', 'c', 0,
  /* 20230 */ 'X', 'V', 'C', 'M', 'P', 'E', 'Q', 'S', 'P', '_', 'r', 'e', 'c', 0,
  /* 20244 */ 'F', 'R', 'S', 'P', '_', 'r', 'e', 'c', 0,
  /* 20253 */ 'X', 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'P', '_', 'r', 'e', 'c', 0,
  /* 20267 */ 'B', 'C', 'D', 'C', 'F', 'S', 'Q', '_', 'r', 'e', 'c', 0,
  /* 20279 */ 'B', 'C', 'D', 'C', 'T', 'S', 'Q', '_', 'r', 'e', 'c', 0,
  /* 20291 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'Q', '_', 'r', 'e', 'c', 0,
  /* 20304 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'Q', '_', 'r', 'e', 'c', 0,
  /* 20317 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'Q', '_', 'r', 'e', 'c', 0,
  /* 20330 */ 'V', 'S', 'T', 'R', 'I', 'B', 'R', '_', 'r', 'e', 'c', 0,
  /* 20342 */ 'R', 'L', 'D', 'C', 'R', '_', 'r', 'e', 'c', 0,
  /* 20352 */ 'R', 'L', 'D', 'I', 'C', 'R', '_', 'r', 'e', 'c', 0,
  /* 20363 */ 'V', 'S', 'T', 'R', 'I', 'H', 'R', '_', 'r', 'e', 'c', 0,
  /* 20375 */ 'F', 'M', 'R', '_', 'r', 'e', 'c', 0,
  /* 20383 */ 'N', 'O', 'R', '_', 'r', 'e', 'c', 0,
  /* 20391 */ 'X', 'O', 'R', '_', 'r', 'e', 'c', 0,
  /* 20399 */ 'B', 'C', 'D', 'S', 'R', '_', 'r', 'e', 'c', 0,
  /* 20409 */ 'F', 'S', 'U', 'B', 'S', '_', 'r', 'e', 'c', 0,
  /* 20419 */ 'F', 'M', 'S', 'U', 'B', 'S', '_', 'r', 'e', 'c', 0,
  /* 20430 */ 'F', 'N', 'M', 'S', 'U', 'B', 'S', '_', 'r', 'e', 'c', 0,
  /* 20442 */ 'B', 'C', 'D', 'S', '_', 'r', 'e', 'c', 0,
  /* 20451 */ 'F', 'A', 'D', 'D', 'S', '_', 'r', 'e', 'c', 0,
  /* 20461 */ 'F', 'M', 'A', 'D', 'D', 'S', '_', 'r', 'e', 'c', 0,
  /* 20472 */ 'F', 'N', 'M', 'A', 'D', 'D', 'S', '_', 'r', 'e', 'c', 0,
  /* 20484 */ 'F', 'C', 'F', 'I', 'D', 'S', '_', 'r', 'e', 'c', 0,
  /* 20495 */ 'F', 'R', 'E', 'S', '_', 'r', 'e', 'c', 0,
  /* 20504 */ 'F', 'R', 'S', 'Q', 'R', 'T', 'E', 'S', '_', 'r', 'e', 'c', 0,
  /* 20517 */ 'M', 'F', 'F', 'S', '_', 'r', 'e', 'c', 0,
  /* 20526 */ 'F', 'N', 'E', 'G', 'S', '_', 'r', 'e', 'c', 0,
  /* 20536 */ 'A', 'N', 'D', 'I', 'S', '_', 'r', 'e', 'c', 0,
  /* 20546 */ 'F', 'S', 'E', 'L', 'S', '_', 'r', 'e', 'c', 0,
  /* 20556 */ 'F', 'M', 'U', 'L', 'S', '_', 'r', 'e', 'c', 0,
  /* 20566 */ 'F', 'R', 'I', 'M', 'S', '_', 'r', 'e', 'c', 0,
  /* 20576 */ 'F', 'C', 'P', 'S', 'G', 'N', 'S', '_', 'r', 'e', 'c', 0,
  /* 20588 */ 'F', 'R', 'I', 'N', 'S', '_', 'r', 'e', 'c', 0,
  /* 20598 */ 'F', 'R', 'I', 'P', 'S', '_', 'r', 'e', 'c', 0,
  /* 20608 */ 'F', 'A', 'B', 'S', 'S', '_', 'r', 'e', 'c', 0,
  /* 20618 */ 'F', 'N', 'A', 'B', 'S', 'S', '_', 'r', 'e', 'c', 0,
  /* 20629 */ 'F', 'S', 'Q', 'R', 'T', 'S', '_', 'r', 'e', 'c', 0,
  /* 20640 */ 'B', 'C', 'D', 'U', 'S', '_', 'r', 'e', 'c', 0,
  /* 20650 */ 'F', 'C', 'F', 'I', 'D', 'U', 'S', '_', 'r', 'e', 'c', 0,
  /* 20662 */ 'F', 'D', 'I', 'V', 'S', '_', 'r', 'e', 'c', 0,
  /* 20672 */ 'F', 'R', 'I', 'Z', 'S', '_', 'r', 'e', 'c', 0,
  /* 20682 */ 'F', 'S', 'Q', 'R', 'T', '_', 'r', 'e', 'c', 0,
  /* 20692 */ 'M', 'U', 'L', 'H', 'D', 'U', '_', 'r', 'e', 'c', 0,
  /* 20703 */ 'F', 'C', 'F', 'I', 'D', 'U', '_', 'r', 'e', 'c', 0,
  /* 20714 */ 'F', 'C', 'T', 'I', 'D', 'U', '_', 'r', 'e', 'c', 0,
  /* 20725 */ 'D', 'I', 'V', 'D', 'U', '_', 'r', 'e', 'c', 0,
  /* 20735 */ 'D', 'I', 'V', 'D', 'E', 'U', '_', 'r', 'e', 'c', 0,
  /* 20746 */ 'D', 'I', 'V', 'W', 'E', 'U', '_', 'r', 'e', 'c', 0,
  /* 20757 */ 'M', 'U', 'L', 'H', 'W', 'U', '_', 'r', 'e', 'c', 0,
  /* 20768 */ 'F', 'C', 'T', 'I', 'W', 'U', '_', 'r', 'e', 'c', 0,
  /* 20779 */ 'D', 'I', 'V', 'W', 'U', '_', 'r', 'e', 'c', 0,
  /* 20789 */ 'F', 'D', 'I', 'V', '_', 'r', 'e', 'c', 0,
  /* 20798 */ 'E', 'Q', 'V', '_', 'r', 'e', 'c', 0,
  /* 20806 */ 'S', 'R', 'A', 'W', '_', 'r', 'e', 'c', 0,
  /* 20815 */ 'V', 'C', 'M', 'P', 'N', 'E', 'W', '_', 'r', 'e', 'c', 0,
  /* 20827 */ 'M', 'U', 'L', 'H', 'W', '_', 'r', 'e', 'c', 0,
  /* 20837 */ 'F', 'C', 'T', 'I', 'W', '_', 'r', 'e', 'c', 0,
  /* 20847 */ 'M', 'U', 'L', 'L', 'W', '_', 'r', 'e', 'c', 0,
  /* 20857 */ 'S', 'L', 'W', '_', 'r', 'e', 'c', 0,
  /* 20865 */ 'S', 'R', 'W', '_', 'r', 'e', 'c', 0,
  /* 20873 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'W', '_', 'r', 'e', 'c', 0,
  /* 20886 */ 'E', 'X', 'T', 'S', 'W', '_', 'r', 'e', 'c', 0,
  /* 20896 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'W', '_', 'r', 'e', 'c', 0,
  /* 20909 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'W', '_', 'r', 'e', 'c', 0,
  /* 20922 */ 'D', 'I', 'V', 'W', '_', 'r', 'e', 'c', 0,
  /* 20931 */ 'V', 'C', 'M', 'P', 'N', 'E', 'Z', 'W', '_', 'r', 'e', 'c', 0,
  /* 20944 */ 'C', 'N', 'T', 'L', 'Z', 'W', '_', 'r', 'e', 'c', 0,
  /* 20955 */ 'C', 'N', 'T', 'T', 'Z', 'W', '_', 'r', 'e', 'c', 0,
  /* 20966 */ 'F', 'C', 'T', 'I', 'D', 'Z', '_', 'r', 'e', 'c', 0,
  /* 20977 */ 'B', 'C', 'D', 'C', 'F', 'Z', '_', 'r', 'e', 'c', 0,
  /* 20988 */ 'B', 'C', 'D', 'C', 'T', 'Z', '_', 'r', 'e', 'c', 0,
  /* 20999 */ 'F', 'C', 'T', 'I', 'D', 'U', 'Z', '_', 'r', 'e', 'c', 0,
  /* 21011 */ 'F', 'C', 'T', 'I', 'W', 'U', 'Z', '_', 'r', 'e', 'c', 0,
  /* 21023 */ 'F', 'C', 'T', 'I', 'W', 'Z', '_', 'r', 'e', 'c', 0,
  /* 21034 */ 'R', 'L', 'W', 'I', 'M', 'I', 'b', 'm', '_', 'r', 'e', 'c', 0,
  /* 21047 */ 'R', 'L', 'W', 'I', 'N', 'M', 'b', 'm', '_', 'r', 'e', 'c', 0,
  /* 21060 */ 'R', 'L', 'W', 'N', 'M', 'b', 'm', '_', 'r', 'e', 'c', 0,
  /* 21072 */ 'L', 'D', 't', 'o', 'c', 0,
  /* 21078 */ 'A', 'D', 'D', 'I', 't', 'o', 'c', 0,
  /* 21086 */ 'L', 'W', 'Z', 't', 'o', 'c', 0,
  /* 21093 */ 'B', 'C', 'T', 'R', 'L', '8', '_', 'L', 'D', 'i', 'n', 't', 'o', '_', 't', 'o', 'c', 0,
  /* 21111 */ 'B', 'C', 'T', 'R', 'L', '_', 'L', 'W', 'Z', 'i', 'n', 't', 'o', '_', 't', 'o', 'c', 0,
  /* 21129 */ 'P', 'L', 'H', 'A', '8', 'p', 'c', 0,
  /* 21137 */ 'P', 'L', 'W', 'A', '8', 'p', 'c', 0,
  /* 21145 */ 'P', 'S', 'T', 'B', '8', 'p', 'c', 0,
  /* 21153 */ 'P', 'S', 'T', 'H', '8', 'p', 'c', 0,
  /* 21161 */ 'P', 'A', 'D', 'D', 'I', '8', 'p', 'c', 0,
  /* 21170 */ 'P', 'S', 'T', 'W', '8', 'p', 'c', 0,
  /* 21178 */ 'P', 'L', 'B', 'Z', '8', 'p', 'c', 0,
  /* 21186 */ 'P', 'L', 'H', 'Z', '8', 'p', 'c', 0,
  /* 21194 */ 'P', 'L', 'W', 'Z', '8', 'p', 'c', 0,
  /* 21202 */ 'P', 'L', 'H', 'A', 'p', 'c', 0,
  /* 21209 */ 'P', 'L', 'W', 'A', 'p', 'c', 0,
  /* 21216 */ 'P', 'S', 'T', 'B', 'p', 'c', 0,
  /* 21223 */ 'P', 'L', 'F', 'D', 'p', 'c', 0,
  /* 21230 */ 'P', 'S', 'T', 'F', 'D', 'p', 'c', 0,
  /* 21238 */ 'P', 'L', 'D', 'p', 'c', 0,
  /* 21244 */ 'P', 'L', 'X', 'S', 'D', 'p', 'c', 0,
  /* 21252 */ 'P', 'S', 'T', 'X', 'S', 'D', 'p', 'c', 0,
  /* 21261 */ 'P', 'S', 'T', 'D', 'p', 'c', 0,
  /* 21268 */ 'P', 'S', 'T', 'H', 'p', 'c', 0,
  /* 21275 */ 'P', 'A', 'D', 'D', 'I', 'p', 'c', 0,
  /* 21283 */ 'P', 'L', 'X', 'S', 'S', 'P', 'p', 'c', 0,
  /* 21292 */ 'P', 'S', 'T', 'X', 'S', 'S', 'P', 'p', 'c', 0,
  /* 21302 */ 'P', 'L', 'X', 'V', 'P', 'p', 'c', 0,
  /* 21310 */ 'P', 'S', 'T', 'X', 'V', 'P', 'p', 'c', 0,
  /* 21319 */ 'P', 'L', 'F', 'S', 'p', 'c', 0,
  /* 21326 */ 'P', 'S', 'T', 'F', 'S', 'p', 'c', 0,
  /* 21334 */ 'P', 'L', 'X', 'V', 'p', 'c', 0,
  /* 21341 */ 'P', 'S', 'T', 'X', 'V', 'p', 'c', 0,
  /* 21349 */ 'P', 'S', 'T', 'W', 'p', 'c', 0,
  /* 21356 */ 'P', 'L', 'B', 'Z', 'p', 'c', 0,
  /* 21363 */ 'P', 'L', 'H', 'Z', 'p', 'c', 0,
  /* 21370 */ 'P', 'L', 'W', 'Z', 'p', 'c', 0,
  /* 21377 */ 'X', 'X', 'L', 'O', 'R', 'f', 0,
  /* 21384 */ 'S', 'E', 'T', 'R', 'N', 'D', 'i', 0,
  /* 21392 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'a', 'i', 0,
  /* 21403 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'd', 'i', 0,
  /* 21414 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'r', 'i', 0,
  /* 21425 */ 'P', 'A', 'D', 'D', 'I', 'd', 't', 'p', 'r', 'e', 'l', 0,
  /* 21437 */ 'B', 'D', 'Z', 'L', 'A', 'm', 0,
  /* 21444 */ 'B', 'D', 'N', 'Z', 'L', 'A', 'm', 0,
  /* 21452 */ 'B', 'D', 'Z', 'A', 'm', 0,
  /* 21458 */ 'B', 'D', 'N', 'Z', 'A', 'm', 0,
  /* 21465 */ 'B', 'D', 'Z', 'L', 'R', 'L', 'm', 0,
  /* 21473 */ 'B', 'D', 'N', 'Z', 'L', 'R', 'L', 'm', 0,
  /* 21482 */ 'B', 'D', 'Z', 'L', 'm', 0,
  /* 21488 */ 'B', 'D', 'N', 'Z', 'L', 'm', 0,
  /* 21495 */ 'B', 'D', 'Z', 'L', 'R', 'm', 0,
  /* 21502 */ 'B', 'D', 'N', 'Z', 'L', 'R', 'm', 0,
  /* 21510 */ 'B', 'D', 'Z', 'm', 0,
  /* 21515 */ 'B', 'D', 'N', 'Z', 'm', 0,
  /* 21521 */ 'R', 'L', 'W', 'I', 'M', 'I', 'b', 'm', 0,
  /* 21530 */ 'R', 'L', 'W', 'I', 'N', 'M', 'b', 'm', 0,
  /* 21539 */ 'R', 'L', 'W', 'N', 'M', 'b', 'm', 0,
  /* 21547 */ 'B', 'C', 'C', 'T', 'R', 'L', '8', 'n', 0,
  /* 21556 */ 'B', 'C', 'C', 'T', 'R', '8', 'n', 0,
  /* 21564 */ 'B', 'C', 'n', 0,
  /* 21568 */ 'B', 'C', 'L', 'n', 0,
  /* 21573 */ 'B', 'C', 'L', 'R', 'L', 'n', 0,
  /* 21580 */ 'B', 'C', 'C', 'T', 'R', 'L', 'n', 0,
  /* 21588 */ 'B', 'C', 'L', 'R', 'n', 0,
  /* 21594 */ 'B', 'C', 'C', 'T', 'R', 'n', 0,
  /* 21601 */ 'M', 'T', 'C', 'T', 'R', '8', 'P', 's', 'e', 'u', 'd', 'o', 0,
  /* 21614 */ 'D', 'e', 'c', 'r', 'e', 'a', 's', 'e', 'C', 'T', 'R', '8', 'P', 's', 'e', 'u', 'd', 'o', 0,
  /* 21633 */ 'M', 'T', 'C', 'T', 'R', 'P', 's', 'e', 'u', 'd', 'o', 0,
  /* 21645 */ 'D', 'e', 'c', 'r', 'e', 'a', 's', 'e', 'C', 'T', 'R', 'P', 's', 'e', 'u', 'd', 'o', 0,
  /* 21663 */ 'B', 'D', 'Z', 'L', 'A', 'p', 0,
  /* 21670 */ 'B', 'D', 'N', 'Z', 'L', 'A', 'p', 0,
  /* 21678 */ 'B', 'D', 'Z', 'A', 'p', 0,
  /* 21684 */ 'B', 'D', 'N', 'Z', 'A', 'p', 0,
  /* 21691 */ 'B', 'D', 'Z', 'L', 'R', 'L', 'p', 0,
  /* 21699 */ 'B', 'D', 'N', 'Z', 'L', 'R', 'L', 'p', 0,
  /* 21708 */ 'B', 'D', 'Z', 'L', 'p', 0,
  /* 21714 */ 'B', 'D', 'N', 'Z', 'L', 'p', 0,
  /* 21721 */ 'B', 'D', 'Z', 'L', 'R', 'p', 0,
  /* 21728 */ 'B', 'D', 'N', 'Z', 'L', 'R', 'p', 0,
  /* 21736 */ 'B', 'D', 'Z', 'p', 0,
  /* 21741 */ 'B', 'D', 'N', 'Z', 'p', 0,
  /* 21747 */ 'M', 'T', 'C', 'T', 'R', '8', 'l', 'o', 'o', 'p', 0,
  /* 21758 */ 'M', 'T', 'C', 'T', 'R', 'l', 'o', 'o', 'p', 0,
  /* 21768 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'S', 'e', 't', 'u', 'p', 0,
  /* 21782 */ 'V', 'S', 'P', 'L', 'T', 'B', 's', 0,
  /* 21790 */ 'V', 'E', 'X', 'T', 'S', 'B', '2', 'D', 's', 0,
  /* 21800 */ 'V', 'E', 'X', 'T', 'S', 'H', '2', 'D', 's', 0,
  /* 21810 */ 'V', 'E', 'X', 'T', 'S', 'W', '2', 'D', 's', 0,
  /* 21820 */ 'V', 'S', 'P', 'L', 'T', 'H', 's', 0,
  /* 21828 */ 'X', 'X', 'P', 'E', 'R', 'M', 'D', 'I', 's', 0,
  /* 21838 */ 'X', 'X', 'S', 'L', 'D', 'W', 'I', 's', 0,
  /* 21847 */ 'X', 'S', 'N', 'A', 'B', 'S', 'D', 'P', 's', 0,
  /* 21857 */ 'X', 'S', 'C', 'V', 'D', 'P', 'S', 'X', 'D', 'S', 's', 0,
  /* 21869 */ 'X', 'S', 'C', 'V', 'D', 'P', 'U', 'X', 'D', 'S', 's', 0,
  /* 21881 */ 'X', 'S', 'C', 'V', 'D', 'P', 'S', 'X', 'W', 'S', 's', 0,
  /* 21893 */ 'X', 'S', 'C', 'V', 'D', 'P', 'U', 'X', 'W', 'S', 's', 0,
  /* 21905 */ 'V', 'E', 'X', 'T', 'S', 'B', '2', 'W', 's', 0,
  /* 21915 */ 'V', 'E', 'X', 'T', 'S', 'H', '2', 'W', 's', 0,
  /* 21925 */ 'X', 'X', 'S', 'P', 'L', 'T', 'W', 's', 0,
  /* 21934 */ 'X', 'X', 'L', 'E', 'Q', 'V', 'O', 'n', 'e', 's', 0,
  /* 21945 */ 'B', 'C', 'L', 'a', 'l', 'w', 'a', 'y', 's', 0,
  /* 21955 */ 'g', 'B', 'C', 'A', 'a', 't', 0,
  /* 21962 */ 'g', 'B', 'C', 'L', 'A', 'a', 't', 0,
  /* 21970 */ 'g', 'B', 'C', 'a', 't', 0,
  /* 21976 */ 'g', 'B', 'C', 'L', 'a', 't', 0,
  /* 21983 */ 'M', 'F', 'V', 'R', 'S', 'A', 'V', 'E', 'v', 0,
  /* 21993 */ 'M', 'T', 'V', 'R', 'S', 'A', 'V', 'E', 'v', 0,
  /* 22003 */ 'S', 'T', 'X', 'S', 'I', 'B', 'X', 'v', 0,
  /* 22012 */ 'S', 'T', 'X', 'S', 'I', 'H', 'X', 'v', 0,
  /* 22021 */ 'L', 'A', 'x', 0,
  /* 22025 */ 'D', 'C', 'B', 'F', 'x', 0,
  /* 22031 */ 'D', 'C', 'B', 'T', 'x', 0,
  /* 22037 */ 'D', 'C', 'B', 'T', 'S', 'T', 'x', 0,
  /* 22045 */ 'X', 'X', 'L', 'X', 'O', 'R', 'z', 0,
  /* 22053 */ 'X', 'X', 'L', 'X', 'O', 'R', 'd', 'p', 'z', 0,
  /* 22063 */ 'X', 'X', 'L', 'X', 'O', 'R', 's', 'p', 'z', 0,
  /* 22073 */ 'F', 'A', 'D', 'D', 'r', 't', 'z', 0,
  0
};

extern const unsigned PPCInstrNameIndices[] = {
    7025U, 8727U, 12315U, 9232U, 7569U, 7550U, 7578U, 7795U, 
    6360U, 6375U, 6090U, 6402U, 13706U, 5931U, 14957U, 6103U, 
    7021U, 7559U, 5663U, 17952U, 5795U, 14818U, 5075U, 5606U, 
    5651U, 9854U, 7776U, 14708U, 5206U, 11949U, 6465U, 14697U, 
    5831U, 11001U, 10988U, 12529U, 14334U, 14546U, 7708U, 7755U, 
    7728U, 7602U, 15040U, 15070U, 9001U, 4748U, 3897U, 7984U, 
    15313U, 15326U, 8324U, 8331U, 8338U, 8348U, 5048U, 12895U, 
    12858U, 6088U, 7023U, 16843U, 5941U, 14286U, 13294U, 14833U, 
    13311U, 12777U, 4222U, 13689U, 14719U, 12996U, 14888U, 6010U, 
    5155U, 4196U, 5137U, 14738U, 8979U, 12554U, 4586U, 4530U, 
    4560U, 4571U, 4511U, 4541U, 5895U, 5879U, 13757U, 6416U, 
    6433U, 4764U, 3903U, 5054U, 5003U, 12900U, 12864U, 16630U, 
    9140U, 16613U, 9123U, 4687U, 3852U, 16548U, 9058U, 5643U, 
    5102U, 14305U, 4162U, 13803U, 15054U, 4214U, 14686U, 14674U, 
    14808U, 6457U, 15033U, 6389U, 15063U, 7694U, 12628U, 12614U, 
    7687U, 12621U, 12989U, 7880U, 10875U, 10868U, 14296U, 9505U, 
    5691U, 9476U, 5635U, 9497U, 5683U, 9468U, 5627U, 9684U, 
    9676U, 6557U, 6549U, 14183U, 14173U, 14163U, 14153U, 14203U, 
    14193U, 17049U, 17059U, 14213U, 14226U, 17069U, 17079U, 14239U, 
    14252U, 4645U, 3831U, 7911U, 3422U, 4493U, 15277U, 8303U, 
    16080U, 7430U, 11981U, 740U, 6450U, 732U, 0U, 6332U, 
    15025U, 4186U, 7261U, 7338U, 10761U, 10770U, 13027U, 9016U, 
    13723U, 6026U, 8775U, 8785U, 5705U, 5720U, 8753U, 8764U, 
    4754U, 7502U, 9092U, 16582U, 9116U, 16606U, 13080U, 5128U, 
    5118U, 12310U, 14570U, 14598U, 14577U, 12792U, 18151U, 6070U, 
    18119U, 6052U, 10975U, 9872U, 5903U, 7700U, 13646U, 9170U, 
    14858U, 12763U, 14730U, 14756U, 14898U, 12453U, 5782U, 4279U, 
    4673U, 3838U, 7939U, 15284U, 8310U, 3428U, 14866U, 12573U, 
    12589U, 17940U, 5815U, 5974U, 14391U, 9790U, 4652U, 7918U, 
    4628U, 7894U, 16531U, 9041U, 4732U, 7968U, 5032U, 12880U, 
    12842U, 16565U, 9075U, 16589U, 9099U, 16883U, 16890U, 1780U, 
    1699U, 1742U, 1720U, 1822U, 1678U, 1801U, 1763U, 5229U, 
    4010U, 2016U, 6908U, 19433U, 7400U, 19566U, 6939U, 19466U, 
    7444U, 19601U, 7673U, 10861U, 13668U, 22025U, 13681U, 14318U, 
    13185U, 14325U, 13192U, 15010U, 22037U, 14999U, 22031U, 641U, 
    1214U, 661U, 1234U, 6917U, 19446U, 7423U, 19590U, 6960U, 
    19499U, 7465U, 19634U, 7409U, 19579U, 6946U, 19477U, 7451U, 
    19612U, 12635U, 22021U, 16661U, 17918U, 21521U, 21034U, 21530U, 
    21047U, 21539U, 21060U, 6953U, 19488U, 7458U, 19623U, 6912U, 
    19437U, 7404U, 19570U, 4938U, 16789U, 14985U, 17678U, 6948U, 
    19479U, 7453U, 19614U, 17856U, 6836U, 4113U, 18854U, 13441U, 
    13447U, 651U, 1224U, 672U, 1245U, 1291U, 9379U, 19769U, 
    13493U, 18396U, 1997U, 9400U, 19802U, 13501U, 18243U, 18456U, 
    4071U, 1948U, 9385U, 19779U, 18416U, 9484U, 19906U, 18826U, 
    5686U, 2024U, 9406U, 19812U, 18475U, 9549U, 19948U, 16837U, 
    2808U, 19197U, 6891U, 2138U, 4119U, 1967U, 18864U, 13463U, 
    2637U, 3279U, 64U, 3263U, 3237U, 3250U, 3226U, 1856U, 
    8122U, 358U, 8088U, 318U, 12423U, 372U, 8099U, 331U, 
    12438U, 389U, 21078U, 2956U, 8071U, 5802U, 2037U, 9421U, 
    19835U, 18496U, 9569U, 19980U, 19237U, 13455U, 6004U, 2052U, 
    9438U, 19860U, 18533U, 9591U, 20014U, 19301U, 9362U, 11934U, 
    4977U, 2011U, 18466U, 4079U, 1954U, 18426U, 18835U, 18586U, 
    18649U, 20536U, 19457U, 14510U, 2671U, 14528U, 2690U, 19048U, 
    1554U, 218U, 930U, 2314U, 1436U, 100U, 812U, 2202U, 
    1477U, 141U, 853U, 2241U, 1634U, 298U, 1010U, 2400U, 
    1518U, 182U, 894U, 2280U, 1456U, 120U, 832U, 2221U, 
    1594U, 258U, 970U, 2352U, 1416U, 80U, 792U, 2170U, 
    1613U, 277U, 989U, 2380U, 1497U, 161U, 873U, 2260U, 
    1574U, 238U, 950U, 2333U, 1538U, 202U, 914U, 2299U, 
    9357U, 3484U, 3115U, 3981U, 4067U, 3138U, 12970U, 2615U, 
    7861U, 2453U, 7532U, 3403U, 12655U, 7825U, 12964U, 2608U, 
    21556U, 7854U, 2445U, 21547U, 21580U, 21594U, 18928U, 19720U, 
    20267U, 20977U, 19731U, 19758U, 20279U, 20988U, 19744U, 20399U, 
    18759U, 20442U, 18884U, 20640U, 18897U, 7528U, 12650U, 7819U, 
    21573U, 21588U, 21945U, 21568U, 12958U, 2602U, 7847U, 2438U, 
    21093U, 8685U, 8607U, 21111U, 8706U, 8643U, 21564U, 18126U, 
    2944U, 3472U, 21458U, 21684U, 8058U, 3415U, 21444U, 21670U, 
    12677U, 2554U, 7839U, 21473U, 21699U, 21502U, 21728U, 21488U, 
    21714U, 21515U, 21741U, 17977U, 2933U, 3467U, 21452U, 21678U, 
    8053U, 3409U, 21437U, 21663U, 12671U, 2547U, 7832U, 21465U, 
    21691U, 21495U, 21721U, 21482U, 21708U, 21510U, 21736U, 7524U, 
    2428U, 10946U, 8664U, 13608U, 4305U, 8624U, 13587U, 8600U, 
    13579U, 18323U, 3393U, 1868U, 10937U, 8652U, 8592U, 8617U, 
    12645U, 2530U, 7813U, 10968U, 8675U, 8637U, 13601U, 4959U, 
    4180U, 4802U, 3611U, 3599U, 1886U, 5201U, 6933U, 3604U, 
    4914U, 6901U, 15846U, 7386U, 3619U, 1892U, 16087U, 7438U, 
    5586U, 8280U, 19175U, 16444U, 2780U, 18687U, 20944U, 5599U, 
    8295U, 19186U, 16457U, 2788U, 18699U, 20955U, 14849U, 17949U, 
    2918U, 18519U, 19278U, 14370U, 14400U, 5020U, 4084U, 15345U, 
    4989U, 12751U, 12772U, 4351U, 14417U, 14409U, 12830U, 10611U, 
    9335U, 3113U, 6042U, 10620U, 6812U, 14940U, 10649U, 14276U, 
    10642U, 14972U, 10657U, 17957U, 10666U, 8047U, 10634U, 6841U, 
    5569U, 5699U, 9555U, 19958U, 15149U, 9810U, 20067U, 20735U, 
    19206U, 9543U, 19938U, 15143U, 9803U, 20056U, 20725U, 19156U, 
    16422U, 5990U, 9584U, 20003U, 15156U, 9818U, 20079U, 20746U, 
    19291U, 9840U, 20113U, 15241U, 9826U, 20091U, 20779U, 20922U, 
    13753U, 7788U, 14946U, 1030U, 14979U, 1036U, 15018U, 1051U, 
    15005U, 1044U, 4296U, 1982U, 14377U, 2656U, 21614U, 21645U, 
    13020U, 4621U, 13326U, 6177U, 7236U, 4864U, 6268U, 7313U, 
    4879U, 12019U, 14423U, 14618U, 6243U, 7270U, 17981U, 18063U, 
    6293U, 7347U, 17998U, 18091U, 15270U, 7887U, 13034U, 6325U, 
    3824U, 12055U, 14451U, 14646U, 13059U, 4717U, 4809U, 6185U, 
    7244U, 6276U, 7321U, 12028U, 14432U, 14627U, 6251U, 7278U, 
    18072U, 6301U, 7355U, 18100U, 15298U, 7953U, 13042U, 6339U, 
    3882U, 12064U, 14460U, 14655U, 683U, 1256U, 701U, 1274U, 
    21768U, 15341U, 2759U, 18660U, 20798U, 13074U, 15802U, 15439U, 
    15561U, 15500U, 15622U, 15716U, 5026U, 4091U, 12047U, 13830U, 
    15195U, 13839U, 15204U, 16166U, 16442U, 13988U, 15239U, 15351U, 
    3715U, 6662U, 13066U, 4724U, 6193U, 7252U, 6284U, 7329U, 
    12037U, 14441U, 14636U, 6259U, 7286U, 18081U, 6309U, 7363U, 
    18109U, 15305U, 7960U, 13050U, 6346U, 3889U, 12073U, 14469U, 
    14664U, 4780U, 16763U, 6504U, 16897U, 15723U, 17813U, 14093U, 
    17613U, 14116U, 17638U, 14129U, 17652U, 5755U, 16857U, 13653U, 
    17597U, 15176U, 17747U, 14105U, 17626U, 14142U, 17666U, 6999U, 
    9659U, 9649U, 7009U, 3001U, 8867U, 3045U, 8911U, 3079U, 
    8945U, 6117U, 3143U, 15391U, 15881U, 7091U, 3305U, 15451U, 
    15929U, 6208U, 3182U, 15415U, 15905U, 15573U, 16001U, 7126U, 
    3344U, 15512U, 15965U, 15634U, 16037U, 3013U, 8879U, 3057U, 
    8923U, 3091U, 8957U, 6135U, 3163U, 15403U, 15893U, 7109U, 
    3325U, 15488U, 15953U, 6226U, 3202U, 15427U, 15917U, 15610U, 
    16025U, 7153U, 3374U, 15549U, 15989U, 15671U, 16061U, 3441U, 
    6126U, 3153U, 7100U, 3315U, 6217U, 3192U, 7135U, 3354U, 
    15476U, 15941U, 15598U, 16013U, 7144U, 3364U, 15537U, 15977U, 
    15659U, 16049U, 6144U, 3173U, 3025U, 8891U, 7118U, 3335U, 
    3069U, 8935U, 6235U, 3212U, 3035U, 8901U, 7162U, 3384U, 
    3103U, 8969U, 4996U, 6354U, 12757U, 12809U, 4357U, 15852U, 
    7393U, 15729U, 7661U, 15858U, 7416U, 6989U, 7295U, 13479U, 
    15168U, 13924U, 15227U, 4794U, 16770U, 6510U, 16904U, 15736U, 
    17820U, 5762U, 16865U, 9617U, 17240U, 5996U, 16874U, 9846U, 
    17249U, 15463U, 15585U, 15524U, 15646U, 15758U, 15766U, 12836U, 
    3717U, 1899U, 1060U, 18405U, 18736U, 6664U, 2124U, 1073U, 
    18575U, 19374U, 16205U, 7045U, 1086U, 18361U, 19521U, 624U, 
    1114U, 18380U, 20886U, 9637U, 5324U, 19096U, 13736U, 20608U, 
    4640U, 13157U, 20451U, 18939U, 22073U, 4852U, 13178U, 20484U, 
    15120U, 13855U, 20650U, 20703U, 18989U, 5181U, 13661U, 5520U, 
    13895U, 5088U, 19056U, 13632U, 20576U, 4873U, 15127U, 18158U, 
    20999U, 20714U, 17991U, 20966U, 18999U, 15810U, 15220U, 18166U, 
    21011U, 20768U, 18174U, 21023U, 20837U, 15279U, 13918U, 20662U, 
    20789U, 4704U, 13163U, 20461U, 18948U, 12707U, 20375U, 3869U, 
    13142U, 20419U, 18779U, 7906U, 13620U, 20556U, 19690U, 5330U, 
    19106U, 13742U, 20618U, 4827U, 18969U, 13355U, 20526U, 4710U, 
    13170U, 20472U, 18958U, 3875U, 13149U, 20430U, 18789U, 5875U, 
    13280U, 20495U, 19258U, 4952U, 19037U, 13626U, 20566U, 5096U, 
    19068U, 13640U, 20588U, 5195U, 19078U, 13675U, 20598U, 5574U, 
    19165U, 14076U, 20672U, 11792U, 20244U, 5923U, 13285U, 20504U, 
    19266U, 4901U, 19009U, 13487U, 20546U, 14860U, 13848U, 20629U, 
    20682U, 3833U, 13136U, 20409U, 18770U, 15320U, 14881U, 12479U, 
    421U, 16953U, 16969U, 7640U, 12466U, 406U, 7622U, 7494U, 
    2419U, 10852U, 2477U, 14950U, 2709U, 11926U, 2487U, 4858U, 
    6817U, 10627U, 4174U, 12089U, 14281U, 13509U, 6847U, 7656U, 
    2432U, 4267U, 3394U, 1869U, 17362U, 8001U, 17258U, 17963U, 
    2928U, 17028U, 15247U, 2741U, 17775U, 2873U, 17893U, 2900U, 
    13555U, 18296U, 591U, 4891U, 17368U, 8008U, 14082U, 17392U, 
    17001U, 15134U, 17724U, 16800U, 13524U, 18261U, 8110U, 344U, 
    21072U, 3125U, 14790U, 7304U, 8064U, 4817U, 17271U, 15094U, 
    17711U, 16778U, 16654U, 17911U, 13339U, 15184U, 17756U, 17586U, 
    3222U, 1851U, 17374U, 8015U, 15084U, 2717U, 17693U, 2845U, 
    16526U, 2796U, 17405U, 2831U, 17286U, 18029U, 2939U, 17035U, 
    15252U, 2747U, 17781U, 2880U, 17906U, 2906U, 13563U, 18305U, 
    602U, 7032U, 2147U, 13469U, 2644U, 15864U, 12092U, 17380U, 
    8022U, 9520U, 7472U, 16680U, 16912U, 17828U, 7875U, 12949U, 
    17793U, 8036U, 3448U, 17386U, 8029U, 14265U, 17699U, 16675U, 
    633U, 459U, 17435U, 2838U, 17299U, 18184U, 2951U, 17042U, 
    15257U, 2753U, 17787U, 2887U, 17935U, 2912U, 13571U, 18314U, 
    613U, 21086U, 8080U, 5413U, 16819U, 17885U, 17898U, 16667U, 
    17924U, 11821U, 17334U, 15363U, 16494U, 16464U, 17573U, 16511U, 
    12083U, 7990U, 7800U, 11969U, 17349U, 16701U, 16804U, 16933U, 
    17862U, 16479U, 17606U, 17802U, 4839U, 15105U, 4894U, 2002U, 
    12287U, 6152U, 13343U, 17560U, 5619U, 12361U, 2513U, 12977U, 
    2623U, 12343U, 13333U, 9348U, 7186U, 5676U, 9340U, 7177U, 
    7869U, 20517U, 12661U, 2535U, 12932U, 6157U, 2073U, 12711U, 
    12915U, 2584U, 12927U, 9156U, 3735U, 1912U, 12373U, 5312U, 
    5956U, 21983U, 18209U, 12389U, 5298U, 4920U, 18193U, 5338U, 
    16104U, 5475U, 16297U, 4259U, 4273U, 6171U, 2089U, 12983U, 
    2630U, 21601U, 21747U, 21633U, 21758U, 12355U, 9U, 57U, 
    6202U, 6982U, 19510U, 18339U, 19331U, 18332U, 12666U, 2541U, 
    12938U, 5291U, 6164U, 2081U, 12717U, 12921U, 2591U, 12944U, 
    9163U, 12381U, 5318U, 5965U, 21993U, 3460U, 18216U, 12396U, 
    8153U, 7054U, 5305U, 4786U, 8218U, 8368U, 8526U, 3452U, 
    8813U, 13931U, 18201U, 4846U, 15113U, 20692U, 18979U, 15796U, 
    15213U, 20757U, 20827U, 4908U, 9513U, 19927U, 19019U, 7035U, 
    2144U, 15840U, 9833U, 20102U, 20847U, 12695U, 12684U, 2562U, 
    4984U, 2010U, 18465U, 19047U, 9863U, 6328U, 2119U, 9462U, 
    19896U, 18566U, 9612U, 20047U, 19341U, 10942U, 1654U, 1666U, 
    12747U, 2574U, 18631U, 20383U, 12741U, 2575U, 18632U, 4347U, 
    1992U, 18447U, 18911U, 7232U, 2165U, 13474U, 2650U, 20384U, 
    6890U, 2137U, 21161U, 21425U, 21275U, 5189U, 5459U, 17962U, 
    2927U, 21178U, 21356U, 4916U, 21238U, 4816U, 21223U, 13338U, 
    21319U, 3221U, 1850U, 21129U, 21202U, 18028U, 2938U, 21186U, 
    21363U, 7041U, 2151U, 3447U, 1873U, 21137U, 21209U, 18188U, 
    2950U, 21194U, 21370U, 5412U, 21244U, 11820U, 21283U, 15362U, 
    11968U, 21302U, 21334U, 748U, 9177U, 10882U, 9248U, 11013U, 
    761U, 9192U, 10897U, 9263U, 11028U, 12490U, 9206U, 10911U, 
    9287U, 11082U, 12501U, 9219U, 10924U, 9300U, 11095U, 773U, 
    11042U, 13007U, 11108U, 2519U, 11069U, 1369U, 11056U, 11123U, 
    3748U, 1918U, 5436U, 16241U, 14769U, 14778U, 434U, 1126U, 
    487U, 1172U, 442U, 1134U, 466U, 1151U, 3765U, 1927U, 
    21145U, 21216U, 5453U, 21261U, 4821U, 21230U, 13349U, 21326U, 
    6702U, 2131U, 21153U, 21268U, 16275U, 2774U, 21170U, 21349U, 
    5418U, 21252U, 11827U, 21292U, 15367U, 11974U, 21310U, 21341U, 
    9625U, 4045U, 12403U, 14484U, 5244U, 4021U, 6863U, 6896U, 
    3492U, 6978U, 4859U, 6868U, 7537U, 19657U, 12349U, 20342U, 
    4125U, 7543U, 538U, 1101U, 18347U, 19667U, 12366U, 548U, 
    20352U, 18874U, 7070U, 19534U, 7077U, 2156U, 18596U, 19545U, 
    8495U, 2462U, 18608U, 19699U, 8510U, 2470U, 18620U, 19710U, 
    3770U, 4446U, 1391U, 1323U, 2096U, 1346U, 2189U, 5844U, 
    1296U, 4363U, 4315U, 4419U, 4390U, 1405U, 1336U, 2109U, 
    1359U, 2370U, 5858U, 1311U, 4378U, 4331U, 4434U, 4406U, 
    3730U, 1906U, 3984U, 1941U, 12336U, 2505U, 8481U, 3977U, 
    1933U, 12328U, 2496U, 5111U, 21384U, 19216U, 3293U, 5770U, 
    6318U, 5735U, 15262U, 5916U, 4243U, 4934U, 19029U, 15860U, 
    2764U, 18669U, 20857U, 18181U, 17932U, 16268U, 17877U, 4057U, 
    12414U, 14498U, 5261U, 4034U, 5276U, 4594U, 6884U, 529U, 
    19423U, 18919U, 15695U, 7372U, 19556U, 20806U, 5294U, 19088U, 
    16099U, 2769U, 18678U, 20865U, 3766U, 1928U, 16994U, 16721U, 
    17264U, 15089U, 2723U, 17705U, 2852U, 16716U, 2802U, 13516U, 
    18252U, 558U, 5454U, 14087U, 17398U, 17007U, 16727U, 15138U, 
    17729U, 16832U, 13531U, 18269U, 4822U, 17278U, 15099U, 17717U, 
    16783U, 17841U, 13350U, 15189U, 17762U, 17591U, 6703U, 2132U, 
    17411U, 17014U, 16733U, 17292U, 15163U, 2729U, 17741U, 2859U, 
    16948U, 2815U, 13539U, 18278U, 569U, 15868U, 10983U, 12162U, 
    16739U, 9531U, 7477U, 16686U, 16918U, 17834U, 17797U, 8041U, 
    16271U, 2775U, 14270U, 17441U, 17021U, 16745U, 17305U, 15234U, 
    2735U, 17769U, 2866U, 17880U, 2894U, 13547U, 18287U, 580U, 
    5419U, 16825U, 16693U, 22003U, 16925U, 22012U, 17848U, 11828U, 
    17341U, 15368U, 16502U, 16471U, 16518U, 7995U, 7806U, 11975U, 
    17355U, 16708U, 16811U, 16940U, 17869U, 16486U, 17807U, 6047U, 
    2067U, 9455U, 19885U, 18556U, 4107U, 1960U, 9392U, 19790U, 
    18436U, 9490U, 19916U, 18844U, 5749U, 2030U, 9413U, 19823U, 
    18485U, 9562U, 19969U, 19227U, 4131U, 1974U, 5808U, 2044U, 
    9429U, 19847U, 18507U, 9576U, 19991U, 19247U, 9606U, 20037U, 
    6019U, 2059U, 9446U, 19872U, 18544U, 9598U, 20025U, 19311U, 
    19322U, 4246U, 14842U, 4098U, 6853U, 4449U, 6874U, 3563U, 
    1879U, 3118U, 1842U, 12954U, 2598U, 9034U, 14359U, 7487U, 
    14348U, 21392U, 2965U, 21403U, 2977U, 21414U, 2989U, 5432U, 
    6967U, 5070U, 3299U, 5776U, 7595U, 16646U, 4888U, 7029U, 
    5869U, 718U, 17567U, 785U, 4485U, 4251U, 5984U, 725U, 
    16985U, 2821U, 9867U, 14799U, 8442U, 12945U, 16229U, 7483U, 
    10954U, 12292U, 3777U, 6707U, 16303U, 12193U, 16288U, 12221U, 
    8570U, 10705U, 13103U, 13399U, 13956U, 8180U, 13128U, 8245U, 
    8414U, 13424U, 8553U, 8840U, 13980U, 5027U, 4092U, 3659U, 
    6606U, 16126U, 3793U, 6723U, 16327U, 4958U, 12105U, 17580U, 
    41U, 4801U, 17735U, 49U, 12521U, 14928U, 3569U, 3625U, 
    3965U, 5580U, 8273U, 6800U, 3514U, 16436U, 10673U, 20165U, 
    10779U, 20190U, 3815U, 18746U, 5527U, 19130U, 6745U, 19384U, 
    12262U, 20304U, 16357U, 20896U, 10720U, 20177U, 10788U, 20203U, 
    3706U, 18723U, 5389U, 19117U, 6653U, 19361U, 12146U, 20291U, 
    16196U, 20873U, 3930U, 18800U, 5536U, 19143U, 6765U, 19397U, 
    12271U, 20317U, 16389U, 20909U, 3532U, 18711U, 6517U, 19349U, 
    15750U, 20815U, 3956U, 18813U, 6791U, 19410U, 16427U, 20931U, 
    12139U, 12255U, 3498U, 4605U, 6496U, 15700U, 14062U, 23U, 
    14069U, 32U, 3971U, 5593U, 8288U, 6806U, 3523U, 16451U, 
    5352U, 12131U, 16118U, 5489U, 12247U, 16319U, 5398U, 12155U, 
    16211U, 5545U, 12280U, 16398U, 15352U, 8134U, 8208U, 8358U, 
    8516U, 8803U, 10735U, 17159U, 17493U, 17148U, 17482U, 17178U, 
    17512U, 17198U, 17532U, 8161U, 5425U, 8226U, 8385U, 8534U, 
    3919U, 6754U, 16366U, 8821U, 4458U, 21790U, 15373U, 21905U, 
    11996U, 4467U, 21800U, 15382U, 21915U, 4476U, 21810U, 17105U, 
    17426U, 17130U, 17464U, 17217U, 17551U, 4599U, 3594U, 17097U, 
    17418U, 17139U, 17473U, 5375U, 17114U, 17448U, 3756U, 5444U, 
    6693U, 16249U, 17122U, 17456U, 17169U, 17503U, 16182U, 17209U, 
    17543U, 17189U, 17523U, 10712U, 10697U, 10797U, 3723U, 5405U, 
    6670U, 16218U, 3939U, 5552U, 6774U, 16405U, 13378U, 13388U, 
    10754U, 3691U, 5368U, 6638U, 16175U, 3800U, 5505U, 6730U, 
    16342U, 8404U, 5337U, 12124U, 16103U, 5474U, 12230U, 16296U, 
    15743U, 3540U, 6525U, 15781U, 3556U, 6532U, 15825U, 16073U, 
    5465U, 8144U, 8376U, 13407U, 8188U, 8253U, 8422U, 13432U, 
    12175U, 12201U, 12237U, 12166U, 3637U, 5344U, 6584U, 16110U, 
    3785U, 5481U, 6715U, 16311U, 5360U, 16141U, 5497U, 16334U, 
    4907U, 3698U, 5381U, 6645U, 16188U, 3807U, 5512U, 6737U, 
    16349U, 8848U, 4997U, 12512U, 14915U, 4833U, 15775U, 10681U, 
    12758U, 12810U, 4358U, 5188U, 8579U, 12723U, 12821U, 5458U, 
    17320U, 13749U, 13863U, 13787U, 13879U, 13795U, 13902U, 8737U, 
    13871U, 8745U, 13887U, 8795U, 13910U, 3586U, 4966U, 6565U, 
    15873U, 3747U, 5435U, 6684U, 16240U, 4613U, 12011U, 15708U, 
    10729U, 8451U, 9028U, 10822U, 18033U, 3576U, 4928U, 7063U, 
    8488U, 6539U, 12095U, 7084U, 8502U, 15853U, 7170U, 8509U, 
    10744U, 17234U, 7662U, 4500U, 15683U, 7876U, 3581U, 4933U, 
    6822U, 7196U, 6544U, 9671U, 12100U, 15333U, 15859U, 3740U, 
    21782U, 6677U, 21820U, 3674U, 6621U, 16149U, 16225U, 12950U, 
    3486U, 4593U, 6490U, 12005U, 15694U, 3632U, 5300U, 6829U, 
    6579U, 9798U, 12119U, 15357U, 16098U, 7519U, 19645U, 12302U, 
    20330U, 7679U, 19678U, 12606U, 20363U, 12185U, 16280U, 12212U, 
    8561U, 10690U, 13095U, 13370U, 13948U, 8172U, 13120U, 8237U, 
    8396U, 13416U, 8545U, 8832U, 13972U, 13939U, 13086U, 13361U, 
    13111U, 13964U, 17312U, 3666U, 6613U, 16133U, 17326U, 3683U, 
    6630U, 16158U, 12837U, 16U, 3478U, 6482U, 13267U, 3645U, 
    6592U, 14479U, 5743U, 6971U, 12817U, 2579U, 18640U, 7231U, 
    2164U, 13473U, 2649U, 20391U, 10458U, 11346U, 10018U, 11211U, 
    9753U, 11500U, 10420U, 10391U, 11299U, 10074U, 10474U, 10328U, 
    11272U, 10532U, 11363U, 10292U, 11262U, 10804U, 11281U, 11737U, 
    9325U, 13201U, 21857U, 13996U, 21881U, 13234U, 21869U, 14029U, 
    21893U, 10337U, 10346U, 9692U, 18008U, 18131U, 18223U, 18018U, 
    18141U, 18233U, 11219U, 10355U, 9277U, 11319U, 10034U, 11516U, 
    11228U, 11328U, 10054U, 11536U, 10541U, 11372U, 9781U, 11873U, 
    10373U, 11290U, 9944U, 11444U, 10272U, 11699U, 11202U, 9743U, 
    10009U, 11183U, 10595U, 10183U, 10000U, 11174U, 10312U, 10174U, 
    9902U, 11402U, 10230U, 11657U, 11147U, 9713U, 10192U, 11254U, 
    9762U, 11619U, 10440U, 21847U, 11337U, 10130U, 11237U, 9922U, 
    11422U, 10250U, 11677U, 11192U, 9732U, 9880U, 11380U, 10208U, 
    11635U, 11137U, 9702U, 7203U, 4138U, 8457U, 10828U, 18039U, 
    10094U, 11566U, 7217U, 17089U, 11988U, 11797U, 10108U, 11580U, 
    10494U, 11354U, 9771U, 11845U, 9964U, 11156U, 9723U, 11464U, 
    10549U, 10503U, 9980U, 11164U, 11480U, 10402U, 11310U, 10146U, 
    11245U, 10466U, 11812U, 10026U, 11508U, 750U, 9179U, 10884U, 
    9250U, 11015U, 10430U, 20137U, 11782U, 20230U, 10084U, 20123U, 
    11556U, 20216U, 10484U, 20151U, 11835U, 20253U, 10302U, 11719U, 
    9313U, 11746U, 13212U, 14007U, 13245U, 14040U, 11755U, 1380U, 
    10364U, 10813U, 13223U, 14018U, 13256U, 14051U, 10044U, 11526U, 
    10575U, 11898U, 10064U, 11546U, 10585U, 11908U, 10567U, 11890U, 
    763U, 9194U, 10899U, 9265U, 11030U, 12492U, 9208U, 10913U, 
    9289U, 11084U, 12503U, 9221U, 10926U, 9302U, 11097U, 775U, 
    11044U, 13009U, 11110U, 2521U, 11071U, 1371U, 11058U, 11125U, 
    10382U, 11764U, 9954U, 11454U, 10282U, 11709U, 10603U, 11918U, 
    10320U, 11729U, 9912U, 11412U, 10240U, 11667U, 10200U, 11627U, 
    10449U, 11803U, 10138U, 11602U, 9933U, 11433U, 10261U, 11688U, 
    9891U, 11391U, 10219U, 11646U, 7210U, 4146U, 8465U, 10836U, 
    18047U, 10101U, 11573U, 7224U, 4154U, 8473U, 10844U, 18055U, 
    10119U, 11591U, 10523U, 11864U, 9972U, 11472U, 10558U, 11881U, 
    3506U, 10513U, 11854U, 9990U, 11490U, 10411U, 11773U, 10155U, 
    11610U, 3946U, 5559U, 6781U, 16412U, 5223U, 6573U, 12113U, 
    16092U, 7512U, 16377U, 8197U, 8262U, 8431U, 8856U, 16258U, 
    4974U, 4076U, 15338U, 21934U, 4981U, 12744U, 12738U, 4344U, 
    21377U, 12814U, 22053U, 22063U, 22045U, 3994U, 15788U, 15832U, 
    4002U, 8585U, 6924U, 21828U, 12730U, 17226U, 7667U, 17967U, 
    7378U, 21838U, 16751U, 3547U, 10164U, 15816U, 16232U, 21925U, 
    3990U, 3133U, 21955U, 12963U, 7853U, 7527U, 3397U, 21962U, 
    12649U, 7818U, 21976U, 21970U, 
};

extern const uint8_t PPCInstrDeprecationFeatures[] = {
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    PPC::DeprecatedDST, PPC::DeprecatedDST, PPC::DeprecatedDST, PPC::DeprecatedDST, PPC::DeprecatedDST, PPC::DeprecatedDST, PPC::DeprecatedDST, PPC::DeprecatedDST, 
    PPC::DeprecatedDST, PPC::DeprecatedDST, uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
    uint8_t(-1), uint8_t(-1), uint8_t(-1), uint8_t(-1), 
};

static inline void InitPPCMCInstrInfo(MCInstrInfo *II) {
  II->InitMCInstrInfo(PPCInsts, PPCInstrNameIndices, PPCInstrNameData, PPCInstrDeprecationFeatures, nullptr, 2540);
}

} // end namespace llvm
#endif // GET_INSTRINFO_MC_DESC

#ifdef GET_INSTRINFO_HEADER
#undef GET_INSTRINFO_HEADER
namespace llvm {
struct PPCGenInstrInfo : public TargetInstrInfo {
  explicit PPCGenInstrInfo(int CFSetupOpcode = -1, int CFDestroyOpcode = -1, int CatchRetOpcode = -1, int ReturnOpcode = -1);
  ~PPCGenInstrInfo() override = default;

};
} // end namespace llvm
#endif // GET_INSTRINFO_HEADER

#ifdef GET_INSTRINFO_HELPER_DECLS
#undef GET_INSTRINFO_HELPER_DECLS


#endif // GET_INSTRINFO_HELPER_DECLS

#ifdef GET_INSTRINFO_HELPERS
#undef GET_INSTRINFO_HELPERS

#endif // GET_INSTRINFO_HELPERS

#ifdef GET_INSTRINFO_CTOR_DTOR
#undef GET_INSTRINFO_CTOR_DTOR
namespace llvm {
extern const MCInstrDesc PPCInsts[];
extern const unsigned PPCInstrNameIndices[];
extern const char PPCInstrNameData[];
extern const uint8_t PPCInstrDeprecationFeatures[];
PPCGenInstrInfo::PPCGenInstrInfo(int CFSetupOpcode, int CFDestroyOpcode, int CatchRetOpcode, int ReturnOpcode)
  : TargetInstrInfo(CFSetupOpcode, CFDestroyOpcode, CatchRetOpcode, ReturnOpcode) {
  InitMCInstrInfo(PPCInsts, PPCInstrNameIndices, PPCInstrNameData, PPCInstrDeprecationFeatures, nullptr, 2540);
}
} // end namespace llvm
#endif // GET_INSTRINFO_CTOR_DTOR

#ifdef GET_INSTRINFO_OPERAND_ENUM
#undef GET_INSTRINFO_OPERAND_ENUM
namespace llvm {
namespace PPC {
namespace OpName {
enum {
  OPERAND_LAST
};
} // end namespace OpName
} // end namespace PPC
} // end namespace llvm
#endif //GET_INSTRINFO_OPERAND_ENUM

#ifdef GET_INSTRINFO_NAMED_OPS
#undef GET_INSTRINFO_NAMED_OPS
namespace llvm {
namespace PPC {
LLVM_READONLY
int16_t getNamedOperandIdx(uint16_t Opcode, uint16_t NamedIdx) {
  return -1;
}
} // end namespace PPC
} // end namespace llvm
#endif //GET_INSTRINFO_NAMED_OPS

#ifdef GET_INSTRINFO_OPERAND_TYPES_ENUM
#undef GET_INSTRINFO_OPERAND_TYPES_ENUM
namespace llvm {
namespace PPC {
namespace OpTypes {
enum OperandType {
  abscalltarget = 0,
  abscondbrtarget = 1,
  absdirectbrtarget = 2,
  atimm = 3,
  calltarget = 4,
  condbrtarget = 5,
  crbitm = 6,
  directbrtarget = 7,
  dispRI = 8,
  dispRI34 = 9,
  dispRIHash = 10,
  dispRIX = 11,
  dispRIX16 = 12,
  dispSPE2 = 13,
  dispSPE4 = 14,
  dispSPE8 = 15,
  f32imm = 16,
  f64imm = 17,
  i16imm = 18,
  i1imm = 19,
  i32imm = 20,
  i64imm = 21,
  i8imm = 22,
  imm32SExt16 = 23,
  imm64SExt16 = 24,
  imm64ZExt32 = 25,
  immZero = 26,
  memr = 27,
  memri = 28,
  memri34 = 29,
  memri34_pcrel = 30,
  memrihash = 31,
  memrix = 32,
  memrix16 = 33,
  memrr = 34,
  pred = 35,
  ptr_rc_idx = 36,
  ptr_rc_nor0 = 37,
  ptype0 = 38,
  ptype1 = 39,
  ptype2 = 40,
  ptype3 = 41,
  ptype4 = 42,
  ptype5 = 43,
  s16imm = 44,
  s16imm64 = 45,
  s17imm = 46,
  s17imm64 = 47,
  s34imm = 48,
  s34imm_pcrel = 49,
  s5imm = 50,
  spe2dis = 51,
  spe4dis = 52,
  spe8dis = 53,
  tlscall = 54,
  tlscall32 = 55,
  tlsgd = 56,
  tlsgd32 = 57,
  tlsreg = 58,
  tlsreg32 = 59,
  tocentry = 60,
  tocentry32 = 61,
  type0 = 62,
  type1 = 63,
  type2 = 64,
  type3 = 65,
  type4 = 66,
  type5 = 67,
  u10imm = 68,
  u12imm = 69,
  u16imm = 70,
  u16imm64 = 71,
  u1imm = 72,
  u2imm = 73,
  u3imm = 74,
  u4imm = 75,
  u5imm = 76,
  u6imm = 77,
  u7imm = 78,
  u8imm = 79,
  untyped_imm_0 = 80,
  acc = 81,
  crbitrc = 82,
  crrc = 83,
  f4rc = 84,
  f8rc = 85,
  g8prc = 86,
  g8rc = 87,
  g8rc_nox0 = 88,
  gprc = 89,
  gprc_nor0 = 90,
  spe4rc = 91,
  sperc = 92,
  spilltovsrrc = 93,
  uacc = 94,
  vfrc = 95,
  vrrc = 96,
  vsfrc = 97,
  vsrc = 98,
  vsrpevenrc = 99,
  vsrprc = 100,
  vssrc = 101,
  ACCRC = 102,
  CARRYRC = 103,
  CRBITRC = 104,
  CRRC = 105,
  CTRRC = 106,
  CTRRC8 = 107,
  F4RC = 108,
  F8RC = 109,
  G8RC = 110,
  G8RC_NOX0 = 111,
  G8pRC = 112,
  GPRC = 113,
  GPRC_NOR0 = 114,
  LR8RC = 115,
  LRRC = 116,
  SPERC = 117,
  SPILLTOVSRRC = 118,
  UACCRC = 119,
  VFRC = 120,
  VRRC = 121,
  VRSAVERC = 122,
  VSFRC = 123,
  VSLRC = 124,
  VSRC = 125,
  VSRpRC = 126,
  VSSRC = 127,
  OPERAND_TYPE_LIST_END
};
} // end namespace OpTypes
} // end namespace PPC
} // end namespace llvm
#endif // GET_INSTRINFO_OPERAND_TYPES_ENUM

#ifdef GET_INSTRINFO_OPERAND_TYPE
#undef GET_INSTRINFO_OPERAND_TYPE
namespace llvm {
namespace PPC {
LLVM_READONLY
static int getOperandType(uint16_t Opcode, uint16_t OpIdx) {
  const uint16_t Offsets[] = {
    /* PHI */
    0,
    /* INLINEASM */
    1,
    /* INLINEASM_BR */
    1,
    /* CFI_INSTRUCTION */
    1,
    /* EH_LABEL */
    2,
    /* GC_LABEL */
    3,
    /* ANNOTATION_LABEL */
    4,
    /* KILL */
    5,
    /* EXTRACT_SUBREG */
    5,
    /* INSERT_SUBREG */
    8,
    /* IMPLICIT_DEF */
    12,
    /* SUBREG_TO_REG */
    13,
    /* COPY_TO_REGCLASS */
    17,
    /* DBG_VALUE */
    20,
    /* DBG_VALUE_LIST */
    20,
    /* DBG_INSTR_REF */
    20,
    /* DBG_PHI */
    20,
    /* DBG_LABEL */
    20,
    /* REG_SEQUENCE */
    21,
    /* COPY */
    23,
    /* BUNDLE */
    25,
    /* LIFETIME_START */
    25,
    /* LIFETIME_END */
    26,
    /* PSEUDO_PROBE */
    27,
    /* ARITH_FENCE */
    31,
    /* STACKMAP */
    33,
    /* FENTRY_CALL */
    35,
    /* PATCHPOINT */
    35,
    /* LOAD_STACK_GUARD */
    41,
    /* PREALLOCATED_SETUP */
    42,
    /* PREALLOCATED_ARG */
    43,
    /* STATEPOINT */
    46,
    /* LOCAL_ESCAPE */
    46,
    /* FAULTING_OP */
    48,
    /* PATCHABLE_OP */
    49,
    /* PATCHABLE_FUNCTION_ENTER */
    49,
    /* PATCHABLE_RET */
    49,
    /* PATCHABLE_FUNCTION_EXIT */
    49,
    /* PATCHABLE_TAIL_CALL */
    49,
    /* PATCHABLE_EVENT_CALL */
    49,
    /* PATCHABLE_TYPED_EVENT_CALL */
    51,
    /* ICALL_BRANCH_FUNNEL */
    54,
    /* G_ASSERT_SEXT */
    54,
    /* G_ASSERT_ZEXT */
    57,
    /* G_ASSERT_ALIGN */
    60,
    /* G_ADD */
    63,
    /* G_SUB */
    66,
    /* G_MUL */
    69,
    /* G_SDIV */
    72,
    /* G_UDIV */
    75,
    /* G_SREM */
    78,
    /* G_UREM */
    81,
    /* G_SDIVREM */
    84,
    /* G_UDIVREM */
    88,
    /* G_AND */
    92,
    /* G_OR */
    95,
    /* G_XOR */
    98,
    /* G_IMPLICIT_DEF */
    101,
    /* G_PHI */
    102,
    /* G_FRAME_INDEX */
    103,
    /* G_GLOBAL_VALUE */
    105,
    /* G_EXTRACT */
    107,
    /* G_UNMERGE_VALUES */
    110,
    /* G_INSERT */
    112,
    /* G_MERGE_VALUES */
    116,
    /* G_BUILD_VECTOR */
    118,
    /* G_BUILD_VECTOR_TRUNC */
    120,
    /* G_CONCAT_VECTORS */
    122,
    /* G_PTRTOINT */
    124,
    /* G_INTTOPTR */
    126,
    /* G_BITCAST */
    128,
    /* G_FREEZE */
    130,
    /* G_INTRINSIC_FPTRUNC_ROUND */
    132,
    /* G_INTRINSIC_TRUNC */
    135,
    /* G_INTRINSIC_ROUND */
    137,
    /* G_INTRINSIC_LRINT */
    139,
    /* G_INTRINSIC_ROUNDEVEN */
    141,
    /* G_READCYCLECOUNTER */
    143,
    /* G_LOAD */
    144,
    /* G_SEXTLOAD */
    146,
    /* G_ZEXTLOAD */
    148,
    /* G_INDEXED_LOAD */
    150,
    /* G_INDEXED_SEXTLOAD */
    155,
    /* G_INDEXED_ZEXTLOAD */
    160,
    /* G_STORE */
    165,
    /* G_INDEXED_STORE */
    167,
    /* G_ATOMIC_CMPXCHG_WITH_SUCCESS */
    172,
    /* G_ATOMIC_CMPXCHG */
    177,
    /* G_ATOMICRMW_XCHG */
    181,
    /* G_ATOMICRMW_ADD */
    184,
    /* G_ATOMICRMW_SUB */
    187,
    /* G_ATOMICRMW_AND */
    190,
    /* G_ATOMICRMW_NAND */
    193,
    /* G_ATOMICRMW_OR */
    196,
    /* G_ATOMICRMW_XOR */
    199,
    /* G_ATOMICRMW_MAX */
    202,
    /* G_ATOMICRMW_MIN */
    205,
    /* G_ATOMICRMW_UMAX */
    208,
    /* G_ATOMICRMW_UMIN */
    211,
    /* G_ATOMICRMW_FADD */
    214,
    /* G_ATOMICRMW_FSUB */
    217,
    /* G_ATOMICRMW_FMAX */
    220,
    /* G_ATOMICRMW_FMIN */
    223,
    /* G_FENCE */
    226,
    /* G_BRCOND */
    228,
    /* G_BRINDIRECT */
    230,
    /* G_INTRINSIC */
    231,
    /* G_INTRINSIC_W_SIDE_EFFECTS */
    232,
    /* G_ANYEXT */
    233,
    /* G_TRUNC */
    235,
    /* G_CONSTANT */
    237,
    /* G_FCONSTANT */
    239,
    /* G_VASTART */
    241,
    /* G_VAARG */
    242,
    /* G_SEXT */
    245,
    /* G_SEXT_INREG */
    247,
    /* G_ZEXT */
    250,
    /* G_SHL */
    252,
    /* G_LSHR */
    255,
    /* G_ASHR */
    258,
    /* G_FSHL */
    261,
    /* G_FSHR */
    265,
    /* G_ROTR */
    269,
    /* G_ROTL */
    272,
    /* G_ICMP */
    275,
    /* G_FCMP */
    279,
    /* G_SELECT */
    283,
    /* G_UADDO */
    287,
    /* G_UADDE */
    291,
    /* G_USUBO */
    296,
    /* G_USUBE */
    300,
    /* G_SADDO */
    305,
    /* G_SADDE */
    309,
    /* G_SSUBO */
    314,
    /* G_SSUBE */
    318,
    /* G_UMULO */
    323,
    /* G_SMULO */
    327,
    /* G_UMULH */
    331,
    /* G_SMULH */
    334,
    /* G_UADDSAT */
    337,
    /* G_SADDSAT */
    340,
    /* G_USUBSAT */
    343,
    /* G_SSUBSAT */
    346,
    /* G_USHLSAT */
    349,
    /* G_SSHLSAT */
    352,
    /* G_SMULFIX */
    355,
    /* G_UMULFIX */
    359,
    /* G_SMULFIXSAT */
    363,
    /* G_UMULFIXSAT */
    367,
    /* G_SDIVFIX */
    371,
    /* G_UDIVFIX */
    375,
    /* G_SDIVFIXSAT */
    379,
    /* G_UDIVFIXSAT */
    383,
    /* G_FADD */
    387,
    /* G_FSUB */
    390,
    /* G_FMUL */
    393,
    /* G_FMA */
    396,
    /* G_FMAD */
    400,
    /* G_FDIV */
    404,
    /* G_FREM */
    407,
    /* G_FPOW */
    410,
    /* G_FPOWI */
    413,
    /* G_FEXP */
    416,
    /* G_FEXP2 */
    418,
    /* G_FLOG */
    420,
    /* G_FLOG2 */
    422,
    /* G_FLOG10 */
    424,
    /* G_FNEG */
    426,
    /* G_FPEXT */
    428,
    /* G_FPTRUNC */
    430,
    /* G_FPTOSI */
    432,
    /* G_FPTOUI */
    434,
    /* G_SITOFP */
    436,
    /* G_UITOFP */
    438,
    /* G_FABS */
    440,
    /* G_FCOPYSIGN */
    442,
    /* G_IS_FPCLASS */
    445,
    /* G_FCANONICALIZE */
    449,
    /* G_FMINNUM */
    451,
    /* G_FMAXNUM */
    454,
    /* G_FMINNUM_IEEE */
    457,
    /* G_FMAXNUM_IEEE */
    460,
    /* G_FMINIMUM */
    463,
    /* G_FMAXIMUM */
    466,
    /* G_PTR_ADD */
    469,
    /* G_PTRMASK */
    472,
    /* G_SMIN */
    475,
    /* G_SMAX */
    478,
    /* G_UMIN */
    481,
    /* G_UMAX */
    484,
    /* G_ABS */
    487,
    /* G_LROUND */
    489,
    /* G_LLROUND */
    491,
    /* G_BR */
    493,
    /* G_BRJT */
    494,
    /* G_INSERT_VECTOR_ELT */
    497,
    /* G_EXTRACT_VECTOR_ELT */
    501,
    /* G_SHUFFLE_VECTOR */
    504,
    /* G_CTTZ */
    508,
    /* G_CTTZ_ZERO_UNDEF */
    510,
    /* G_CTLZ */
    512,
    /* G_CTLZ_ZERO_UNDEF */
    514,
    /* G_CTPOP */
    516,
    /* G_BSWAP */
    518,
    /* G_BITREVERSE */
    520,
    /* G_FCEIL */
    522,
    /* G_FCOS */
    524,
    /* G_FSIN */
    526,
    /* G_FSQRT */
    528,
    /* G_FFLOOR */
    530,
    /* G_FRINT */
    532,
    /* G_FNEARBYINT */
    534,
    /* G_ADDRSPACE_CAST */
    536,
    /* G_BLOCK_ADDR */
    538,
    /* G_JUMP_TABLE */
    540,
    /* G_DYN_STACKALLOC */
    542,
    /* G_STRICT_FADD */
    545,
    /* G_STRICT_FSUB */
    548,
    /* G_STRICT_FMUL */
    551,
    /* G_STRICT_FDIV */
    554,
    /* G_STRICT_FREM */
    557,
    /* G_STRICT_FMA */
    560,
    /* G_STRICT_FSQRT */
    564,
    /* G_READ_REGISTER */
    566,
    /* G_WRITE_REGISTER */
    568,
    /* G_MEMCPY */
    570,
    /* G_MEMCPY_INLINE */
    574,
    /* G_MEMMOVE */
    577,
    /* G_MEMSET */
    581,
    /* G_BZERO */
    585,
    /* G_VECREDUCE_SEQ_FADD */
    588,
    /* G_VECREDUCE_SEQ_FMUL */
    591,
    /* G_VECREDUCE_FADD */
    594,
    /* G_VECREDUCE_FMUL */
    596,
    /* G_VECREDUCE_FMAX */
    598,
    /* G_VECREDUCE_FMIN */
    600,
    /* G_VECREDUCE_ADD */
    602,
    /* G_VECREDUCE_MUL */
    604,
    /* G_VECREDUCE_AND */
    606,
    /* G_VECREDUCE_OR */
    608,
    /* G_VECREDUCE_XOR */
    610,
    /* G_VECREDUCE_SMAX */
    612,
    /* G_VECREDUCE_SMIN */
    614,
    /* G_VECREDUCE_UMAX */
    616,
    /* G_VECREDUCE_UMIN */
    618,
    /* G_SBFX */
    620,
    /* G_UBFX */
    624,
    /* ATOMIC_CMP_SWAP_I128 */
    628,
    /* ATOMIC_LOAD_ADD_I128 */
    636,
    /* ATOMIC_LOAD_AND_I128 */
    642,
    /* ATOMIC_LOAD_NAND_I128 */
    648,
    /* ATOMIC_LOAD_OR_I128 */
    654,
    /* ATOMIC_LOAD_SUB_I128 */
    660,
    /* ATOMIC_LOAD_XOR_I128 */
    666,
    /* ATOMIC_SWAP_I128 */
    672,
    /* BUILD_QUADWORD */
    678,
    /* BUILD_UACC */
    681,
    /* CFENCE8 */
    683,
    /* CLRLSLDI */
    684,
    /* CLRLSLDI_rec */
    688,
    /* CLRLSLWI */
    692,
    /* CLRLSLWI_rec */
    696,
    /* CLRRDI */
    700,
    /* CLRRDI_rec */
    703,
    /* CLRRWI */
    706,
    /* CLRRWI_rec */
    709,
    /* DCBFL */
    712,
    /* DCBFLP */
    714,
    /* DCBFPS */
    716,
    /* DCBFx */
    718,
    /* DCBSTPS */
    720,
    /* DCBTCT */
    722,
    /* DCBTDS */
    725,
    /* DCBTSTCT */
    728,
    /* DCBTSTDS */
    731,
    /* DCBTSTT */
    734,
    /* DCBTSTx */
    736,
    /* DCBTT */
    738,
    /* DCBTx */
    740,
    /* DFLOADf32 */
    742,
    /* DFLOADf64 */
    745,
    /* DFSTOREf32 */
    748,
    /* DFSTOREf64 */
    751,
    /* EXTLDI */
    754,
    /* EXTLDI_rec */
    758,
    /* EXTLWI */
    762,
    /* EXTLWI_rec */
    766,
    /* EXTRDI */
    770,
    /* EXTRDI_rec */
    774,
    /* EXTRWI */
    778,
    /* EXTRWI_rec */
    782,
    /* INSLWI */
    786,
    /* INSLWI_rec */
    790,
    /* INSRDI */
    794,
    /* INSRDI_rec */
    798,
    /* INSRWI */
    802,
    /* INSRWI_rec */
    806,
    /* KILL_PAIR */
    810,
    /* LAx */
    812,
    /* LIWAX */
    815,
    /* LIWZX */
    818,
    /* RLWIMIbm */
    821,
    /* RLWIMIbm_rec */
    825,
    /* RLWINMbm */
    829,
    /* RLWINMbm_rec */
    833,
    /* RLWNMbm */
    837,
    /* RLWNMbm_rec */
    841,
    /* ROTRDI */
    845,
    /* ROTRDI_rec */
    848,
    /* ROTRWI */
    851,
    /* ROTRWI_rec */
    854,
    /* SLDI */
    857,
    /* SLDI_rec */
    860,
    /* SLWI */
    863,
    /* SLWI_rec */
    866,
    /* SPILLTOVSR_LD */
    869,
    /* SPILLTOVSR_LDX */
    872,
    /* SPILLTOVSR_ST */
    875,
    /* SPILLTOVSR_STX */
    878,
    /* SRDI */
    881,
    /* SRDI_rec */
    884,
    /* SRWI */
    887,
    /* SRWI_rec */
    890,
    /* STIWX */
    893,
    /* SUBI */
    896,
    /* SUBIC */
    899,
    /* SUBIC_rec */
    902,
    /* SUBIS */
    905,
    /* SUBPCIS */
    908,
    /* XFLOADf32 */
    910,
    /* XFLOADf64 */
    913,
    /* XFSTOREf32 */
    916,
    /* XFSTOREf64 */
    919,
    /* ADD4 */
    922,
    /* ADD4O */
    925,
    /* ADD4O_rec */
    928,
    /* ADD4TLS */
    931,
    /* ADD4_rec */
    934,
    /* ADD8 */
    937,
    /* ADD8O */
    940,
    /* ADD8O_rec */
    943,
    /* ADD8TLS */
    946,
    /* ADD8TLS_ */
    949,
    /* ADD8_rec */
    952,
    /* ADDC */
    955,
    /* ADDC8 */
    958,
    /* ADDC8O */
    961,
    /* ADDC8O_rec */
    964,
    /* ADDC8_rec */
    967,
    /* ADDCO */
    970,
    /* ADDCO_rec */
    973,
    /* ADDC_rec */
    976,
    /* ADDE */
    979,
    /* ADDE8 */
    982,
    /* ADDE8O */
    985,
    /* ADDE8O_rec */
    988,
    /* ADDE8_rec */
    991,
    /* ADDEO */
    994,
    /* ADDEO_rec */
    997,
    /* ADDEX */
    1000,
    /* ADDEX8 */
    1004,
    /* ADDE_rec */
    1008,
    /* ADDI */
    1011,
    /* ADDI8 */
    1014,
    /* ADDIC */
    1017,
    /* ADDIC8 */
    1020,
    /* ADDIC_rec */
    1023,
    /* ADDIS */
    1026,
    /* ADDIS8 */
    1029,
    /* ADDISdtprelHA */
    1032,
    /* ADDISdtprelHA32 */
    1035,
    /* ADDISgotTprelHA */
    1038,
    /* ADDIStlsgdHA */
    1041,
    /* ADDIStlsldHA */
    1044,
    /* ADDIStocHA */
    1047,
    /* ADDIStocHA8 */
    1050,
    /* ADDIdtprelL */
    1053,
    /* ADDIdtprelL32 */
    1056,
    /* ADDItlsgdL */
    1059,
    /* ADDItlsgdL32 */
    1062,
    /* ADDItlsgdLADDR */
    1065,
    /* ADDItlsgdLADDR32 */
    1069,
    /* ADDItlsldL */
    1073,
    /* ADDItlsldL32 */
    1076,
    /* ADDItlsldLADDR */
    1079,
    /* ADDItlsldLADDR32 */
    1083,
    /* ADDItoc */
    1087,
    /* ADDItoc8 */
    1090,
    /* ADDItocL */
    1093,
    /* ADDME */
    1096,
    /* ADDME8 */
    1098,
    /* ADDME8O */
    1100,
    /* ADDME8O_rec */
    1102,
    /* ADDME8_rec */
    1104,
    /* ADDMEO */
    1106,
    /* ADDMEO_rec */
    1108,
    /* ADDME_rec */
    1110,
    /* ADDPCIS */
    1112,
    /* ADDZE */
    1114,
    /* ADDZE8 */
    1116,
    /* ADDZE8O */
    1118,
    /* ADDZE8O_rec */
    1120,
    /* ADDZE8_rec */
    1122,
    /* ADDZEO */
    1124,
    /* ADDZEO_rec */
    1126,
    /* ADDZE_rec */
    1128,
    /* ADJCALLSTACKDOWN */
    1130,
    /* ADJCALLSTACKUP */
    1132,
    /* AND */
    1134,
    /* AND8 */
    1137,
    /* AND8_rec */
    1140,
    /* ANDC */
    1143,
    /* ANDC8 */
    1146,
    /* ANDC8_rec */
    1149,
    /* ANDC_rec */
    1152,
    /* ANDI8_rec */
    1155,
    /* ANDIS8_rec */
    1158,
    /* ANDIS_rec */
    1161,
    /* ANDI_rec */
    1164,
    /* ANDI_rec_1_EQ_BIT */
    1167,
    /* ANDI_rec_1_EQ_BIT8 */
    1169,
    /* ANDI_rec_1_GT_BIT */
    1171,
    /* ANDI_rec_1_GT_BIT8 */
    1173,
    /* AND_rec */
    1175,
    /* ATOMIC_CMP_SWAP_I16 */
    1178,
    /* ATOMIC_CMP_SWAP_I32 */
    1183,
    /* ATOMIC_CMP_SWAP_I64 */
    1188,
    /* ATOMIC_CMP_SWAP_I8 */
    1193,
    /* ATOMIC_LOAD_ADD_I16 */
    1198,
    /* ATOMIC_LOAD_ADD_I32 */
    1202,
    /* ATOMIC_LOAD_ADD_I64 */
    1206,
    /* ATOMIC_LOAD_ADD_I8 */
    1210,
    /* ATOMIC_LOAD_AND_I16 */
    1214,
    /* ATOMIC_LOAD_AND_I32 */
    1218,
    /* ATOMIC_LOAD_AND_I64 */
    1222,
    /* ATOMIC_LOAD_AND_I8 */
    1226,
    /* ATOMIC_LOAD_MAX_I16 */
    1230,
    /* ATOMIC_LOAD_MAX_I32 */
    1234,
    /* ATOMIC_LOAD_MAX_I64 */
    1238,
    /* ATOMIC_LOAD_MAX_I8 */
    1242,
    /* ATOMIC_LOAD_MIN_I16 */
    1246,
    /* ATOMIC_LOAD_MIN_I32 */
    1250,
    /* ATOMIC_LOAD_MIN_I64 */
    1254,
    /* ATOMIC_LOAD_MIN_I8 */
    1258,
    /* ATOMIC_LOAD_NAND_I16 */
    1262,
    /* ATOMIC_LOAD_NAND_I32 */
    1266,
    /* ATOMIC_LOAD_NAND_I64 */
    1270,
    /* ATOMIC_LOAD_NAND_I8 */
    1274,
    /* ATOMIC_LOAD_OR_I16 */
    1278,
    /* ATOMIC_LOAD_OR_I32 */
    1282,
    /* ATOMIC_LOAD_OR_I64 */
    1286,
    /* ATOMIC_LOAD_OR_I8 */
    1290,
    /* ATOMIC_LOAD_SUB_I16 */
    1294,
    /* ATOMIC_LOAD_SUB_I32 */
    1298,
    /* ATOMIC_LOAD_SUB_I64 */
    1302,
    /* ATOMIC_LOAD_SUB_I8 */
    1306,
    /* ATOMIC_LOAD_UMAX_I16 */
    1310,
    /* ATOMIC_LOAD_UMAX_I32 */
    1314,
    /* ATOMIC_LOAD_UMAX_I64 */
    1318,
    /* ATOMIC_LOAD_UMAX_I8 */
    1322,
    /* ATOMIC_LOAD_UMIN_I16 */
    1326,
    /* ATOMIC_LOAD_UMIN_I32 */
    1330,
    /* ATOMIC_LOAD_UMIN_I64 */
    1334,
    /* ATOMIC_LOAD_UMIN_I8 */
    1338,
    /* ATOMIC_LOAD_XOR_I16 */
    1342,
    /* ATOMIC_LOAD_XOR_I32 */
    1346,
    /* ATOMIC_LOAD_XOR_I64 */
    1350,
    /* ATOMIC_LOAD_XOR_I8 */
    1354,
    /* ATOMIC_SWAP_I16 */
    1358,
    /* ATOMIC_SWAP_I32 */
    1362,
    /* ATOMIC_SWAP_I64 */
    1366,
    /* ATOMIC_SWAP_I8 */
    1370,
    /* ATTN */
    1374,
    /* B */
    1374,
    /* BA */
    1375,
    /* BC */
    1376,
    /* BCC */
    1378,
    /* BCCA */
    1381,
    /* BCCCTR */
    1384,
    /* BCCCTR8 */
    1386,
    /* BCCCTRL */
    1388,
    /* BCCCTRL8 */
    1390,
    /* BCCL */
    1392,
    /* BCCLA */
    1395,
    /* BCCLR */
    1398,
    /* BCCLRL */
    1400,
    /* BCCTR */
    1402,
    /* BCCTR8 */
    1403,
    /* BCCTR8n */
    1404,
    /* BCCTRL */
    1405,
    /* BCCTRL8 */
    1406,
    /* BCCTRL8n */
    1407,
    /* BCCTRLn */
    1408,
    /* BCCTRn */
    1409,
    /* BCDADD_rec */
    1410,
    /* BCDCFN_rec */
    1414,
    /* BCDCFSQ_rec */
    1417,
    /* BCDCFZ_rec */
    1420,
    /* BCDCPSGN_rec */
    1423,
    /* BCDCTN_rec */
    1426,
    /* BCDCTSQ_rec */
    1428,
    /* BCDCTZ_rec */
    1430,
    /* BCDSETSGN_rec */
    1433,
    /* BCDSR_rec */
    1436,
    /* BCDSUB_rec */
    1440,
    /* BCDS_rec */
    1444,
    /* BCDTRUNC_rec */
    1448,
    /* BCDUS_rec */
    1452,
    /* BCDUTRUNC_rec */
    1455,
    /* BCL */
    1458,
    /* BCLR */
    1460,
    /* BCLRL */
    1461,
    /* BCLRLn */
    1462,
    /* BCLRn */
    1463,
    /* BCLalways */
    1464,
    /* BCLn */
    1465,
    /* BCTR */
    1467,
    /* BCTR8 */
    1467,
    /* BCTRL */
    1467,
    /* BCTRL8 */
    1467,
    /* BCTRL8_LDinto_toc */
    1467,
    /* BCTRL8_LDinto_toc_RM */
    1469,
    /* BCTRL8_RM */
    1471,
    /* BCTRL_LWZinto_toc */
    1471,
    /* BCTRL_LWZinto_toc_RM */
    1473,
    /* BCTRL_RM */
    1475,
    /* BCn */
    1475,
    /* BDNZ */
    1477,
    /* BDNZ8 */
    1478,
    /* BDNZA */
    1479,
    /* BDNZAm */
    1480,
    /* BDNZAp */
    1481,
    /* BDNZL */
    1482,
    /* BDNZLA */
    1483,
    /* BDNZLAm */
    1484,
    /* BDNZLAp */
    1485,
    /* BDNZLR */
    1486,
    /* BDNZLR8 */
    1486,
    /* BDNZLRL */
    1486,
    /* BDNZLRLm */
    1486,
    /* BDNZLRLp */
    1486,
    /* BDNZLRm */
    1486,
    /* BDNZLRp */
    1486,
    /* BDNZLm */
    1486,
    /* BDNZLp */
    1487,
    /* BDNZm */
    1488,
    /* BDNZp */
    1489,
    /* BDZ */
    1490,
    /* BDZ8 */
    1491,
    /* BDZA */
    1492,
    /* BDZAm */
    1493,
    /* BDZAp */
    1494,
    /* BDZL */
    1495,
    /* BDZLA */
    1496,
    /* BDZLAm */
    1497,
    /* BDZLAp */
    1498,
    /* BDZLR */
    1499,
    /* BDZLR8 */
    1499,
    /* BDZLRL */
    1499,
    /* BDZLRLm */
    1499,
    /* BDZLRLp */
    1499,
    /* BDZLRm */
    1499,
    /* BDZLRp */
    1499,
    /* BDZLm */
    1499,
    /* BDZLp */
    1500,
    /* BDZm */
    1501,
    /* BDZp */
    1502,
    /* BL */
    1503,
    /* BL8 */
    1504,
    /* BL8_NOP */
    1505,
    /* BL8_NOP_RM */
    1506,
    /* BL8_NOP_TLS */
    1507,
    /* BL8_NOTOC */
    1509,
    /* BL8_NOTOC_RM */
    1510,
    /* BL8_NOTOC_TLS */
    1511,
    /* BL8_RM */
    1513,
    /* BL8_TLS */
    1514,
    /* BL8_TLS_ */
    1516,
    /* BLA */
    1518,
    /* BLA8 */
    1519,
    /* BLA8_NOP */
    1520,
    /* BLA8_NOP_RM */
    1521,
    /* BLA8_RM */
    1522,
    /* BLA_RM */
    1523,
    /* BLR */
    1524,
    /* BLR8 */
    1524,
    /* BLRL */
    1524,
    /* BL_NOP */
    1524,
    /* BL_NOP_RM */
    1525,
    /* BL_RM */
    1526,
    /* BL_TLS */
    1527,
    /* BPERMD */
    1529,
    /* BRINC */
    1532,
    /* CFUGED */
    1535,
    /* CLRBHRB */
    1538,
    /* CMPB */
    1538,
    /* CMPB8 */
    1541,
    /* CMPD */
    1544,
    /* CMPDI */
    1547,
    /* CMPEQB */
    1550,
    /* CMPLD */
    1553,
    /* CMPLDI */
    1556,
    /* CMPLW */
    1559,
    /* CMPLWI */
    1562,
    /* CMPRB */
    1565,
    /* CMPRB8 */
    1569,
    /* CMPW */
    1573,
    /* CMPWI */
    1576,
    /* CNTLZD */
    1579,
    /* CNTLZDM */
    1581,
    /* CNTLZD_rec */
    1584,
    /* CNTLZW */
    1586,
    /* CNTLZW8 */
    1588,
    /* CNTLZW8_rec */
    1590,
    /* CNTLZW_rec */
    1592,
    /* CNTTZD */
    1594,
    /* CNTTZDM */
    1596,
    /* CNTTZD_rec */
    1599,
    /* CNTTZW */
    1601,
    /* CNTTZW8 */
    1603,
    /* CNTTZW8_rec */
    1605,
    /* CNTTZW_rec */
    1607,
    /* CP_ABORT */
    1609,
    /* CP_COPY */
    1609,
    /* CP_COPY8 */
    1612,
    /* CP_PASTE8_rec */
    1615,
    /* CP_PASTE_rec */
    1618,
    /* CR6SET */
    1621,
    /* CR6UNSET */
    1621,
    /* CRAND */
    1621,
    /* CRANDC */
    1624,
    /* CREQV */
    1627,
    /* CRNAND */
    1630,
    /* CRNOR */
    1633,
    /* CROR */
    1636,
    /* CRORC */
    1639,
    /* CRSET */
    1642,
    /* CRUNSET */
    1643,
    /* CRXOR */
    1644,
    /* CTRL_DEP */
    1647,
    /* DARN */
    1650,
    /* DCBA */
    1652,
    /* DCBF */
    1654,
    /* DCBFEP */
    1657,
    /* DCBI */
    1659,
    /* DCBST */
    1661,
    /* DCBSTEP */
    1663,
    /* DCBT */
    1665,
    /* DCBTEP */
    1668,
    /* DCBTST */
    1671,
    /* DCBTSTEP */
    1674,
    /* DCBZ */
    1677,
    /* DCBZEP */
    1679,
    /* DCBZL */
    1681,
    /* DCBZLEP */
    1683,
    /* DCCCI */
    1685,
    /* DIVD */
    1687,
    /* DIVDE */
    1690,
    /* DIVDEO */
    1693,
    /* DIVDEO_rec */
    1696,
    /* DIVDEU */
    1699,
    /* DIVDEUO */
    1702,
    /* DIVDEUO_rec */
    1705,
    /* DIVDEU_rec */
    1708,
    /* DIVDE_rec */
    1711,
    /* DIVDO */
    1714,
    /* DIVDO_rec */
    1717,
    /* DIVDU */
    1720,
    /* DIVDUO */
    1723,
    /* DIVDUO_rec */
    1726,
    /* DIVDU_rec */
    1729,
    /* DIVD_rec */
    1732,
    /* DIVW */
    1735,
    /* DIVWE */
    1738,
    /* DIVWEO */
    1741,
    /* DIVWEO_rec */
    1744,
    /* DIVWEU */
    1747,
    /* DIVWEUO */
    1750,
    /* DIVWEUO_rec */
    1753,
    /* DIVWEU_rec */
    1756,
    /* DIVWE_rec */
    1759,
    /* DIVWO */
    1762,
    /* DIVWO_rec */
    1765,
    /* DIVWU */
    1768,
    /* DIVWUO */
    1771,
    /* DIVWUO_rec */
    1774,
    /* DIVWU_rec */
    1777,
    /* DIVW_rec */
    1780,
    /* DSS */
    1783,
    /* DSSALL */
    1784,
    /* DST */
    1784,
    /* DST64 */
    1787,
    /* DSTST */
    1790,
    /* DSTST64 */
    1793,
    /* DSTSTT */
    1796,
    /* DSTSTT64 */
    1799,
    /* DSTT */
    1802,
    /* DSTT64 */
    1805,
    /* DYNALLOC */
    1808,
    /* DYNALLOC8 */
    1812,
    /* DYNAREAOFFSET */
    1816,
    /* DYNAREAOFFSET8 */
    1819,
    /* DecreaseCTR8Pseudo */
    1822,
    /* DecreaseCTRPseudo */
    1824,
    /* EFDABS */
    1826,
    /* EFDADD */
    1828,
    /* EFDCFS */
    1831,
    /* EFDCFSF */
    1833,
    /* EFDCFSI */
    1835,
    /* EFDCFSID */
    1837,
    /* EFDCFUF */
    1839,
    /* EFDCFUI */
    1841,
    /* EFDCFUID */
    1843,
    /* EFDCMPEQ */
    1845,
    /* EFDCMPGT */
    1848,
    /* EFDCMPLT */
    1851,
    /* EFDCTSF */
    1854,
    /* EFDCTSI */
    1856,
    /* EFDCTSIDZ */
    1858,
    /* EFDCTSIZ */
    1860,
    /* EFDCTUF */
    1862,
    /* EFDCTUI */
    1864,
    /* EFDCTUIDZ */
    1866,
    /* EFDCTUIZ */
    1868,
    /* EFDDIV */
    1870,
    /* EFDMUL */
    1873,
    /* EFDNABS */
    1876,
    /* EFDNEG */
    1878,
    /* EFDSUB */
    1880,
    /* EFDTSTEQ */
    1883,
    /* EFDTSTGT */
    1886,
    /* EFDTSTLT */
    1889,
    /* EFSABS */
    1892,
    /* EFSADD */
    1894,
    /* EFSCFD */
    1897,
    /* EFSCFSF */
    1899,
    /* EFSCFSI */
    1901,
    /* EFSCFUF */
    1903,
    /* EFSCFUI */
    1905,
    /* EFSCMPEQ */
    1907,
    /* EFSCMPGT */
    1910,
    /* EFSCMPLT */
    1913,
    /* EFSCTSF */
    1916,
    /* EFSCTSI */
    1918,
    /* EFSCTSIZ */
    1920,
    /* EFSCTUF */
    1922,
    /* EFSCTUI */
    1924,
    /* EFSCTUIZ */
    1926,
    /* EFSDIV */
    1928,
    /* EFSMUL */
    1931,
    /* EFSNABS */
    1934,
    /* EFSNEG */
    1936,
    /* EFSSUB */
    1938,
    /* EFSTSTEQ */
    1941,
    /* EFSTSTGT */
    1944,
    /* EFSTSTLT */
    1947,
    /* EH_SjLj_LongJmp32 */
    1950,
    /* EH_SjLj_LongJmp64 */
    1951,
    /* EH_SjLj_SetJmp32 */
    1952,
    /* EH_SjLj_SetJmp64 */
    1954,
    /* EH_SjLj_Setup */
    1956,
    /* EQV */
    1957,
    /* EQV8 */
    1960,
    /* EQV8_rec */
    1963,
    /* EQV_rec */
    1966,
    /* EVABS */
    1969,
    /* EVADDIW */
    1971,
    /* EVADDSMIAAW */
    1974,
    /* EVADDSSIAAW */
    1976,
    /* EVADDUMIAAW */
    1978,
    /* EVADDUSIAAW */
    1980,
    /* EVADDW */
    1982,
    /* EVAND */
    1985,
    /* EVANDC */
    1988,
    /* EVCMPEQ */
    1991,
    /* EVCMPGTS */
    1994,
    /* EVCMPGTU */
    1997,
    /* EVCMPLTS */
    2000,
    /* EVCMPLTU */
    2003,
    /* EVCNTLSW */
    2006,
    /* EVCNTLZW */
    2008,
    /* EVDIVWS */
    2010,
    /* EVDIVWU */
    2013,
    /* EVEQV */
    2016,
    /* EVEXTSB */
    2019,
    /* EVEXTSH */
    2021,
    /* EVFSABS */
    2023,
    /* EVFSADD */
    2025,
    /* EVFSCFSF */
    2028,
    /* EVFSCFSI */
    2030,
    /* EVFSCFUF */
    2032,
    /* EVFSCFUI */
    2034,
    /* EVFSCMPEQ */
    2036,
    /* EVFSCMPGT */
    2039,
    /* EVFSCMPLT */
    2042,
    /* EVFSCTSF */
    2045,
    /* EVFSCTSI */
    2047,
    /* EVFSCTSIZ */
    2049,
    /* EVFSCTUF */
    2051,
    /* EVFSCTUI */
    2053,
    /* EVFSCTUIZ */
    2055,
    /* EVFSDIV */
    2057,
    /* EVFSMUL */
    2060,
    /* EVFSNABS */
    2063,
    /* EVFSNEG */
    2065,
    /* EVFSSUB */
    2067,
    /* EVFSTSTEQ */
    2070,
    /* EVFSTSTGT */
    2073,
    /* EVFSTSTLT */
    2076,
    /* EVLDD */
    2079,
    /* EVLDDX */
    2082,
    /* EVLDH */
    2085,
    /* EVLDHX */
    2088,
    /* EVLDW */
    2091,
    /* EVLDWX */
    2094,
    /* EVLHHESPLAT */
    2097,
    /* EVLHHESPLATX */
    2100,
    /* EVLHHOSSPLAT */
    2103,
    /* EVLHHOSSPLATX */
    2106,
    /* EVLHHOUSPLAT */
    2109,
    /* EVLHHOUSPLATX */
    2112,
    /* EVLWHE */
    2115,
    /* EVLWHEX */
    2118,
    /* EVLWHOS */
    2121,
    /* EVLWHOSX */
    2124,
    /* EVLWHOU */
    2127,
    /* EVLWHOUX */
    2130,
    /* EVLWHSPLAT */
    2133,
    /* EVLWHSPLATX */
    2136,
    /* EVLWWSPLAT */
    2139,
    /* EVLWWSPLATX */
    2142,
    /* EVMERGEHI */
    2145,
    /* EVMERGEHILO */
    2148,
    /* EVMERGELO */
    2151,
    /* EVMERGELOHI */
    2154,
    /* EVMHEGSMFAA */
    2157,
    /* EVMHEGSMFAN */
    2160,
    /* EVMHEGSMIAA */
    2163,
    /* EVMHEGSMIAN */
    2166,
    /* EVMHEGUMIAA */
    2169,
    /* EVMHEGUMIAN */
    2172,
    /* EVMHESMF */
    2175,
    /* EVMHESMFA */
    2178,
    /* EVMHESMFAAW */
    2181,
    /* EVMHESMFANW */
    2184,
    /* EVMHESMI */
    2187,
    /* EVMHESMIA */
    2190,
    /* EVMHESMIAAW */
    2193,
    /* EVMHESMIANW */
    2196,
    /* EVMHESSF */
    2199,
    /* EVMHESSFA */
    2202,
    /* EVMHESSFAAW */
    2205,
    /* EVMHESSFANW */
    2208,
    /* EVMHESSIAAW */
    2211,
    /* EVMHESSIANW */
    2214,
    /* EVMHEUMI */
    2217,
    /* EVMHEUMIA */
    2220,
    /* EVMHEUMIAAW */
    2223,
    /* EVMHEUMIANW */
    2226,
    /* EVMHEUSIAAW */
    2229,
    /* EVMHEUSIANW */
    2232,
    /* EVMHOGSMFAA */
    2235,
    /* EVMHOGSMFAN */
    2238,
    /* EVMHOGSMIAA */
    2241,
    /* EVMHOGSMIAN */
    2244,
    /* EVMHOGUMIAA */
    2247,
    /* EVMHOGUMIAN */
    2250,
    /* EVMHOSMF */
    2253,
    /* EVMHOSMFA */
    2256,
    /* EVMHOSMFAAW */
    2259,
    /* EVMHOSMFANW */
    2262,
    /* EVMHOSMI */
    2265,
    /* EVMHOSMIA */
    2268,
    /* EVMHOSMIAAW */
    2271,
    /* EVMHOSMIANW */
    2274,
    /* EVMHOSSF */
    2277,
    /* EVMHOSSFA */
    2280,
    /* EVMHOSSFAAW */
    2283,
    /* EVMHOSSFANW */
    2286,
    /* EVMHOSSIAAW */
    2289,
    /* EVMHOSSIANW */
    2292,
    /* EVMHOUMI */
    2295,
    /* EVMHOUMIA */
    2298,
    /* EVMHOUMIAAW */
    2301,
    /* EVMHOUMIANW */
    2304,
    /* EVMHOUSIAAW */
    2307,
    /* EVMHOUSIANW */
    2310,
    /* EVMRA */
    2313,
    /* EVMWHSMF */
    2315,
    /* EVMWHSMFA */
    2318,
    /* EVMWHSMI */
    2321,
    /* EVMWHSMIA */
    2324,
    /* EVMWHSSF */
    2327,
    /* EVMWHSSFA */
    2330,
    /* EVMWHUMI */
    2333,
    /* EVMWHUMIA */
    2336,
    /* EVMWLSMIAAW */
    2339,
    /* EVMWLSMIANW */
    2342,
    /* EVMWLSSIAAW */
    2345,
    /* EVMWLSSIANW */
    2348,
    /* EVMWLUMI */
    2351,
    /* EVMWLUMIA */
    2354,
    /* EVMWLUMIAAW */
    2357,
    /* EVMWLUMIANW */
    2360,
    /* EVMWLUSIAAW */
    2363,
    /* EVMWLUSIANW */
    2366,
    /* EVMWSMF */
    2369,
    /* EVMWSMFA */
    2372,
    /* EVMWSMFAA */
    2375,
    /* EVMWSMFAN */
    2378,
    /* EVMWSMI */
    2381,
    /* EVMWSMIA */
    2384,
    /* EVMWSMIAA */
    2387,
    /* EVMWSMIAN */
    2390,
    /* EVMWSSF */
    2393,
    /* EVMWSSFA */
    2396,
    /* EVMWSSFAA */
    2399,
    /* EVMWSSFAN */
    2402,
    /* EVMWUMI */
    2405,
    /* EVMWUMIA */
    2408,
    /* EVMWUMIAA */
    2411,
    /* EVMWUMIAN */
    2414,
    /* EVNAND */
    2417,
    /* EVNEG */
    2420,
    /* EVNOR */
    2422,
    /* EVOR */
    2425,
    /* EVORC */
    2428,
    /* EVRLW */
    2431,
    /* EVRLWI */
    2434,
    /* EVRNDW */
    2437,
    /* EVSEL */
    2439,
    /* EVSLW */
    2443,
    /* EVSLWI */
    2446,
    /* EVSPLATFI */
    2449,
    /* EVSPLATI */
    2451,
    /* EVSRWIS */
    2453,
    /* EVSRWIU */
    2456,
    /* EVSRWS */
    2459,
    /* EVSRWU */
    2462,
    /* EVSTDD */
    2465,
    /* EVSTDDX */
    2468,
    /* EVSTDH */
    2471,
    /* EVSTDHX */
    2474,
    /* EVSTDW */
    2477,
    /* EVSTDWX */
    2480,
    /* EVSTWHE */
    2483,
    /* EVSTWHEX */
    2486,
    /* EVSTWHO */
    2489,
    /* EVSTWHOX */
    2492,
    /* EVSTWWE */
    2495,
    /* EVSTWWEX */
    2498,
    /* EVSTWWO */
    2501,
    /* EVSTWWOX */
    2504,
    /* EVSUBFSMIAAW */
    2507,
    /* EVSUBFSSIAAW */
    2509,
    /* EVSUBFUMIAAW */
    2511,
    /* EVSUBFUSIAAW */
    2513,
    /* EVSUBFW */
    2515,
    /* EVSUBIFW */
    2518,
    /* EVXOR */
    2521,
    /* EXTSB */
    2524,
    /* EXTSB8 */
    2526,
    /* EXTSB8_32_64 */
    2528,
    /* EXTSB8_rec */
    2530,
    /* EXTSB_rec */
    2532,
    /* EXTSH */
    2534,
    /* EXTSH8 */
    2536,
    /* EXTSH8_32_64 */
    2538,
    /* EXTSH8_rec */
    2540,
    /* EXTSH_rec */
    2542,
    /* EXTSW */
    2544,
    /* EXTSWSLI */
    2546,
    /* EXTSWSLI_32_64 */
    2549,
    /* EXTSWSLI_32_64_rec */
    2552,
    /* EXTSWSLI_rec */
    2555,
    /* EXTSW_32 */
    2558,
    /* EXTSW_32_64 */
    2560,
    /* EXTSW_32_64_rec */
    2562,
    /* EXTSW_rec */
    2564,
    /* EnforceIEIO */
    2566,
    /* FABSD */
    2566,
    /* FABSD_rec */
    2568,
    /* FABSS */
    2570,
    /* FABSS_rec */
    2572,
    /* FADD */
    2574,
    /* FADDS */
    2577,
    /* FADDS_rec */
    2580,
    /* FADD_rec */
    2583,
    /* FADDrtz */
    2586,
    /* FCFID */
    2589,
    /* FCFIDS */
    2591,
    /* FCFIDS_rec */
    2593,
    /* FCFIDU */
    2595,
    /* FCFIDUS */
    2597,
    /* FCFIDUS_rec */
    2599,
    /* FCFIDU_rec */
    2601,
    /* FCFID_rec */
    2603,
    /* FCMPOD */
    2605,
    /* FCMPOS */
    2608,
    /* FCMPUD */
    2611,
    /* FCMPUS */
    2614,
    /* FCPSGND */
    2617,
    /* FCPSGND_rec */
    2620,
    /* FCPSGNS */
    2623,
    /* FCPSGNS_rec */
    2626,
    /* FCTID */
    2629,
    /* FCTIDU */
    2631,
    /* FCTIDUZ */
    2633,
    /* FCTIDUZ_rec */
    2635,
    /* FCTIDU_rec */
    2637,
    /* FCTIDZ */
    2639,
    /* FCTIDZ_rec */
    2641,
    /* FCTID_rec */
    2643,
    /* FCTIW */
    2645,
    /* FCTIWU */
    2647,
    /* FCTIWUZ */
    2649,
    /* FCTIWUZ_rec */
    2651,
    /* FCTIWU_rec */
    2653,
    /* FCTIWZ */
    2655,
    /* FCTIWZ_rec */
    2657,
    /* FCTIW_rec */
    2659,
    /* FDIV */
    2661,
    /* FDIVS */
    2664,
    /* FDIVS_rec */
    2667,
    /* FDIV_rec */
    2670,
    /* FMADD */
    2673,
    /* FMADDS */
    2677,
    /* FMADDS_rec */
    2681,
    /* FMADD_rec */
    2685,
    /* FMR */
    2689,
    /* FMR_rec */
    2691,
    /* FMSUB */
    2693,
    /* FMSUBS */
    2697,
    /* FMSUBS_rec */
    2701,
    /* FMSUB_rec */
    2705,
    /* FMUL */
    2709,
    /* FMULS */
    2712,
    /* FMULS_rec */
    2715,
    /* FMUL_rec */
    2718,
    /* FNABSD */
    2721,
    /* FNABSD_rec */
    2723,
    /* FNABSS */
    2725,
    /* FNABSS_rec */
    2727,
    /* FNEGD */
    2729,
    /* FNEGD_rec */
    2731,
    /* FNEGS */
    2733,
    /* FNEGS_rec */
    2735,
    /* FNMADD */
    2737,
    /* FNMADDS */
    2741,
    /* FNMADDS_rec */
    2745,
    /* FNMADD_rec */
    2749,
    /* FNMSUB */
    2753,
    /* FNMSUBS */
    2757,
    /* FNMSUBS_rec */
    2761,
    /* FNMSUB_rec */
    2765,
    /* FRE */
    2769,
    /* FRES */
    2771,
    /* FRES_rec */
    2773,
    /* FRE_rec */
    2775,
    /* FRIMD */
    2777,
    /* FRIMD_rec */
    2779,
    /* FRIMS */
    2781,
    /* FRIMS_rec */
    2783,
    /* FRIND */
    2785,
    /* FRIND_rec */
    2787,
    /* FRINS */
    2789,
    /* FRINS_rec */
    2791,
    /* FRIPD */
    2793,
    /* FRIPD_rec */
    2795,
    /* FRIPS */
    2797,
    /* FRIPS_rec */
    2799,
    /* FRIZD */
    2801,
    /* FRIZD_rec */
    2803,
    /* FRIZS */
    2805,
    /* FRIZS_rec */
    2807,
    /* FRSP */
    2809,
    /* FRSP_rec */
    2811,
    /* FRSQRTE */
    2813,
    /* FRSQRTES */
    2815,
    /* FRSQRTES_rec */
    2817,
    /* FRSQRTE_rec */
    2819,
    /* FSELD */
    2821,
    /* FSELD_rec */
    2825,
    /* FSELS */
    2829,
    /* FSELS_rec */
    2833,
    /* FSQRT */
    2837,
    /* FSQRTS */
    2839,
    /* FSQRTS_rec */
    2841,
    /* FSQRT_rec */
    2843,
    /* FSUB */
    2845,
    /* FSUBS */
    2848,
    /* FSUBS_rec */
    2851,
    /* FSUB_rec */
    2854,
    /* FTDIV */
    2857,
    /* FTSQRT */
    2860,
    /* GETtlsADDR */
    2862,
    /* GETtlsADDR32 */
    2865,
    /* GETtlsADDR32AIX */
    2868,
    /* GETtlsADDR64AIX */
    2871,
    /* GETtlsADDRPCREL */
    2874,
    /* GETtlsldADDR */
    2877,
    /* GETtlsldADDR32 */
    2880,
    /* GETtlsldADDRPCREL */
    2883,
    /* HASHCHK */
    2886,
    /* HASHCHK8 */
    2889,
    /* HASHCHKP */
    2892,
    /* HASHCHKP8 */
    2895,
    /* HASHST */
    2898,
    /* HASHST8 */
    2901,
    /* HASHSTP */
    2904,
    /* HASHSTP8 */
    2907,
    /* HRFID */
    2910,
    /* ICBI */
    2910,
    /* ICBIEP */
    2912,
    /* ICBLC */
    2914,
    /* ICBLQ */
    2917,
    /* ICBT */
    2920,
    /* ICBTLS */
    2923,
    /* ICCCI */
    2926,
    /* ISEL */
    2928,
    /* ISEL8 */
    2932,
    /* ISYNC */
    2936,
    /* LA */
    2936,
    /* LA8 */
    2939,
    /* LBARX */
    2942,
    /* LBARXL */
    2945,
    /* LBEPX */
    2948,
    /* LBZ */
    2951,
    /* LBZ8 */
    2954,
    /* LBZCIX */
    2957,
    /* LBZU */
    2960,
    /* LBZU8 */
    2964,
    /* LBZUX */
    2968,
    /* LBZUX8 */
    2972,
    /* LBZX */
    2976,
    /* LBZX8 */
    2979,
    /* LBZXTLS */
    2982,
    /* LBZXTLS_ */
    2985,
    /* LBZXTLS_32 */
    2988,
    /* LD */
    2991,
    /* LDARX */
    2994,
    /* LDARXL */
    2997,
    /* LDAT */
    3000,
    /* LDBRX */
    3003,
    /* LDCIX */
    3006,
    /* LDU */
    3009,
    /* LDUX */
    3013,
    /* LDX */
    3017,
    /* LDXTLS */
    3020,
    /* LDXTLS_ */
    3023,
    /* LDgotTprelL */
    3026,
    /* LDgotTprelL32 */
    3029,
    /* LDtoc */
    3032,
    /* LDtocBA */
    3035,
    /* LDtocCPT */
    3038,
    /* LDtocJTI */
    3041,
    /* LDtocL */
    3044,
    /* LFD */
    3047,
    /* LFDEPX */
    3050,
    /* LFDU */
    3053,
    /* LFDUX */
    3057,
    /* LFDX */
    3061,
    /* LFIWAX */
    3064,
    /* LFIWZX */
    3067,
    /* LFS */
    3070,
    /* LFSU */
    3073,
    /* LFSUX */
    3077,
    /* LFSX */
    3081,
    /* LHA */
    3084,
    /* LHA8 */
    3087,
    /* LHARX */
    3090,
    /* LHARXL */
    3093,
    /* LHAU */
    3096,
    /* LHAU8 */
    3100,
    /* LHAUX */
    3104,
    /* LHAUX8 */
    3108,
    /* LHAX */
    3112,
    /* LHAX8 */
    3115,
    /* LHBRX */
    3118,
    /* LHBRX8 */
    3121,
    /* LHEPX */
    3124,
    /* LHZ */
    3127,
    /* LHZ8 */
    3130,
    /* LHZCIX */
    3133,
    /* LHZU */
    3136,
    /* LHZU8 */
    3140,
    /* LHZUX */
    3144,
    /* LHZUX8 */
    3148,
    /* LHZX */
    3152,
    /* LHZX8 */
    3155,
    /* LHZXTLS */
    3158,
    /* LHZXTLS_ */
    3161,
    /* LHZXTLS_32 */
    3164,
    /* LI */
    3167,
    /* LI8 */
    3169,
    /* LIS */
    3171,
    /* LIS8 */
    3173,
    /* LMW */
    3175,
    /* LQ */
    3178,
    /* LQARX */
    3181,
    /* LQARXL */
    3184,
    /* LQX_PSEUDO */
    3187,
    /* LSWI */
    3190,
    /* LVEBX */
    3193,
    /* LVEHX */
    3196,
    /* LVEWX */
    3199,
    /* LVSL */
    3202,
    /* LVSR */
    3205,
    /* LVX */
    3208,
    /* LVXL */
    3211,
    /* LWA */
    3214,
    /* LWARX */
    3217,
    /* LWARXL */
    3220,
    /* LWAT */
    3223,
    /* LWAUX */
    3226,
    /* LWAX */
    3230,
    /* LWAX_32 */
    3233,
    /* LWA_32 */
    3236,
    /* LWBRX */
    3239,
    /* LWBRX8 */
    3242,
    /* LWEPX */
    3245,
    /* LWZ */
    3248,
    /* LWZ8 */
    3251,
    /* LWZCIX */
    3254,
    /* LWZU */
    3257,
    /* LWZU8 */
    3261,
    /* LWZUX */
    3265,
    /* LWZUX8 */
    3269,
    /* LWZX */
    3273,
    /* LWZX8 */
    3276,
    /* LWZXTLS */
    3279,
    /* LWZXTLS_ */
    3282,
    /* LWZXTLS_32 */
    3285,
    /* LWZtoc */
    3288,
    /* LWZtocL */
    3291,
    /* LXSD */
    3294,
    /* LXSDX */
    3297,
    /* LXSIBZX */
    3300,
    /* LXSIHZX */
    3303,
    /* LXSIWAX */
    3306,
    /* LXSIWZX */
    3309,
    /* LXSSP */
    3312,
    /* LXSSPX */
    3315,
    /* LXV */
    3318,
    /* LXVB16X */
    3321,
    /* LXVD2X */
    3324,
    /* LXVDSX */
    3327,
    /* LXVH8X */
    3330,
    /* LXVKQ */
    3333,
    /* LXVL */
    3335,
    /* LXVLL */
    3338,
    /* LXVP */
    3341,
    /* LXVPX */
    3344,
    /* LXVRBX */
    3347,
    /* LXVRDX */
    3350,
    /* LXVRHX */
    3353,
    /* LXVRWX */
    3356,
    /* LXVW4X */
    3359,
    /* LXVWSX */
    3362,
    /* LXVX */
    3365,
    /* MADDHD */
    3368,
    /* MADDHDU */
    3372,
    /* MADDLD */
    3376,
    /* MADDLD8 */
    3380,
    /* MBAR */
    3384,
    /* MCRF */
    3385,
    /* MCRFS */
    3387,
    /* MCRXRX */
    3389,
    /* MFBHRBE */
    3390,
    /* MFCR */
    3393,
    /* MFCR8 */
    3394,
    /* MFCTR */
    3395,
    /* MFCTR8 */
    3396,
    /* MFDCR */
    3397,
    /* MFFS */
    3399,
    /* MFFSCDRN */
    3400,
    /* MFFSCDRNI */
    3402,
    /* MFFSCE */
    3404,
    /* MFFSCRN */
    3405,
    /* MFFSCRNI */
    3407,
    /* MFFSL */
    3409,
    /* MFFS_rec */
    3410,
    /* MFLR */
    3411,
    /* MFLR8 */
    3412,
    /* MFMSR */
    3413,
    /* MFOCRF */
    3414,
    /* MFOCRF8 */
    3416,
    /* MFPMR */
    3418,
    /* MFSPR */
    3420,
    /* MFSPR8 */
    3422,
    /* MFSR */
    3424,
    /* MFSRIN */
    3426,
    /* MFTB */
    3428,
    /* MFTB8 */
    3430,
    /* MFUDSCR */
    3431,
    /* MFVRD */
    3432,
    /* MFVRSAVE */
    3434,
    /* MFVRSAVEv */
    3435,
    /* MFVRWZ */
    3437,
    /* MFVSCR */
    3439,
    /* MFVSRD */
    3440,
    /* MFVSRLD */
    3442,
    /* MFVSRWZ */
    3444,
    /* MODSD */
    3446,
    /* MODSW */
    3449,
    /* MODUD */
    3452,
    /* MODUW */
    3455,
    /* MSGSYNC */
    3458,
    /* MSYNC */
    3458,
    /* MTCRF */
    3458,
    /* MTCRF8 */
    3460,
    /* MTCTR */
    3462,
    /* MTCTR8 */
    3463,
    /* MTCTR8Pseudo */
    3464,
    /* MTCTR8loop */
    3465,
    /* MTCTRPseudo */
    3466,
    /* MTCTRloop */
    3467,
    /* MTDCR */
    3468,
    /* MTFSB0 */
    3470,
    /* MTFSB1 */
    3471,
    /* MTFSF */
    3472,
    /* MTFSFI */
    3476,
    /* MTFSFI_rec */
    3479,
    /* MTFSFIb */
    3482,
    /* MTFSF_rec */
    3484,
    /* MTFSFb */
    3488,
    /* MTLR */
    3490,
    /* MTLR8 */
    3491,
    /* MTMSR */
    3492,
    /* MTMSRD */
    3494,
    /* MTOCRF */
    3496,
    /* MTOCRF8 */
    3498,
    /* MTPMR */
    3500,
    /* MTSPR */
    3502,
    /* MTSPR8 */
    3504,
    /* MTSR */
    3506,
    /* MTSRIN */
    3508,
    /* MTUDSCR */
    3510,
    /* MTVRD */
    3511,
    /* MTVRSAVE */
    3513,
    /* MTVRSAVEv */
    3514,
    /* MTVRWA */
    3516,
    /* MTVRWZ */
    3518,
    /* MTVSCR */
    3520,
    /* MTVSRBM */
    3521,
    /* MTVSRBMI */
    3523,
    /* MTVSRD */
    3525,
    /* MTVSRDD */
    3527,
    /* MTVSRDM */
    3530,
    /* MTVSRHM */
    3532,
    /* MTVSRQM */
    3534,
    /* MTVSRWA */
    3536,
    /* MTVSRWM */
    3538,
    /* MTVSRWS */
    3540,
    /* MTVSRWZ */
    3542,
    /* MULHD */
    3544,
    /* MULHDU */
    3547,
    /* MULHDU_rec */
    3550,
    /* MULHD_rec */
    3553,
    /* MULHW */
    3556,
    /* MULHWU */
    3559,
    /* MULHWU_rec */
    3562,
    /* MULHW_rec */
    3565,
    /* MULLD */
    3568,
    /* MULLDO */
    3571,
    /* MULLDO_rec */
    3574,
    /* MULLD_rec */
    3577,
    /* MULLI */
    3580,
    /* MULLI8 */
    3583,
    /* MULLW */
    3586,
    /* MULLWO */
    3589,
    /* MULLWO_rec */
    3592,
    /* MULLW_rec */
    3595,
    /* MoveGOTtoLR */
    3598,
    /* MovePCtoLR */
    3598,
    /* MovePCtoLR8 */
    3598,
    /* NAND */
    3598,
    /* NAND8 */
    3601,
    /* NAND8_rec */
    3604,
    /* NAND_rec */
    3607,
    /* NAP */
    3610,
    /* NEG */
    3610,
    /* NEG8 */
    3612,
    /* NEG8O */
    3614,
    /* NEG8O_rec */
    3616,
    /* NEG8_rec */
    3618,
    /* NEGO */
    3620,
    /* NEGO_rec */
    3622,
    /* NEG_rec */
    3624,
    /* NOP */
    3626,
    /* NOP_GT_PWR6 */
    3626,
    /* NOP_GT_PWR7 */
    3626,
    /* NOR */
    3626,
    /* NOR8 */
    3629,
    /* NOR8_rec */
    3632,
    /* NOR_rec */
    3635,
    /* OR */
    3638,
    /* OR8 */
    3641,
    /* OR8_rec */
    3644,
    /* ORC */
    3647,
    /* ORC8 */
    3650,
    /* ORC8_rec */
    3653,
    /* ORC_rec */
    3656,
    /* ORI */
    3659,
    /* ORI8 */
    3662,
    /* ORIS */
    3665,
    /* ORIS8 */
    3668,
    /* OR_rec */
    3671,
    /* PADDI */
    3674,
    /* PADDI8 */
    3677,
    /* PADDI8pc */
    3680,
    /* PADDIdtprel */
    3683,
    /* PADDIpc */
    3686,
    /* PDEPD */
    3689,
    /* PEXTD */
    3692,
    /* PLBZ */
    3695,
    /* PLBZ8 */
    3698,
    /* PLBZ8pc */
    3701,
    /* PLBZpc */
    3704,
    /* PLD */
    3707,
    /* PLDpc */
    3710,
    /* PLFD */
    3713,
    /* PLFDpc */
    3716,
    /* PLFS */
    3719,
    /* PLFSpc */
    3722,
    /* PLHA */
    3725,
    /* PLHA8 */
    3728,
    /* PLHA8pc */
    3731,
    /* PLHApc */
    3734,
    /* PLHZ */
    3737,
    /* PLHZ8 */
    3740,
    /* PLHZ8pc */
    3743,
    /* PLHZpc */
    3746,
    /* PLI */
    3749,
    /* PLI8 */
    3751,
    /* PLWA */
    3753,
    /* PLWA8 */
    3756,
    /* PLWA8pc */
    3759,
    /* PLWApc */
    3762,
    /* PLWZ */
    3765,
    /* PLWZ8 */
    3768,
    /* PLWZ8pc */
    3771,
    /* PLWZpc */
    3774,
    /* PLXSD */
    3777,
    /* PLXSDpc */
    3780,
    /* PLXSSP */
    3783,
    /* PLXSSPpc */
    3786,
    /* PLXV */
    3789,
    /* PLXVP */
    3792,
    /* PLXVPpc */
    3795,
    /* PLXVpc */
    3798,
    /* PMXVBF16GER2 */
    3801,
    /* PMXVBF16GER2NN */
    3807,
    /* PMXVBF16GER2NP */
    3814,
    /* PMXVBF16GER2PN */
    3821,
    /* PMXVBF16GER2PP */
    3828,
    /* PMXVF16GER2 */
    3835,
    /* PMXVF16GER2NN */
    3841,
    /* PMXVF16GER2NP */
    3848,
    /* PMXVF16GER2PN */
    3855,
    /* PMXVF16GER2PP */
    3862,
    /* PMXVF32GER */
    3869,
    /* PMXVF32GERNN */
    3874,
    /* PMXVF32GERNP */
    3880,
    /* PMXVF32GERPN */
    3886,
    /* PMXVF32GERPP */
    3892,
    /* PMXVF64GER */
    3898,
    /* PMXVF64GERNN */
    3903,
    /* PMXVF64GERNP */
    3909,
    /* PMXVF64GERPN */
    3915,
    /* PMXVF64GERPP */
    3921,
    /* PMXVI16GER2 */
    3927,
    /* PMXVI16GER2PP */
    3933,
    /* PMXVI16GER2S */
    3940,
    /* PMXVI16GER2SPP */
    3946,
    /* PMXVI4GER8 */
    3953,
    /* PMXVI4GER8PP */
    3959,
    /* PMXVI8GER4 */
    3966,
    /* PMXVI8GER4PP */
    3972,
    /* PMXVI8GER4SPP */
    3979,
    /* POPCNTB */
    3986,
    /* POPCNTB8 */
    3988,
    /* POPCNTD */
    3990,
    /* POPCNTW */
    3992,
    /* PPC32GOT */
    3994,
    /* PPC32PICGOT */
    3995,
    /* PREPARE_PROBED_ALLOCA_32 */
    3997,
    /* PREPARE_PROBED_ALLOCA_64 */
    4002,
    /* PREPARE_PROBED_ALLOCA_NEGSIZE_SAME_REG_32 */
    4007,
    /* PREPARE_PROBED_ALLOCA_NEGSIZE_SAME_REG_64 */
    4012,
    /* PROBED_ALLOCA_32 */
    4017,
    /* PROBED_ALLOCA_64 */
    4021,
    /* PROBED_STACKALLOC_32 */
    4025,
    /* PROBED_STACKALLOC_64 */
    4028,
    /* PSTB */
    4031,
    /* PSTB8 */
    4034,
    /* PSTB8pc */
    4037,
    /* PSTBpc */
    4040,
    /* PSTD */
    4043,
    /* PSTDpc */
    4046,
    /* PSTFD */
    4049,
    /* PSTFDpc */
    4052,
    /* PSTFS */
    4055,
    /* PSTFSpc */
    4058,
    /* PSTH */
    4061,
    /* PSTH8 */
    4064,
    /* PSTH8pc */
    4067,
    /* PSTHpc */
    4070,
    /* PSTW */
    4073,
    /* PSTW8 */
    4076,
    /* PSTW8pc */
    4079,
    /* PSTWpc */
    4082,
    /* PSTXSD */
    4085,
    /* PSTXSDpc */
    4088,
    /* PSTXSSP */
    4091,
    /* PSTXSSPpc */
    4094,
    /* PSTXV */
    4097,
    /* PSTXVP */
    4100,
    /* PSTXVPpc */
    4103,
    /* PSTXVpc */
    4106,
    /* PseudoEIEIO */
    4109,
    /* RESTORE_ACC */
    4109,
    /* RESTORE_CR */
    4112,
    /* RESTORE_CRBIT */
    4115,
    /* RESTORE_QUADWORD */
    4118,
    /* RESTORE_UACC */
    4121,
    /* RFCI */
    4124,
    /* RFDI */
    4124,
    /* RFEBB */
    4124,
    /* RFI */
    4125,
    /* RFID */
    4125,
    /* RFMCI */
    4125,
    /* RLDCL */
    4125,
    /* RLDCL_rec */
    4129,
    /* RLDCR */
    4133,
    /* RLDCR_rec */
    4137,
    /* RLDIC */
    4141,
    /* RLDICL */
    4145,
    /* RLDICL_32 */
    4149,
    /* RLDICL_32_64 */
    4153,
    /* RLDICL_32_rec */
    4157,
    /* RLDICL_rec */
    4161,
    /* RLDICR */
    4165,
    /* RLDICR_32 */
    4169,
    /* RLDICR_rec */
    4173,
    /* RLDIC_rec */
    4177,
    /* RLDIMI */
    4181,
    /* RLDIMI_rec */
    4186,
    /* RLWIMI */
    4191,
    /* RLWIMI8 */
    4197,
    /* RLWIMI8_rec */
    4203,
    /* RLWIMI_rec */
    4209,
    /* RLWINM */
    4215,
    /* RLWINM8 */
    4220,
    /* RLWINM8_rec */
    4225,
    /* RLWINM_rec */
    4230,
    /* RLWNM */
    4235,
    /* RLWNM8 */
    4240,
    /* RLWNM8_rec */
    4245,
    /* RLWNM_rec */
    4250,
    /* ReadTB */
    4255,
    /* SC */
    4257,
    /* SELECT_CC_F16 */
    4258,
    /* SELECT_CC_F4 */
    4263,
    /* SELECT_CC_F8 */
    4268,
    /* SELECT_CC_I4 */
    4273,
    /* SELECT_CC_I8 */
    4278,
    /* SELECT_CC_SPE */
    4283,
    /* SELECT_CC_SPE4 */
    4288,
    /* SELECT_CC_VRRC */
    4293,
    /* SELECT_CC_VSFRC */
    4298,
    /* SELECT_CC_VSRC */
    4303,
    /* SELECT_CC_VSSRC */
    4308,
    /* SELECT_F16 */
    4313,
    /* SELECT_F4 */
    4317,
    /* SELECT_F8 */
    4321,
    /* SELECT_I4 */
    4325,
    /* SELECT_I8 */
    4329,
    /* SELECT_SPE */
    4333,
    /* SELECT_SPE4 */
    4337,
    /* SELECT_VRRC */
    4341,
    /* SELECT_VSFRC */
    4345,
    /* SELECT_VSRC */
    4349,
    /* SELECT_VSSRC */
    4353,
    /* SETB */
    4357,
    /* SETB8 */
    4359,
    /* SETBC */
    4361,
    /* SETBC8 */
    4363,
    /* SETBCR */
    4365,
    /* SETBCR8 */
    4367,
    /* SETFLM */
    4369,
    /* SETNBC */
    4371,
    /* SETNBC8 */
    4373,
    /* SETNBCR */
    4375,
    /* SETNBCR8 */
    4377,
    /* SETRND */
    4379,
    /* SETRNDi */
    4381,
    /* SLBFEE_rec */
    4383,
    /* SLBIA */
    4385,
    /* SLBIE */
    4385,
    /* SLBIEG */
    4386,
    /* SLBMFEE */
    4388,
    /* SLBMFEV */
    4390,
    /* SLBMTE */
    4392,
    /* SLBSYNC */
    4394,
    /* SLD */
    4394,
    /* SLD_rec */
    4397,
    /* SLW */
    4400,
    /* SLW8 */
    4403,
    /* SLW8_rec */
    4406,
    /* SLW_rec */
    4409,
    /* SPELWZ */
    4412,
    /* SPELWZX */
    4415,
    /* SPESTW */
    4418,
    /* SPESTWX */
    4421,
    /* SPILL_ACC */
    4424,
    /* SPILL_CR */
    4427,
    /* SPILL_CRBIT */
    4430,
    /* SPILL_QUADWORD */
    4433,
    /* SPILL_UACC */
    4436,
    /* SPLIT_QUADWORD */
    4439,
    /* SRAD */
    4442,
    /* SRADI */
    4445,
    /* SRADI_32 */
    4448,
    /* SRADI_rec */
    4451,
    /* SRAD_rec */
    4454,
    /* SRAW */
    4457,
    /* SRAWI */
    4460,
    /* SRAWI_rec */
    4463,
    /* SRAW_rec */
    4466,
    /* SRD */
    4469,
    /* SRD_rec */
    4472,
    /* SRW */
    4475,
    /* SRW8 */
    4478,
    /* SRW8_rec */
    4481,
    /* SRW_rec */
    4484,
    /* STB */
    4487,
    /* STB8 */
    4490,
    /* STBCIX */
    4493,
    /* STBCX */
    4496,
    /* STBEPX */
    4499,
    /* STBU */
    4502,
    /* STBU8 */
    4506,
    /* STBUX */
    4510,
    /* STBUX8 */
    4514,
    /* STBX */
    4518,
    /* STBX8 */
    4521,
    /* STBXTLS */
    4524,
    /* STBXTLS_ */
    4527,
    /* STBXTLS_32 */
    4530,
    /* STD */
    4533,
    /* STDAT */
    4536,
    /* STDBRX */
    4539,
    /* STDCIX */
    4542,
    /* STDCX */
    4545,
    /* STDU */
    4548,
    /* STDUX */
    4552,
    /* STDX */
    4556,
    /* STDXTLS */
    4559,
    /* STDXTLS_ */
    4562,
    /* STFD */
    4565,
    /* STFDEPX */
    4568,
    /* STFDU */
    4571,
    /* STFDUX */
    4575,
    /* STFDX */
    4579,
    /* STFIWX */
    4582,
    /* STFS */
    4585,
    /* STFSU */
    4588,
    /* STFSUX */
    4592,
    /* STFSX */
    4596,
    /* STH */
    4599,
    /* STH8 */
    4602,
    /* STHBRX */
    4605,
    /* STHCIX */
    4608,
    /* STHCX */
    4611,
    /* STHEPX */
    4614,
    /* STHU */
    4617,
    /* STHU8 */
    4621,
    /* STHUX */
    4625,
    /* STHUX8 */
    4629,
    /* STHX */
    4633,
    /* STHX8 */
    4636,
    /* STHXTLS */
    4639,
    /* STHXTLS_ */
    4642,
    /* STHXTLS_32 */
    4645,
    /* STMW */
    4648,
    /* STOP */
    4651,
    /* STQ */
    4651,
    /* STQCX */
    4654,
    /* STQX_PSEUDO */
    4657,
    /* STSWI */
    4660,
    /* STVEBX */
    4663,
    /* STVEHX */
    4666,
    /* STVEWX */
    4669,
    /* STVX */
    4672,
    /* STVXL */
    4675,
    /* STW */
    4678,
    /* STW8 */
    4681,
    /* STWAT */
    4684,
    /* STWBRX */
    4687,
    /* STWCIX */
    4690,
    /* STWCX */
    4693,
    /* STWEPX */
    4696,
    /* STWU */
    4699,
    /* STWU8 */
    4703,
    /* STWUX */
    4707,
    /* STWUX8 */
    4711,
    /* STWX */
    4715,
    /* STWX8 */
    4718,
    /* STWXTLS */
    4721,
    /* STWXTLS_ */
    4724,
    /* STWXTLS_32 */
    4727,
    /* STXSD */
    4730,
    /* STXSDX */
    4733,
    /* STXSIBX */
    4736,
    /* STXSIBXv */
    4739,
    /* STXSIHX */
    4742,
    /* STXSIHXv */
    4745,
    /* STXSIWX */
    4748,
    /* STXSSP */
    4751,
    /* STXSSPX */
    4754,
    /* STXV */
    4757,
    /* STXVB16X */
    4760,
    /* STXVD2X */
    4763,
    /* STXVH8X */
    4766,
    /* STXVL */
    4769,
    /* STXVLL */
    4772,
    /* STXVP */
    4775,
    /* STXVPX */
    4778,
    /* STXVRBX */
    4781,
    /* STXVRDX */
    4784,
    /* STXVRHX */
    4787,
    /* STXVRWX */
    4790,
    /* STXVW4X */
    4793,
    /* STXVX */
    4796,
    /* SUBF */
    4799,
    /* SUBF8 */
    4802,
    /* SUBF8O */
    4805,
    /* SUBF8O_rec */
    4808,
    /* SUBF8_rec */
    4811,
    /* SUBFC */
    4814,
    /* SUBFC8 */
    4817,
    /* SUBFC8O */
    4820,
    /* SUBFC8O_rec */
    4823,
    /* SUBFC8_rec */
    4826,
    /* SUBFCO */
    4829,
    /* SUBFCO_rec */
    4832,
    /* SUBFC_rec */
    4835,
    /* SUBFE */
    4838,
    /* SUBFE8 */
    4841,
    /* SUBFE8O */
    4844,
    /* SUBFE8O_rec */
    4847,
    /* SUBFE8_rec */
    4850,
    /* SUBFEO */
    4853,
    /* SUBFEO_rec */
    4856,
    /* SUBFE_rec */
    4859,
    /* SUBFIC */
    4862,
    /* SUBFIC8 */
    4865,
    /* SUBFME */
    4868,
    /* SUBFME8 */
    4870,
    /* SUBFME8O */
    4872,
    /* SUBFME8O_rec */
    4874,
    /* SUBFME8_rec */
    4876,
    /* SUBFMEO */
    4878,
    /* SUBFMEO_rec */
    4880,
    /* SUBFME_rec */
    4882,
    /* SUBFO */
    4884,
    /* SUBFO_rec */
    4887,
    /* SUBFZE */
    4890,
    /* SUBFZE8 */
    4892,
    /* SUBFZE8O */
    4894,
    /* SUBFZE8O_rec */
    4896,
    /* SUBFZE8_rec */
    4898,
    /* SUBFZEO */
    4900,
    /* SUBFZEO_rec */
    4902,
    /* SUBFZE_rec */
    4904,
    /* SUBF_rec */
    4906,
    /* SYNC */
    4909,
    /* TABORT */
    4910,
    /* TABORTDC */
    4911,
    /* TABORTDCI */
    4914,
    /* TABORTWC */
    4917,
    /* TABORTWCI */
    4920,
    /* TAILB */
    4923,
    /* TAILB8 */
    4924,
    /* TAILBA */
    4925,
    /* TAILBA8 */
    4926,
    /* TAILBCTR */
    4927,
    /* TAILBCTR8 */
    4927,
    /* TBEGIN */
    4927,
    /* TBEGIN_RET */
    4928,
    /* TCHECK */
    4930,
    /* TCHECK_RET */
    4931,
    /* TCRETURNai */
    4932,
    /* TCRETURNai8 */
    4934,
    /* TCRETURNdi */
    4936,
    /* TCRETURNdi8 */
    4938,
    /* TCRETURNri */
    4940,
    /* TCRETURNri8 */
    4942,
    /* TD */
    4944,
    /* TDI */
    4947,
    /* TEND */
    4950,
    /* TLBIA */
    4951,
    /* TLBIE */
    4951,
    /* TLBIEL */
    4953,
    /* TLBIVAX */
    4954,
    /* TLBLD */
    4956,
    /* TLBLI */
    4957,
    /* TLBRE */
    4958,
    /* TLBRE2 */
    4958,
    /* TLBSX */
    4961,
    /* TLBSX2 */
    4963,
    /* TLBSX2D */
    4966,
    /* TLBSYNC */
    4969,
    /* TLBWE */
    4969,
    /* TLBWE2 */
    4969,
    /* TLSGDAIX */
    4972,
    /* TLSGDAIX8 */
    4975,
    /* TRAP */
    4978,
    /* TRECHKPT */
    4978,
    /* TRECLAIM */
    4978,
    /* TSR */
    4979,
    /* TW */
    4980,
    /* TWI */
    4983,
    /* UNENCODED_NOP */
    4986,
    /* UpdateGBR */
    4986,
    /* VABSDUB */
    4989,
    /* VABSDUH */
    4992,
    /* VABSDUW */
    4995,
    /* VADDCUQ */
    4998,
    /* VADDCUW */
    5001,
    /* VADDECUQ */
    5004,
    /* VADDEUQM */
    5008,
    /* VADDFP */
    5012,
    /* VADDSBS */
    5015,
    /* VADDSHS */
    5018,
    /* VADDSWS */
    5021,
    /* VADDUBM */
    5024,
    /* VADDUBS */
    5027,
    /* VADDUDM */
    5030,
    /* VADDUHM */
    5033,
    /* VADDUHS */
    5036,
    /* VADDUQM */
    5039,
    /* VADDUWM */
    5042,
    /* VADDUWS */
    5045,
    /* VAND */
    5048,
    /* VANDC */
    5051,
    /* VAVGSB */
    5054,
    /* VAVGSH */
    5057,
    /* VAVGSW */
    5060,
    /* VAVGUB */
    5063,
    /* VAVGUH */
    5066,
    /* VAVGUW */
    5069,
    /* VBPERMD */
    5072,
    /* VBPERMQ */
    5075,
    /* VCFSX */
    5078,
    /* VCFSX_0 */
    5081,
    /* VCFUGED */
    5083,
    /* VCFUX */
    5086,
    /* VCFUX_0 */
    5089,
    /* VCIPHER */
    5091,
    /* VCIPHERLAST */
    5094,
    /* VCLRLB */
    5097,
    /* VCLRRB */
    5100,
    /* VCLZB */
    5103,
    /* VCLZD */
    5105,
    /* VCLZDM */
    5107,
    /* VCLZH */
    5110,
    /* VCLZLSBB */
    5112,
    /* VCLZW */
    5114,
    /* VCMPBFP */
    5116,
    /* VCMPBFP_rec */
    5119,
    /* VCMPEQFP */
    5122,
    /* VCMPEQFP_rec */
    5125,
    /* VCMPEQUB */
    5128,
    /* VCMPEQUB_rec */
    5131,
    /* VCMPEQUD */
    5134,
    /* VCMPEQUD_rec */
    5137,
    /* VCMPEQUH */
    5140,
    /* VCMPEQUH_rec */
    5143,
    /* VCMPEQUQ */
    5146,
    /* VCMPEQUQ_rec */
    5149,
    /* VCMPEQUW */
    5152,
    /* VCMPEQUW_rec */
    5155,
    /* VCMPGEFP */
    5158,
    /* VCMPGEFP_rec */
    5161,
    /* VCMPGTFP */
    5164,
    /* VCMPGTFP_rec */
    5167,
    /* VCMPGTSB */
    5170,
    /* VCMPGTSB_rec */
    5173,
    /* VCMPGTSD */
    5176,
    /* VCMPGTSD_rec */
    5179,
    /* VCMPGTSH */
    5182,
    /* VCMPGTSH_rec */
    5185,
    /* VCMPGTSQ */
    5188,
    /* VCMPGTSQ_rec */
    5191,
    /* VCMPGTSW */
    5194,
    /* VCMPGTSW_rec */
    5197,
    /* VCMPGTUB */
    5200,
    /* VCMPGTUB_rec */
    5203,
    /* VCMPGTUD */
    5206,
    /* VCMPGTUD_rec */
    5209,
    /* VCMPGTUH */
    5212,
    /* VCMPGTUH_rec */
    5215,
    /* VCMPGTUQ */
    5218,
    /* VCMPGTUQ_rec */
    5221,
    /* VCMPGTUW */
    5224,
    /* VCMPGTUW_rec */
    5227,
    /* VCMPNEB */
    5230,
    /* VCMPNEB_rec */
    5233,
    /* VCMPNEH */
    5236,
    /* VCMPNEH_rec */
    5239,
    /* VCMPNEW */
    5242,
    /* VCMPNEW_rec */
    5245,
    /* VCMPNEZB */
    5248,
    /* VCMPNEZB_rec */
    5251,
    /* VCMPNEZH */
    5254,
    /* VCMPNEZH_rec */
    5257,
    /* VCMPNEZW */
    5260,
    /* VCMPNEZW_rec */
    5263,
    /* VCMPSQ */
    5266,
    /* VCMPUQ */
    5269,
    /* VCNTMBB */
    5272,
    /* VCNTMBD */
    5275,
    /* VCNTMBH */
    5278,
    /* VCNTMBW */
    5281,
    /* VCTSXS */
    5284,
    /* VCTSXS_0 */
    5287,
    /* VCTUXS */
    5289,
    /* VCTUXS_0 */
    5292,
    /* VCTZB */
    5294,
    /* VCTZD */
    5296,
    /* VCTZDM */
    5298,
    /* VCTZH */
    5301,
    /* VCTZLSBB */
    5303,
    /* VCTZW */
    5305,
    /* VDIVESD */
    5307,
    /* VDIVESQ */
    5310,
    /* VDIVESW */
    5313,
    /* VDIVEUD */
    5316,
    /* VDIVEUQ */
    5319,
    /* VDIVEUW */
    5322,
    /* VDIVSD */
    5325,
    /* VDIVSQ */
    5328,
    /* VDIVSW */
    5331,
    /* VDIVUD */
    5334,
    /* VDIVUQ */
    5337,
    /* VDIVUW */
    5340,
    /* VEQV */
    5343,
    /* VEXPANDBM */
    5346,
    /* VEXPANDDM */
    5348,
    /* VEXPANDHM */
    5350,
    /* VEXPANDQM */
    5352,
    /* VEXPANDWM */
    5354,
    /* VEXPTEFP */
    5356,
    /* VEXTDDVLX */
    5358,
    /* VEXTDDVRX */
    5362,
    /* VEXTDUBVLX */
    5366,
    /* VEXTDUBVRX */
    5370,
    /* VEXTDUHVLX */
    5374,
    /* VEXTDUHVRX */
    5378,
    /* VEXTDUWVLX */
    5382,
    /* VEXTDUWVRX */
    5386,
    /* VEXTRACTBM */
    5390,
    /* VEXTRACTD */
    5392,
    /* VEXTRACTDM */
    5395,
    /* VEXTRACTHM */
    5397,
    /* VEXTRACTQM */
    5399,
    /* VEXTRACTUB */
    5401,
    /* VEXTRACTUH */
    5404,
    /* VEXTRACTUW */
    5407,
    /* VEXTRACTWM */
    5410,
    /* VEXTSB2D */
    5412,
    /* VEXTSB2Ds */
    5414,
    /* VEXTSB2W */
    5416,
    /* VEXTSB2Ws */
    5418,
    /* VEXTSD2Q */
    5420,
    /* VEXTSH2D */
    5422,
    /* VEXTSH2Ds */
    5424,
    /* VEXTSH2W */
    5426,
    /* VEXTSH2Ws */
    5428,
    /* VEXTSW2D */
    5430,
    /* VEXTSW2Ds */
    5432,
    /* VEXTUBLX */
    5434,
    /* VEXTUBRX */
    5437,
    /* VEXTUHLX */
    5440,
    /* VEXTUHRX */
    5443,
    /* VEXTUWLX */
    5446,
    /* VEXTUWRX */
    5449,
    /* VGBBD */
    5452,
    /* VGNB */
    5454,
    /* VINSBLX */
    5457,
    /* VINSBRX */
    5461,
    /* VINSBVLX */
    5465,
    /* VINSBVRX */
    5469,
    /* VINSD */
    5473,
    /* VINSDLX */
    5477,
    /* VINSDRX */
    5481,
    /* VINSERTB */
    5485,
    /* VINSERTD */
    5489,
    /* VINSERTH */
    5492,
    /* VINSERTW */
    5496,
    /* VINSHLX */
    5499,
    /* VINSHRX */
    5503,
    /* VINSHVLX */
    5507,
    /* VINSHVRX */
    5511,
    /* VINSW */
    5515,
    /* VINSWLX */
    5519,
    /* VINSWRX */
    5523,
    /* VINSWVLX */
    5527,
    /* VINSWVRX */
    5531,
    /* VLOGEFP */
    5535,
    /* VMADDFP */
    5537,
    /* VMAXFP */
    5541,
    /* VMAXSB */
    5544,
    /* VMAXSD */
    5547,
    /* VMAXSH */
    5550,
    /* VMAXSW */
    5553,
    /* VMAXUB */
    5556,
    /* VMAXUD */
    5559,
    /* VMAXUH */
    5562,
    /* VMAXUW */
    5565,
    /* VMHADDSHS */
    5568,
    /* VMHRADDSHS */
    5572,
    /* VMINFP */
    5576,
    /* VMINSB */
    5579,
    /* VMINSD */
    5582,
    /* VMINSH */
    5585,
    /* VMINSW */
    5588,
    /* VMINUB */
    5591,
    /* VMINUD */
    5594,
    /* VMINUH */
    5597,
    /* VMINUW */
    5600,
    /* VMLADDUHM */
    5603,
    /* VMODSD */
    5607,
    /* VMODSQ */
    5610,
    /* VMODSW */
    5613,
    /* VMODUD */
    5616,
    /* VMODUQ */
    5619,
    /* VMODUW */
    5622,
    /* VMRGEW */
    5625,
    /* VMRGHB */
    5628,
    /* VMRGHH */
    5631,
    /* VMRGHW */
    5634,
    /* VMRGLB */
    5637,
    /* VMRGLH */
    5640,
    /* VMRGLW */
    5643,
    /* VMRGOW */
    5646,
    /* VMSUMCUD */
    5649,
    /* VMSUMMBM */
    5653,
    /* VMSUMSHM */
    5657,
    /* VMSUMSHS */
    5661,
    /* VMSUMUBM */
    5665,
    /* VMSUMUDM */
    5669,
    /* VMSUMUHM */
    5673,
    /* VMSUMUHS */
    5677,
    /* VMUL10CUQ */
    5681,
    /* VMUL10ECUQ */
    5683,
    /* VMUL10EUQ */
    5686,
    /* VMUL10UQ */
    5689,
    /* VMULESB */
    5691,
    /* VMULESD */
    5694,
    /* VMULESH */
    5697,
    /* VMULESW */
    5700,
    /* VMULEUB */
    5703,
    /* VMULEUD */
    5706,
    /* VMULEUH */
    5709,
    /* VMULEUW */
    5712,
    /* VMULHSD */
    5715,
    /* VMULHSW */
    5718,
    /* VMULHUD */
    5721,
    /* VMULHUW */
    5724,
    /* VMULLD */
    5727,
    /* VMULOSB */
    5730,
    /* VMULOSD */
    5733,
    /* VMULOSH */
    5736,
    /* VMULOSW */
    5739,
    /* VMULOUB */
    5742,
    /* VMULOUD */
    5745,
    /* VMULOUH */
    5748,
    /* VMULOUW */
    5751,
    /* VMULUWM */
    5754,
    /* VNAND */
    5757,
    /* VNCIPHER */
    5760,
    /* VNCIPHERLAST */
    5763,
    /* VNEGD */
    5766,
    /* VNEGW */
    5768,
    /* VNMSUBFP */
    5770,
    /* VNOR */
    5774,
    /* VOR */
    5777,
    /* VORC */
    5780,
    /* VPDEPD */
    5783,
    /* VPERM */
    5786,
    /* VPERMR */
    5790,
    /* VPERMXOR */
    5794,
    /* VPEXTD */
    5798,
    /* VPKPX */
    5801,
    /* VPKSDSS */
    5804,
    /* VPKSDUS */
    5807,
    /* VPKSHSS */
    5810,
    /* VPKSHUS */
    5813,
    /* VPKSWSS */
    5816,
    /* VPKSWUS */
    5819,
    /* VPKUDUM */
    5822,
    /* VPKUDUS */
    5825,
    /* VPKUHUM */
    5828,
    /* VPKUHUS */
    5831,
    /* VPKUWUM */
    5834,
    /* VPKUWUS */
    5837,
    /* VPMSUMB */
    5840,
    /* VPMSUMD */
    5843,
    /* VPMSUMH */
    5846,
    /* VPMSUMW */
    5849,
    /* VPOPCNTB */
    5852,
    /* VPOPCNTD */
    5854,
    /* VPOPCNTH */
    5856,
    /* VPOPCNTW */
    5858,
    /* VPRTYBD */
    5860,
    /* VPRTYBQ */
    5862,
    /* VPRTYBW */
    5864,
    /* VREFP */
    5866,
    /* VRFIM */
    5868,
    /* VRFIN */
    5870,
    /* VRFIP */
    5872,
    /* VRFIZ */
    5874,
    /* VRLB */
    5876,
    /* VRLD */
    5879,
    /* VRLDMI */
    5882,
    /* VRLDNM */
    5886,
    /* VRLH */
    5889,
    /* VRLQ */
    5892,
    /* VRLQMI */
    5895,
    /* VRLQNM */
    5899,
    /* VRLW */
    5902,
    /* VRLWMI */
    5905,
    /* VRLWNM */
    5909,
    /* VRSQRTEFP */
    5912,
    /* VSBOX */
    5914,
    /* VSEL */
    5916,
    /* VSHASIGMAD */
    5920,
    /* VSHASIGMAW */
    5924,
    /* VSL */
    5928,
    /* VSLB */
    5931,
    /* VSLD */
    5934,
    /* VSLDBI */
    5937,
    /* VSLDOI */
    5941,
    /* VSLH */
    5945,
    /* VSLO */
    5948,
    /* VSLQ */
    5951,
    /* VSLV */
    5954,
    /* VSLW */
    5957,
    /* VSPLTB */
    5960,
    /* VSPLTBs */
    5963,
    /* VSPLTH */
    5966,
    /* VSPLTHs */
    5969,
    /* VSPLTISB */
    5972,
    /* VSPLTISH */
    5974,
    /* VSPLTISW */
    5976,
    /* VSPLTW */
    5978,
    /* VSR */
    5981,
    /* VSRAB */
    5984,
    /* VSRAD */
    5987,
    /* VSRAH */
    5990,
    /* VSRAQ */
    5993,
    /* VSRAW */
    5996,
    /* VSRB */
    5999,
    /* VSRD */
    6002,
    /* VSRDBI */
    6005,
    /* VSRH */
    6009,
    /* VSRO */
    6012,
    /* VSRQ */
    6015,
    /* VSRV */
    6018,
    /* VSRW */
    6021,
    /* VSTRIBL */
    6024,
    /* VSTRIBL_rec */
    6026,
    /* VSTRIBR */
    6028,
    /* VSTRIBR_rec */
    6030,
    /* VSTRIHL */
    6032,
    /* VSTRIHL_rec */
    6034,
    /* VSTRIHR */
    6036,
    /* VSTRIHR_rec */
    6038,
    /* VSUBCUQ */
    6040,
    /* VSUBCUW */
    6043,
    /* VSUBECUQ */
    6046,
    /* VSUBEUQM */
    6050,
    /* VSUBFP */
    6054,
    /* VSUBSBS */
    6057,
    /* VSUBSHS */
    6060,
    /* VSUBSWS */
    6063,
    /* VSUBUBM */
    6066,
    /* VSUBUBS */
    6069,
    /* VSUBUDM */
    6072,
    /* VSUBUHM */
    6075,
    /* VSUBUHS */
    6078,
    /* VSUBUQM */
    6081,
    /* VSUBUWM */
    6084,
    /* VSUBUWS */
    6087,
    /* VSUM2SWS */
    6090,
    /* VSUM4SBS */
    6093,
    /* VSUM4SHS */
    6096,
    /* VSUM4UBS */
    6099,
    /* VSUMSWS */
    6102,
    /* VUPKHPX */
    6105,
    /* VUPKHSB */
    6107,
    /* VUPKHSH */
    6109,
    /* VUPKHSW */
    6111,
    /* VUPKLPX */
    6113,
    /* VUPKLSB */
    6115,
    /* VUPKLSH */
    6117,
    /* VUPKLSW */
    6119,
    /* VXOR */
    6121,
    /* V_SET0 */
    6124,
    /* V_SET0B */
    6125,
    /* V_SET0H */
    6126,
    /* V_SETALLONES */
    6127,
    /* V_SETALLONESB */
    6128,
    /* V_SETALLONESH */
    6129,
    /* WAIT */
    6130,
    /* WRTEE */
    6131,
    /* WRTEEI */
    6132,
    /* XOR */
    6133,
    /* XOR8 */
    6136,
    /* XOR8_rec */
    6139,
    /* XORI */
    6142,
    /* XORI8 */
    6145,
    /* XORIS */
    6148,
    /* XORIS8 */
    6151,
    /* XOR_rec */
    6154,
    /* XSABSDP */
    6157,
    /* XSABSQP */
    6159,
    /* XSADDDP */
    6161,
    /* XSADDQP */
    6164,
    /* XSADDQPO */
    6167,
    /* XSADDSP */
    6170,
    /* XSCMPEQDP */
    6173,
    /* XSCMPEXPDP */
    6176,
    /* XSCMPEXPQP */
    6179,
    /* XSCMPGEDP */
    6182,
    /* XSCMPGTDP */
    6185,
    /* XSCMPODP */
    6188,
    /* XSCMPOQP */
    6191,
    /* XSCMPUDP */
    6194,
    /* XSCMPUQP */
    6197,
    /* XSCPSGNDP */
    6200,
    /* XSCPSGNQP */
    6203,
    /* XSCVDPHP */
    6206,
    /* XSCVDPQP */
    6208,
    /* XSCVDPSP */
    6210,
    /* XSCVDPSPN */
    6212,
    /* XSCVDPSXDS */
    6214,
    /* XSCVDPSXDSs */
    6216,
    /* XSCVDPSXWS */
    6218,
    /* XSCVDPSXWSs */
    6220,
    /* XSCVDPUXDS */
    6222,
    /* XSCVDPUXDSs */
    6224,
    /* XSCVDPUXWS */
    6226,
    /* XSCVDPUXWSs */
    6228,
    /* XSCVHPDP */
    6230,
    /* XSCVQPDP */
    6232,
    /* XSCVQPDPO */
    6234,
    /* XSCVQPSDZ */
    6236,
    /* XSCVQPSQZ */
    6238,
    /* XSCVQPSWZ */
    6240,
    /* XSCVQPUDZ */
    6242,
    /* XSCVQPUQZ */
    6244,
    /* XSCVQPUWZ */
    6246,
    /* XSCVSDQP */
    6248,
    /* XSCVSPDP */
    6250,
    /* XSCVSPDPN */
    6252,
    /* XSCVSQQP */
    6254,
    /* XSCVSXDDP */
    6256,
    /* XSCVSXDSP */
    6258,
    /* XSCVUDQP */
    6260,
    /* XSCVUQQP */
    6262,
    /* XSCVUXDDP */
    6264,
    /* XSCVUXDSP */
    6266,
    /* XSDIVDP */
    6268,
    /* XSDIVQP */
    6271,
    /* XSDIVQPO */
    6274,
    /* XSDIVSP */
    6277,
    /* XSIEXPDP */
    6280,
    /* XSIEXPQP */
    6283,
    /* XSMADDADP */
    6286,
    /* XSMADDASP */
    6290,
    /* XSMADDMDP */
    6294,
    /* XSMADDMSP */
    6298,
    /* XSMADDQP */
    6302,
    /* XSMADDQPO */
    6306,
    /* XSMAXCDP */
    6310,
    /* XSMAXCQP */
    6313,
    /* XSMAXDP */
    6316,
    /* XSMAXJDP */
    6319,
    /* XSMINCDP */
    6322,
    /* XSMINCQP */
    6325,
    /* XSMINDP */
    6328,
    /* XSMINJDP */
    6331,
    /* XSMSUBADP */
    6334,
    /* XSMSUBASP */
    6338,
    /* XSMSUBMDP */
    6342,
    /* XSMSUBMSP */
    6346,
    /* XSMSUBQP */
    6350,
    /* XSMSUBQPO */
    6354,
    /* XSMULDP */
    6358,
    /* XSMULQP */
    6361,
    /* XSMULQPO */
    6364,
    /* XSMULSP */
    6367,
    /* XSNABSDP */
    6370,
    /* XSNABSDPs */
    6372,
    /* XSNABSQP */
    6374,
    /* XSNEGDP */
    6376,
    /* XSNEGQP */
    6378,
    /* XSNMADDADP */
    6380,
    /* XSNMADDASP */
    6384,
    /* XSNMADDMDP */
    6388,
    /* XSNMADDMSP */
    6392,
    /* XSNMADDQP */
    6396,
    /* XSNMADDQPO */
    6400,
    /* XSNMSUBADP */
    6404,
    /* XSNMSUBASP */
    6408,
    /* XSNMSUBMDP */
    6412,
    /* XSNMSUBMSP */
    6416,
    /* XSNMSUBQP */
    6420,
    /* XSNMSUBQPO */
    6424,
    /* XSRDPI */
    6428,
    /* XSRDPIC */
    6430,
    /* XSRDPIM */
    6432,
    /* XSRDPIP */
    6434,
    /* XSRDPIZ */
    6436,
    /* XSREDP */
    6438,
    /* XSRESP */
    6440,
    /* XSRQPI */
    6442,
    /* XSRQPIX */
    6446,
    /* XSRQPXP */
    6450,
    /* XSRSP */
    6454,
    /* XSRSQRTEDP */
    6456,
    /* XSRSQRTESP */
    6458,
    /* XSSQRTDP */
    6460,
    /* XSSQRTQP */
    6462,
    /* XSSQRTQPO */
    6464,
    /* XSSQRTSP */
    6466,
    /* XSSUBDP */
    6468,
    /* XSSUBQP */
    6471,
    /* XSSUBQPO */
    6474,
    /* XSSUBSP */
    6477,
    /* XSTDIVDP */
    6480,
    /* XSTSQRTDP */
    6483,
    /* XSTSTDCDP */
    6485,
    /* XSTSTDCQP */
    6488,
    /* XSTSTDCSP */
    6491,
    /* XSXEXPDP */
    6494,
    /* XSXEXPQP */
    6496,
    /* XSXSIGDP */
    6498,
    /* XSXSIGQP */
    6500,
    /* XVABSDP */
    6502,
    /* XVABSSP */
    6504,
    /* XVADDDP */
    6506,
    /* XVADDSP */
    6509,
    /* XVBF16GER2 */
    6512,
    /* XVBF16GER2NN */
    6515,
    /* XVBF16GER2NP */
    6519,
    /* XVBF16GER2PN */
    6523,
    /* XVBF16GER2PP */
    6527,
    /* XVCMPEQDP */
    6531,
    /* XVCMPEQDP_rec */
    6534,
    /* XVCMPEQSP */
    6537,
    /* XVCMPEQSP_rec */
    6540,
    /* XVCMPGEDP */
    6543,
    /* XVCMPGEDP_rec */
    6546,
    /* XVCMPGESP */
    6549,
    /* XVCMPGESP_rec */
    6552,
    /* XVCMPGTDP */
    6555,
    /* XVCMPGTDP_rec */
    6558,
    /* XVCMPGTSP */
    6561,
    /* XVCMPGTSP_rec */
    6564,
    /* XVCPSGNDP */
    6567,
    /* XVCPSGNSP */
    6570,
    /* XVCVBF16SPN */
    6573,
    /* XVCVDPSP */
    6575,
    /* XVCVDPSXDS */
    6577,
    /* XVCVDPSXWS */
    6579,
    /* XVCVDPUXDS */
    6581,
    /* XVCVDPUXWS */
    6583,
    /* XVCVHPSP */
    6585,
    /* XVCVSPBF16 */
    6587,
    /* XVCVSPDP */
    6589,
    /* XVCVSPHP */
    6591,
    /* XVCVSPSXDS */
    6593,
    /* XVCVSPSXWS */
    6595,
    /* XVCVSPUXDS */
    6597,
    /* XVCVSPUXWS */
    6599,
    /* XVCVSXDDP */
    6601,
    /* XVCVSXDSP */
    6603,
    /* XVCVSXWDP */
    6605,
    /* XVCVSXWSP */
    6607,
    /* XVCVUXDDP */
    6609,
    /* XVCVUXDSP */
    6611,
    /* XVCVUXWDP */
    6613,
    /* XVCVUXWSP */
    6615,
    /* XVDIVDP */
    6617,
    /* XVDIVSP */
    6620,
    /* XVF16GER2 */
    6623,
    /* XVF16GER2NN */
    6626,
    /* XVF16GER2NP */
    6630,
    /* XVF16GER2PN */
    6634,
    /* XVF16GER2PP */
    6638,
    /* XVF32GER */
    6642,
    /* XVF32GERNN */
    6645,
    /* XVF32GERNP */
    6649,
    /* XVF32GERPN */
    6653,
    /* XVF32GERPP */
    6657,
    /* XVF64GER */
    6661,
    /* XVF64GERNN */
    6664,
    /* XVF64GERNP */
    6668,
    /* XVF64GERPN */
    6672,
    /* XVF64GERPP */
    6676,
    /* XVI16GER2 */
    6680,
    /* XVI16GER2PP */
    6683,
    /* XVI16GER2S */
    6687,
    /* XVI16GER2SPP */
    6690,
    /* XVI4GER8 */
    6694,
    /* XVI4GER8PP */
    6697,
    /* XVI8GER4 */
    6701,
    /* XVI8GER4PP */
    6704,
    /* XVI8GER4SPP */
    6708,
    /* XVIEXPDP */
    6712,
    /* XVIEXPSP */
    6715,
    /* XVMADDADP */
    6718,
    /* XVMADDASP */
    6722,
    /* XVMADDMDP */
    6726,
    /* XVMADDMSP */
    6730,
    /* XVMAXDP */
    6734,
    /* XVMAXSP */
    6737,
    /* XVMINDP */
    6740,
    /* XVMINSP */
    6743,
    /* XVMSUBADP */
    6746,
    /* XVMSUBASP */
    6750,
    /* XVMSUBMDP */
    6754,
    /* XVMSUBMSP */
    6758,
    /* XVMULDP */
    6762,
    /* XVMULSP */
    6765,
    /* XVNABSDP */
    6768,
    /* XVNABSSP */
    6770,
    /* XVNEGDP */
    6772,
    /* XVNEGSP */
    6774,
    /* XVNMADDADP */
    6776,
    /* XVNMADDASP */
    6780,
    /* XVNMADDMDP */
    6784,
    /* XVNMADDMSP */
    6788,
    /* XVNMSUBADP */
    6792,
    /* XVNMSUBASP */
    6796,
    /* XVNMSUBMDP */
    6800,
    /* XVNMSUBMSP */
    6804,
    /* XVRDPI */
    6808,
    /* XVRDPIC */
    6810,
    /* XVRDPIM */
    6812,
    /* XVRDPIP */
    6814,
    /* XVRDPIZ */
    6816,
    /* XVREDP */
    6818,
    /* XVRESP */
    6820,
    /* XVRSPI */
    6822,
    /* XVRSPIC */
    6824,
    /* XVRSPIM */
    6826,
    /* XVRSPIP */
    6828,
    /* XVRSPIZ */
    6830,
    /* XVRSQRTEDP */
    6832,
    /* XVRSQRTESP */
    6834,
    /* XVSQRTDP */
    6836,
    /* XVSQRTSP */
    6838,
    /* XVSUBDP */
    6840,
    /* XVSUBSP */
    6843,
    /* XVTDIVDP */
    6846,
    /* XVTDIVSP */
    6849,
    /* XVTLSBB */
    6852,
    /* XVTSQRTDP */
    6854,
    /* XVTSQRTSP */
    6856,
    /* XVTSTDCDP */
    6858,
    /* XVTSTDCSP */
    6861,
    /* XVXEXPDP */
    6864,
    /* XVXEXPSP */
    6866,
    /* XVXSIGDP */
    6868,
    /* XVXSIGSP */
    6870,
    /* XXBLENDVB */
    6872,
    /* XXBLENDVD */
    6876,
    /* XXBLENDVH */
    6880,
    /* XXBLENDVW */
    6884,
    /* XXBRD */
    6888,
    /* XXBRH */
    6890,
    /* XXBRQ */
    6892,
    /* XXBRW */
    6894,
    /* XXEVAL */
    6896,
    /* XXEXTRACTUW */
    6901,
    /* XXGENPCVBM */
    6904,
    /* XXGENPCVDM */
    6907,
    /* XXGENPCVHM */
    6910,
    /* XXGENPCVWM */
    6913,
    /* XXINSERTW */
    6916,
    /* XXLAND */
    6920,
    /* XXLANDC */
    6923,
    /* XXLEQV */
    6926,
    /* XXLEQVOnes */
    6929,
    /* XXLNAND */
    6930,
    /* XXLNOR */
    6933,
    /* XXLOR */
    6936,
    /* XXLORC */
    6939,
    /* XXLORf */
    6942,
    /* XXLXOR */
    6945,
    /* XXLXORdpz */
    6948,
    /* XXLXORspz */
    6949,
    /* XXLXORz */
    6950,
    /* XXMFACC */
    6951,
    /* XXMRGHW */
    6953,
    /* XXMRGLW */
    6956,
    /* XXMTACC */
    6959,
    /* XXPERM */
    6961,
    /* XXPERMDI */
    6964,
    /* XXPERMDIs */
    6968,
    /* XXPERMR */
    6971,
    /* XXPERMX */
    6974,
    /* XXSEL */
    6979,
    /* XXSETACCZ */
    6983,
    /* XXSLDWI */
    6984,
    /* XXSLDWIs */
    6988,
    /* XXSPLTI32DX */
    6991,
    /* XXSPLTIB */
    6995,
    /* XXSPLTIDP */
    6997,
    /* XXSPLTIW */
    6999,
    /* XXSPLTW */
    7001,
    /* XXSPLTWs */
    7004,
    /* gBC */
    7007,
    /* gBCA */
    7010,
    /* gBCAat */
    7013,
    /* gBCCTR */
    7017,
    /* gBCCTRL */
    7020,
    /* gBCL */
    7023,
    /* gBCLA */
    7026,
    /* gBCLAat */
    7029,
    /* gBCLR */
    7033,
    /* gBCLRL */
    7036,
    /* gBCLat */
    7039,
    /* gBCat */
    7043,
  };

  using namespace OpTypes;
  const int16_t OpcodeOperandTypes[] = {
    
    /* PHI */
    -1, 
    /* INLINEASM */
    /* INLINEASM_BR */
    /* CFI_INSTRUCTION */
    i32imm, 
    /* EH_LABEL */
    i32imm, 
    /* GC_LABEL */
    i32imm, 
    /* ANNOTATION_LABEL */
    i32imm, 
    /* KILL */
    /* EXTRACT_SUBREG */
    -1, -1, i32imm, 
    /* INSERT_SUBREG */
    -1, -1, -1, i32imm, 
    /* IMPLICIT_DEF */
    -1, 
    /* SUBREG_TO_REG */
    -1, -1, -1, i32imm, 
    /* COPY_TO_REGCLASS */
    -1, -1, i32imm, 
    /* DBG_VALUE */
    /* DBG_VALUE_LIST */
    /* DBG_INSTR_REF */
    /* DBG_PHI */
    /* DBG_LABEL */
    -1, 
    /* REG_SEQUENCE */
    -1, -1, 
    /* COPY */
    -1, -1, 
    /* BUNDLE */
    /* LIFETIME_START */
    i32imm, 
    /* LIFETIME_END */
    i32imm, 
    /* PSEUDO_PROBE */
    i64imm, i64imm, i8imm, i32imm, 
    /* ARITH_FENCE */
    -1, -1, 
    /* STACKMAP */
    i64imm, i32imm, 
    /* FENTRY_CALL */
    /* PATCHPOINT */
    -1, i64imm, i32imm, -1, i32imm, i32imm, 
    /* LOAD_STACK_GUARD */
    -1, 
    /* PREALLOCATED_SETUP */
    i32imm, 
    /* PREALLOCATED_ARG */
    -1, i32imm, i32imm, 
    /* STATEPOINT */
    /* LOCAL_ESCAPE */
    -1, i32imm, 
    /* FAULTING_OP */
    -1, 
    /* PATCHABLE_OP */
    /* PATCHABLE_FUNCTION_ENTER */
    /* PATCHABLE_RET */
    /* PATCHABLE_FUNCTION_EXIT */
    /* PATCHABLE_TAIL_CALL */
    /* PATCHABLE_EVENT_CALL */
    -1, -1, 
    /* PATCHABLE_TYPED_EVENT_CALL */
    -1, -1, -1, 
    /* ICALL_BRANCH_FUNNEL */
    /* G_ASSERT_SEXT */
    type0, type0, untyped_imm_0, 
    /* G_ASSERT_ZEXT */
    type0, type0, untyped_imm_0, 
    /* G_ASSERT_ALIGN */
    type0, type0, untyped_imm_0, 
    /* G_ADD */
    type0, type0, type0, 
    /* G_SUB */
    type0, type0, type0, 
    /* G_MUL */
    type0, type0, type0, 
    /* G_SDIV */
    type0, type0, type0, 
    /* G_UDIV */
    type0, type0, type0, 
    /* G_SREM */
    type0, type0, type0, 
    /* G_UREM */
    type0, type0, type0, 
    /* G_SDIVREM */
    type0, type0, type0, type0, 
    /* G_UDIVREM */
    type0, type0, type0, type0, 
    /* G_AND */
    type0, type0, type0, 
    /* G_OR */
    type0, type0, type0, 
    /* G_XOR */
    type0, type0, type0, 
    /* G_IMPLICIT_DEF */
    type0, 
    /* G_PHI */
    type0, 
    /* G_FRAME_INDEX */
    type0, -1, 
    /* G_GLOBAL_VALUE */
    type0, -1, 
    /* G_EXTRACT */
    type0, type1, untyped_imm_0, 
    /* G_UNMERGE_VALUES */
    type0, type1, 
    /* G_INSERT */
    type0, type0, type1, untyped_imm_0, 
    /* G_MERGE_VALUES */
    type0, type1, 
    /* G_BUILD_VECTOR */
    type0, type1, 
    /* G_BUILD_VECTOR_TRUNC */
    type0, type1, 
    /* G_CONCAT_VECTORS */
    type0, type1, 
    /* G_PTRTOINT */
    type0, type1, 
    /* G_INTTOPTR */
    type0, type1, 
    /* G_BITCAST */
    type0, type1, 
    /* G_FREEZE */
    type0, type0, 
    /* G_INTRINSIC_FPTRUNC_ROUND */
    type0, type1, i32imm, 
    /* G_INTRINSIC_TRUNC */
    type0, type0, 
    /* G_INTRINSIC_ROUND */
    type0, type0, 
    /* G_INTRINSIC_LRINT */
    type0, type1, 
    /* G_INTRINSIC_ROUNDEVEN */
    type0, type0, 
    /* G_READCYCLECOUNTER */
    type0, 
    /* G_LOAD */
    type0, ptype1, 
    /* G_SEXTLOAD */
    type0, ptype1, 
    /* G_ZEXTLOAD */
    type0, ptype1, 
    /* G_INDEXED_LOAD */
    type0, ptype1, ptype1, type2, -1, 
    /* G_INDEXED_SEXTLOAD */
    type0, ptype1, ptype1, type2, -1, 
    /* G_INDEXED_ZEXTLOAD */
    type0, ptype1, ptype1, type2, -1, 
    /* G_STORE */
    type0, ptype1, 
    /* G_INDEXED_STORE */
    ptype0, type1, ptype0, ptype2, -1, 
    /* G_ATOMIC_CMPXCHG_WITH_SUCCESS */
    type0, type1, type2, type0, type0, 
    /* G_ATOMIC_CMPXCHG */
    type0, ptype1, type0, type0, 
    /* G_ATOMICRMW_XCHG */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_ADD */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_SUB */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_AND */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_NAND */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_OR */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_XOR */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_MAX */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_MIN */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_UMAX */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_UMIN */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_FADD */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_FSUB */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_FMAX */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_FMIN */
    type0, ptype1, type0, 
    /* G_FENCE */
    i32imm, i32imm, 
    /* G_BRCOND */
    type0, -1, 
    /* G_BRINDIRECT */
    type0, 
    /* G_INTRINSIC */
    -1, 
    /* G_INTRINSIC_W_SIDE_EFFECTS */
    -1, 
    /* G_ANYEXT */
    type0, type1, 
    /* G_TRUNC */
    type0, type1, 
    /* G_CONSTANT */
    type0, -1, 
    /* G_FCONSTANT */
    type0, -1, 
    /* G_VASTART */
    type0, 
    /* G_VAARG */
    type0, type1, -1, 
    /* G_SEXT */
    type0, type1, 
    /* G_SEXT_INREG */
    type0, type0, untyped_imm_0, 
    /* G_ZEXT */
    type0, type1, 
    /* G_SHL */
    type0, type0, type1, 
    /* G_LSHR */
    type0, type0, type1, 
    /* G_ASHR */
    type0, type0, type1, 
    /* G_FSHL */
    type0, type0, type0, type1, 
    /* G_FSHR */
    type0, type0, type0, type1, 
    /* G_ROTR */
    type0, type0, type1, 
    /* G_ROTL */
    type0, type0, type1, 
    /* G_ICMP */
    type0, -1, type1, type1, 
    /* G_FCMP */
    type0, -1, type1, type1, 
    /* G_SELECT */
    type0, type1, type0, type0, 
    /* G_UADDO */
    type0, type1, type0, type0, 
    /* G_UADDE */
    type0, type1, type0, type0, type1, 
    /* G_USUBO */
    type0, type1, type0, type0, 
    /* G_USUBE */
    type0, type1, type0, type0, type1, 
    /* G_SADDO */
    type0, type1, type0, type0, 
    /* G_SADDE */
    type0, type1, type0, type0, type1, 
    /* G_SSUBO */
    type0, type1, type0, type0, 
    /* G_SSUBE */
    type0, type1, type0, type0, type1, 
    /* G_UMULO */
    type0, type1, type0, type0, 
    /* G_SMULO */
    type0, type1, type0, type0, 
    /* G_UMULH */
    type0, type0, type0, 
    /* G_SMULH */
    type0, type0, type0, 
    /* G_UADDSAT */
    type0, type0, type0, 
    /* G_SADDSAT */
    type0, type0, type0, 
    /* G_USUBSAT */
    type0, type0, type0, 
    /* G_SSUBSAT */
    type0, type0, type0, 
    /* G_USHLSAT */
    type0, type0, type1, 
    /* G_SSHLSAT */
    type0, type0, type1, 
    /* G_SMULFIX */
    type0, type0, type0, untyped_imm_0, 
    /* G_UMULFIX */
    type0, type0, type0, untyped_imm_0, 
    /* G_SMULFIXSAT */
    type0, type0, type0, untyped_imm_0, 
    /* G_UMULFIXSAT */
    type0, type0, type0, untyped_imm_0, 
    /* G_SDIVFIX */
    type0, type0, type0, untyped_imm_0, 
    /* G_UDIVFIX */
    type0, type0, type0, untyped_imm_0, 
    /* G_SDIVFIXSAT */
    type0, type0, type0, untyped_imm_0, 
    /* G_UDIVFIXSAT */
    type0, type0, type0, untyped_imm_0, 
    /* G_FADD */
    type0, type0, type0, 
    /* G_FSUB */
    type0, type0, type0, 
    /* G_FMUL */
    type0, type0, type0, 
    /* G_FMA */
    type0, type0, type0, type0, 
    /* G_FMAD */
    type0, type0, type0, type0, 
    /* G_FDIV */
    type0, type0, type0, 
    /* G_FREM */
    type0, type0, type0, 
    /* G_FPOW */
    type0, type0, type0, 
    /* G_FPOWI */
    type0, type0, type1, 
    /* G_FEXP */
    type0, type0, 
    /* G_FEXP2 */
    type0, type0, 
    /* G_FLOG */
    type0, type0, 
    /* G_FLOG2 */
    type0, type0, 
    /* G_FLOG10 */
    type0, type0, 
    /* G_FNEG */
    type0, type0, 
    /* G_FPEXT */
    type0, type1, 
    /* G_FPTRUNC */
    type0, type1, 
    /* G_FPTOSI */
    type0, type1, 
    /* G_FPTOUI */
    type0, type1, 
    /* G_SITOFP */
    type0, type1, 
    /* G_UITOFP */
    type0, type1, 
    /* G_FABS */
    type0, type0, 
    /* G_FCOPYSIGN */
    type0, type0, type1, 
    /* G_IS_FPCLASS */
    type0, type1, -1, -1, 
    /* G_FCANONICALIZE */
    type0, type0, 
    /* G_FMINNUM */
    type0, type0, type0, 
    /* G_FMAXNUM */
    type0, type0, type0, 
    /* G_FMINNUM_IEEE */
    type0, type0, type0, 
    /* G_FMAXNUM_IEEE */
    type0, type0, type0, 
    /* G_FMINIMUM */
    type0, type0, type0, 
    /* G_FMAXIMUM */
    type0, type0, type0, 
    /* G_PTR_ADD */
    type0, type0, type1, 
    /* G_PTRMASK */
    ptype0, ptype0, type1, 
    /* G_SMIN */
    type0, type0, type0, 
    /* G_SMAX */
    type0, type0, type0, 
    /* G_UMIN */
    type0, type0, type0, 
    /* G_UMAX */
    type0, type0, type0, 
    /* G_ABS */
    type0, type0, 
    /* G_LROUND */
    type0, type1, 
    /* G_LLROUND */
    type0, type1, 
    /* G_BR */
    -1, 
    /* G_BRJT */
    ptype0, -1, type1, 
    /* G_INSERT_VECTOR_ELT */
    type0, type0, type1, type2, 
    /* G_EXTRACT_VECTOR_ELT */
    type0, type1, type2, 
    /* G_SHUFFLE_VECTOR */
    type0, type1, type1, -1, 
    /* G_CTTZ */
    type0, type1, 
    /* G_CTTZ_ZERO_UNDEF */
    type0, type1, 
    /* G_CTLZ */
    type0, type1, 
    /* G_CTLZ_ZERO_UNDEF */
    type0, type1, 
    /* G_CTPOP */
    type0, type1, 
    /* G_BSWAP */
    type0, type0, 
    /* G_BITREVERSE */
    type0, type0, 
    /* G_FCEIL */
    type0, type0, 
    /* G_FCOS */
    type0, type0, 
    /* G_FSIN */
    type0, type0, 
    /* G_FSQRT */
    type0, type0, 
    /* G_FFLOOR */
    type0, type0, 
    /* G_FRINT */
    type0, type0, 
    /* G_FNEARBYINT */
    type0, type0, 
    /* G_ADDRSPACE_CAST */
    type0, type1, 
    /* G_BLOCK_ADDR */
    type0, -1, 
    /* G_JUMP_TABLE */
    type0, -1, 
    /* G_DYN_STACKALLOC */
    ptype0, type1, i32imm, 
    /* G_STRICT_FADD */
    type0, type0, type0, 
    /* G_STRICT_FSUB */
    type0, type0, type0, 
    /* G_STRICT_FMUL */
    type0, type0, type0, 
    /* G_STRICT_FDIV */
    type0, type0, type0, 
    /* G_STRICT_FREM */
    type0, type0, type0, 
    /* G_STRICT_FMA */
    type0, type0, type0, type0, 
    /* G_STRICT_FSQRT */
    type0, type0, 
    /* G_READ_REGISTER */
    type0, -1, 
    /* G_WRITE_REGISTER */
    -1, type0, 
    /* G_MEMCPY */
    ptype0, ptype1, type2, untyped_imm_0, 
    /* G_MEMCPY_INLINE */
    ptype0, ptype1, type2, 
    /* G_MEMMOVE */
    ptype0, ptype1, type2, untyped_imm_0, 
    /* G_MEMSET */
    ptype0, type1, type2, untyped_imm_0, 
    /* G_BZERO */
    ptype0, type1, untyped_imm_0, 
    /* G_VECREDUCE_SEQ_FADD */
    type0, type1, type2, 
    /* G_VECREDUCE_SEQ_FMUL */
    type0, type1, type2, 
    /* G_VECREDUCE_FADD */
    type0, type1, 
    /* G_VECREDUCE_FMUL */
    type0, type1, 
    /* G_VECREDUCE_FMAX */
    type0, type1, 
    /* G_VECREDUCE_FMIN */
    type0, type1, 
    /* G_VECREDUCE_ADD */
    type0, type1, 
    /* G_VECREDUCE_MUL */
    type0, type1, 
    /* G_VECREDUCE_AND */
    type0, type1, 
    /* G_VECREDUCE_OR */
    type0, type1, 
    /* G_VECREDUCE_XOR */
    type0, type1, 
    /* G_VECREDUCE_SMAX */
    type0, type1, 
    /* G_VECREDUCE_SMIN */
    type0, type1, 
    /* G_VECREDUCE_UMAX */
    type0, type1, 
    /* G_VECREDUCE_UMIN */
    type0, type1, 
    /* G_SBFX */
    type0, type0, type1, type1, 
    /* G_UBFX */
    type0, type0, type1, type1, 
    /* ATOMIC_CMP_SWAP_I128 */
    g8prc, g8prc, ptr_rc_nor0, ptr_rc_idx, g8rc, g8rc, g8rc, g8rc, 
    /* ATOMIC_LOAD_ADD_I128 */
    g8prc, g8prc, ptr_rc_nor0, ptr_rc_idx, g8rc, g8rc, 
    /* ATOMIC_LOAD_AND_I128 */
    g8prc, g8prc, ptr_rc_nor0, ptr_rc_idx, g8rc, g8rc, 
    /* ATOMIC_LOAD_NAND_I128 */
    g8prc, g8prc, ptr_rc_nor0, ptr_rc_idx, g8rc, g8rc, 
    /* ATOMIC_LOAD_OR_I128 */
    g8prc, g8prc, ptr_rc_nor0, ptr_rc_idx, g8rc, g8rc, 
    /* ATOMIC_LOAD_SUB_I128 */
    g8prc, g8prc, ptr_rc_nor0, ptr_rc_idx, g8rc, g8rc, 
    /* ATOMIC_LOAD_XOR_I128 */
    g8prc, g8prc, ptr_rc_nor0, ptr_rc_idx, g8rc, g8rc, 
    /* ATOMIC_SWAP_I128 */
    g8prc, g8prc, ptr_rc_nor0, ptr_rc_idx, g8rc, g8rc, 
    /* BUILD_QUADWORD */
    g8prc, g8rc, g8rc, 
    /* BUILD_UACC */
    acc, uacc, 
    /* CFENCE8 */
    g8rc, 
    /* CLRLSLDI */
    g8rc, g8rc, u6imm, u6imm, 
    /* CLRLSLDI_rec */
    g8rc, g8rc, u6imm, u6imm, 
    /* CLRLSLWI */
    gprc, gprc, u5imm, u5imm, 
    /* CLRLSLWI_rec */
    gprc, gprc, u5imm, u5imm, 
    /* CLRRDI */
    g8rc, g8rc, u6imm, 
    /* CLRRDI_rec */
    g8rc, g8rc, u6imm, 
    /* CLRRWI */
    gprc, gprc, u5imm, 
    /* CLRRWI_rec */
    gprc, gprc, u5imm, 
    /* DCBFL */
    ptr_rc_nor0, ptr_rc_idx, 
    /* DCBFLP */
    ptr_rc_nor0, ptr_rc_idx, 
    /* DCBFPS */
    ptr_rc_nor0, ptr_rc_idx, 
    /* DCBFx */
    ptr_rc_nor0, ptr_rc_idx, 
    /* DCBSTPS */
    ptr_rc_nor0, ptr_rc_idx, 
    /* DCBTCT */
    ptr_rc_nor0, ptr_rc_idx, u5imm, 
    /* DCBTDS */
    ptr_rc_nor0, ptr_rc_idx, u5imm, 
    /* DCBTSTCT */
    ptr_rc_nor0, ptr_rc_idx, u5imm, 
    /* DCBTSTDS */
    ptr_rc_nor0, ptr_rc_idx, u5imm, 
    /* DCBTSTT */
    ptr_rc_nor0, ptr_rc_idx, 
    /* DCBTSTx */
    ptr_rc_nor0, ptr_rc_idx, 
    /* DCBTT */
    ptr_rc_nor0, ptr_rc_idx, 
    /* DCBTx */
    ptr_rc_nor0, ptr_rc_idx, 
    /* DFLOADf32 */
    vssrc, dispRIX, ptr_rc_nor0, 
    /* DFLOADf64 */
    vsfrc, dispRIX, ptr_rc_nor0, 
    /* DFSTOREf32 */
    vssrc, dispRIX, ptr_rc_nor0, 
    /* DFSTOREf64 */
    vsfrc, dispRIX, ptr_rc_nor0, 
    /* EXTLDI */
    g8rc, g8rc, u6imm, u6imm, 
    /* EXTLDI_rec */
    g8rc, g8rc, u6imm, u6imm, 
    /* EXTLWI */
    gprc, gprc, u5imm, u5imm, 
    /* EXTLWI_rec */
    gprc, gprc, u5imm, u5imm, 
    /* EXTRDI */
    g8rc, g8rc, u6imm, u6imm, 
    /* EXTRDI_rec */
    g8rc, g8rc, u6imm, u6imm, 
    /* EXTRWI */
    gprc, gprc, u5imm, u5imm, 
    /* EXTRWI_rec */
    gprc, gprc, u5imm, u5imm, 
    /* INSLWI */
    gprc, gprc, u5imm, u5imm, 
    /* INSLWI_rec */
    gprc, gprc, u5imm, u5imm, 
    /* INSRDI */
    g8rc, g8rc, u6imm, u6imm, 
    /* INSRDI_rec */
    g8rc, g8rc, u6imm, u6imm, 
    /* INSRWI */
    gprc, gprc, u5imm, u5imm, 
    /* INSRWI_rec */
    gprc, gprc, u5imm, u5imm, 
    /* KILL_PAIR */
    vsrprc, vsrprc, 
    /* LAx */
    gprc, dispRI, ptr_rc_nor0, 
    /* LIWAX */
    vsfrc, ptr_rc_nor0, ptr_rc_idx, 
    /* LIWZX */
    vsfrc, ptr_rc_nor0, ptr_rc_idx, 
    /* RLWIMIbm */
    g8rc, g8rc, u5imm, i32imm, 
    /* RLWIMIbm_rec */
    g8rc, g8rc, u5imm, i32imm, 
    /* RLWINMbm */
    g8rc, g8rc, u5imm, i32imm, 
    /* RLWINMbm_rec */
    g8rc, g8rc, u5imm, i32imm, 
    /* RLWNMbm */
    g8rc, g8rc, u5imm, i32imm, 
    /* RLWNMbm_rec */
    g8rc, g8rc, u5imm, i32imm, 
    /* ROTRDI */
    g8rc, g8rc, u6imm, 
    /* ROTRDI_rec */
    g8rc, g8rc, u6imm, 
    /* ROTRWI */
    gprc, gprc, u5imm, 
    /* ROTRWI_rec */
    gprc, gprc, u5imm, 
    /* SLDI */
    g8rc, g8rc, u6imm, 
    /* SLDI_rec */
    g8rc, g8rc, u6imm, 
    /* SLWI */
    gprc, gprc, u5imm, 
    /* SLWI_rec */
    gprc, gprc, u5imm, 
    /* SPILLTOVSR_LD */
    spilltovsrrc, dispRIX, ptr_rc_nor0, 
    /* SPILLTOVSR_LDX */
    spilltovsrrc, ptr_rc_nor0, ptr_rc_idx, 
    /* SPILLTOVSR_ST */
    spilltovsrrc, dispRIX, ptr_rc_nor0, 
    /* SPILLTOVSR_STX */
    spilltovsrrc, ptr_rc_nor0, ptr_rc_idx, 
    /* SRDI */
    g8rc, g8rc, u6imm, 
    /* SRDI_rec */
    g8rc, g8rc, u6imm, 
    /* SRWI */
    gprc, gprc, u5imm, 
    /* SRWI_rec */
    gprc, gprc, u5imm, 
    /* STIWX */
    vsfrc, ptr_rc_nor0, ptr_rc_idx, 
    /* SUBI */
    gprc, gprc, s16imm, 
    /* SUBIC */
    gprc, gprc, s16imm, 
    /* SUBIC_rec */
    gprc, gprc, s16imm, 
    /* SUBIS */
    gprc, gprc, s16imm, 
    /* SUBPCIS */
    g8rc, s16imm, 
    /* XFLOADf32 */
    vssrc, ptr_rc_nor0, ptr_rc_idx, 
    /* XFLOADf64 */
    vsfrc, ptr_rc_nor0, ptr_rc_idx, 
    /* XFSTOREf32 */
    vssrc, ptr_rc_nor0, ptr_rc_idx, 
    /* XFSTOREf64 */
    vsfrc, ptr_rc_nor0, ptr_rc_idx, 
    /* ADD4 */
    gprc, gprc, gprc, 
    /* ADD4O */
    gprc, gprc, gprc, 
    /* ADD4O_rec */
    gprc, gprc, gprc, 
    /* ADD4TLS */
    gprc, gprc, tlsreg32, 
    /* ADD4_rec */
    gprc, gprc, gprc, 
    /* ADD8 */
    g8rc, g8rc, g8rc, 
    /* ADD8O */
    g8rc, g8rc, g8rc, 
    /* ADD8O_rec */
    g8rc, g8rc, g8rc, 
    /* ADD8TLS */
    g8rc, g8rc_nox0, tlsreg, 
    /* ADD8TLS_ */
    g8rc, g8rc, tlsreg, 
    /* ADD8_rec */
    g8rc, g8rc, g8rc, 
    /* ADDC */
    gprc, gprc, gprc, 
    /* ADDC8 */
    g8rc, g8rc, g8rc, 
    /* ADDC8O */
    g8rc, g8rc, g8rc, 
    /* ADDC8O_rec */
    g8rc, g8rc, g8rc, 
    /* ADDC8_rec */
    g8rc, g8rc, g8rc, 
    /* ADDCO */
    gprc, gprc, gprc, 
    /* ADDCO_rec */
    gprc, gprc, gprc, 
    /* ADDC_rec */
    gprc, gprc, gprc, 
    /* ADDE */
    gprc, gprc, gprc, 
    /* ADDE8 */
    g8rc, g8rc, g8rc, 
    /* ADDE8O */
    g8rc, g8rc, g8rc, 
    /* ADDE8O_rec */
    g8rc, g8rc, g8rc, 
    /* ADDE8_rec */
    g8rc, g8rc, g8rc, 
    /* ADDEO */
    gprc, gprc, gprc, 
    /* ADDEO_rec */
    gprc, gprc, gprc, 
    /* ADDEX */
    gprc, gprc, gprc, u2imm, 
    /* ADDEX8 */
    g8rc, g8rc, g8rc, u2imm, 
    /* ADDE_rec */
    gprc, gprc, gprc, 
    /* ADDI */
    gprc, gprc_nor0, s16imm, 
    /* ADDI8 */
    g8rc, g8rc_nox0, s16imm64, 
    /* ADDIC */
    gprc, gprc, s16imm, 
    /* ADDIC8 */
    g8rc, g8rc, s16imm64, 
    /* ADDIC_rec */
    gprc, gprc, s16imm, 
    /* ADDIS */
    gprc, gprc_nor0, s17imm, 
    /* ADDIS8 */
    g8rc, g8rc_nox0, s17imm64, 
    /* ADDISdtprelHA */
    g8rc, g8rc_nox0, s16imm64, 
    /* ADDISdtprelHA32 */
    gprc, gprc_nor0, s16imm, 
    /* ADDISgotTprelHA */
    g8rc, g8rc_nox0, s16imm64, 
    /* ADDIStlsgdHA */
    g8rc, g8rc_nox0, s16imm64, 
    /* ADDIStlsldHA */
    g8rc, g8rc_nox0, s16imm64, 
    /* ADDIStocHA */
    gprc, gprc_nor0, i32imm, 
    /* ADDIStocHA8 */
    g8rc, g8rc_nox0, i64imm, 
    /* ADDIdtprelL */
    g8rc, g8rc_nox0, s16imm64, 
    /* ADDIdtprelL32 */
    gprc, gprc_nor0, s16imm, 
    /* ADDItlsgdL */
    g8rc, g8rc_nox0, s16imm64, 
    /* ADDItlsgdL32 */
    gprc, gprc_nor0, s16imm, 
    /* ADDItlsgdLADDR */
    g8rc, g8rc_nox0, s16imm64, tlsgd, 
    /* ADDItlsgdLADDR32 */
    gprc, gprc_nor0, s16imm, tlsgd32, 
    /* ADDItlsldL */
    g8rc, g8rc_nox0, s16imm64, 
    /* ADDItlsldL32 */
    gprc, gprc_nor0, s16imm, 
    /* ADDItlsldLADDR */
    g8rc, g8rc_nox0, s16imm64, tlsgd, 
    /* ADDItlsldLADDR32 */
    gprc, gprc_nor0, s16imm, tlsgd32, 
    /* ADDItoc */
    gprc, i32imm, gprc, 
    /* ADDItoc8 */
    g8rc, i64imm, g8rc_nox0, 
    /* ADDItocL */
    g8rc, g8rc_nox0, i64imm, 
    /* ADDME */
    gprc, gprc, 
    /* ADDME8 */
    g8rc, g8rc, 
    /* ADDME8O */
    g8rc, g8rc, 
    /* ADDME8O_rec */
    g8rc, g8rc, 
    /* ADDME8_rec */
    g8rc, g8rc, 
    /* ADDMEO */
    gprc, gprc, 
    /* ADDMEO_rec */
    gprc, gprc, 
    /* ADDME_rec */
    gprc, gprc, 
    /* ADDPCIS */
    g8rc, i32imm, 
    /* ADDZE */
    gprc, gprc, 
    /* ADDZE8 */
    g8rc, g8rc, 
    /* ADDZE8O */
    g8rc, g8rc, 
    /* ADDZE8O_rec */
    g8rc, g8rc, 
    /* ADDZE8_rec */
    g8rc, g8rc, 
    /* ADDZEO */
    gprc, gprc, 
    /* ADDZEO_rec */
    gprc, gprc, 
    /* ADDZE_rec */
    gprc, gprc, 
    /* ADJCALLSTACKDOWN */
    u16imm, u16imm, 
    /* ADJCALLSTACKUP */
    u16imm, u16imm, 
    /* AND */
    gprc, gprc, gprc, 
    /* AND8 */
    g8rc, g8rc, g8rc, 
    /* AND8_rec */
    g8rc, g8rc, g8rc, 
    /* ANDC */
    gprc, gprc, gprc, 
    /* ANDC8 */
    g8rc, g8rc, g8rc, 
    /* ANDC8_rec */
    g8rc, g8rc, g8rc, 
    /* ANDC_rec */
    gprc, gprc, gprc, 
    /* ANDI8_rec */
    g8rc, g8rc, u16imm64, 
    /* ANDIS8_rec */
    g8rc, g8rc, u16imm64, 
    /* ANDIS_rec */
    gprc, gprc, u16imm, 
    /* ANDI_rec */
    gprc, gprc, u16imm, 
    /* ANDI_rec_1_EQ_BIT */
    crbitrc, gprc, 
    /* ANDI_rec_1_EQ_BIT8 */
    crbitrc, g8rc, 
    /* ANDI_rec_1_GT_BIT */
    crbitrc, gprc, 
    /* ANDI_rec_1_GT_BIT8 */
    crbitrc, g8rc, 
    /* AND_rec */
    gprc, gprc, gprc, 
    /* ATOMIC_CMP_SWAP_I16 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, gprc, 
    /* ATOMIC_CMP_SWAP_I32 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, gprc, 
    /* ATOMIC_CMP_SWAP_I64 */
    g8rc, ptr_rc_nor0, ptr_rc_idx, g8rc, g8rc, 
    /* ATOMIC_CMP_SWAP_I8 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, gprc, 
    /* ATOMIC_LOAD_ADD_I16 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, 
    /* ATOMIC_LOAD_ADD_I32 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, 
    /* ATOMIC_LOAD_ADD_I64 */
    g8rc, ptr_rc_nor0, ptr_rc_idx, g8rc, 
    /* ATOMIC_LOAD_ADD_I8 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, 
    /* ATOMIC_LOAD_AND_I16 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, 
    /* ATOMIC_LOAD_AND_I32 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, 
    /* ATOMIC_LOAD_AND_I64 */
    g8rc, ptr_rc_nor0, ptr_rc_idx, g8rc, 
    /* ATOMIC_LOAD_AND_I8 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, 
    /* ATOMIC_LOAD_MAX_I16 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, 
    /* ATOMIC_LOAD_MAX_I32 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, 
    /* ATOMIC_LOAD_MAX_I64 */
    g8rc, ptr_rc_nor0, ptr_rc_idx, g8rc, 
    /* ATOMIC_LOAD_MAX_I8 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, 
    /* ATOMIC_LOAD_MIN_I16 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, 
    /* ATOMIC_LOAD_MIN_I32 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, 
    /* ATOMIC_LOAD_MIN_I64 */
    g8rc, ptr_rc_nor0, ptr_rc_idx, g8rc, 
    /* ATOMIC_LOAD_MIN_I8 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, 
    /* ATOMIC_LOAD_NAND_I16 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, 
    /* ATOMIC_LOAD_NAND_I32 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, 
    /* ATOMIC_LOAD_NAND_I64 */
    g8rc, ptr_rc_nor0, ptr_rc_idx, g8rc, 
    /* ATOMIC_LOAD_NAND_I8 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, 
    /* ATOMIC_LOAD_OR_I16 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, 
    /* ATOMIC_LOAD_OR_I32 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, 
    /* ATOMIC_LOAD_OR_I64 */
    g8rc, ptr_rc_nor0, ptr_rc_idx, g8rc, 
    /* ATOMIC_LOAD_OR_I8 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, 
    /* ATOMIC_LOAD_SUB_I16 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, 
    /* ATOMIC_LOAD_SUB_I32 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, 
    /* ATOMIC_LOAD_SUB_I64 */
    g8rc, ptr_rc_nor0, ptr_rc_idx, g8rc, 
    /* ATOMIC_LOAD_SUB_I8 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, 
    /* ATOMIC_LOAD_UMAX_I16 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, 
    /* ATOMIC_LOAD_UMAX_I32 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, 
    /* ATOMIC_LOAD_UMAX_I64 */
    g8rc, ptr_rc_nor0, ptr_rc_idx, g8rc, 
    /* ATOMIC_LOAD_UMAX_I8 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, 
    /* ATOMIC_LOAD_UMIN_I16 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, 
    /* ATOMIC_LOAD_UMIN_I32 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, 
    /* ATOMIC_LOAD_UMIN_I64 */
    g8rc, ptr_rc_nor0, ptr_rc_idx, g8rc, 
    /* ATOMIC_LOAD_UMIN_I8 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, 
    /* ATOMIC_LOAD_XOR_I16 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, 
    /* ATOMIC_LOAD_XOR_I32 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, 
    /* ATOMIC_LOAD_XOR_I64 */
    g8rc, ptr_rc_nor0, ptr_rc_idx, g8rc, 
    /* ATOMIC_LOAD_XOR_I8 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, 
    /* ATOMIC_SWAP_I16 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, 
    /* ATOMIC_SWAP_I32 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, 
    /* ATOMIC_SWAP_I64 */
    g8rc, ptr_rc_nor0, ptr_rc_idx, g8rc, 
    /* ATOMIC_SWAP_I8 */
    gprc, ptr_rc_nor0, ptr_rc_idx, gprc, 
    /* ATTN */
    /* B */
    directbrtarget, 
    /* BA */
    absdirectbrtarget, 
    /* BC */
    crbitrc, condbrtarget, 
    /* BCC */
    i32imm, crrc, condbrtarget, 
    /* BCCA */
    i32imm, crrc, abscondbrtarget, 
    /* BCCCTR */
    i32imm, crrc, 
    /* BCCCTR8 */
    i32imm, crrc, 
    /* BCCCTRL */
    i32imm, crrc, 
    /* BCCCTRL8 */
    i32imm, crrc, 
    /* BCCL */
    i32imm, crrc, condbrtarget, 
    /* BCCLA */
    i32imm, crrc, abscondbrtarget, 
    /* BCCLR */
    i32imm, crrc, 
    /* BCCLRL */
    i32imm, crrc, 
    /* BCCTR */
    crbitrc, 
    /* BCCTR8 */
    crbitrc, 
    /* BCCTR8n */
    crbitrc, 
    /* BCCTRL */
    crbitrc, 
    /* BCCTRL8 */
    crbitrc, 
    /* BCCTRL8n */
    crbitrc, 
    /* BCCTRLn */
    crbitrc, 
    /* BCCTRn */
    crbitrc, 
    /* BCDADD_rec */
    vrrc, vrrc, vrrc, u1imm, 
    /* BCDCFN_rec */
    vrrc, vrrc, u1imm, 
    /* BCDCFSQ_rec */
    vrrc, vrrc, u1imm, 
    /* BCDCFZ_rec */
    vrrc, vrrc, u1imm, 
    /* BCDCPSGN_rec */
    vrrc, vrrc, vrrc, 
    /* BCDCTN_rec */
    vrrc, vrrc, 
    /* BCDCTSQ_rec */
    vrrc, vrrc, 
    /* BCDCTZ_rec */
    vrrc, vrrc, u1imm, 
    /* BCDSETSGN_rec */
    vrrc, vrrc, u1imm, 
    /* BCDSR_rec */
    vrrc, vrrc, vrrc, u1imm, 
    /* BCDSUB_rec */
    vrrc, vrrc, vrrc, u1imm, 
    /* BCDS_rec */
    vrrc, vrrc, vrrc, u1imm, 
    /* BCDTRUNC_rec */
    vrrc, vrrc, vrrc, u1imm, 
    /* BCDUS_rec */
    vrrc, vrrc, vrrc, 
    /* BCDUTRUNC_rec */
    vrrc, vrrc, vrrc, 
    /* BCL */
    crbitrc, condbrtarget, 
    /* BCLR */
    crbitrc, 
    /* BCLRL */
    crbitrc, 
    /* BCLRLn */
    crbitrc, 
    /* BCLRn */
    crbitrc, 
    /* BCLalways */
    condbrtarget, 
    /* BCLn */
    crbitrc, condbrtarget, 
    /* BCTR */
    /* BCTR8 */
    /* BCTRL */
    /* BCTRL8 */
    /* BCTRL8_LDinto_toc */
    dispRIX, ptr_rc_nor0, 
    /* BCTRL8_LDinto_toc_RM */
    dispRIX, ptr_rc_nor0, 
    /* BCTRL8_RM */
    /* BCTRL_LWZinto_toc */
    dispRI, ptr_rc_nor0, 
    /* BCTRL_LWZinto_toc_RM */
    dispRI, ptr_rc_nor0, 
    /* BCTRL_RM */
    /* BCn */
    crbitrc, condbrtarget, 
    /* BDNZ */
    condbrtarget, 
    /* BDNZ8 */
    condbrtarget, 
    /* BDNZA */
    abscondbrtarget, 
    /* BDNZAm */
    abscondbrtarget, 
    /* BDNZAp */
    abscondbrtarget, 
    /* BDNZL */
    condbrtarget, 
    /* BDNZLA */
    abscondbrtarget, 
    /* BDNZLAm */
    abscondbrtarget, 
    /* BDNZLAp */
    abscondbrtarget, 
    /* BDNZLR */
    /* BDNZLR8 */
    /* BDNZLRL */
    /* BDNZLRLm */
    /* BDNZLRLp */
    /* BDNZLRm */
    /* BDNZLRp */
    /* BDNZLm */
    condbrtarget, 
    /* BDNZLp */
    condbrtarget, 
    /* BDNZm */
    condbrtarget, 
    /* BDNZp */
    condbrtarget, 
    /* BDZ */
    condbrtarget, 
    /* BDZ8 */
    condbrtarget, 
    /* BDZA */
    abscondbrtarget, 
    /* BDZAm */
    abscondbrtarget, 
    /* BDZAp */
    abscondbrtarget, 
    /* BDZL */
    condbrtarget, 
    /* BDZLA */
    abscondbrtarget, 
    /* BDZLAm */
    abscondbrtarget, 
    /* BDZLAp */
    abscondbrtarget, 
    /* BDZLR */
    /* BDZLR8 */
    /* BDZLRL */
    /* BDZLRLm */
    /* BDZLRLp */
    /* BDZLRm */
    /* BDZLRp */
    /* BDZLm */
    condbrtarget, 
    /* BDZLp */
    condbrtarget, 
    /* BDZm */
    condbrtarget, 
    /* BDZp */
    condbrtarget, 
    /* BL */
    calltarget, 
    /* BL8 */
    calltarget, 
    /* BL8_NOP */
    calltarget, 
    /* BL8_NOP_RM */
    calltarget, 
    /* BL8_NOP_TLS */
    calltarget, tlsgd, 
    /* BL8_NOTOC */
    calltarget, 
    /* BL8_NOTOC_RM */
    calltarget, 
    /* BL8_NOTOC_TLS */
    calltarget, tlsgd, 
    /* BL8_RM */
    calltarget, 
    /* BL8_TLS */
    calltarget, tlsgd, 
    /* BL8_TLS_ */
    calltarget, tlsgd, 
    /* BLA */
    abscalltarget, 
    /* BLA8 */
    abscalltarget, 
    /* BLA8_NOP */
    abscalltarget, 
    /* BLA8_NOP_RM */
    abscalltarget, 
    /* BLA8_RM */
    abscalltarget, 
    /* BLA_RM */
    abscalltarget, 
    /* BLR */
    /* BLR8 */
    /* BLRL */
    /* BL_NOP */
    calltarget, 
    /* BL_NOP_RM */
    calltarget, 
    /* BL_RM */
    calltarget, 
    /* BL_TLS */
    calltarget, tlsgd32, 
    /* BPERMD */
    g8rc, g8rc, g8rc, 
    /* BRINC */
    gprc, gprc, gprc, 
    /* CFUGED */
    g8rc, g8rc, g8rc, 
    /* CLRBHRB */
    /* CMPB */
    gprc, gprc, gprc, 
    /* CMPB8 */
    g8rc, g8rc, g8rc, 
    /* CMPD */
    crrc, g8rc, g8rc, 
    /* CMPDI */
    crrc, g8rc, s16imm64, 
    /* CMPEQB */
    crrc, g8rc, g8rc, 
    /* CMPLD */
    crrc, g8rc, g8rc, 
    /* CMPLDI */
    crrc, g8rc, u16imm64, 
    /* CMPLW */
    crrc, gprc, gprc, 
    /* CMPLWI */
    crrc, gprc, u16imm, 
    /* CMPRB */
    crrc, u1imm, gprc, gprc, 
    /* CMPRB8 */
    crrc, u1imm, g8rc, g8rc, 
    /* CMPW */
    crrc, gprc, gprc, 
    /* CMPWI */
    crrc, gprc, s16imm, 
    /* CNTLZD */
    g8rc, g8rc, 
    /* CNTLZDM */
    g8rc, g8rc, g8rc, 
    /* CNTLZD_rec */
    g8rc, g8rc, 
    /* CNTLZW */
    gprc, gprc, 
    /* CNTLZW8 */
    g8rc, g8rc, 
    /* CNTLZW8_rec */
    g8rc, g8rc, 
    /* CNTLZW_rec */
    gprc, gprc, 
    /* CNTTZD */
    g8rc, g8rc, 
    /* CNTTZDM */
    g8rc, g8rc, g8rc, 
    /* CNTTZD_rec */
    g8rc, g8rc, 
    /* CNTTZW */
    gprc, gprc, 
    /* CNTTZW8 */
    g8rc, g8rc, 
    /* CNTTZW8_rec */
    g8rc, g8rc, 
    /* CNTTZW_rec */
    gprc, gprc, 
    /* CP_ABORT */
    /* CP_COPY */
    gprc, gprc, u1imm, 
    /* CP_COPY8 */
    g8rc, g8rc, u1imm, 
    /* CP_PASTE8_rec */
    g8rc, g8rc, u1imm, 
    /* CP_PASTE_rec */
    gprc, gprc, u1imm, 
    /* CR6SET */
    /* CR6UNSET */
    /* CRAND */
    crbitrc, crbitrc, crbitrc, 
    /* CRANDC */
    crbitrc, crbitrc, crbitrc, 
    /* CREQV */
    crbitrc, crbitrc, crbitrc, 
    /* CRNAND */
    crbitrc, crbitrc, crbitrc, 
    /* CRNOR */
    crbitrc, crbitrc, crbitrc, 
    /* CROR */
    crbitrc, crbitrc, crbitrc, 
    /* CRORC */
    crbitrc, crbitrc, crbitrc, 
    /* CRSET */
    crbitrc, 
    /* CRUNSET */
    crbitrc, 
    /* CRXOR */
    crbitrc, crbitrc, crbitrc, 
    /* CTRL_DEP */
    i32imm, crrc, condbrtarget, 
    /* DARN */
    g8rc, u2imm, 
    /* DCBA */
    ptr_rc_nor0, ptr_rc_idx, 
    /* DCBF */
    u3imm, ptr_rc_nor0, ptr_rc_idx, 
    /* DCBFEP */
    ptr_rc_nor0, ptr_rc_idx, 
    /* DCBI */
    ptr_rc_nor0, ptr_rc_idx, 
    /* DCBST */
    ptr_rc_nor0, ptr_rc_idx, 
    /* DCBSTEP */
    ptr_rc_nor0, ptr_rc_idx, 
    /* DCBT */
    u5imm, ptr_rc_nor0, ptr_rc_idx, 
    /* DCBTEP */
    ptr_rc_nor0, ptr_rc_idx, u5imm, 
    /* DCBTST */
    u5imm, ptr_rc_nor0, ptr_rc_idx, 
    /* DCBTSTEP */
    ptr_rc_nor0, ptr_rc_idx, u5imm, 
    /* DCBZ */
    ptr_rc_nor0, ptr_rc_idx, 
    /* DCBZEP */
    ptr_rc_nor0, ptr_rc_idx, 
    /* DCBZL */
    ptr_rc_nor0, ptr_rc_idx, 
    /* DCBZLEP */
    ptr_rc_nor0, ptr_rc_idx, 
    /* DCCCI */
    gprc, gprc, 
    /* DIVD */
    g8rc, g8rc, g8rc, 
    /* DIVDE */
    g8rc, g8rc, g8rc, 
    /* DIVDEO */
    g8rc, g8rc, g8rc, 
    /* DIVDEO_rec */
    g8rc, g8rc, g8rc, 
    /* DIVDEU */
    g8rc, g8rc, g8rc, 
    /* DIVDEUO */
    g8rc, g8rc, g8rc, 
    /* DIVDEUO_rec */
    g8rc, g8rc, g8rc, 
    /* DIVDEU_rec */
    g8rc, g8rc, g8rc, 
    /* DIVDE_rec */
    g8rc, g8rc, g8rc, 
    /* DIVDO */
    g8rc, g8rc, g8rc, 
    /* DIVDO_rec */
    g8rc, g8rc, g8rc, 
    /* DIVDU */
    g8rc, g8rc, g8rc, 
    /* DIVDUO */
    g8rc, g8rc, g8rc, 
    /* DIVDUO_rec */
    g8rc, g8rc, g8rc, 
    /* DIVDU_rec */
    g8rc, g8rc, g8rc, 
    /* DIVD_rec */
    g8rc, g8rc, g8rc, 
    /* DIVW */
    gprc, gprc, gprc, 
    /* DIVWE */
    gprc, gprc, gprc, 
    /* DIVWEO */
    gprc, gprc, gprc, 
    /* DIVWEO_rec */
    gprc, gprc, gprc, 
    /* DIVWEU */
    gprc, gprc, gprc, 
    /* DIVWEUO */
    gprc, gprc, gprc, 
    /* DIVWEUO_rec */
    gprc, gprc, gprc, 
    /* DIVWEU_rec */
    gprc, gprc, gprc, 
    /* DIVWE_rec */
    gprc, gprc, gprc, 
    /* DIVWO */
    gprc, gprc, gprc, 
    /* DIVWO_rec */
    gprc, gprc, gprc, 
    /* DIVWU */
    gprc, gprc, gprc, 
    /* DIVWUO */
    gprc, gprc, gprc, 
    /* DIVWUO_rec */
    gprc, gprc, gprc, 
    /* DIVWU_rec */
    gprc, gprc, gprc, 
    /* DIVW_rec */
    gprc, gprc, gprc, 
    /* DSS */
    u5imm, 
    /* DSSALL */
    /* DST */
    u5imm, gprc, gprc, 
    /* DST64 */
    u5imm, g8rc, gprc, 
    /* DSTST */
    u5imm, gprc, gprc, 
    /* DSTST64 */
    u5imm, g8rc, gprc, 
    /* DSTSTT */
    u5imm, gprc, gprc, 
    /* DSTSTT64 */
    u5imm, g8rc, gprc, 
    /* DSTT */
    u5imm, gprc, gprc, 
    /* DSTT64 */
    u5imm, g8rc, gprc, 
    /* DYNALLOC */
    gprc, gprc, dispRI, ptr_rc_nor0, 
    /* DYNALLOC8 */
    g8rc, g8rc, dispRI, ptr_rc_nor0, 
    /* DYNAREAOFFSET */
    i32imm, dispRI, ptr_rc_nor0, 
    /* DYNAREAOFFSET8 */
    i64imm, dispRI, ptr_rc_nor0, 
    /* DecreaseCTR8Pseudo */
    crbitrc, i64imm, 
    /* DecreaseCTRPseudo */
    crbitrc, i32imm, 
    /* EFDABS */
    sperc, sperc, 
    /* EFDADD */
    sperc, sperc, sperc, 
    /* EFDCFS */
    sperc, spe4rc, 
    /* EFDCFSF */
    sperc, spe4rc, 
    /* EFDCFSI */
    sperc, gprc, 
    /* EFDCFSID */
    sperc, gprc, 
    /* EFDCFUF */
    sperc, spe4rc, 
    /* EFDCFUI */
    sperc, gprc, 
    /* EFDCFUID */
    sperc, gprc, 
    /* EFDCMPEQ */
    crrc, sperc, sperc, 
    /* EFDCMPGT */
    crrc, sperc, sperc, 
    /* EFDCMPLT */
    crrc, sperc, sperc, 
    /* EFDCTSF */
    sperc, spe4rc, 
    /* EFDCTSI */
    gprc, sperc, 
    /* EFDCTSIDZ */
    gprc, sperc, 
    /* EFDCTSIZ */
    gprc, sperc, 
    /* EFDCTUF */
    sperc, spe4rc, 
    /* EFDCTUI */
    gprc, sperc, 
    /* EFDCTUIDZ */
    gprc, sperc, 
    /* EFDCTUIZ */
    gprc, sperc, 
    /* EFDDIV */
    sperc, sperc, sperc, 
    /* EFDMUL */
    sperc, sperc, sperc, 
    /* EFDNABS */
    sperc, sperc, 
    /* EFDNEG */
    sperc, sperc, 
    /* EFDSUB */
    sperc, sperc, sperc, 
    /* EFDTSTEQ */
    crrc, sperc, sperc, 
    /* EFDTSTGT */
    crrc, sperc, sperc, 
    /* EFDTSTLT */
    crrc, sperc, sperc, 
    /* EFSABS */
    spe4rc, spe4rc, 
    /* EFSADD */
    spe4rc, spe4rc, spe4rc, 
    /* EFSCFD */
    spe4rc, sperc, 
    /* EFSCFSF */
    spe4rc, spe4rc, 
    /* EFSCFSI */
    spe4rc, gprc, 
    /* EFSCFUF */
    spe4rc, spe4rc, 
    /* EFSCFUI */
    spe4rc, gprc, 
    /* EFSCMPEQ */
    crrc, spe4rc, spe4rc, 
    /* EFSCMPGT */
    crrc, spe4rc, spe4rc, 
    /* EFSCMPLT */
    crrc, spe4rc, spe4rc, 
    /* EFSCTSF */
    spe4rc, spe4rc, 
    /* EFSCTSI */
    gprc, spe4rc, 
    /* EFSCTSIZ */
    gprc, spe4rc, 
    /* EFSCTUF */
    sperc, spe4rc, 
    /* EFSCTUI */
    gprc, spe4rc, 
    /* EFSCTUIZ */
    gprc, spe4rc, 
    /* EFSDIV */
    spe4rc, spe4rc, spe4rc, 
    /* EFSMUL */
    spe4rc, spe4rc, spe4rc, 
    /* EFSNABS */
    spe4rc, spe4rc, 
    /* EFSNEG */
    spe4rc, spe4rc, 
    /* EFSSUB */
    spe4rc, spe4rc, spe4rc, 
    /* EFSTSTEQ */
    crrc, sperc, sperc, 
    /* EFSTSTGT */
    crrc, sperc, sperc, 
    /* EFSTSTLT */
    crrc, sperc, sperc, 
    /* EH_SjLj_LongJmp32 */
    ptr_rc_nor0, 
    /* EH_SjLj_LongJmp64 */
    ptr_rc_nor0, 
    /* EH_SjLj_SetJmp32 */
    gprc, ptr_rc_nor0, 
    /* EH_SjLj_SetJmp64 */
    gprc, ptr_rc_nor0, 
    /* EH_SjLj_Setup */
    directbrtarget, 
    /* EQV */
    gprc, gprc, gprc, 
    /* EQV8 */
    g8rc, g8rc, g8rc, 
    /* EQV8_rec */
    g8rc, g8rc, g8rc, 
    /* EQV_rec */
    gprc, gprc, gprc, 
    /* EVABS */
    sperc, sperc, 
    /* EVADDIW */
    sperc, sperc, u5imm, 
    /* EVADDSMIAAW */
    sperc, sperc, 
    /* EVADDSSIAAW */
    sperc, sperc, 
    /* EVADDUMIAAW */
    sperc, sperc, 
    /* EVADDUSIAAW */
    sperc, sperc, 
    /* EVADDW */
    sperc, sperc, sperc, 
    /* EVAND */
    sperc, sperc, sperc, 
    /* EVANDC */
    sperc, sperc, sperc, 
    /* EVCMPEQ */
    crrc, sperc, sperc, 
    /* EVCMPGTS */
    crrc, sperc, sperc, 
    /* EVCMPGTU */
    crrc, sperc, sperc, 
    /* EVCMPLTS */
    crrc, sperc, sperc, 
    /* EVCMPLTU */
    crrc, sperc, sperc, 
    /* EVCNTLSW */
    sperc, sperc, 
    /* EVCNTLZW */
    sperc, sperc, 
    /* EVDIVWS */
    sperc, sperc, sperc, 
    /* EVDIVWU */
    sperc, sperc, sperc, 
    /* EVEQV */
    sperc, sperc, sperc, 
    /* EVEXTSB */
    sperc, sperc, 
    /* EVEXTSH */
    sperc, sperc, 
    /* EVFSABS */
    sperc, sperc, 
    /* EVFSADD */
    sperc, sperc, sperc, 
    /* EVFSCFSF */
    sperc, sperc, 
    /* EVFSCFSI */
    sperc, sperc, 
    /* EVFSCFUF */
    sperc, sperc, 
    /* EVFSCFUI */
    sperc, sperc, 
    /* EVFSCMPEQ */
    crrc, sperc, sperc, 
    /* EVFSCMPGT */
    crrc, sperc, sperc, 
    /* EVFSCMPLT */
    crrc, sperc, sperc, 
    /* EVFSCTSF */
    sperc, sperc, 
    /* EVFSCTSI */
    sperc, sperc, 
    /* EVFSCTSIZ */
    sperc, sperc, 
    /* EVFSCTUF */
    sperc, sperc, 
    /* EVFSCTUI */
    sperc, sperc, 
    /* EVFSCTUIZ */
    sperc, sperc, 
    /* EVFSDIV */
    sperc, sperc, sperc, 
    /* EVFSMUL */
    sperc, sperc, sperc, 
    /* EVFSNABS */
    sperc, sperc, 
    /* EVFSNEG */
    sperc, sperc, 
    /* EVFSSUB */
    sperc, sperc, sperc, 
    /* EVFSTSTEQ */
    crrc, sperc, sperc, 
    /* EVFSTSTGT */
    crrc, sperc, sperc, 
    /* EVFSTSTLT */
    crrc, sperc, sperc, 
    /* EVLDD */
    sperc, dispSPE8, ptr_rc_nor0, 
    /* EVLDDX */
    sperc, ptr_rc_nor0, ptr_rc_idx, 
    /* EVLDH */
    sperc, dispSPE8, ptr_rc_nor0, 
    /* EVLDHX */
    sperc, ptr_rc_nor0, ptr_rc_idx, 
    /* EVLDW */
    sperc, dispSPE8, ptr_rc_nor0, 
    /* EVLDWX */
    sperc, ptr_rc_nor0, ptr_rc_idx, 
    /* EVLHHESPLAT */
    sperc, dispSPE2, ptr_rc_nor0, 
    /* EVLHHESPLATX */
    sperc, ptr_rc_nor0, ptr_rc_idx, 
    /* EVLHHOSSPLAT */
    sperc, dispSPE2, ptr_rc_nor0, 
    /* EVLHHOSSPLATX */
    sperc, ptr_rc_nor0, ptr_rc_idx, 
    /* EVLHHOUSPLAT */
    sperc, dispSPE2, ptr_rc_nor0, 
    /* EVLHHOUSPLATX */
    sperc, ptr_rc_nor0, ptr_rc_idx, 
    /* EVLWHE */
    sperc, dispSPE4, ptr_rc_nor0, 
    /* EVLWHEX */
    sperc, ptr_rc_nor0, ptr_rc_idx, 
    /* EVLWHOS */
    sperc, dispSPE4, ptr_rc_nor0, 
    /* EVLWHOSX */
    sperc, ptr_rc_nor0, ptr_rc_idx, 
    /* EVLWHOU */
    sperc, dispSPE4, ptr_rc_nor0, 
    /* EVLWHOUX */
    sperc, ptr_rc_nor0, ptr_rc_idx, 
    /* EVLWHSPLAT */
    sperc, dispSPE4, ptr_rc_nor0, 
    /* EVLWHSPLATX */
    sperc, ptr_rc_nor0, ptr_rc_idx, 
    /* EVLWWSPLAT */
    sperc, dispSPE4, ptr_rc_nor0, 
    /* EVLWWSPLATX */
    sperc, ptr_rc_nor0, ptr_rc_idx, 
    /* EVMERGEHI */
    sperc, sperc, sperc, 
    /* EVMERGEHILO */
    sperc, sperc, sperc, 
    /* EVMERGELO */
    sperc, gprc, gprc, 
    /* EVMERGELOHI */
    sperc, sperc, sperc, 
    /* EVMHEGSMFAA */
    sperc, sperc, sperc, 
    /* EVMHEGSMFAN */
    sperc, sperc, sperc, 
    /* EVMHEGSMIAA */
    sperc, sperc, sperc, 
    /* EVMHEGSMIAN */
    sperc, sperc, sperc, 
    /* EVMHEGUMIAA */
    sperc, sperc, sperc, 
    /* EVMHEGUMIAN */
    sperc, sperc, sperc, 
    /* EVMHESMF */
    sperc, sperc, sperc, 
    /* EVMHESMFA */
    sperc, sperc, sperc, 
    /* EVMHESMFAAW */
    sperc, sperc, sperc, 
    /* EVMHESMFANW */
    sperc, sperc, sperc, 
    /* EVMHESMI */
    sperc, sperc, sperc, 
    /* EVMHESMIA */
    sperc, sperc, sperc, 
    /* EVMHESMIAAW */
    sperc, sperc, sperc, 
    /* EVMHESMIANW */
    sperc, sperc, sperc, 
    /* EVMHESSF */
    sperc, sperc, sperc, 
    /* EVMHESSFA */
    sperc, sperc, sperc, 
    /* EVMHESSFAAW */
    sperc, sperc, sperc, 
    /* EVMHESSFANW */
    sperc, sperc, sperc, 
    /* EVMHESSIAAW */
    sperc, sperc, sperc, 
    /* EVMHESSIANW */
    sperc, sperc, sperc, 
    /* EVMHEUMI */
    sperc, sperc, sperc, 
    /* EVMHEUMIA */
    sperc, sperc, sperc, 
    /* EVMHEUMIAAW */
    sperc, sperc, sperc, 
    /* EVMHEUMIANW */
    sperc, sperc, sperc, 
    /* EVMHEUSIAAW */
    sperc, sperc, sperc, 
    /* EVMHEUSIANW */
    sperc, sperc, sperc, 
    /* EVMHOGSMFAA */
    sperc, sperc, sperc, 
    /* EVMHOGSMFAN */
    sperc, sperc, sperc, 
    /* EVMHOGSMIAA */
    sperc, sperc, sperc, 
    /* EVMHOGSMIAN */
    sperc, sperc, sperc, 
    /* EVMHOGUMIAA */
    sperc, sperc, sperc, 
    /* EVMHOGUMIAN */
    sperc, sperc, sperc, 
    /* EVMHOSMF */
    sperc, sperc, sperc, 
    /* EVMHOSMFA */
    sperc, sperc, sperc, 
    /* EVMHOSMFAAW */
    sperc, sperc, sperc, 
    /* EVMHOSMFANW */
    sperc, sperc, sperc, 
    /* EVMHOSMI */
    sperc, sperc, sperc, 
    /* EVMHOSMIA */
    sperc, sperc, sperc, 
    /* EVMHOSMIAAW */
    sperc, sperc, sperc, 
    /* EVMHOSMIANW */
    sperc, sperc, sperc, 
    /* EVMHOSSF */
    sperc, sperc, sperc, 
    /* EVMHOSSFA */
    sperc, sperc, sperc, 
    /* EVMHOSSFAAW */
    sperc, sperc, sperc, 
    /* EVMHOSSFANW */
    sperc, sperc, sperc, 
    /* EVMHOSSIAAW */
    sperc, sperc, sperc, 
    /* EVMHOSSIANW */
    sperc, sperc, sperc, 
    /* EVMHOUMI */
    sperc, sperc, sperc, 
    /* EVMHOUMIA */
    sperc, sperc, sperc, 
    /* EVMHOUMIAAW */
    sperc, sperc, sperc, 
    /* EVMHOUMIANW */
    sperc, sperc, sperc, 
    /* EVMHOUSIAAW */
    sperc, sperc, sperc, 
    /* EVMHOUSIANW */
    sperc, sperc, sperc, 
    /* EVMRA */
    sperc, sperc, 
    /* EVMWHSMF */
    sperc, sperc, sperc, 
    /* EVMWHSMFA */
    sperc, sperc, sperc, 
    /* EVMWHSMI */
    sperc, sperc, sperc, 
    /* EVMWHSMIA */
    sperc, sperc, sperc, 
    /* EVMWHSSF */
    sperc, sperc, sperc, 
    /* EVMWHSSFA */
    sperc, sperc, sperc, 
    /* EVMWHUMI */
    sperc, sperc, sperc, 
    /* EVMWHUMIA */
    sperc, sperc, sperc, 
    /* EVMWLSMIAAW */
    sperc, sperc, sperc, 
    /* EVMWLSMIANW */
    sperc, sperc, sperc, 
    /* EVMWLSSIAAW */
    sperc, sperc, sperc, 
    /* EVMWLSSIANW */
    sperc, sperc, sperc, 
    /* EVMWLUMI */
    sperc, sperc, sperc, 
    /* EVMWLUMIA */
    sperc, sperc, sperc, 
    /* EVMWLUMIAAW */
    sperc, sperc, sperc, 
    /* EVMWLUMIANW */
    sperc, sperc, sperc, 
    /* EVMWLUSIAAW */
    sperc, sperc, sperc, 
    /* EVMWLUSIANW */
    sperc, sperc, sperc, 
    /* EVMWSMF */
    sperc, sperc, sperc, 
    /* EVMWSMFA */
    sperc, sperc, sperc, 
    /* EVMWSMFAA */
    sperc, sperc, sperc, 
    /* EVMWSMFAN */
    sperc, sperc, sperc, 
    /* EVMWSMI */
    sperc, sperc, sperc, 
    /* EVMWSMIA */
    sperc, sperc, sperc, 
    /* EVMWSMIAA */
    sperc, sperc, sperc, 
    /* EVMWSMIAN */
    sperc, sperc, sperc, 
    /* EVMWSSF */
    sperc, sperc, sperc, 
    /* EVMWSSFA */
    sperc, sperc, sperc, 
    /* EVMWSSFAA */
    sperc, sperc, sperc, 
    /* EVMWSSFAN */
    sperc, sperc, sperc, 
    /* EVMWUMI */
    sperc, sperc, sperc, 
    /* EVMWUMIA */
    sperc, sperc, sperc, 
    /* EVMWUMIAA */
    sperc, sperc, sperc, 
    /* EVMWUMIAN */
    sperc, sperc, sperc, 
    /* EVNAND */
    sperc, sperc, sperc, 
    /* EVNEG */
    sperc, sperc, 
    /* EVNOR */
    sperc, sperc, sperc, 
    /* EVOR */
    sperc, sperc, sperc, 
    /* EVORC */
    sperc, sperc, sperc, 
    /* EVRLW */
    sperc, sperc, sperc, 
    /* EVRLWI */
    sperc, sperc, u5imm, 
    /* EVRNDW */
    sperc, sperc, 
    /* EVSEL */
    sperc, sperc, sperc, crrc, 
    /* EVSLW */
    sperc, sperc, sperc, 
    /* EVSLWI */
    sperc, sperc, u5imm, 
    /* EVSPLATFI */
    sperc, s5imm, 
    /* EVSPLATI */
    sperc, s5imm, 
    /* EVSRWIS */
    sperc, sperc, u5imm, 
    /* EVSRWIU */
    sperc, sperc, u5imm, 
    /* EVSRWS */
    sperc, sperc, sperc, 
    /* EVSRWU */
    sperc, sperc, sperc, 
    /* EVSTDD */
    sperc, dispSPE8, ptr_rc_nor0, 
    /* EVSTDDX */
    sperc, ptr_rc_nor0, ptr_rc_idx, 
    /* EVSTDH */
    sperc, dispSPE8, ptr_rc_nor0, 
    /* EVSTDHX */
    sperc, ptr_rc_nor0, ptr_rc_idx, 
    /* EVSTDW */
    sperc, dispSPE8, ptr_rc_nor0, 
    /* EVSTDWX */
    sperc, ptr_rc_nor0, ptr_rc_idx, 
    /* EVSTWHE */
    sperc, dispSPE4, ptr_rc_nor0, 
    /* EVSTWHEX */
    sperc, ptr_rc_nor0, ptr_rc_idx, 
    /* EVSTWHO */
    sperc, dispSPE4, ptr_rc_nor0, 
    /* EVSTWHOX */
    sperc, ptr_rc_nor0, ptr_rc_idx, 
    /* EVSTWWE */
    sperc, dispSPE4, ptr_rc_nor0, 
    /* EVSTWWEX */
    sperc, ptr_rc_nor0, ptr_rc_idx, 
    /* EVSTWWO */
    sperc, dispSPE4, ptr_rc_nor0, 
    /* EVSTWWOX */
    sperc, ptr_rc_nor0, ptr_rc_idx, 
    /* EVSUBFSMIAAW */
    sperc, sperc, 
    /* EVSUBFSSIAAW */
    sperc, sperc, 
    /* EVSUBFUMIAAW */
    sperc, sperc, 
    /* EVSUBFUSIAAW */
    sperc, sperc, 
    /* EVSUBFW */
    sperc, sperc, sperc, 
    /* EVSUBIFW */
    sperc, u5imm, sperc, 
    /* EVXOR */
    sperc, sperc, sperc, 
    /* EXTSB */
    gprc, gprc, 
    /* EXTSB8 */
    g8rc, g8rc, 
    /* EXTSB8_32_64 */
    g8rc, gprc, 
    /* EXTSB8_rec */
    g8rc, g8rc, 
    /* EXTSB_rec */
    gprc, gprc, 
    /* EXTSH */
    gprc, gprc, 
    /* EXTSH8 */
    g8rc, g8rc, 
    /* EXTSH8_32_64 */
    g8rc, gprc, 
    /* EXTSH8_rec */
    g8rc, g8rc, 
    /* EXTSH_rec */
    gprc, gprc, 
    /* EXTSW */
    g8rc, g8rc, 
    /* EXTSWSLI */
    g8rc, g8rc, u6imm, 
    /* EXTSWSLI_32_64 */
    g8rc, gprc, u6imm, 
    /* EXTSWSLI_32_64_rec */
    g8rc, gprc, u6imm, 
    /* EXTSWSLI_rec */
    g8rc, g8rc, u6imm, 
    /* EXTSW_32 */
    gprc, gprc, 
    /* EXTSW_32_64 */
    g8rc, gprc, 
    /* EXTSW_32_64_rec */
    g8rc, gprc, 
    /* EXTSW_rec */
    g8rc, g8rc, 
    /* EnforceIEIO */
    /* FABSD */
    f8rc, f8rc, 
    /* FABSD_rec */
    f8rc, f8rc, 
    /* FABSS */
    f4rc, f4rc, 
    /* FABSS_rec */
    f4rc, f4rc, 
    /* FADD */
    f8rc, f8rc, f8rc, 
    /* FADDS */
    f4rc, f4rc, f4rc, 
    /* FADDS_rec */
    f4rc, f4rc, f4rc, 
    /* FADD_rec */
    f8rc, f8rc, f8rc, 
    /* FADDrtz */
    f8rc, f8rc, f8rc, 
    /* FCFID */
    f8rc, f8rc, 
    /* FCFIDS */
    f4rc, f8rc, 
    /* FCFIDS_rec */
    f4rc, f8rc, 
    /* FCFIDU */
    f8rc, f8rc, 
    /* FCFIDUS */
    f4rc, f8rc, 
    /* FCFIDUS_rec */
    f4rc, f8rc, 
    /* FCFIDU_rec */
    f8rc, f8rc, 
    /* FCFID_rec */
    f8rc, f8rc, 
    /* FCMPOD */
    crrc, f8rc, f8rc, 
    /* FCMPOS */
    crrc, f4rc, f4rc, 
    /* FCMPUD */
    crrc, f8rc, f8rc, 
    /* FCMPUS */
    crrc, f4rc, f4rc, 
    /* FCPSGND */
    f8rc, f8rc, f8rc, 
    /* FCPSGND_rec */
    f8rc, f8rc, f8rc, 
    /* FCPSGNS */
    f4rc, f4rc, f4rc, 
    /* FCPSGNS_rec */
    f4rc, f4rc, f4rc, 
    /* FCTID */
    f8rc, f8rc, 
    /* FCTIDU */
    f8rc, f8rc, 
    /* FCTIDUZ */
    f8rc, f8rc, 
    /* FCTIDUZ_rec */
    f8rc, f8rc, 
    /* FCTIDU_rec */
    f8rc, f8rc, 
    /* FCTIDZ */
    f8rc, f8rc, 
    /* FCTIDZ_rec */
    f8rc, f8rc, 
    /* FCTID_rec */
    f8rc, f8rc, 
    /* FCTIW */
    f8rc, f8rc, 
    /* FCTIWU */
    f8rc, f8rc, 
    /* FCTIWUZ */
    f8rc, f8rc, 
    /* FCTIWUZ_rec */
    f8rc, f8rc, 
    /* FCTIWU_rec */
    f8rc, f8rc, 
    /* FCTIWZ */
    f8rc, f8rc, 
    /* FCTIWZ_rec */
    f8rc, f8rc, 
    /* FCTIW_rec */
    f8rc, f8rc, 
    /* FDIV */
    f8rc, f8rc, f8rc, 
    /* FDIVS */
    f4rc, f4rc, f4rc, 
    /* FDIVS_rec */
    f4rc, f4rc, f4rc, 
    /* FDIV_rec */
    f8rc, f8rc, f8rc, 
    /* FMADD */
    f8rc, f8rc, f8rc, f8rc, 
    /* FMADDS */
    f4rc, f4rc, f4rc, f4rc, 
    /* FMADDS_rec */
    f4rc, f4rc, f4rc, f4rc, 
    /* FMADD_rec */
    f8rc, f8rc, f8rc, f8rc, 
    /* FMR */
    f4rc, f4rc, 
    /* FMR_rec */
    f4rc, f4rc, 
    /* FMSUB */
    f8rc, f8rc, f8rc, f8rc, 
    /* FMSUBS */
    f4rc, f4rc, f4rc, f4rc, 
    /* FMSUBS_rec */
    f4rc, f4rc, f4rc, f4rc, 
    /* FMSUB_rec */
    f8rc, f8rc, f8rc, f8rc, 
    /* FMUL */
    f8rc, f8rc, f8rc, 
    /* FMULS */
    f4rc, f4rc, f4rc, 
    /* FMULS_rec */
    f4rc, f4rc, f4rc, 
    /* FMUL_rec */
    f8rc, f8rc, f8rc, 
    /* FNABSD */
    f8rc, f8rc, 
    /* FNABSD_rec */
    f8rc, f8rc, 
    /* FNABSS */
    f4rc, f4rc, 
    /* FNABSS_rec */
    f4rc, f4rc, 
    /* FNEGD */
    f8rc, f8rc, 
    /* FNEGD_rec */
    f8rc, f8rc, 
    /* FNEGS */
    f4rc, f4rc, 
    /* FNEGS_rec */
    f4rc, f4rc, 
    /* FNMADD */
    f8rc, f8rc, f8rc, f8rc, 
    /* FNMADDS */
    f4rc, f4rc, f4rc, f4rc, 
    /* FNMADDS_rec */
    f4rc, f4rc, f4rc, f4rc, 
    /* FNMADD_rec */
    f8rc, f8rc, f8rc, f8rc, 
    /* FNMSUB */
    f8rc, f8rc, f8rc, f8rc, 
    /* FNMSUBS */
    f4rc, f4rc, f4rc, f4rc, 
    /* FNMSUBS_rec */
    f4rc, f4rc, f4rc, f4rc, 
    /* FNMSUB_rec */
    f8rc, f8rc, f8rc, f8rc, 
    /* FRE */
    f8rc, f8rc, 
    /* FRES */
    f4rc, f4rc, 
    /* FRES_rec */
    f4rc, f4rc, 
    /* FRE_rec */
    f8rc, f8rc, 
    /* FRIMD */
    f8rc, f8rc, 
    /* FRIMD_rec */
    f8rc, f8rc, 
    /* FRIMS */
    f4rc, f4rc, 
    /* FRIMS_rec */
    f4rc, f4rc, 
    /* FRIND */
    f8rc, f8rc, 
    /* FRIND_rec */
    f8rc, f8rc, 
    /* FRINS */
    f4rc, f4rc, 
    /* FRINS_rec */
    f4rc, f4rc, 
    /* FRIPD */
    f8rc, f8rc, 
    /* FRIPD_rec */
    f8rc, f8rc, 
    /* FRIPS */
    f4rc, f4rc, 
    /* FRIPS_rec */
    f4rc, f4rc, 
    /* FRIZD */
    f8rc, f8rc, 
    /* FRIZD_rec */
    f8rc, f8rc, 
    /* FRIZS */
    f4rc, f4rc, 
    /* FRIZS_rec */
    f4rc, f4rc, 
    /* FRSP */
    f4rc, f8rc, 
    /* FRSP_rec */
    f4rc, f8rc, 
    /* FRSQRTE */
    f8rc, f8rc, 
    /* FRSQRTES */
    f4rc, f4rc, 
    /* FRSQRTES_rec */
    f4rc, f4rc, 
    /* FRSQRTE_rec */
    f8rc, f8rc, 
    /* FSELD */
    f8rc, f8rc, f8rc, f8rc, 
    /* FSELD_rec */
    f8rc, f8rc, f8rc, f8rc, 
    /* FSELS */
    f4rc, f8rc, f4rc, f4rc, 
    /* FSELS_rec */
    f4rc, f8rc, f4rc, f4rc, 
    /* FSQRT */
    f8rc, f8rc, 
    /* FSQRTS */
    f4rc, f4rc, 
    /* FSQRTS_rec */
    f4rc, f4rc, 
    /* FSQRT_rec */
    f8rc, f8rc, 
    /* FSUB */
    f8rc, f8rc, f8rc, 
    /* FSUBS */
    f4rc, f4rc, f4rc, 
    /* FSUBS_rec */
    f4rc, f4rc, f4rc, 
    /* FSUB_rec */
    f8rc, f8rc, f8rc, 
    /* FTDIV */
    crrc, f8rc, f8rc, 
    /* FTSQRT */
    crrc, f8rc, 
    /* GETtlsADDR */
    g8rc, g8rc, tlsgd, 
    /* GETtlsADDR32 */
    gprc, gprc, tlsgd32, 
    /* GETtlsADDR32AIX */
    gprc, gprc, gprc, 
    /* GETtlsADDR64AIX */
    g8rc, g8rc, g8rc, 
    /* GETtlsADDRPCREL */
    g8rc, g8rc, tlsgd, 
    /* GETtlsldADDR */
    g8rc, g8rc, tlsgd, 
    /* GETtlsldADDR32 */
    gprc, gprc, tlsgd32, 
    /* GETtlsldADDRPCREL */
    g8rc, g8rc, tlsgd, 
    /* HASHCHK */
    gprc, dispRIHash, ptr_rc_nor0, 
    /* HASHCHK8 */
    g8rc, dispRIHash, ptr_rc_nor0, 
    /* HASHCHKP */
    gprc, dispRIHash, ptr_rc_nor0, 
    /* HASHCHKP8 */
    g8rc, dispRIHash, ptr_rc_nor0, 
    /* HASHST */
    gprc, dispRIHash, ptr_rc_nor0, 
    /* HASHST8 */
    g8rc, dispRIHash, ptr_rc_nor0, 
    /* HASHSTP */
    gprc, dispRIHash, ptr_rc_nor0, 
    /* HASHSTP8 */
    g8rc, dispRIHash, ptr_rc_nor0, 
    /* HRFID */
    /* ICBI */
    ptr_rc_nor0, ptr_rc_idx, 
    /* ICBIEP */
    ptr_rc_nor0, ptr_rc_idx, 
    /* ICBLC */
    u4imm, ptr_rc_nor0, ptr_rc_idx, 
    /* ICBLQ */
    u4imm, ptr_rc_nor0, ptr_rc_idx, 
    /* ICBT */
    u4imm, ptr_rc_nor0, ptr_rc_idx, 
    /* ICBTLS */
    u4imm, ptr_rc_nor0, ptr_rc_idx, 
    /* ICCCI */
    gprc, gprc, 
    /* ISEL */
    gprc, gprc_nor0, gprc, crbitrc, 
    /* ISEL8 */
    g8rc, g8rc_nox0, g8rc, crbitrc, 
    /* ISYNC */
    /* LA */
    gprc, gprc_nor0, s16imm, 
    /* LA8 */
    g8rc, g8rc_nox0, s16imm64, 
    /* LBARX */
    gprc, ptr_rc_nor0, ptr_rc_idx, 
    /* LBARXL */
    gprc, ptr_rc_nor0, ptr_rc_idx, 
    /* LBEPX */
    gprc, ptr_rc_nor0, ptr_rc_idx, 
    /* LBZ */
    gprc, dispRI, ptr_rc_nor0, 
    /* LBZ8 */
    g8rc, dispRI, ptr_rc_nor0, 
    /* LBZCIX */
    gprc, gprc, gprc, 
    /* LBZU */
    gprc, ptr_rc_nor0, dispRI, ptr_rc_nor0, 
    /* LBZU8 */
    g8rc, ptr_rc_nor0, dispRI, ptr_rc_nor0, 
    /* LBZUX */
    gprc, ptr_rc_nor0, ptr_rc_nor0, ptr_rc_idx, 
    /* LBZUX8 */
    g8rc, ptr_rc_nor0, ptr_rc_nor0, ptr_rc_idx, 
    /* LBZX */
    gprc, ptr_rc_nor0, ptr_rc_idx, 
    /* LBZX8 */
    g8rc, ptr_rc_nor0, ptr_rc_idx, 
    /* LBZXTLS */
    g8rc, ptr_rc_nor0, tlsreg, 
    /* LBZXTLS_ */
    g8rc, ptr_rc_nor0, tlsreg, 
    /* LBZXTLS_32 */
    gprc, ptr_rc_nor0, tlsreg, 
    /* LD */
    g8rc, dispRIX, ptr_rc_nor0, 
    /* LDARX */
    g8rc, ptr_rc_nor0, ptr_rc_idx, 
    /* LDARXL */
    g8rc, ptr_rc_nor0, ptr_rc_idx, 
    /* LDAT */
    g8rc, g8rc, u5imm, 
    /* LDBRX */
    g8rc, ptr_rc_nor0, ptr_rc_idx, 
    /* LDCIX */
    gprc, gprc, gprc, 
    /* LDU */
    g8rc, ptr_rc_nor0, dispRIX, ptr_rc_nor0, 
    /* LDUX */
    g8rc, ptr_rc_nor0, ptr_rc_nor0, ptr_rc_idx, 
    /* LDX */
    g8rc, ptr_rc_nor0, ptr_rc_idx, 
    /* LDXTLS */
    g8rc, ptr_rc_nor0, tlsreg, 
    /* LDXTLS_ */
    g8rc, ptr_rc_nor0, tlsreg, 
    /* LDgotTprelL */
    g8rc_nox0, s16imm64, g8rc_nox0, 
    /* LDgotTprelL32 */
    gprc_nor0, s16imm, gprc_nor0, 
    /* LDtoc */
    g8rc, i64imm, g8rc, 
    /* LDtocBA */
    g8rc, i64imm, g8rc, 
    /* LDtocCPT */
    g8rc, i64imm, g8rc, 
    /* LDtocJTI */
    g8rc, i64imm, g8rc, 
    /* LDtocL */
    g8rc, i64imm, g8rc_nox0, 
    /* LFD */
    f8rc, dispRI, ptr_rc_nor0, 
    /* LFDEPX */
    f8rc, ptr_rc_nor0, ptr_rc_idx, 
    /* LFDU */
    f8rc, ptr_rc_nor0, dispRI, ptr_rc_nor0, 
    /* LFDUX */
    f8rc, ptr_rc_nor0, ptr_rc_nor0, ptr_rc_idx, 
    /* LFDX */
    f8rc, ptr_rc_nor0, ptr_rc_idx, 
    /* LFIWAX */
    f8rc, ptr_rc_nor0, ptr_rc_idx, 
    /* LFIWZX */
    f8rc, ptr_rc_nor0, ptr_rc_idx, 
    /* LFS */
    f4rc, dispRI, ptr_rc_nor0, 
    /* LFSU */
    f4rc, ptr_rc_nor0, dispRI, ptr_rc_nor0, 
    /* LFSUX */
    f4rc, ptr_rc_nor0, ptr_rc_nor0, ptr_rc_idx, 
    /* LFSX */
    f4rc, ptr_rc_nor0, ptr_rc_idx, 
    /* LHA */
    gprc, dispRI, ptr_rc_nor0, 
    /* LHA8 */
    g8rc, dispRI, ptr_rc_nor0, 
    /* LHARX */
    gprc, ptr_rc_nor0, ptr_rc_idx, 
    /* LHARXL */
    gprc, ptr_rc_nor0, ptr_rc_idx, 
    /* LHAU */
    gprc, ptr_rc_nor0, dispRI, ptr_rc_nor0, 
    /* LHAU8 */
    g8rc, ptr_rc_nor0, dispRI, ptr_rc_nor0, 
    /* LHAUX */
    gprc, ptr_rc_nor0, ptr_rc_nor0, ptr_rc_idx, 
    /* LHAUX8 */
    g8rc, ptr_rc_nor0, ptr_rc_nor0, ptr_rc_idx, 
    /* LHAX */
    gprc, ptr_rc_nor0, ptr_rc_idx, 
    /* LHAX8 */
    g8rc, ptr_rc_nor0, ptr_rc_idx, 
    /* LHBRX */
    gprc, ptr_rc_nor0, ptr_rc_idx, 
    /* LHBRX8 */
    g8rc, ptr_rc_nor0, ptr_rc_idx, 
    /* LHEPX */
    gprc, ptr_rc_nor0, ptr_rc_idx, 
    /* LHZ */
    gprc, dispRI, ptr_rc_nor0, 
    /* LHZ8 */
    g8rc, dispRI, ptr_rc_nor0, 
    /* LHZCIX */
    gprc, gprc, gprc, 
    /* LHZU */
    gprc, ptr_rc_nor0, dispRI, ptr_rc_nor0, 
    /* LHZU8 */
    g8rc, ptr_rc_nor0, dispRI, ptr_rc_nor0, 
    /* LHZUX */
    gprc, ptr_rc_nor0, ptr_rc_nor0, ptr_rc_idx, 
    /* LHZUX8 */
    g8rc, ptr_rc_nor0, ptr_rc_nor0, ptr_rc_idx, 
    /* LHZX */
    gprc, ptr_rc_nor0, ptr_rc_idx, 
    /* LHZX8 */
    g8rc, ptr_rc_nor0, ptr_rc_idx, 
    /* LHZXTLS */
    g8rc, ptr_rc_nor0, tlsreg, 
    /* LHZXTLS_ */
    g8rc, ptr_rc_nor0, tlsreg, 
    /* LHZXTLS_32 */
    gprc, ptr_rc_nor0, tlsreg, 
    /* LI */
    gprc, s16imm, 
    /* LI8 */
    g8rc, s16imm64, 
    /* LIS */
    gprc, s17imm, 
    /* LIS8 */
    g8rc, s17imm64, 
    /* LMW */
    gprc, dispRI, ptr_rc_nor0, 
    /* LQ */
    g8prc, dispRIX16, ptr_rc_nor0, 
    /* LQARX */
    g8prc, ptr_rc_nor0, ptr_rc_idx, 
    /* LQARXL */
    g8prc, ptr_rc_nor0, ptr_rc_idx, 
    /* LQX_PSEUDO */
    g8prc, ptr_rc_nor0, ptr_rc_idx, 
    /* LSWI */
    gprc, gprc, u5imm, 
    /* LVEBX */
    vrrc, ptr_rc_nor0, ptr_rc_idx, 
    /* LVEHX */
    vrrc, ptr_rc_nor0, ptr_rc_idx, 
    /* LVEWX */
    vrrc, ptr_rc_nor0, ptr_rc_idx, 
    /* LVSL */
    vrrc, ptr_rc_nor0, ptr_rc_idx, 
    /* LVSR */
    vrrc, ptr_rc_nor0, ptr_rc_idx, 
    /* LVX */
    vrrc, ptr_rc_nor0, ptr_rc_idx, 
    /* LVXL */
    vrrc, ptr_rc_nor0, ptr_rc_idx, 
    /* LWA */
    g8rc, dispRIX, ptr_rc_nor0, 
    /* LWARX */
    gprc, ptr_rc_nor0, ptr_rc_idx, 
    /* LWARXL */
    gprc, ptr_rc_nor0, ptr_rc_idx, 
    /* LWAT */
    gprc, gprc, u5imm, 
    /* LWAUX */
    g8rc, ptr_rc_nor0, ptr_rc_nor0, ptr_rc_idx, 
    /* LWAX */
    g8rc, ptr_rc_nor0, ptr_rc_idx, 
    /* LWAX_32 */
    gprc, ptr_rc_nor0, ptr_rc_idx, 
    /* LWA_32 */
    gprc, dispRIX, ptr_rc_nor0, 
    /* LWBRX */
    gprc, ptr_rc_nor0, ptr_rc_idx, 
    /* LWBRX8 */
    g8rc, ptr_rc_nor0, ptr_rc_idx, 
    /* LWEPX */
    gprc, ptr_rc_nor0, ptr_rc_idx, 
    /* LWZ */
    gprc, dispRI, ptr_rc_nor0, 
    /* LWZ8 */
    g8rc, dispRI, ptr_rc_nor0, 
    /* LWZCIX */
    gprc, gprc, gprc, 
    /* LWZU */
    gprc, ptr_rc_nor0, dispRI, ptr_rc_nor0, 
    /* LWZU8 */
    g8rc, ptr_rc_nor0, dispRI, ptr_rc_nor0, 
    /* LWZUX */
    gprc, ptr_rc_nor0, ptr_rc_nor0, ptr_rc_idx, 
    /* LWZUX8 */
    g8rc, ptr_rc_nor0, ptr_rc_nor0, ptr_rc_idx, 
    /* LWZX */
    gprc, ptr_rc_nor0, ptr_rc_idx, 
    /* LWZX8 */
    g8rc, ptr_rc_nor0, ptr_rc_idx, 
    /* LWZXTLS */
    g8rc, ptr_rc_nor0, tlsreg, 
    /* LWZXTLS_ */
    g8rc, ptr_rc_nor0, tlsreg, 
    /* LWZXTLS_32 */
    gprc, ptr_rc_nor0, tlsreg, 
    /* LWZtoc */
    gprc, i32imm, gprc, 
    /* LWZtocL */
    gprc, i32imm, gprc_nor0, 
    /* LXSD */
    vfrc, dispRIX, ptr_rc_nor0, 
    /* LXSDX */
    vsfrc, ptr_rc_nor0, ptr_rc_idx, 
    /* LXSIBZX */
    vsfrc, ptr_rc_nor0, ptr_rc_idx, 
    /* LXSIHZX */
    vsfrc, ptr_rc_nor0, ptr_rc_idx, 
    /* LXSIWAX */
    vsfrc, ptr_rc_nor0, ptr_rc_idx, 
    /* LXSIWZX */
    vsfrc, ptr_rc_nor0, ptr_rc_idx, 
    /* LXSSP */
    vfrc, dispRIX, ptr_rc_nor0, 
    /* LXSSPX */
    vssrc, ptr_rc_nor0, ptr_rc_idx, 
    /* LXV */
    vsrc, dispRIX16, ptr_rc_nor0, 
    /* LXVB16X */
    vsrc, ptr_rc_nor0, ptr_rc_idx, 
    /* LXVD2X */
    vsrc, ptr_rc_nor0, ptr_rc_idx, 
    /* LXVDSX */
    vsrc, ptr_rc_nor0, ptr_rc_idx, 
    /* LXVH8X */
    vsrc, ptr_rc_nor0, ptr_rc_idx, 
    /* LXVKQ */
    vsrc, u5imm, 
    /* LXVL */
    vsrc, ptr_rc_nor0, g8rc, 
    /* LXVLL */
    vsrc, ptr_rc_nor0, g8rc, 
    /* LXVP */
    vsrprc, dispRIX16, ptr_rc_nor0, 
    /* LXVPX */
    vsrprc, ptr_rc_nor0, ptr_rc_idx, 
    /* LXVRBX */
    vsrc, ptr_rc_nor0, ptr_rc_idx, 
    /* LXVRDX */
    vsrc, ptr_rc_nor0, ptr_rc_idx, 
    /* LXVRHX */
    vsrc, ptr_rc_nor0, ptr_rc_idx, 
    /* LXVRWX */
    vsrc, ptr_rc_nor0, ptr_rc_idx, 
    /* LXVW4X */
    vsrc, ptr_rc_nor0, ptr_rc_idx, 
    /* LXVWSX */
    vsrc, ptr_rc_nor0, ptr_rc_idx, 
    /* LXVX */
    vsrc, ptr_rc_nor0, ptr_rc_idx, 
    /* MADDHD */
    g8rc, g8rc, g8rc, g8rc, 
    /* MADDHDU */
    g8rc, g8rc, g8rc, g8rc, 
    /* MADDLD */
    gprc, gprc, gprc, gprc, 
    /* MADDLD8 */
    g8rc, g8rc, g8rc, g8rc, 
    /* MBAR */
    u5imm, 
    /* MCRF */
    crrc, crrc, 
    /* MCRFS */
    crrc, crrc, 
    /* MCRXRX */
    crrc, 
    /* MFBHRBE */
    gprc, u10imm, u10imm, 
    /* MFCR */
    gprc, 
    /* MFCR8 */
    g8rc, 
    /* MFCTR */
    gprc, 
    /* MFCTR8 */
    g8rc, 
    /* MFDCR */
    gprc, i32imm, 
    /* MFFS */
    f8rc, 
    /* MFFSCDRN */
    f8rc, f8rc, 
    /* MFFSCDRNI */
    f8rc, u3imm, 
    /* MFFSCE */
    f8rc, 
    /* MFFSCRN */
    f8rc, f8rc, 
    /* MFFSCRNI */
    f8rc, u2imm, 
    /* MFFSL */
    f8rc, 
    /* MFFS_rec */
    f8rc, 
    /* MFLR */
    gprc, 
    /* MFLR8 */
    g8rc, 
    /* MFMSR */
    gprc, 
    /* MFOCRF */
    gprc, crbitm, 
    /* MFOCRF8 */
    g8rc, crbitm, 
    /* MFPMR */
    gprc, i32imm, 
    /* MFSPR */
    gprc, i32imm, 
    /* MFSPR8 */
    g8rc, i32imm, 
    /* MFSR */
    gprc, u4imm, 
    /* MFSRIN */
    gprc, gprc, 
    /* MFTB */
    gprc, i32imm, 
    /* MFTB8 */
    g8rc, 
    /* MFUDSCR */
    gprc, 
    /* MFVRD */
    g8rc, vsrc, 
    /* MFVRSAVE */
    gprc, 
    /* MFVRSAVEv */
    gprc, VRSAVERC, 
    /* MFVRWZ */
    gprc, vsrc, 
    /* MFVSCR */
    vrrc, 
    /* MFVSRD */
    g8rc, vsfrc, 
    /* MFVSRLD */
    g8rc, vsrc, 
    /* MFVSRWZ */
    gprc, vsfrc, 
    /* MODSD */
    g8rc, g8rc, g8rc, 
    /* MODSW */
    gprc, gprc, gprc, 
    /* MODUD */
    g8rc, g8rc, g8rc, 
    /* MODUW */
    gprc, gprc, gprc, 
    /* MSGSYNC */
    /* MSYNC */
    /* MTCRF */
    i32imm, gprc, 
    /* MTCRF8 */
    i32imm, g8rc, 
    /* MTCTR */
    gprc, 
    /* MTCTR8 */
    g8rc, 
    /* MTCTR8Pseudo */
    g8rc, 
    /* MTCTR8loop */
    g8rc, 
    /* MTCTRPseudo */
    gprc, 
    /* MTCTRloop */
    gprc, 
    /* MTDCR */
    gprc, i32imm, 
    /* MTFSB0 */
    u5imm, 
    /* MTFSB1 */
    u5imm, 
    /* MTFSF */
    i32imm, f8rc, u1imm, i32imm, 
    /* MTFSFI */
    u3imm, u4imm, i32imm, 
    /* MTFSFI_rec */
    u3imm, u4imm, u1imm, 
    /* MTFSFIb */
    u3imm, u4imm, 
    /* MTFSF_rec */
    i32imm, f8rc, u1imm, i32imm, 
    /* MTFSFb */
    i32imm, f8rc, 
    /* MTLR */
    gprc, 
    /* MTLR8 */
    g8rc, 
    /* MTMSR */
    gprc, u1imm, 
    /* MTMSRD */
    gprc, u1imm, 
    /* MTOCRF */
    crbitm, gprc, 
    /* MTOCRF8 */
    crbitm, g8rc, 
    /* MTPMR */
    i32imm, gprc, 
    /* MTSPR */
    i32imm, gprc, 
    /* MTSPR8 */
    i32imm, g8rc, 
    /* MTSR */
    gprc, u4imm, 
    /* MTSRIN */
    gprc, gprc, 
    /* MTUDSCR */
    gprc, 
    /* MTVRD */
    vsrc, g8rc, 
    /* MTVRSAVE */
    gprc, 
    /* MTVRSAVEv */
    VRSAVERC, gprc, 
    /* MTVRWA */
    vsrc, gprc, 
    /* MTVRWZ */
    vsrc, gprc, 
    /* MTVSCR */
    vrrc, 
    /* MTVSRBM */
    vrrc, g8rc, 
    /* MTVSRBMI */
    vrrc, u16imm64, 
    /* MTVSRD */
    vsfrc, g8rc, 
    /* MTVSRDD */
    vsrc, g8rc_nox0, g8rc, 
    /* MTVSRDM */
    vrrc, g8rc, 
    /* MTVSRHM */
    vrrc, g8rc, 
    /* MTVSRQM */
    vrrc, g8rc, 
    /* MTVSRWA */
    vsfrc, gprc, 
    /* MTVSRWM */
    vrrc, g8rc, 
    /* MTVSRWS */
    vsrc, gprc, 
    /* MTVSRWZ */
    vsfrc, gprc, 
    /* MULHD */
    g8rc, g8rc, g8rc, 
    /* MULHDU */
    g8rc, g8rc, g8rc, 
    /* MULHDU_rec */
    g8rc, g8rc, g8rc, 
    /* MULHD_rec */
    g8rc, g8rc, g8rc, 
    /* MULHW */
    gprc, gprc, gprc, 
    /* MULHWU */
    gprc, gprc, gprc, 
    /* MULHWU_rec */
    gprc, gprc, gprc, 
    /* MULHW_rec */
    gprc, gprc, gprc, 
    /* MULLD */
    g8rc, g8rc, g8rc, 
    /* MULLDO */
    g8rc, g8rc, g8rc, 
    /* MULLDO_rec */
    g8rc, g8rc, g8rc, 
    /* MULLD_rec */
    g8rc, g8rc, g8rc, 
    /* MULLI */
    gprc, gprc, s16imm, 
    /* MULLI8 */
    g8rc, g8rc, s16imm64, 
    /* MULLW */
    gprc, gprc, gprc, 
    /* MULLWO */
    gprc, gprc, gprc, 
    /* MULLWO_rec */
    gprc, gprc, gprc, 
    /* MULLW_rec */
    gprc, gprc, gprc, 
    /* MoveGOTtoLR */
    /* MovePCtoLR */
    /* MovePCtoLR8 */
    /* NAND */
    gprc, gprc, gprc, 
    /* NAND8 */
    g8rc, g8rc, g8rc, 
    /* NAND8_rec */
    g8rc, g8rc, g8rc, 
    /* NAND_rec */
    gprc, gprc, gprc, 
    /* NAP */
    /* NEG */
    gprc, gprc, 
    /* NEG8 */
    g8rc, g8rc, 
    /* NEG8O */
    g8rc, g8rc, 
    /* NEG8O_rec */
    g8rc, g8rc, 
    /* NEG8_rec */
    g8rc, g8rc, 
    /* NEGO */
    gprc, gprc, 
    /* NEGO_rec */
    gprc, gprc, 
    /* NEG_rec */
    gprc, gprc, 
    /* NOP */
    /* NOP_GT_PWR6 */
    /* NOP_GT_PWR7 */
    /* NOR */
    gprc, gprc, gprc, 
    /* NOR8 */
    g8rc, g8rc, g8rc, 
    /* NOR8_rec */
    g8rc, g8rc, g8rc, 
    /* NOR_rec */
    gprc, gprc, gprc, 
    /* OR */
    gprc, gprc, gprc, 
    /* OR8 */
    g8rc, g8rc, g8rc, 
    /* OR8_rec */
    g8rc, g8rc, g8rc, 
    /* ORC */
    gprc, gprc, gprc, 
    /* ORC8 */
    g8rc, g8rc, g8rc, 
    /* ORC8_rec */
    g8rc, g8rc, g8rc, 
    /* ORC_rec */
    gprc, gprc, gprc, 
    /* ORI */
    gprc, gprc, u16imm, 
    /* ORI8 */
    g8rc, g8rc, u16imm64, 
    /* ORIS */
    gprc, gprc, u16imm, 
    /* ORIS8 */
    g8rc, g8rc, u16imm64, 
    /* OR_rec */
    gprc, gprc, gprc, 
    /* PADDI */
    gprc, gprc, s34imm, 
    /* PADDI8 */
    g8rc, g8rc, s34imm, 
    /* PADDI8pc */
    g8rc, immZero, s34imm_pcrel, 
    /* PADDIdtprel */
    g8rc, g8rc_nox0, s16imm64, 
    /* PADDIpc */
    gprc, immZero, s34imm_pcrel, 
    /* PDEPD */
    g8rc, g8rc, g8rc, 
    /* PEXTD */
    g8rc, g8rc, g8rc, 
    /* PLBZ */
    gprc, dispRI34, ptr_rc_nor0, 
    /* PLBZ8 */
    g8rc, dispRI34, ptr_rc_nor0, 
    /* PLBZ8pc */
    g8rc, dispRI34, immZero, 
    /* PLBZpc */
    gprc, dispRI34, immZero, 
    /* PLD */
    g8rc, dispRI34, ptr_rc_nor0, 
    /* PLDpc */
    g8rc, dispRI34, immZero, 
    /* PLFD */
    f8rc, dispRI34, ptr_rc_nor0, 
    /* PLFDpc */
    f8rc, dispRI34, immZero, 
    /* PLFS */
    f4rc, dispRI34, ptr_rc_nor0, 
    /* PLFSpc */
    f4rc, dispRI34, immZero, 
    /* PLHA */
    gprc, dispRI34, ptr_rc_nor0, 
    /* PLHA8 */
    g8rc, dispRI34, ptr_rc_nor0, 
    /* PLHA8pc */
    g8rc, dispRI34, immZero, 
    /* PLHApc */
    gprc, dispRI34, immZero, 
    /* PLHZ */
    gprc, dispRI34, ptr_rc_nor0, 
    /* PLHZ8 */
    g8rc, dispRI34, ptr_rc_nor0, 
    /* PLHZ8pc */
    g8rc, dispRI34, immZero, 
    /* PLHZpc */
    gprc, dispRI34, immZero, 
    /* PLI */
    gprc, s34imm, 
    /* PLI8 */
    g8rc, s34imm, 
    /* PLWA */
    gprc, dispRI34, ptr_rc_nor0, 
    /* PLWA8 */
    g8rc, dispRI34, ptr_rc_nor0, 
    /* PLWA8pc */
    g8rc, dispRI34, immZero, 
    /* PLWApc */
    gprc, dispRI34, immZero, 
    /* PLWZ */
    gprc, dispRI34, ptr_rc_nor0, 
    /* PLWZ8 */
    g8rc, dispRI34, ptr_rc_nor0, 
    /* PLWZ8pc */
    g8rc, dispRI34, immZero, 
    /* PLWZpc */
    gprc, dispRI34, immZero, 
    /* PLXSD */
    vfrc, dispRI34, ptr_rc_nor0, 
    /* PLXSDpc */
    vfrc, dispRI34, immZero, 
    /* PLXSSP */
    vfrc, dispRI34, ptr_rc_nor0, 
    /* PLXSSPpc */
    vfrc, dispRI34, immZero, 
    /* PLXV */
    vsrc, dispRI34, ptr_rc_nor0, 
    /* PLXVP */
    vsrprc, dispRI34, ptr_rc_nor0, 
    /* PLXVPpc */
    vsrprc, dispRI34, immZero, 
    /* PLXVpc */
    vsrc, dispRI34, immZero, 
    /* PMXVBF16GER2 */
    acc, vsrc, vsrc, u4imm, u4imm, u2imm, 
    /* PMXVBF16GER2NN */
    acc, acc, vsrc, vsrc, u4imm, u4imm, u2imm, 
    /* PMXVBF16GER2NP */
    acc, acc, vsrc, vsrc, u4imm, u4imm, u2imm, 
    /* PMXVBF16GER2PN */
    acc, acc, vsrc, vsrc, u4imm, u4imm, u2imm, 
    /* PMXVBF16GER2PP */
    acc, acc, vsrc, vsrc, u4imm, u4imm, u2imm, 
    /* PMXVF16GER2 */
    acc, vsrc, vsrc, u4imm, u4imm, u2imm, 
    /* PMXVF16GER2NN */
    acc, acc, vsrc, vsrc, u4imm, u4imm, u2imm, 
    /* PMXVF16GER2NP */
    acc, acc, vsrc, vsrc, u4imm, u4imm, u2imm, 
    /* PMXVF16GER2PN */
    acc, acc, vsrc, vsrc, u4imm, u4imm, u2imm, 
    /* PMXVF16GER2PP */
    acc, acc, vsrc, vsrc, u4imm, u4imm, u2imm, 
    /* PMXVF32GER */
    acc, vsrc, vsrc, u4imm, u4imm, 
    /* PMXVF32GERNN */
    acc, acc, vsrc, vsrc, u4imm, u4imm, 
    /* PMXVF32GERNP */
    acc, acc, vsrc, vsrc, u4imm, u4imm, 
    /* PMXVF32GERPN */
    acc, acc, vsrc, vsrc, u4imm, u4imm, 
    /* PMXVF32GERPP */
    acc, acc, vsrc, vsrc, u4imm, u4imm, 
    /* PMXVF64GER */
    acc, vsrpevenrc, vsrc, u4imm, u2imm, 
    /* PMXVF64GERNN */
    acc, acc, vsrpevenrc, vsrc, u4imm, u2imm, 
    /* PMXVF64GERNP */
    acc, acc, vsrpevenrc, vsrc, u4imm, u2imm, 
    /* PMXVF64GERPN */
    acc, acc, vsrpevenrc, vsrc, u4imm, u2imm, 
    /* PMXVF64GERPP */
    acc, acc, vsrpevenrc, vsrc, u4imm, u2imm, 
    /* PMXVI16GER2 */
    acc, vsrc, vsrc, u4imm, u4imm, u2imm, 
    /* PMXVI16GER2PP */
    acc, acc, vsrc, vsrc, u4imm, u4imm, u2imm, 
    /* PMXVI16GER2S */
    acc, vsrc, vsrc, u4imm, u4imm, u2imm, 
    /* PMXVI16GER2SPP */
    acc, acc, vsrc, vsrc, u4imm, u4imm, u2imm, 
    /* PMXVI4GER8 */
    acc, vsrc, vsrc, u4imm, u4imm, u8imm, 
    /* PMXVI4GER8PP */
    acc, acc, vsrc, vsrc, u4imm, u4imm, u8imm, 
    /* PMXVI8GER4 */
    acc, vsrc, vsrc, u4imm, u4imm, u4imm, 
    /* PMXVI8GER4PP */
    acc, acc, vsrc, vsrc, u4imm, u4imm, u4imm, 
    /* PMXVI8GER4SPP */
    acc, acc, vsrc, vsrc, u4imm, u4imm, u4imm, 
    /* POPCNTB */
    gprc, gprc, 
    /* POPCNTB8 */
    g8rc, g8rc, 
    /* POPCNTD */
    g8rc, g8rc, 
    /* POPCNTW */
    gprc, gprc, 
    /* PPC32GOT */
    gprc, 
    /* PPC32PICGOT */
    gprc, gprc, 
    /* PREPARE_PROBED_ALLOCA_32 */
    gprc, gprc, gprc, dispRI, ptr_rc_nor0, 
    /* PREPARE_PROBED_ALLOCA_64 */
    g8rc, g8rc, g8rc, dispRI, ptr_rc_nor0, 
    /* PREPARE_PROBED_ALLOCA_NEGSIZE_SAME_REG_32 */
    gprc, gprc, gprc, dispRI, ptr_rc_nor0, 
    /* PREPARE_PROBED_ALLOCA_NEGSIZE_SAME_REG_64 */
    g8rc, g8rc, g8rc, dispRI, ptr_rc_nor0, 
    /* PROBED_ALLOCA_32 */
    gprc, gprc, dispRI, ptr_rc_nor0, 
    /* PROBED_ALLOCA_64 */
    g8rc, g8rc, dispRI, ptr_rc_nor0, 
    /* PROBED_STACKALLOC_32 */
    gprc, gprc, i64imm, 
    /* PROBED_STACKALLOC_64 */
    g8rc, g8rc, i64imm, 
    /* PSTB */
    gprc, dispRI34, ptr_rc_nor0, 
    /* PSTB8 */
    g8rc, dispRI34, ptr_rc_nor0, 
    /* PSTB8pc */
    g8rc, dispRI34, immZero, 
    /* PSTBpc */
    gprc, dispRI34, immZero, 
    /* PSTD */
    g8rc, dispRI34, ptr_rc_nor0, 
    /* PSTDpc */
    g8rc, dispRI34, immZero, 
    /* PSTFD */
    f8rc, dispRI34, ptr_rc_nor0, 
    /* PSTFDpc */
    f8rc, dispRI34, immZero, 
    /* PSTFS */
    f4rc, dispRI34, ptr_rc_nor0, 
    /* PSTFSpc */
    f4rc, dispRI34, immZero, 
    /* PSTH */
    gprc, dispRI34, ptr_rc_nor0, 
    /* PSTH8 */
    g8rc, dispRI34, ptr_rc_nor0, 
    /* PSTH8pc */
    g8rc, dispRI34, immZero, 
    /* PSTHpc */
    gprc, dispRI34, immZero, 
    /* PSTW */
    gprc, dispRI34, ptr_rc_nor0, 
    /* PSTW8 */
    g8rc, dispRI34, ptr_rc_nor0, 
    /* PSTW8pc */
    g8rc, dispRI34, immZero, 
    /* PSTWpc */
    gprc, dispRI34, immZero, 
    /* PSTXSD */
    vfrc, dispRI34, ptr_rc_nor0, 
    /* PSTXSDpc */
    vfrc, dispRI34, immZero, 
    /* PSTXSSP */
    vfrc, dispRI34, ptr_rc_nor0, 
    /* PSTXSSPpc */
    vfrc, dispRI34, immZero, 
    /* PSTXV */
    vsrc, dispRI34, ptr_rc_nor0, 
    /* PSTXVP */
    vsrprc, dispRI34, ptr_rc_nor0, 
    /* PSTXVPpc */
    vsrprc, dispRI34, immZero, 
    /* PSTXVpc */
    vsrc, dispRI34, immZero, 
    /* PseudoEIEIO */
    /* RESTORE_ACC */
    acc, dispRIX16, ptr_rc_nor0, 
    /* RESTORE_CR */
    crrc, dispRI, ptr_rc_nor0, 
    /* RESTORE_CRBIT */
    crbitrc, dispRI, ptr_rc_nor0, 
    /* RESTORE_QUADWORD */
    g8prc, dispRIX, ptr_rc_nor0, 
    /* RESTORE_UACC */
    uacc, dispRIX16, ptr_rc_nor0, 
    /* RFCI */
    /* RFDI */
    /* RFEBB */
    u1imm, 
    /* RFI */
    /* RFID */
    /* RFMCI */
    /* RLDCL */
    g8rc, g8rc, gprc, u6imm, 
    /* RLDCL_rec */
    g8rc, g8rc, gprc, u6imm, 
    /* RLDCR */
    g8rc, g8rc, gprc, u6imm, 
    /* RLDCR_rec */
    g8rc, g8rc, gprc, u6imm, 
    /* RLDIC */
    g8rc, g8rc, u6imm, u6imm, 
    /* RLDICL */
    g8rc, g8rc, u6imm, u6imm, 
    /* RLDICL_32 */
    gprc, gprc, u6imm, u6imm, 
    /* RLDICL_32_64 */
    g8rc, gprc, u6imm, u6imm, 
    /* RLDICL_32_rec */
    gprc, gprc, u6imm, u6imm, 
    /* RLDICL_rec */
    g8rc, g8rc, u6imm, u6imm, 
    /* RLDICR */
    g8rc, g8rc, u6imm, u6imm, 
    /* RLDICR_32 */
    gprc, gprc, u6imm, u6imm, 
    /* RLDICR_rec */
    g8rc, g8rc, u6imm, u6imm, 
    /* RLDIC_rec */
    g8rc, g8rc, u6imm, u6imm, 
    /* RLDIMI */
    g8rc, g8rc, g8rc, u6imm, u6imm, 
    /* RLDIMI_rec */
    g8rc, g8rc, g8rc, u6imm, u6imm, 
    /* RLWIMI */
    gprc, gprc, gprc, u5imm, u5imm, u5imm, 
    /* RLWIMI8 */
    g8rc, g8rc, g8rc, u5imm, u5imm, u5imm, 
    /* RLWIMI8_rec */
    g8rc, g8rc, g8rc, u5imm, u5imm, u5imm, 
    /* RLWIMI_rec */
    gprc, gprc, gprc, u5imm, u5imm, u5imm, 
    /* RLWINM */
    gprc, gprc, u5imm, u5imm, u5imm, 
    /* RLWINM8 */
    g8rc, g8rc, u5imm, u5imm, u5imm, 
    /* RLWINM8_rec */
    g8rc, g8rc, u5imm, u5imm, u5imm, 
    /* RLWINM_rec */
    gprc, gprc, u5imm, u5imm, u5imm, 
    /* RLWNM */
    gprc, gprc, gprc, u5imm, u5imm, 
    /* RLWNM8 */
    g8rc, g8rc, g8rc, u5imm, u5imm, 
    /* RLWNM8_rec */
    g8rc, g8rc, g8rc, u5imm, u5imm, 
    /* RLWNM_rec */
    gprc, gprc, gprc, u5imm, u5imm, 
    /* ReadTB */
    gprc, gprc, 
    /* SC */
    i32imm, 
    /* SELECT_CC_F16 */
    vrrc, crrc, vrrc, vrrc, i32imm, 
    /* SELECT_CC_F4 */
    f4rc, crrc, f4rc, f4rc, i32imm, 
    /* SELECT_CC_F8 */
    f8rc, crrc, f8rc, f8rc, i32imm, 
    /* SELECT_CC_I4 */
    gprc, crrc, gprc_nor0, gprc_nor0, i32imm, 
    /* SELECT_CC_I8 */
    g8rc, crrc, g8rc_nox0, g8rc_nox0, i32imm, 
    /* SELECT_CC_SPE */
    sperc, crrc, sperc, sperc, i32imm, 
    /* SELECT_CC_SPE4 */
    spe4rc, crrc, spe4rc, spe4rc, i32imm, 
    /* SELECT_CC_VRRC */
    vrrc, crrc, vrrc, vrrc, i32imm, 
    /* SELECT_CC_VSFRC */
    f8rc, crrc, f8rc, f8rc, i32imm, 
    /* SELECT_CC_VSRC */
    vsrc, crrc, vsrc, vsrc, i32imm, 
    /* SELECT_CC_VSSRC */
    f4rc, crrc, f4rc, f4rc, i32imm, 
    /* SELECT_F16 */
    vrrc, crbitrc, vrrc, vrrc, 
    /* SELECT_F4 */
    f4rc, crbitrc, f4rc, f4rc, 
    /* SELECT_F8 */
    f8rc, crbitrc, f8rc, f8rc, 
    /* SELECT_I4 */
    gprc, crbitrc, gprc_nor0, gprc_nor0, 
    /* SELECT_I8 */
    g8rc, crbitrc, g8rc_nox0, g8rc_nox0, 
    /* SELECT_SPE */
    sperc, crbitrc, sperc, sperc, 
    /* SELECT_SPE4 */
    spe4rc, crbitrc, spe4rc, spe4rc, 
    /* SELECT_VRRC */
    vrrc, crbitrc, vrrc, vrrc, 
    /* SELECT_VSFRC */
    f8rc, crbitrc, f8rc, f8rc, 
    /* SELECT_VSRC */
    vsrc, crbitrc, vsrc, vsrc, 
    /* SELECT_VSSRC */
    f4rc, crbitrc, f4rc, f4rc, 
    /* SETB */
    gprc, crrc, 
    /* SETB8 */
    g8rc, crrc, 
    /* SETBC */
    gprc, crbitrc, 
    /* SETBC8 */
    g8rc, crbitrc, 
    /* SETBCR */
    gprc, crbitrc, 
    /* SETBCR8 */
    g8rc, crbitrc, 
    /* SETFLM */
    f8rc, f8rc, 
    /* SETNBC */
    gprc, crbitrc, 
    /* SETNBC8 */
    g8rc, crbitrc, 
    /* SETNBCR */
    gprc, crbitrc, 
    /* SETNBCR8 */
    g8rc, crbitrc, 
    /* SETRND */
    f8rc, gprc, 
    /* SETRNDi */
    f8rc, u2imm, 
    /* SLBFEE_rec */
    gprc, gprc, 
    /* SLBIA */
    /* SLBIE */
    gprc, 
    /* SLBIEG */
    gprc, gprc, 
    /* SLBMFEE */
    gprc, gprc, 
    /* SLBMFEV */
    gprc, gprc, 
    /* SLBMTE */
    gprc, gprc, 
    /* SLBSYNC */
    /* SLD */
    g8rc, g8rc, gprc, 
    /* SLD_rec */
    g8rc, g8rc, gprc, 
    /* SLW */
    gprc, gprc, gprc, 
    /* SLW8 */
    g8rc, g8rc, g8rc, 
    /* SLW8_rec */
    g8rc, g8rc, g8rc, 
    /* SLW_rec */
    gprc, gprc, gprc, 
    /* SPELWZ */
    spe4rc, dispRI, ptr_rc_nor0, 
    /* SPELWZX */
    spe4rc, ptr_rc_nor0, ptr_rc_idx, 
    /* SPESTW */
    spe4rc, dispRI, ptr_rc_nor0, 
    /* SPESTWX */
    spe4rc, ptr_rc_nor0, ptr_rc_idx, 
    /* SPILL_ACC */
    acc, dispRIX16, ptr_rc_nor0, 
    /* SPILL_CR */
    crrc, dispRI, ptr_rc_nor0, 
    /* SPILL_CRBIT */
    crbitrc, dispRI, ptr_rc_nor0, 
    /* SPILL_QUADWORD */
    g8prc, dispRIX, ptr_rc_nor0, 
    /* SPILL_UACC */
    uacc, dispRIX16, ptr_rc_nor0, 
    /* SPLIT_QUADWORD */
    g8rc, g8rc, g8prc, 
    /* SRAD */
    g8rc, g8rc, gprc, 
    /* SRADI */
    g8rc, g8rc, u6imm, 
    /* SRADI_32 */
    gprc, gprc, u6imm, 
    /* SRADI_rec */
    g8rc, g8rc, u6imm, 
    /* SRAD_rec */
    g8rc, g8rc, gprc, 
    /* SRAW */
    gprc, gprc, gprc, 
    /* SRAWI */
    gprc, gprc, u5imm, 
    /* SRAWI_rec */
    gprc, gprc, u5imm, 
    /* SRAW_rec */
    gprc, gprc, gprc, 
    /* SRD */
    g8rc, g8rc, gprc, 
    /* SRD_rec */
    g8rc, g8rc, gprc, 
    /* SRW */
    gprc, gprc, gprc, 
    /* SRW8 */
    g8rc, g8rc, g8rc, 
    /* SRW8_rec */
    g8rc, g8rc, g8rc, 
    /* SRW_rec */
    gprc, gprc, gprc, 
    /* STB */
    gprc, dispRI, ptr_rc_nor0, 
    /* STB8 */
    g8rc, dispRI, ptr_rc_nor0, 
    /* STBCIX */
    gprc, gprc, gprc, 
    /* STBCX */
    gprc, ptr_rc_nor0, ptr_rc_idx, 
    /* STBEPX */
    gprc, ptr_rc_nor0, ptr_rc_idx, 
    /* STBU */
    ptr_rc_nor0, gprc, dispRI, ptr_rc_nor0, 
    /* STBU8 */
    ptr_rc_nor0, g8rc, dispRI, ptr_rc_nor0, 
    /* STBUX */
    ptr_rc_nor0, gprc, ptr_rc_nor0, ptr_rc_idx, 
    /* STBUX8 */
    ptr_rc_nor0, g8rc, ptr_rc_nor0, ptr_rc_idx, 
    /* STBX */
    gprc, ptr_rc_nor0, ptr_rc_idx, 
    /* STBX8 */
    g8rc, ptr_rc_nor0, ptr_rc_idx, 
    /* STBXTLS */
    g8rc, ptr_rc_nor0, tlsreg, 
    /* STBXTLS_ */
    g8rc, ptr_rc_nor0, tlsreg, 
    /* STBXTLS_32 */
    gprc, ptr_rc_nor0, tlsreg, 
    /* STD */
    g8rc, dispRIX, ptr_rc_nor0, 
    /* STDAT */
    g8rc, g8rc, u5imm, 
    /* STDBRX */
    g8rc, ptr_rc_nor0, ptr_rc_idx, 
    /* STDCIX */
    gprc, gprc, gprc, 
    /* STDCX */
    g8rc, ptr_rc_nor0, ptr_rc_idx, 
    /* STDU */
    ptr_rc_nor0, g8rc, dispRIX, ptr_rc_nor0, 
    /* STDUX */
    ptr_rc_nor0, g8rc, ptr_rc_nor0, ptr_rc_idx, 
    /* STDX */
    g8rc, ptr_rc_nor0, ptr_rc_idx, 
    /* STDXTLS */
    g8rc, ptr_rc_nor0, tlsreg, 
    /* STDXTLS_ */
    g8rc, ptr_rc_nor0, tlsreg, 
    /* STFD */
    f8rc, dispRI, ptr_rc_nor0, 
    /* STFDEPX */
    f8rc, ptr_rc_nor0, ptr_rc_idx, 
    /* STFDU */
    ptr_rc_nor0, f8rc, dispRI, ptr_rc_nor0, 
    /* STFDUX */
    ptr_rc_nor0, f8rc, ptr_rc_nor0, ptr_rc_idx, 
    /* STFDX */
    f8rc, ptr_rc_nor0, ptr_rc_idx, 
    /* STFIWX */
    f8rc, ptr_rc_nor0, ptr_rc_idx, 
    /* STFS */
    f4rc, dispRI, ptr_rc_nor0, 
    /* STFSU */
    ptr_rc_nor0, f4rc, dispRI, ptr_rc_nor0, 
    /* STFSUX */
    ptr_rc_nor0, f4rc, ptr_rc_nor0, ptr_rc_idx, 
    /* STFSX */
    f4rc, ptr_rc_nor0, ptr_rc_idx, 
    /* STH */
    gprc, dispRI, ptr_rc_nor0, 
    /* STH8 */
    g8rc, dispRI, ptr_rc_nor0, 
    /* STHBRX */
    gprc, ptr_rc_nor0, ptr_rc_idx, 
    /* STHCIX */
    gprc, gprc, gprc, 
    /* STHCX */
    gprc, ptr_rc_nor0, ptr_rc_idx, 
    /* STHEPX */
    gprc, ptr_rc_nor0, ptr_rc_idx, 
    /* STHU */
    ptr_rc_nor0, gprc, dispRI, ptr_rc_nor0, 
    /* STHU8 */
    ptr_rc_nor0, g8rc, dispRI, ptr_rc_nor0, 
    /* STHUX */
    ptr_rc_nor0, gprc, ptr_rc_nor0, ptr_rc_idx, 
    /* STHUX8 */
    ptr_rc_nor0, g8rc, ptr_rc_nor0, ptr_rc_idx, 
    /* STHX */
    gprc, ptr_rc_nor0, ptr_rc_idx, 
    /* STHX8 */
    g8rc, ptr_rc_nor0, ptr_rc_idx, 
    /* STHXTLS */
    g8rc, ptr_rc_nor0, tlsreg, 
    /* STHXTLS_ */
    g8rc, ptr_rc_nor0, tlsreg, 
    /* STHXTLS_32 */
    gprc, ptr_rc_nor0, tlsreg, 
    /* STMW */
    gprc, dispRI, ptr_rc_nor0, 
    /* STOP */
    /* STQ */
    g8prc, dispRIX, ptr_rc_nor0, 
    /* STQCX */
    g8prc, ptr_rc_nor0, ptr_rc_idx, 
    /* STQX_PSEUDO */
    g8prc, ptr_rc_nor0, ptr_rc_idx, 
    /* STSWI */
    gprc, gprc, u5imm, 
    /* STVEBX */
    vrrc, ptr_rc_nor0, ptr_rc_idx, 
    /* STVEHX */
    vrrc, ptr_rc_nor0, ptr_rc_idx, 
    /* STVEWX */
    vrrc, ptr_rc_nor0, ptr_rc_idx, 
    /* STVX */
    vrrc, ptr_rc_nor0, ptr_rc_idx, 
    /* STVXL */
    vrrc, ptr_rc_nor0, ptr_rc_idx, 
    /* STW */
    gprc, dispRI, ptr_rc_nor0, 
    /* STW8 */
    g8rc, dispRI, ptr_rc_nor0, 
    /* STWAT */
    gprc, gprc, u5imm, 
    /* STWBRX */
    gprc, ptr_rc_nor0, ptr_rc_idx, 
    /* STWCIX */
    gprc, gprc, gprc, 
    /* STWCX */
    gprc, ptr_rc_nor0, ptr_rc_idx, 
    /* STWEPX */
    gprc, ptr_rc_nor0, ptr_rc_idx, 
    /* STWU */
    ptr_rc_nor0, gprc, dispRI, ptr_rc_nor0, 
    /* STWU8 */
    ptr_rc_nor0, g8rc, dispRI, ptr_rc_nor0, 
    /* STWUX */
    ptr_rc_nor0, gprc, ptr_rc_nor0, ptr_rc_idx, 
    /* STWUX8 */
    ptr_rc_nor0, g8rc, ptr_rc_nor0, ptr_rc_idx, 
    /* STWX */
    gprc, ptr_rc_nor0, ptr_rc_idx, 
    /* STWX8 */
    g8rc, ptr_rc_nor0, ptr_rc_idx, 
    /* STWXTLS */
    g8rc, ptr_rc_nor0, tlsreg, 
    /* STWXTLS_ */
    g8rc, ptr_rc_nor0, tlsreg, 
    /* STWXTLS_32 */
    gprc, ptr_rc_nor0, tlsreg, 
    /* STXSD */
    vfrc, dispRIX, ptr_rc_nor0, 
    /* STXSDX */
    vsfrc, ptr_rc_nor0, ptr_rc_idx, 
    /* STXSIBX */
    vsfrc, ptr_rc_nor0, ptr_rc_idx, 
    /* STXSIBXv */
    vsrc, ptr_rc_nor0, ptr_rc_idx, 
    /* STXSIHX */
    vsfrc, ptr_rc_nor0, ptr_rc_idx, 
    /* STXSIHXv */
    vsrc, ptr_rc_nor0, ptr_rc_idx, 
    /* STXSIWX */
    vsfrc, ptr_rc_nor0, ptr_rc_idx, 
    /* STXSSP */
    vfrc, dispRIX, ptr_rc_nor0, 
    /* STXSSPX */
    vssrc, ptr_rc_nor0, ptr_rc_idx, 
    /* STXV */
    vsrc, dispRIX16, ptr_rc_nor0, 
    /* STXVB16X */
    vsrc, ptr_rc_nor0, ptr_rc_idx, 
    /* STXVD2X */
    vsrc, ptr_rc_nor0, ptr_rc_idx, 
    /* STXVH8X */
    vsrc, ptr_rc_nor0, ptr_rc_idx, 
    /* STXVL */
    vsrc, ptr_rc_nor0, g8rc, 
    /* STXVLL */
    vsrc, ptr_rc_nor0, g8rc, 
    /* STXVP */
    vsrprc, dispRIX16, ptr_rc_nor0, 
    /* STXVPX */
    vsrprc, ptr_rc_nor0, ptr_rc_idx, 
    /* STXVRBX */
    vsrc, ptr_rc_nor0, ptr_rc_idx, 
    /* STXVRDX */
    vsrc, ptr_rc_nor0, ptr_rc_idx, 
    /* STXVRHX */
    vsrc, ptr_rc_nor0, ptr_rc_idx, 
    /* STXVRWX */
    vsrc, ptr_rc_nor0, ptr_rc_idx, 
    /* STXVW4X */
    vsrc, ptr_rc_nor0, ptr_rc_idx, 
    /* STXVX */
    vsrc, ptr_rc_nor0, ptr_rc_idx, 
    /* SUBF */
    gprc, gprc, gprc, 
    /* SUBF8 */
    g8rc, g8rc, g8rc, 
    /* SUBF8O */
    g8rc, g8rc, g8rc, 
    /* SUBF8O_rec */
    g8rc, g8rc, g8rc, 
    /* SUBF8_rec */
    g8rc, g8rc, g8rc, 
    /* SUBFC */
    gprc, gprc, gprc, 
    /* SUBFC8 */
    g8rc, g8rc, g8rc, 
    /* SUBFC8O */
    g8rc, g8rc, g8rc, 
    /* SUBFC8O_rec */
    g8rc, g8rc, g8rc, 
    /* SUBFC8_rec */
    g8rc, g8rc, g8rc, 
    /* SUBFCO */
    gprc, gprc, gprc, 
    /* SUBFCO_rec */
    gprc, gprc, gprc, 
    /* SUBFC_rec */
    gprc, gprc, gprc, 
    /* SUBFE */
    gprc, gprc, gprc, 
    /* SUBFE8 */
    g8rc, g8rc, g8rc, 
    /* SUBFE8O */
    g8rc, g8rc, g8rc, 
    /* SUBFE8O_rec */
    g8rc, g8rc, g8rc, 
    /* SUBFE8_rec */
    g8rc, g8rc, g8rc, 
    /* SUBFEO */
    gprc, gprc, gprc, 
    /* SUBFEO_rec */
    gprc, gprc, gprc, 
    /* SUBFE_rec */
    gprc, gprc, gprc, 
    /* SUBFIC */
    gprc, gprc, s16imm, 
    /* SUBFIC8 */
    g8rc, g8rc, s16imm64, 
    /* SUBFME */
    gprc, gprc, 
    /* SUBFME8 */
    g8rc, g8rc, 
    /* SUBFME8O */
    g8rc, g8rc, 
    /* SUBFME8O_rec */
    g8rc, g8rc, 
    /* SUBFME8_rec */
    g8rc, g8rc, 
    /* SUBFMEO */
    gprc, gprc, 
    /* SUBFMEO_rec */
    gprc, gprc, 
    /* SUBFME_rec */
    gprc, gprc, 
    /* SUBFO */
    gprc, gprc, gprc, 
    /* SUBFO_rec */
    gprc, gprc, gprc, 
    /* SUBFZE */
    gprc, gprc, 
    /* SUBFZE8 */
    g8rc, g8rc, 
    /* SUBFZE8O */
    g8rc, g8rc, 
    /* SUBFZE8O_rec */
    g8rc, g8rc, 
    /* SUBFZE8_rec */
    g8rc, g8rc, 
    /* SUBFZEO */
    gprc, gprc, 
    /* SUBFZEO_rec */
    gprc, gprc, 
    /* SUBFZE_rec */
    gprc, gprc, 
    /* SUBF_rec */
    gprc, gprc, gprc, 
    /* SYNC */
    u2imm, 
    /* TABORT */
    gprc, 
    /* TABORTDC */
    u5imm, gprc, gprc, 
    /* TABORTDCI */
    u5imm, gprc, u5imm, 
    /* TABORTWC */
    u5imm, gprc, gprc, 
    /* TABORTWCI */
    u5imm, gprc, u5imm, 
    /* TAILB */
    calltarget, 
    /* TAILB8 */
    calltarget, 
    /* TAILBA */
    abscalltarget, 
    /* TAILBA8 */
    abscalltarget, 
    /* TAILBCTR */
    /* TAILBCTR8 */
    /* TBEGIN */
    u1imm, 
    /* TBEGIN_RET */
    gprc, u1imm, 
    /* TCHECK */
    crrc, 
    /* TCHECK_RET */
    gprc, 
    /* TCRETURNai */
    abscalltarget, i32imm, 
    /* TCRETURNai8 */
    abscalltarget, i32imm, 
    /* TCRETURNdi */
    calltarget, i32imm, 
    /* TCRETURNdi8 */
    calltarget, i32imm, 
    /* TCRETURNri */
    CTRRC, i32imm, 
    /* TCRETURNri8 */
    CTRRC8, i32imm, 
    /* TD */
    u5imm, g8rc, g8rc, 
    /* TDI */
    u5imm, g8rc, s16imm, 
    /* TEND */
    u1imm, 
    /* TLBIA */
    /* TLBIE */
    gprc, gprc, 
    /* TLBIEL */
    gprc, 
    /* TLBIVAX */
    gprc, gprc, 
    /* TLBLD */
    gprc, 
    /* TLBLI */
    gprc, 
    /* TLBRE */
    /* TLBRE2 */
    gprc, gprc, i1imm, 
    /* TLBSX */
    gprc, gprc, 
    /* TLBSX2 */
    gprc, gprc, gprc, 
    /* TLBSX2D */
    gprc, gprc, gprc, 
    /* TLBSYNC */
    /* TLBWE */
    /* TLBWE2 */
    gprc, gprc, i1imm, 
    /* TLSGDAIX */
    gprc, gprc, gprc, 
    /* TLSGDAIX8 */
    g8rc, g8rc, g8rc, 
    /* TRAP */
    /* TRECHKPT */
    /* TRECLAIM */
    gprc, 
    /* TSR */
    u1imm, 
    /* TW */
    u5imm, gprc, gprc, 
    /* TWI */
    u5imm, gprc, s16imm, 
    /* UNENCODED_NOP */
    /* UpdateGBR */
    gprc, gprc, gprc, 
    /* VABSDUB */
    vrrc, vrrc, vrrc, 
    /* VABSDUH */
    vrrc, vrrc, vrrc, 
    /* VABSDUW */
    vrrc, vrrc, vrrc, 
    /* VADDCUQ */
    vrrc, vrrc, vrrc, 
    /* VADDCUW */
    vrrc, vrrc, vrrc, 
    /* VADDECUQ */
    vrrc, vrrc, vrrc, vrrc, 
    /* VADDEUQM */
    vrrc, vrrc, vrrc, vrrc, 
    /* VADDFP */
    vrrc, vrrc, vrrc, 
    /* VADDSBS */
    vrrc, vrrc, vrrc, 
    /* VADDSHS */
    vrrc, vrrc, vrrc, 
    /* VADDSWS */
    vrrc, vrrc, vrrc, 
    /* VADDUBM */
    vrrc, vrrc, vrrc, 
    /* VADDUBS */
    vrrc, vrrc, vrrc, 
    /* VADDUDM */
    vrrc, vrrc, vrrc, 
    /* VADDUHM */
    vrrc, vrrc, vrrc, 
    /* VADDUHS */
    vrrc, vrrc, vrrc, 
    /* VADDUQM */
    vrrc, vrrc, vrrc, 
    /* VADDUWM */
    vrrc, vrrc, vrrc, 
    /* VADDUWS */
    vrrc, vrrc, vrrc, 
    /* VAND */
    vrrc, vrrc, vrrc, 
    /* VANDC */
    vrrc, vrrc, vrrc, 
    /* VAVGSB */
    vrrc, vrrc, vrrc, 
    /* VAVGSH */
    vrrc, vrrc, vrrc, 
    /* VAVGSW */
    vrrc, vrrc, vrrc, 
    /* VAVGUB */
    vrrc, vrrc, vrrc, 
    /* VAVGUH */
    vrrc, vrrc, vrrc, 
    /* VAVGUW */
    vrrc, vrrc, vrrc, 
    /* VBPERMD */
    vrrc, vrrc, vrrc, 
    /* VBPERMQ */
    vrrc, vrrc, vrrc, 
    /* VCFSX */
    vrrc, u5imm, vrrc, 
    /* VCFSX_0 */
    vrrc, vrrc, 
    /* VCFUGED */
    vrrc, vrrc, vrrc, 
    /* VCFUX */
    vrrc, u5imm, vrrc, 
    /* VCFUX_0 */
    vrrc, vrrc, 
    /* VCIPHER */
    vrrc, vrrc, vrrc, 
    /* VCIPHERLAST */
    vrrc, vrrc, vrrc, 
    /* VCLRLB */
    vrrc, vrrc, gprc, 
    /* VCLRRB */
    vrrc, vrrc, gprc, 
    /* VCLZB */
    vrrc, vrrc, 
    /* VCLZD */
    vrrc, vrrc, 
    /* VCLZDM */
    vrrc, vrrc, vrrc, 
    /* VCLZH */
    vrrc, vrrc, 
    /* VCLZLSBB */
    gprc, vrrc, 
    /* VCLZW */
    vrrc, vrrc, 
    /* VCMPBFP */
    vrrc, vrrc, vrrc, 
    /* VCMPBFP_rec */
    vrrc, vrrc, vrrc, 
    /* VCMPEQFP */
    vrrc, vrrc, vrrc, 
    /* VCMPEQFP_rec */
    vrrc, vrrc, vrrc, 
    /* VCMPEQUB */
    vrrc, vrrc, vrrc, 
    /* VCMPEQUB_rec */
    vrrc, vrrc, vrrc, 
    /* VCMPEQUD */
    vrrc, vrrc, vrrc, 
    /* VCMPEQUD_rec */
    vrrc, vrrc, vrrc, 
    /* VCMPEQUH */
    vrrc, vrrc, vrrc, 
    /* VCMPEQUH_rec */
    vrrc, vrrc, vrrc, 
    /* VCMPEQUQ */
    vrrc, vrrc, vrrc, 
    /* VCMPEQUQ_rec */
    vrrc, vrrc, vrrc, 
    /* VCMPEQUW */
    vrrc, vrrc, vrrc, 
    /* VCMPEQUW_rec */
    vrrc, vrrc, vrrc, 
    /* VCMPGEFP */
    vrrc, vrrc, vrrc, 
    /* VCMPGEFP_rec */
    vrrc, vrrc, vrrc, 
    /* VCMPGTFP */
    vrrc, vrrc, vrrc, 
    /* VCMPGTFP_rec */
    vrrc, vrrc, vrrc, 
    /* VCMPGTSB */
    vrrc, vrrc, vrrc, 
    /* VCMPGTSB_rec */
    vrrc, vrrc, vrrc, 
    /* VCMPGTSD */
    vrrc, vrrc, vrrc, 
    /* VCMPGTSD_rec */
    vrrc, vrrc, vrrc, 
    /* VCMPGTSH */
    vrrc, vrrc, vrrc, 
    /* VCMPGTSH_rec */
    vrrc, vrrc, vrrc, 
    /* VCMPGTSQ */
    vrrc, vrrc, vrrc, 
    /* VCMPGTSQ_rec */
    vrrc, vrrc, vrrc, 
    /* VCMPGTSW */
    vrrc, vrrc, vrrc, 
    /* VCMPGTSW_rec */
    vrrc, vrrc, vrrc, 
    /* VCMPGTUB */
    vrrc, vrrc, vrrc, 
    /* VCMPGTUB_rec */
    vrrc, vrrc, vrrc, 
    /* VCMPGTUD */
    vrrc, vrrc, vrrc, 
    /* VCMPGTUD_rec */
    vrrc, vrrc, vrrc, 
    /* VCMPGTUH */
    vrrc, vrrc, vrrc, 
    /* VCMPGTUH_rec */
    vrrc, vrrc, vrrc, 
    /* VCMPGTUQ */
    vrrc, vrrc, vrrc, 
    /* VCMPGTUQ_rec */
    vrrc, vrrc, vrrc, 
    /* VCMPGTUW */
    vrrc, vrrc, vrrc, 
    /* VCMPGTUW_rec */
    vrrc, vrrc, vrrc, 
    /* VCMPNEB */
    vrrc, vrrc, vrrc, 
    /* VCMPNEB_rec */
    vrrc, vrrc, vrrc, 
    /* VCMPNEH */
    vrrc, vrrc, vrrc, 
    /* VCMPNEH_rec */
    vrrc, vrrc, vrrc, 
    /* VCMPNEW */
    vrrc, vrrc, vrrc, 
    /* VCMPNEW_rec */
    vrrc, vrrc, vrrc, 
    /* VCMPNEZB */
    vrrc, vrrc, vrrc, 
    /* VCMPNEZB_rec */
    vrrc, vrrc, vrrc, 
    /* VCMPNEZH */
    vrrc, vrrc, vrrc, 
    /* VCMPNEZH_rec */
    vrrc, vrrc, vrrc, 
    /* VCMPNEZW */
    vrrc, vrrc, vrrc, 
    /* VCMPNEZW_rec */
    vrrc, vrrc, vrrc, 
    /* VCMPSQ */
    crrc, vrrc, vrrc, 
    /* VCMPUQ */
    crrc, vrrc, vrrc, 
    /* VCNTMBB */
    g8rc, vrrc, u1imm, 
    /* VCNTMBD */
    g8rc, vrrc, u1imm, 
    /* VCNTMBH */
    g8rc, vrrc, u1imm, 
    /* VCNTMBW */
    g8rc, vrrc, u1imm, 
    /* VCTSXS */
    vrrc, u5imm, vrrc, 
    /* VCTSXS_0 */
    vrrc, vrrc, 
    /* VCTUXS */
    vrrc, u5imm, vrrc, 
    /* VCTUXS_0 */
    vrrc, vrrc, 
    /* VCTZB */
    vrrc, vrrc, 
    /* VCTZD */
    vrrc, vrrc, 
    /* VCTZDM */
    vrrc, vrrc, vrrc, 
    /* VCTZH */
    vrrc, vrrc, 
    /* VCTZLSBB */
    gprc, vrrc, 
    /* VCTZW */
    vrrc, vrrc, 
    /* VDIVESD */
    vrrc, vrrc, vrrc, 
    /* VDIVESQ */
    vrrc, vrrc, vrrc, 
    /* VDIVESW */
    vrrc, vrrc, vrrc, 
    /* VDIVEUD */
    vrrc, vrrc, vrrc, 
    /* VDIVEUQ */
    vrrc, vrrc, vrrc, 
    /* VDIVEUW */
    vrrc, vrrc, vrrc, 
    /* VDIVSD */
    vrrc, vrrc, vrrc, 
    /* VDIVSQ */
    vrrc, vrrc, vrrc, 
    /* VDIVSW */
    vrrc, vrrc, vrrc, 
    /* VDIVUD */
    vrrc, vrrc, vrrc, 
    /* VDIVUQ */
    vrrc, vrrc, vrrc, 
    /* VDIVUW */
    vrrc, vrrc, vrrc, 
    /* VEQV */
    vrrc, vrrc, vrrc, 
    /* VEXPANDBM */
    vrrc, vrrc, 
    /* VEXPANDDM */
    vrrc, vrrc, 
    /* VEXPANDHM */
    vrrc, vrrc, 
    /* VEXPANDQM */
    vrrc, vrrc, 
    /* VEXPANDWM */
    vrrc, vrrc, 
    /* VEXPTEFP */
    vrrc, vrrc, 
    /* VEXTDDVLX */
    vrrc, vrrc, vrrc, gprc, 
    /* VEXTDDVRX */
    vrrc, vrrc, vrrc, gprc, 
    /* VEXTDUBVLX */
    vrrc, vrrc, vrrc, gprc, 
    /* VEXTDUBVRX */
    vrrc, vrrc, vrrc, gprc, 
    /* VEXTDUHVLX */
    vrrc, vrrc, vrrc, gprc, 
    /* VEXTDUHVRX */
    vrrc, vrrc, vrrc, gprc, 
    /* VEXTDUWVLX */
    vrrc, vrrc, vrrc, gprc, 
    /* VEXTDUWVRX */
    vrrc, vrrc, vrrc, gprc, 
    /* VEXTRACTBM */
    gprc, vrrc, 
    /* VEXTRACTD */
    vrrc, u4imm, vrrc, 
    /* VEXTRACTDM */
    gprc, vrrc, 
    /* VEXTRACTHM */
    gprc, vrrc, 
    /* VEXTRACTQM */
    gprc, vrrc, 
    /* VEXTRACTUB */
    vrrc, u4imm, vrrc, 
    /* VEXTRACTUH */
    vrrc, u4imm, vrrc, 
    /* VEXTRACTUW */
    vrrc, u4imm, vrrc, 
    /* VEXTRACTWM */
    gprc, vrrc, 
    /* VEXTSB2D */
    vrrc, vrrc, 
    /* VEXTSB2Ds */
    vfrc, vfrc, 
    /* VEXTSB2W */
    vrrc, vrrc, 
    /* VEXTSB2Ws */
    vfrc, vfrc, 
    /* VEXTSD2Q */
    vrrc, vrrc, 
    /* VEXTSH2D */
    vrrc, vrrc, 
    /* VEXTSH2Ds */
    vfrc, vfrc, 
    /* VEXTSH2W */
    vrrc, vrrc, 
    /* VEXTSH2Ws */
    vfrc, vfrc, 
    /* VEXTSW2D */
    vrrc, vrrc, 
    /* VEXTSW2Ds */
    vfrc, vfrc, 
    /* VEXTUBLX */
    g8rc, g8rc, vrrc, 
    /* VEXTUBRX */
    g8rc, g8rc, vrrc, 
    /* VEXTUHLX */
    g8rc, g8rc, vrrc, 
    /* VEXTUHRX */
    g8rc, g8rc, vrrc, 
    /* VEXTUWLX */
    g8rc, g8rc, vrrc, 
    /* VEXTUWRX */
    g8rc, g8rc, vrrc, 
    /* VGBBD */
    vrrc, vrrc, 
    /* VGNB */
    g8rc, vrrc, u3imm, 
    /* VINSBLX */
    vrrc, vrrc, gprc, gprc, 
    /* VINSBRX */
    vrrc, vrrc, gprc, gprc, 
    /* VINSBVLX */
    vrrc, vrrc, gprc, vrrc, 
    /* VINSBVRX */
    vrrc, vrrc, gprc, vrrc, 
    /* VINSD */
    vrrc, vrrc, u4imm, g8rc, 
    /* VINSDLX */
    vrrc, vrrc, g8rc, g8rc, 
    /* VINSDRX */
    vrrc, vrrc, g8rc, g8rc, 
    /* VINSERTB */
    vrrc, vrrc, u4imm, vrrc, 
    /* VINSERTD */
    vrrc, u4imm, vrrc, 
    /* VINSERTH */
    vrrc, vrrc, u4imm, vrrc, 
    /* VINSERTW */
    vrrc, u4imm, vrrc, 
    /* VINSHLX */
    vrrc, vrrc, gprc, gprc, 
    /* VINSHRX */
    vrrc, vrrc, gprc, gprc, 
    /* VINSHVLX */
    vrrc, vrrc, gprc, vrrc, 
    /* VINSHVRX */
    vrrc, vrrc, gprc, vrrc, 
    /* VINSW */
    vrrc, vrrc, u4imm, gprc, 
    /* VINSWLX */
    vrrc, vrrc, gprc, gprc, 
    /* VINSWRX */
    vrrc, vrrc, gprc, gprc, 
    /* VINSWVLX */
    vrrc, vrrc, gprc, vrrc, 
    /* VINSWVRX */
    vrrc, vrrc, gprc, vrrc, 
    /* VLOGEFP */
    vrrc, vrrc, 
    /* VMADDFP */
    vrrc, vrrc, vrrc, vrrc, 
    /* VMAXFP */
    vrrc, vrrc, vrrc, 
    /* VMAXSB */
    vrrc, vrrc, vrrc, 
    /* VMAXSD */
    vrrc, vrrc, vrrc, 
    /* VMAXSH */
    vrrc, vrrc, vrrc, 
    /* VMAXSW */
    vrrc, vrrc, vrrc, 
    /* VMAXUB */
    vrrc, vrrc, vrrc, 
    /* VMAXUD */
    vrrc, vrrc, vrrc, 
    /* VMAXUH */
    vrrc, vrrc, vrrc, 
    /* VMAXUW */
    vrrc, vrrc, vrrc, 
    /* VMHADDSHS */
    vrrc, vrrc, vrrc, vrrc, 
    /* VMHRADDSHS */
    vrrc, vrrc, vrrc, vrrc, 
    /* VMINFP */
    vrrc, vrrc, vrrc, 
    /* VMINSB */
    vrrc, vrrc, vrrc, 
    /* VMINSD */
    vrrc, vrrc, vrrc, 
    /* VMINSH */
    vrrc, vrrc, vrrc, 
    /* VMINSW */
    vrrc, vrrc, vrrc, 
    /* VMINUB */
    vrrc, vrrc, vrrc, 
    /* VMINUD */
    vrrc, vrrc, vrrc, 
    /* VMINUH */
    vrrc, vrrc, vrrc, 
    /* VMINUW */
    vrrc, vrrc, vrrc, 
    /* VMLADDUHM */
    vrrc, vrrc, vrrc, vrrc, 
    /* VMODSD */
    vrrc, vrrc, vrrc, 
    /* VMODSQ */
    vrrc, vrrc, vrrc, 
    /* VMODSW */
    vrrc, vrrc, vrrc, 
    /* VMODUD */
    vrrc, vrrc, vrrc, 
    /* VMODUQ */
    vrrc, vrrc, vrrc, 
    /* VMODUW */
    vrrc, vrrc, vrrc, 
    /* VMRGEW */
    vrrc, vrrc, vrrc, 
    /* VMRGHB */
    vrrc, vrrc, vrrc, 
    /* VMRGHH */
    vrrc, vrrc, vrrc, 
    /* VMRGHW */
    vrrc, vrrc, vrrc, 
    /* VMRGLB */
    vrrc, vrrc, vrrc, 
    /* VMRGLH */
    vrrc, vrrc, vrrc, 
    /* VMRGLW */
    vrrc, vrrc, vrrc, 
    /* VMRGOW */
    vrrc, vrrc, vrrc, 
    /* VMSUMCUD */
    vrrc, vrrc, vrrc, vrrc, 
    /* VMSUMMBM */
    vrrc, vrrc, vrrc, vrrc, 
    /* VMSUMSHM */
    vrrc, vrrc, vrrc, vrrc, 
    /* VMSUMSHS */
    vrrc, vrrc, vrrc, vrrc, 
    /* VMSUMUBM */
    vrrc, vrrc, vrrc, vrrc, 
    /* VMSUMUDM */
    vrrc, vrrc, vrrc, vrrc, 
    /* VMSUMUHM */
    vrrc, vrrc, vrrc, vrrc, 
    /* VMSUMUHS */
    vrrc, vrrc, vrrc, vrrc, 
    /* VMUL10CUQ */
    vrrc, vrrc, 
    /* VMUL10ECUQ */
    vrrc, vrrc, vrrc, 
    /* VMUL10EUQ */
    vrrc, vrrc, vrrc, 
    /* VMUL10UQ */
    vrrc, vrrc, 
    /* VMULESB */
    vrrc, vrrc, vrrc, 
    /* VMULESD */
    vrrc, vrrc, vrrc, 
    /* VMULESH */
    vrrc, vrrc, vrrc, 
    /* VMULESW */
    vrrc, vrrc, vrrc, 
    /* VMULEUB */
    vrrc, vrrc, vrrc, 
    /* VMULEUD */
    vrrc, vrrc, vrrc, 
    /* VMULEUH */
    vrrc, vrrc, vrrc, 
    /* VMULEUW */
    vrrc, vrrc, vrrc, 
    /* VMULHSD */
    vrrc, vrrc, vrrc, 
    /* VMULHSW */
    vrrc, vrrc, vrrc, 
    /* VMULHUD */
    vrrc, vrrc, vrrc, 
    /* VMULHUW */
    vrrc, vrrc, vrrc, 
    /* VMULLD */
    vrrc, vrrc, vrrc, 
    /* VMULOSB */
    vrrc, vrrc, vrrc, 
    /* VMULOSD */
    vrrc, vrrc, vrrc, 
    /* VMULOSH */
    vrrc, vrrc, vrrc, 
    /* VMULOSW */
    vrrc, vrrc, vrrc, 
    /* VMULOUB */
    vrrc, vrrc, vrrc, 
    /* VMULOUD */
    vrrc, vrrc, vrrc, 
    /* VMULOUH */
    vrrc, vrrc, vrrc, 
    /* VMULOUW */
    vrrc, vrrc, vrrc, 
    /* VMULUWM */
    vrrc, vrrc, vrrc, 
    /* VNAND */
    vrrc, vrrc, vrrc, 
    /* VNCIPHER */
    vrrc, vrrc, vrrc, 
    /* VNCIPHERLAST */
    vrrc, vrrc, vrrc, 
    /* VNEGD */
    vrrc, vrrc, 
    /* VNEGW */
    vrrc, vrrc, 
    /* VNMSUBFP */
    vrrc, vrrc, vrrc, vrrc, 
    /* VNOR */
    vrrc, vrrc, vrrc, 
    /* VOR */
    vrrc, vrrc, vrrc, 
    /* VORC */
    vrrc, vrrc, vrrc, 
    /* VPDEPD */
    vrrc, vrrc, vrrc, 
    /* VPERM */
    vrrc, vrrc, vrrc, vrrc, 
    /* VPERMR */
    vrrc, vrrc, vrrc, vrrc, 
    /* VPERMXOR */
    vrrc, vrrc, vrrc, vrrc, 
    /* VPEXTD */
    vrrc, vrrc, vrrc, 
    /* VPKPX */
    vrrc, vrrc, vrrc, 
    /* VPKSDSS */
    vrrc, vrrc, vrrc, 
    /* VPKSDUS */
    vrrc, vrrc, vrrc, 
    /* VPKSHSS */
    vrrc, vrrc, vrrc, 
    /* VPKSHUS */
    vrrc, vrrc, vrrc, 
    /* VPKSWSS */
    vrrc, vrrc, vrrc, 
    /* VPKSWUS */
    vrrc, vrrc, vrrc, 
    /* VPKUDUM */
    vrrc, vrrc, vrrc, 
    /* VPKUDUS */
    vrrc, vrrc, vrrc, 
    /* VPKUHUM */
    vrrc, vrrc, vrrc, 
    /* VPKUHUS */
    vrrc, vrrc, vrrc, 
    /* VPKUWUM */
    vrrc, vrrc, vrrc, 
    /* VPKUWUS */
    vrrc, vrrc, vrrc, 
    /* VPMSUMB */
    vrrc, vrrc, vrrc, 
    /* VPMSUMD */
    vrrc, vrrc, vrrc, 
    /* VPMSUMH */
    vrrc, vrrc, vrrc, 
    /* VPMSUMW */
    vrrc, vrrc, vrrc, 
    /* VPOPCNTB */
    vrrc, vrrc, 
    /* VPOPCNTD */
    vrrc, vrrc, 
    /* VPOPCNTH */
    vrrc, vrrc, 
    /* VPOPCNTW */
    vrrc, vrrc, 
    /* VPRTYBD */
    vrrc, vrrc, 
    /* VPRTYBQ */
    vrrc, vrrc, 
    /* VPRTYBW */
    vrrc, vrrc, 
    /* VREFP */
    vrrc, vrrc, 
    /* VRFIM */
    vrrc, vrrc, 
    /* VRFIN */
    vrrc, vrrc, 
    /* VRFIP */
    vrrc, vrrc, 
    /* VRFIZ */
    vrrc, vrrc, 
    /* VRLB */
    vrrc, vrrc, vrrc, 
    /* VRLD */
    vrrc, vrrc, vrrc, 
    /* VRLDMI */
    vrrc, vrrc, vrrc, vrrc, 
    /* VRLDNM */
    vrrc, vrrc, vrrc, 
    /* VRLH */
    vrrc, vrrc, vrrc, 
    /* VRLQ */
    vrrc, vrrc, vrrc, 
    /* VRLQMI */
    vrrc, vrrc, vrrc, vrrc, 
    /* VRLQNM */
    vrrc, vrrc, vrrc, 
    /* VRLW */
    vrrc, vrrc, vrrc, 
    /* VRLWMI */
    vrrc, vrrc, vrrc, vrrc, 
    /* VRLWNM */
    vrrc, vrrc, vrrc, 
    /* VRSQRTEFP */
    vrrc, vrrc, 
    /* VSBOX */
    vrrc, vrrc, 
    /* VSEL */
    vrrc, vrrc, vrrc, vrrc, 
    /* VSHASIGMAD */
    vrrc, vrrc, u1imm, u4imm, 
    /* VSHASIGMAW */
    vrrc, vrrc, u1imm, u4imm, 
    /* VSL */
    vrrc, vrrc, vrrc, 
    /* VSLB */
    vrrc, vrrc, vrrc, 
    /* VSLD */
    vrrc, vrrc, vrrc, 
    /* VSLDBI */
    vrrc, vrrc, vrrc, u3imm, 
    /* VSLDOI */
    vrrc, vrrc, vrrc, u4imm, 
    /* VSLH */
    vrrc, vrrc, vrrc, 
    /* VSLO */
    vrrc, vrrc, vrrc, 
    /* VSLQ */
    vrrc, vrrc, vrrc, 
    /* VSLV */
    vrrc, vrrc, vrrc, 
    /* VSLW */
    vrrc, vrrc, vrrc, 
    /* VSPLTB */
    vrrc, u5imm, vrrc, 
    /* VSPLTBs */
    vrrc, u5imm, vfrc, 
    /* VSPLTH */
    vrrc, u5imm, vrrc, 
    /* VSPLTHs */
    vrrc, u5imm, vfrc, 
    /* VSPLTISB */
    vrrc, s5imm, 
    /* VSPLTISH */
    vrrc, s5imm, 
    /* VSPLTISW */
    vrrc, s5imm, 
    /* VSPLTW */
    vrrc, u5imm, vrrc, 
    /* VSR */
    vrrc, vrrc, vrrc, 
    /* VSRAB */
    vrrc, vrrc, vrrc, 
    /* VSRAD */
    vrrc, vrrc, vrrc, 
    /* VSRAH */
    vrrc, vrrc, vrrc, 
    /* VSRAQ */
    vrrc, vrrc, vrrc, 
    /* VSRAW */
    vrrc, vrrc, vrrc, 
    /* VSRB */
    vrrc, vrrc, vrrc, 
    /* VSRD */
    vrrc, vrrc, vrrc, 
    /* VSRDBI */
    vrrc, vrrc, vrrc, u3imm, 
    /* VSRH */
    vrrc, vrrc, vrrc, 
    /* VSRO */
    vrrc, vrrc, vrrc, 
    /* VSRQ */
    vrrc, vrrc, vrrc, 
    /* VSRV */
    vrrc, vrrc, vrrc, 
    /* VSRW */
    vrrc, vrrc, vrrc, 
    /* VSTRIBL */
    vrrc, vrrc, 
    /* VSTRIBL_rec */
    vrrc, vrrc, 
    /* VSTRIBR */
    vrrc, vrrc, 
    /* VSTRIBR_rec */
    vrrc, vrrc, 
    /* VSTRIHL */
    vrrc, vrrc, 
    /* VSTRIHL_rec */
    vrrc, vrrc, 
    /* VSTRIHR */
    vrrc, vrrc, 
    /* VSTRIHR_rec */
    vrrc, vrrc, 
    /* VSUBCUQ */
    vrrc, vrrc, vrrc, 
    /* VSUBCUW */
    vrrc, vrrc, vrrc, 
    /* VSUBECUQ */
    vrrc, vrrc, vrrc, vrrc, 
    /* VSUBEUQM */
    vrrc, vrrc, vrrc, vrrc, 
    /* VSUBFP */
    vrrc, vrrc, vrrc, 
    /* VSUBSBS */
    vrrc, vrrc, vrrc, 
    /* VSUBSHS */
    vrrc, vrrc, vrrc, 
    /* VSUBSWS */
    vrrc, vrrc, vrrc, 
    /* VSUBUBM */
    vrrc, vrrc, vrrc, 
    /* VSUBUBS */
    vrrc, vrrc, vrrc, 
    /* VSUBUDM */
    vrrc, vrrc, vrrc, 
    /* VSUBUHM */
    vrrc, vrrc, vrrc, 
    /* VSUBUHS */
    vrrc, vrrc, vrrc, 
    /* VSUBUQM */
    vrrc, vrrc, vrrc, 
    /* VSUBUWM */
    vrrc, vrrc, vrrc, 
    /* VSUBUWS */
    vrrc, vrrc, vrrc, 
    /* VSUM2SWS */
    vrrc, vrrc, vrrc, 
    /* VSUM4SBS */
    vrrc, vrrc, vrrc, 
    /* VSUM4SHS */
    vrrc, vrrc, vrrc, 
    /* VSUM4UBS */
    vrrc, vrrc, vrrc, 
    /* VSUMSWS */
    vrrc, vrrc, vrrc, 
    /* VUPKHPX */
    vrrc, vrrc, 
    /* VUPKHSB */
    vrrc, vrrc, 
    /* VUPKHSH */
    vrrc, vrrc, 
    /* VUPKHSW */
    vrrc, vrrc, 
    /* VUPKLPX */
    vrrc, vrrc, 
    /* VUPKLSB */
    vrrc, vrrc, 
    /* VUPKLSH */
    vrrc, vrrc, 
    /* VUPKLSW */
    vrrc, vrrc, 
    /* VXOR */
    vrrc, vrrc, vrrc, 
    /* V_SET0 */
    vrrc, 
    /* V_SET0B */
    vrrc, 
    /* V_SET0H */
    vrrc, 
    /* V_SETALLONES */
    vrrc, 
    /* V_SETALLONESB */
    vrrc, 
    /* V_SETALLONESH */
    vrrc, 
    /* WAIT */
    u2imm, 
    /* WRTEE */
    gprc, 
    /* WRTEEI */
    i1imm, 
    /* XOR */
    gprc, gprc, gprc, 
    /* XOR8 */
    g8rc, g8rc, g8rc, 
    /* XOR8_rec */
    g8rc, g8rc, g8rc, 
    /* XORI */
    gprc, gprc, u16imm, 
    /* XORI8 */
    g8rc, g8rc, u16imm64, 
    /* XORIS */
    gprc, gprc, u16imm, 
    /* XORIS8 */
    g8rc, g8rc, u16imm64, 
    /* XOR_rec */
    gprc, gprc, gprc, 
    /* XSABSDP */
    vsfrc, vsfrc, 
    /* XSABSQP */
    vrrc, vrrc, 
    /* XSADDDP */
    vsfrc, vsfrc, vsfrc, 
    /* XSADDQP */
    vrrc, vrrc, vrrc, 
    /* XSADDQPO */
    vrrc, vrrc, vrrc, 
    /* XSADDSP */
    vssrc, vssrc, vssrc, 
    /* XSCMPEQDP */
    vsrc, vsfrc, vsfrc, 
    /* XSCMPEXPDP */
    crrc, vsfrc, vsfrc, 
    /* XSCMPEXPQP */
    crrc, vrrc, vrrc, 
    /* XSCMPGEDP */
    vsrc, vsfrc, vsfrc, 
    /* XSCMPGTDP */
    vsrc, vsfrc, vsfrc, 
    /* XSCMPODP */
    crrc, vsfrc, vsfrc, 
    /* XSCMPOQP */
    crrc, vrrc, vrrc, 
    /* XSCMPUDP */
    crrc, vsfrc, vsfrc, 
    /* XSCMPUQP */
    crrc, vrrc, vrrc, 
    /* XSCPSGNDP */
    vsfrc, vsfrc, vsfrc, 
    /* XSCPSGNQP */
    vrrc, vrrc, vrrc, 
    /* XSCVDPHP */
    vsfrc, vsfrc, 
    /* XSCVDPQP */
    vrrc, vfrc, 
    /* XSCVDPSP */
    vsfrc, vsfrc, 
    /* XSCVDPSPN */
    vsrc, vssrc, 
    /* XSCVDPSXDS */
    vsfrc, vsfrc, 
    /* XSCVDPSXDSs */
    vssrc, vssrc, 
    /* XSCVDPSXWS */
    vsfrc, vsfrc, 
    /* XSCVDPSXWSs */
    vssrc, vssrc, 
    /* XSCVDPUXDS */
    vsfrc, vsfrc, 
    /* XSCVDPUXDSs */
    vssrc, vssrc, 
    /* XSCVDPUXWS */
    vsfrc, vsfrc, 
    /* XSCVDPUXWSs */
    vssrc, vssrc, 
    /* XSCVHPDP */
    vsfrc, vsfrc, 
    /* XSCVQPDP */
    vfrc, vrrc, 
    /* XSCVQPDPO */
    vfrc, vrrc, 
    /* XSCVQPSDZ */
    vrrc, vrrc, 
    /* XSCVQPSQZ */
    vrrc, vrrc, 
    /* XSCVQPSWZ */
    vrrc, vrrc, 
    /* XSCVQPUDZ */
    vrrc, vrrc, 
    /* XSCVQPUQZ */
    vrrc, vrrc, 
    /* XSCVQPUWZ */
    vrrc, vrrc, 
    /* XSCVSDQP */
    vrrc, vfrc, 
    /* XSCVSPDP */
    vsfrc, vsfrc, 
    /* XSCVSPDPN */
    vssrc, vsrc, 
    /* XSCVSQQP */
    vrrc, vrrc, 
    /* XSCVSXDDP */
    vsfrc, vsfrc, 
    /* XSCVSXDSP */
    vssrc, vsfrc, 
    /* XSCVUDQP */
    vrrc, vfrc, 
    /* XSCVUQQP */
    vrrc, vrrc, 
    /* XSCVUXDDP */
    vsfrc, vsfrc, 
    /* XSCVUXDSP */
    vssrc, vsfrc, 
    /* XSDIVDP */
    vsfrc, vsfrc, vsfrc, 
    /* XSDIVQP */
    vrrc, vrrc, vrrc, 
    /* XSDIVQPO */
    vrrc, vrrc, vrrc, 
    /* XSDIVSP */
    vssrc, vssrc, vssrc, 
    /* XSIEXPDP */
    vsrc, g8rc, g8rc, 
    /* XSIEXPQP */
    vrrc, vrrc, vsfrc, 
    /* XSMADDADP */
    vsfrc, vsfrc, vsfrc, vsfrc, 
    /* XSMADDASP */
    vssrc, vssrc, vssrc, vssrc, 
    /* XSMADDMDP */
    vsfrc, vsfrc, vsfrc, vsfrc, 
    /* XSMADDMSP */
    vssrc, vssrc, vssrc, vssrc, 
    /* XSMADDQP */
    vrrc, vrrc, vrrc, vrrc, 
    /* XSMADDQPO */
    vrrc, vrrc, vrrc, vrrc, 
    /* XSMAXCDP */
    vsfrc, vsfrc, vsfrc, 
    /* XSMAXCQP */
    vrrc, vrrc, vrrc, 
    /* XSMAXDP */
    vsfrc, vsfrc, vsfrc, 
    /* XSMAXJDP */
    vsrc, vsfrc, vsfrc, 
    /* XSMINCDP */
    vsfrc, vsfrc, vsfrc, 
    /* XSMINCQP */
    vrrc, vrrc, vrrc, 
    /* XSMINDP */
    vsfrc, vsfrc, vsfrc, 
    /* XSMINJDP */
    vsrc, vsfrc, vsfrc, 
    /* XSMSUBADP */
    vsfrc, vsfrc, vsfrc, vsfrc, 
    /* XSMSUBASP */
    vssrc, vssrc, vssrc, vssrc, 
    /* XSMSUBMDP */
    vsfrc, vsfrc, vsfrc, vsfrc, 
    /* XSMSUBMSP */
    vssrc, vssrc, vssrc, vssrc, 
    /* XSMSUBQP */
    vrrc, vrrc, vrrc, vrrc, 
    /* XSMSUBQPO */
    vrrc, vrrc, vrrc, vrrc, 
    /* XSMULDP */
    vsfrc, vsfrc, vsfrc, 
    /* XSMULQP */
    vrrc, vrrc, vrrc, 
    /* XSMULQPO */
    vrrc, vrrc, vrrc, 
    /* XSMULSP */
    vssrc, vssrc, vssrc, 
    /* XSNABSDP */
    vsfrc, vsfrc, 
    /* XSNABSDPs */
    vssrc, vssrc, 
    /* XSNABSQP */
    vrrc, vrrc, 
    /* XSNEGDP */
    vsfrc, vsfrc, 
    /* XSNEGQP */
    vrrc, vrrc, 
    /* XSNMADDADP */
    vsfrc, vsfrc, vsfrc, vsfrc, 
    /* XSNMADDASP */
    vssrc, vssrc, vssrc, vssrc, 
    /* XSNMADDMDP */
    vsfrc, vsfrc, vsfrc, vsfrc, 
    /* XSNMADDMSP */
    vssrc, vssrc, vssrc, vssrc, 
    /* XSNMADDQP */
    vrrc, vrrc, vrrc, vrrc, 
    /* XSNMADDQPO */
    vrrc, vrrc, vrrc, vrrc, 
    /* XSNMSUBADP */
    vsfrc, vsfrc, vsfrc, vsfrc, 
    /* XSNMSUBASP */
    vssrc, vssrc, vssrc, vssrc, 
    /* XSNMSUBMDP */
    vsfrc, vsfrc, vsfrc, vsfrc, 
    /* XSNMSUBMSP */
    vssrc, vssrc, vssrc, vssrc, 
    /* XSNMSUBQP */
    vrrc, vrrc, vrrc, vrrc, 
    /* XSNMSUBQPO */
    vrrc, vrrc, vrrc, vrrc, 
    /* XSRDPI */
    vsfrc, vsfrc, 
    /* XSRDPIC */
    vsfrc, vsfrc, 
    /* XSRDPIM */
    vsfrc, vsfrc, 
    /* XSRDPIP */
    vsfrc, vsfrc, 
    /* XSRDPIZ */
    vsfrc, vsfrc, 
    /* XSREDP */
    vsfrc, vsfrc, 
    /* XSRESP */
    vssrc, vssrc, 
    /* XSRQPI */
    vrrc, u1imm, vrrc, u2imm, 
    /* XSRQPIX */
    vrrc, u1imm, vrrc, u2imm, 
    /* XSRQPXP */
    vrrc, u1imm, vrrc, u2imm, 
    /* XSRSP */
    vssrc, vsfrc, 
    /* XSRSQRTEDP */
    vsfrc, vsfrc, 
    /* XSRSQRTESP */
    vssrc, vssrc, 
    /* XSSQRTDP */
    vsfrc, vsfrc, 
    /* XSSQRTQP */
    vrrc, vrrc, 
    /* XSSQRTQPO */
    vrrc, vrrc, 
    /* XSSQRTSP */
    vssrc, vssrc, 
    /* XSSUBDP */
    vsfrc, vsfrc, vsfrc, 
    /* XSSUBQP */
    vrrc, vrrc, vrrc, 
    /* XSSUBQPO */
    vrrc, vrrc, vrrc, 
    /* XSSUBSP */
    vssrc, vssrc, vssrc, 
    /* XSTDIVDP */
    crrc, vsfrc, vsfrc, 
    /* XSTSQRTDP */
    crrc, vsfrc, 
    /* XSTSTDCDP */
    crrc, u7imm, vsfrc, 
    /* XSTSTDCQP */
    crrc, u7imm, vrrc, 
    /* XSTSTDCSP */
    crrc, u7imm, vsfrc, 
    /* XSXEXPDP */
    g8rc, vsfrc, 
    /* XSXEXPQP */
    vrrc, vrrc, 
    /* XSXSIGDP */
    g8rc, vsfrc, 
    /* XSXSIGQP */
    vrrc, vrrc, 
    /* XVABSDP */
    vsrc, vsrc, 
    /* XVABSSP */
    vsrc, vsrc, 
    /* XVADDDP */
    vsrc, vsrc, vsrc, 
    /* XVADDSP */
    vsrc, vsrc, vsrc, 
    /* XVBF16GER2 */
    acc, vsrc, vsrc, 
    /* XVBF16GER2NN */
    acc, acc, vsrc, vsrc, 
    /* XVBF16GER2NP */
    acc, acc, vsrc, vsrc, 
    /* XVBF16GER2PN */
    acc, acc, vsrc, vsrc, 
    /* XVBF16GER2PP */
    acc, acc, vsrc, vsrc, 
    /* XVCMPEQDP */
    vsrc, vsrc, vsrc, 
    /* XVCMPEQDP_rec */
    vsrc, vsrc, vsrc, 
    /* XVCMPEQSP */
    vsrc, vsrc, vsrc, 
    /* XVCMPEQSP_rec */
    vsrc, vsrc, vsrc, 
    /* XVCMPGEDP */
    vsrc, vsrc, vsrc, 
    /* XVCMPGEDP_rec */
    vsrc, vsrc, vsrc, 
    /* XVCMPGESP */
    vsrc, vsrc, vsrc, 
    /* XVCMPGESP_rec */
    vsrc, vsrc, vsrc, 
    /* XVCMPGTDP */
    vsrc, vsrc, vsrc, 
    /* XVCMPGTDP_rec */
    vsrc, vsrc, vsrc, 
    /* XVCMPGTSP */
    vsrc, vsrc, vsrc, 
    /* XVCMPGTSP_rec */
    vsrc, vsrc, vsrc, 
    /* XVCPSGNDP */
    vsrc, vsrc, vsrc, 
    /* XVCPSGNSP */
    vsrc, vsrc, vsrc, 
    /* XVCVBF16SPN */
    vsrc, vsrc, 
    /* XVCVDPSP */
    vsrc, vsrc, 
    /* XVCVDPSXDS */
    vsrc, vsrc, 
    /* XVCVDPSXWS */
    vsrc, vsrc, 
    /* XVCVDPUXDS */
    vsrc, vsrc, 
    /* XVCVDPUXWS */
    vsrc, vsrc, 
    /* XVCVHPSP */
    vsrc, vsrc, 
    /* XVCVSPBF16 */
    vsrc, vsrc, 
    /* XVCVSPDP */
    vsrc, vsrc, 
    /* XVCVSPHP */
    vsrc, vsrc, 
    /* XVCVSPSXDS */
    vsrc, vsrc, 
    /* XVCVSPSXWS */
    vsrc, vsrc, 
    /* XVCVSPUXDS */
    vsrc, vsrc, 
    /* XVCVSPUXWS */
    vsrc, vsrc, 
    /* XVCVSXDDP */
    vsrc, vsrc, 
    /* XVCVSXDSP */
    vsrc, vsrc, 
    /* XVCVSXWDP */
    vsrc, vsrc, 
    /* XVCVSXWSP */
    vsrc, vsrc, 
    /* XVCVUXDDP */
    vsrc, vsrc, 
    /* XVCVUXDSP */
    vsrc, vsrc, 
    /* XVCVUXWDP */
    vsrc, vsrc, 
    /* XVCVUXWSP */
    vsrc, vsrc, 
    /* XVDIVDP */
    vsrc, vsrc, vsrc, 
    /* XVDIVSP */
    vsrc, vsrc, vsrc, 
    /* XVF16GER2 */
    acc, vsrc, vsrc, 
    /* XVF16GER2NN */
    acc, acc, vsrc, vsrc, 
    /* XVF16GER2NP */
    acc, acc, vsrc, vsrc, 
    /* XVF16GER2PN */
    acc, acc, vsrc, vsrc, 
    /* XVF16GER2PP */
    acc, acc, vsrc, vsrc, 
    /* XVF32GER */
    acc, vsrc, vsrc, 
    /* XVF32GERNN */
    acc, acc, vsrc, vsrc, 
    /* XVF32GERNP */
    acc, acc, vsrc, vsrc, 
    /* XVF32GERPN */
    acc, acc, vsrc, vsrc, 
    /* XVF32GERPP */
    acc, acc, vsrc, vsrc, 
    /* XVF64GER */
    acc, vsrpevenrc, vsrc, 
    /* XVF64GERNN */
    acc, acc, vsrpevenrc, vsrc, 
    /* XVF64GERNP */
    acc, acc, vsrpevenrc, vsrc, 
    /* XVF64GERPN */
    acc, acc, vsrpevenrc, vsrc, 
    /* XVF64GERPP */
    acc, acc, vsrpevenrc, vsrc, 
    /* XVI16GER2 */
    acc, vsrc, vsrc, 
    /* XVI16GER2PP */
    acc, acc, vsrc, vsrc, 
    /* XVI16GER2S */
    acc, vsrc, vsrc, 
    /* XVI16GER2SPP */
    acc, acc, vsrc, vsrc, 
    /* XVI4GER8 */
    acc, vsrc, vsrc, 
    /* XVI4GER8PP */
    acc, acc, vsrc, vsrc, 
    /* XVI8GER4 */
    acc, vsrc, vsrc, 
    /* XVI8GER4PP */
    acc, acc, vsrc, vsrc, 
    /* XVI8GER4SPP */
    acc, acc, vsrc, vsrc, 
    /* XVIEXPDP */
    vsrc, vsrc, vsrc, 
    /* XVIEXPSP */
    vsrc, vsrc, vsrc, 
    /* XVMADDADP */
    vsrc, vsrc, vsrc, vsrc, 
    /* XVMADDASP */
    vsrc, vsrc, vsrc, vsrc, 
    /* XVMADDMDP */
    vsrc, vsrc, vsrc, vsrc, 
    /* XVMADDMSP */
    vsrc, vsrc, vsrc, vsrc, 
    /* XVMAXDP */
    vsrc, vsrc, vsrc, 
    /* XVMAXSP */
    vsrc, vsrc, vsrc, 
    /* XVMINDP */
    vsrc, vsrc, vsrc, 
    /* XVMINSP */
    vsrc, vsrc, vsrc, 
    /* XVMSUBADP */
    vsrc, vsrc, vsrc, vsrc, 
    /* XVMSUBASP */
    vsrc, vsrc, vsrc, vsrc, 
    /* XVMSUBMDP */
    vsrc, vsrc, vsrc, vsrc, 
    /* XVMSUBMSP */
    vsrc, vsrc, vsrc, vsrc, 
    /* XVMULDP */
    vsrc, vsrc, vsrc, 
    /* XVMULSP */
    vsrc, vsrc, vsrc, 
    /* XVNABSDP */
    vsrc, vsrc, 
    /* XVNABSSP */
    vsrc, vsrc, 
    /* XVNEGDP */
    vsrc, vsrc, 
    /* XVNEGSP */
    vsrc, vsrc, 
    /* XVNMADDADP */
    vsrc, vsrc, vsrc, vsrc, 
    /* XVNMADDASP */
    vsrc, vsrc, vsrc, vsrc, 
    /* XVNMADDMDP */
    vsrc, vsrc, vsrc, vsrc, 
    /* XVNMADDMSP */
    vsrc, vsrc, vsrc, vsrc, 
    /* XVNMSUBADP */
    vsrc, vsrc, vsrc, vsrc, 
    /* XVNMSUBASP */
    vsrc, vsrc, vsrc, vsrc, 
    /* XVNMSUBMDP */
    vsrc, vsrc, vsrc, vsrc, 
    /* XVNMSUBMSP */
    vsrc, vsrc, vsrc, vsrc, 
    /* XVRDPI */
    vsrc, vsrc, 
    /* XVRDPIC */
    vsrc, vsrc, 
    /* XVRDPIM */
    vsrc, vsrc, 
    /* XVRDPIP */
    vsrc, vsrc, 
    /* XVRDPIZ */
    vsrc, vsrc, 
    /* XVREDP */
    vsrc, vsrc, 
    /* XVRESP */
    vsrc, vsrc, 
    /* XVRSPI */
    vsrc, vsrc, 
    /* XVRSPIC */
    vsrc, vsrc, 
    /* XVRSPIM */
    vsrc, vsrc, 
    /* XVRSPIP */
    vsrc, vsrc, 
    /* XVRSPIZ */
    vsrc, vsrc, 
    /* XVRSQRTEDP */
    vsrc, vsrc, 
    /* XVRSQRTESP */
    vsrc, vsrc, 
    /* XVSQRTDP */
    vsrc, vsrc, 
    /* XVSQRTSP */
    vsrc, vsrc, 
    /* XVSUBDP */
    vsrc, vsrc, vsrc, 
    /* XVSUBSP */
    vsrc, vsrc, vsrc, 
    /* XVTDIVDP */
    crrc, vsrc, vsrc, 
    /* XVTDIVSP */
    crrc, vsrc, vsrc, 
    /* XVTLSBB */
    crrc, vsrc, 
    /* XVTSQRTDP */
    crrc, vsrc, 
    /* XVTSQRTSP */
    crrc, vsrc, 
    /* XVTSTDCDP */
    vsrc, u7imm, vsrc, 
    /* XVTSTDCSP */
    vsrc, u7imm, vsrc, 
    /* XVXEXPDP */
    vsrc, vsrc, 
    /* XVXEXPSP */
    vsrc, vsrc, 
    /* XVXSIGDP */
    vsrc, vsrc, 
    /* XVXSIGSP */
    vsrc, vsrc, 
    /* XXBLENDVB */
    vsrc, vsrc, vsrc, vsrc, 
    /* XXBLENDVD */
    vsrc, vsrc, vsrc, vsrc, 
    /* XXBLENDVH */
    vsrc, vsrc, vsrc, vsrc, 
    /* XXBLENDVW */
    vsrc, vsrc, vsrc, vsrc, 
    /* XXBRD */
    vsrc, vsrc, 
    /* XXBRH */
    vsrc, vsrc, 
    /* XXBRQ */
    vsrc, vsrc, 
    /* XXBRW */
    vsrc, vsrc, 
    /* XXEVAL */
    vsrc, vsrc, vsrc, vsrc, u8imm, 
    /* XXEXTRACTUW */
    vsfrc, vsrc, u4imm, 
    /* XXGENPCVBM */
    vsrc, vrrc, s5imm, 
    /* XXGENPCVDM */
    vsrc, vrrc, s5imm, 
    /* XXGENPCVHM */
    vsrc, vrrc, s5imm, 
    /* XXGENPCVWM */
    vsrc, vrrc, s5imm, 
    /* XXINSERTW */
    vsrc, vsrc, vsrc, u4imm, 
    /* XXLAND */
    vsrc, vsrc, vsrc, 
    /* XXLANDC */
    vsrc, vsrc, vsrc, 
    /* XXLEQV */
    vsrc, vsrc, vsrc, 
    /* XXLEQVOnes */
    vsrc, 
    /* XXLNAND */
    vsrc, vsrc, vsrc, 
    /* XXLNOR */
    vsrc, vsrc, vsrc, 
    /* XXLOR */
    vsrc, vsrc, vsrc, 
    /* XXLORC */
    vsrc, vsrc, vsrc, 
    /* XXLORf */
    vsfrc, vsfrc, vsfrc, 
    /* XXLXOR */
    vsrc, vsrc, vsrc, 
    /* XXLXORdpz */
    vsfrc, 
    /* XXLXORspz */
    vssrc, 
    /* XXLXORz */
    vsrc, 
    /* XXMFACC */
    acc, acc, 
    /* XXMRGHW */
    vsrc, vsrc, vsrc, 
    /* XXMRGLW */
    vsrc, vsrc, vsrc, 
    /* XXMTACC */
    acc, acc, 
    /* XXPERM */
    vsrc, vsrc, vsrc, 
    /* XXPERMDI */
    vsrc, vsrc, vsrc, u2imm, 
    /* XXPERMDIs */
    vsrc, vsfrc, u2imm, 
    /* XXPERMR */
    vsrc, vsrc, vsrc, 
    /* XXPERMX */
    vsrc, vsrc, vsrc, vsrc, u3imm, 
    /* XXSEL */
    vsrc, vsrc, vsrc, vsrc, 
    /* XXSETACCZ */
    acc, 
    /* XXSLDWI */
    vsrc, vsrc, vsrc, u2imm, 
    /* XXSLDWIs */
    vsrc, vsfrc, u2imm, 
    /* XXSPLTI32DX */
    vsrc, vsrc, u1imm, i32imm, 
    /* XXSPLTIB */
    vsrc, u8imm, 
    /* XXSPLTIDP */
    vsrc, i32imm, 
    /* XXSPLTIW */
    vsrc, i32imm, 
    /* XXSPLTW */
    vsrc, vsrc, u2imm, 
    /* XXSPLTWs */
    vsrc, vsfrc, u2imm, 
    /* gBC */
    u5imm, crbitrc, condbrtarget, 
    /* gBCA */
    u5imm, crbitrc, abscondbrtarget, 
    /* gBCAat */
    u5imm, atimm, crbitrc, abscondbrtarget, 
    /* gBCCTR */
    u5imm, crbitrc, i32imm, 
    /* gBCCTRL */
    u5imm, crbitrc, i32imm, 
    /* gBCL */
    u5imm, crbitrc, condbrtarget, 
    /* gBCLA */
    u5imm, crbitrc, abscondbrtarget, 
    /* gBCLAat */
    u5imm, atimm, crbitrc, abscondbrtarget, 
    /* gBCLR */
    u5imm, crbitrc, i32imm, 
    /* gBCLRL */
    u5imm, crbitrc, i32imm, 
    /* gBCLat */
    u5imm, atimm, crbitrc, condbrtarget, 
    /* gBCat */
    u5imm, atimm, crbitrc, condbrtarget, 
  };
  return OpcodeOperandTypes[Offsets[Opcode] + OpIdx];
}
} // end namespace PPC
} // end namespace llvm
#endif // GET_INSTRINFO_OPERAND_TYPE

#ifdef GET_INSTRINFO_MEM_OPERAND_SIZE
#undef GET_INSTRINFO_MEM_OPERAND_SIZE
namespace llvm {
namespace PPC {
LLVM_READONLY
static int getMemOperandSize(int OpType) {
  switch (OpType) {
  default: return 0;
  }
}
} // end namespace PPC
} // end namespace llvm
#endif // GET_INSTRINFO_MEM_OPERAND_SIZE

#ifdef GET_INSTRINFO_LOGICAL_OPERAND_SIZE_MAP
#undef GET_INSTRINFO_LOGICAL_OPERAND_SIZE_MAP
namespace llvm {
namespace PPC {
LLVM_READONLY static unsigned
getLogicalOperandSize(uint16_t Opcode, uint16_t LogicalOpIdx) {
  return LogicalOpIdx;
}
LLVM_READONLY static inline unsigned
getLogicalOperandIdx(uint16_t Opcode, uint16_t LogicalOpIdx) {
  auto S = 0U;
  for (auto i = 0U; i < LogicalOpIdx; ++i)
    S += getLogicalOperandSize(Opcode, i);
  return S;
}
} // end namespace PPC
} // end namespace llvm
#endif // GET_INSTRINFO_LOGICAL_OPERAND_SIZE_MAP

#ifdef GET_INSTRINFO_LOGICAL_OPERAND_TYPE_MAP
#undef GET_INSTRINFO_LOGICAL_OPERAND_TYPE_MAP
namespace llvm {
namespace PPC {
LLVM_READONLY static int
getLogicalOperandType(uint16_t Opcode, uint16_t LogicalOpIdx) {
  return -1;
}
} // end namespace PPC
} // end namespace llvm
#endif // GET_INSTRINFO_LOGICAL_OPERAND_TYPE_MAP

#ifdef GET_INSTRINFO_MC_HELPER_DECLS
#undef GET_INSTRINFO_MC_HELPER_DECLS

namespace llvm {
class MCInst;
class FeatureBitset;

namespace PPC_MC {

void verifyInstructionPredicates(unsigned Opcode, const FeatureBitset &Features);

} // end namespace PPC_MC
} // end namespace llvm

#endif // GET_INSTRINFO_MC_HELPER_DECLS

#ifdef GET_INSTRINFO_MC_HELPERS
#undef GET_INSTRINFO_MC_HELPERS

namespace llvm {
namespace PPC_MC {

} // end namespace PPC_MC
} // end namespace llvm

#endif // GET_GENISTRINFO_MC_HELPERS

#ifdef ENABLE_INSTR_PREDICATE_VERIFIER
#undef ENABLE_INSTR_PREDICATE_VERIFIER
#include <sstream>

namespace llvm {
namespace PPC_MC {

// Bits for subtarget features that participate in instruction matching.
enum SubtargetFeatureBits : uint8_t {
  Feature_ModernAsBit = 0,
};

#ifndef NDEBUG
static const char *SubtargetFeatureNames[] = {
  "Feature_ModernAs",
  nullptr
};

#endif // NDEBUG

FeatureBitset computeAvailableFeatures(const FeatureBitset &FB) {
  FeatureBitset Features;
  if (!FB[PPC::AIXOS] || FB[PPC::FeatureModernAIXAs])
    Features.set(Feature_ModernAsBit);
  return Features;
}

#ifndef NDEBUG
// Feature bitsets.
enum : uint8_t {
  CEFBS_None,
};

static constexpr FeatureBitset FeatureBitsets[] = {
  {}, // CEFBS_None
};
#endif // NDEBUG

void verifyInstructionPredicates(
    unsigned Opcode, const FeatureBitset &Features) {
#ifndef NDEBUG
  static uint8_t RequiredFeaturesRefs[] = {
    CEFBS_None, // PHI = 0
    CEFBS_None, // INLINEASM = 1
    CEFBS_None, // INLINEASM_BR = 2
    CEFBS_None, // CFI_INSTRUCTION = 3
    CEFBS_None, // EH_LABEL = 4
    CEFBS_None, // GC_LABEL = 5
    CEFBS_None, // ANNOTATION_LABEL = 6
    CEFBS_None, // KILL = 7
    CEFBS_None, // EXTRACT_SUBREG = 8
    CEFBS_None, // INSERT_SUBREG = 9
    CEFBS_None, // IMPLICIT_DEF = 10
    CEFBS_None, // SUBREG_TO_REG = 11
    CEFBS_None, // COPY_TO_REGCLASS = 12
    CEFBS_None, // DBG_VALUE = 13
    CEFBS_None, // DBG_VALUE_LIST = 14
    CEFBS_None, // DBG_INSTR_REF = 15
    CEFBS_None, // DBG_PHI = 16
    CEFBS_None, // DBG_LABEL = 17
    CEFBS_None, // REG_SEQUENCE = 18
    CEFBS_None, // COPY = 19
    CEFBS_None, // BUNDLE = 20
    CEFBS_None, // LIFETIME_START = 21
    CEFBS_None, // LIFETIME_END = 22
    CEFBS_None, // PSEUDO_PROBE = 23
    CEFBS_None, // ARITH_FENCE = 24
    CEFBS_None, // STACKMAP = 25
    CEFBS_None, // FENTRY_CALL = 26
    CEFBS_None, // PATCHPOINT = 27
    CEFBS_None, // LOAD_STACK_GUARD = 28
    CEFBS_None, // PREALLOCATED_SETUP = 29
    CEFBS_None, // PREALLOCATED_ARG = 30
    CEFBS_None, // STATEPOINT = 31
    CEFBS_None, // LOCAL_ESCAPE = 32
    CEFBS_None, // FAULTING_OP = 33
    CEFBS_None, // PATCHABLE_OP = 34
    CEFBS_None, // PATCHABLE_FUNCTION_ENTER = 35
    CEFBS_None, // PATCHABLE_RET = 36
    CEFBS_None, // PATCHABLE_FUNCTION_EXIT = 37
    CEFBS_None, // PATCHABLE_TAIL_CALL = 38
    CEFBS_None, // PATCHABLE_EVENT_CALL = 39
    CEFBS_None, // PATCHABLE_TYPED_EVENT_CALL = 40
    CEFBS_None, // ICALL_BRANCH_FUNNEL = 41
    CEFBS_None, // G_ASSERT_SEXT = 42
    CEFBS_None, // G_ASSERT_ZEXT = 43
    CEFBS_None, // G_ASSERT_ALIGN = 44
    CEFBS_None, // G_ADD = 45
    CEFBS_None, // G_SUB = 46
    CEFBS_None, // G_MUL = 47
    CEFBS_None, // G_SDIV = 48
    CEFBS_None, // G_UDIV = 49
    CEFBS_None, // G_SREM = 50
    CEFBS_None, // G_UREM = 51
    CEFBS_None, // G_SDIVREM = 52
    CEFBS_None, // G_UDIVREM = 53
    CEFBS_None, // G_AND = 54
    CEFBS_None, // G_OR = 55
    CEFBS_None, // G_XOR = 56
    CEFBS_None, // G_IMPLICIT_DEF = 57
    CEFBS_None, // G_PHI = 58
    CEFBS_None, // G_FRAME_INDEX = 59
    CEFBS_None, // G_GLOBAL_VALUE = 60
    CEFBS_None, // G_EXTRACT = 61
    CEFBS_None, // G_UNMERGE_VALUES = 62
    CEFBS_None, // G_INSERT = 63
    CEFBS_None, // G_MERGE_VALUES = 64
    CEFBS_None, // G_BUILD_VECTOR = 65
    CEFBS_None, // G_BUILD_VECTOR_TRUNC = 66
    CEFBS_None, // G_CONCAT_VECTORS = 67
    CEFBS_None, // G_PTRTOINT = 68
    CEFBS_None, // G_INTTOPTR = 69
    CEFBS_None, // G_BITCAST = 70
    CEFBS_None, // G_FREEZE = 71
    CEFBS_None, // G_INTRINSIC_FPTRUNC_ROUND = 72
    CEFBS_None, // G_INTRINSIC_TRUNC = 73
    CEFBS_None, // G_INTRINSIC_ROUND = 74
    CEFBS_None, // G_INTRINSIC_LRINT = 75
    CEFBS_None, // G_INTRINSIC_ROUNDEVEN = 76
    CEFBS_None, // G_READCYCLECOUNTER = 77
    CEFBS_None, // G_LOAD = 78
    CEFBS_None, // G_SEXTLOAD = 79
    CEFBS_None, // G_ZEXTLOAD = 80
    CEFBS_None, // G_INDEXED_LOAD = 81
    CEFBS_None, // G_INDEXED_SEXTLOAD = 82
    CEFBS_None, // G_INDEXED_ZEXTLOAD = 83
    CEFBS_None, // G_STORE = 84
    CEFBS_None, // G_INDEXED_STORE = 85
    CEFBS_None, // G_ATOMIC_CMPXCHG_WITH_SUCCESS = 86
    CEFBS_None, // G_ATOMIC_CMPXCHG = 87
    CEFBS_None, // G_ATOMICRMW_XCHG = 88
    CEFBS_None, // G_ATOMICRMW_ADD = 89
    CEFBS_None, // G_ATOMICRMW_SUB = 90
    CEFBS_None, // G_ATOMICRMW_AND = 91
    CEFBS_None, // G_ATOMICRMW_NAND = 92
    CEFBS_None, // G_ATOMICRMW_OR = 93
    CEFBS_None, // G_ATOMICRMW_XOR = 94
    CEFBS_None, // G_ATOMICRMW_MAX = 95
    CEFBS_None, // G_ATOMICRMW_MIN = 96
    CEFBS_None, // G_ATOMICRMW_UMAX = 97
    CEFBS_None, // G_ATOMICRMW_UMIN = 98
    CEFBS_None, // G_ATOMICRMW_FADD = 99
    CEFBS_None, // G_ATOMICRMW_FSUB = 100
    CEFBS_None, // G_ATOMICRMW_FMAX = 101
    CEFBS_None, // G_ATOMICRMW_FMIN = 102
    CEFBS_None, // G_FENCE = 103
    CEFBS_None, // G_BRCOND = 104
    CEFBS_None, // G_BRINDIRECT = 105
    CEFBS_None, // G_INTRINSIC = 106
    CEFBS_None, // G_INTRINSIC_W_SIDE_EFFECTS = 107
    CEFBS_None, // G_ANYEXT = 108
    CEFBS_None, // G_TRUNC = 109
    CEFBS_None, // G_CONSTANT = 110
    CEFBS_None, // G_FCONSTANT = 111
    CEFBS_None, // G_VASTART = 112
    CEFBS_None, // G_VAARG = 113
    CEFBS_None, // G_SEXT = 114
    CEFBS_None, // G_SEXT_INREG = 115
    CEFBS_None, // G_ZEXT = 116
    CEFBS_None, // G_SHL = 117
    CEFBS_None, // G_LSHR = 118
    CEFBS_None, // G_ASHR = 119
    CEFBS_None, // G_FSHL = 120
    CEFBS_None, // G_FSHR = 121
    CEFBS_None, // G_ROTR = 122
    CEFBS_None, // G_ROTL = 123
    CEFBS_None, // G_ICMP = 124
    CEFBS_None, // G_FCMP = 125
    CEFBS_None, // G_SELECT = 126
    CEFBS_None, // G_UADDO = 127
    CEFBS_None, // G_UADDE = 128
    CEFBS_None, // G_USUBO = 129
    CEFBS_None, // G_USUBE = 130
    CEFBS_None, // G_SADDO = 131
    CEFBS_None, // G_SADDE = 132
    CEFBS_None, // G_SSUBO = 133
    CEFBS_None, // G_SSUBE = 134
    CEFBS_None, // G_UMULO = 135
    CEFBS_None, // G_SMULO = 136
    CEFBS_None, // G_UMULH = 137
    CEFBS_None, // G_SMULH = 138
    CEFBS_None, // G_UADDSAT = 139
    CEFBS_None, // G_SADDSAT = 140
    CEFBS_None, // G_USUBSAT = 141
    CEFBS_None, // G_SSUBSAT = 142
    CEFBS_None, // G_USHLSAT = 143
    CEFBS_None, // G_SSHLSAT = 144
    CEFBS_None, // G_SMULFIX = 145
    CEFBS_None, // G_UMULFIX = 146
    CEFBS_None, // G_SMULFIXSAT = 147
    CEFBS_None, // G_UMULFIXSAT = 148
    CEFBS_None, // G_SDIVFIX = 149
    CEFBS_None, // G_UDIVFIX = 150
    CEFBS_None, // G_SDIVFIXSAT = 151
    CEFBS_None, // G_UDIVFIXSAT = 152
    CEFBS_None, // G_FADD = 153
    CEFBS_None, // G_FSUB = 154
    CEFBS_None, // G_FMUL = 155
    CEFBS_None, // G_FMA = 156
    CEFBS_None, // G_FMAD = 157
    CEFBS_None, // G_FDIV = 158
    CEFBS_None, // G_FREM = 159
    CEFBS_None, // G_FPOW = 160
    CEFBS_None, // G_FPOWI = 161
    CEFBS_None, // G_FEXP = 162
    CEFBS_None, // G_FEXP2 = 163
    CEFBS_None, // G_FLOG = 164
    CEFBS_None, // G_FLOG2 = 165
    CEFBS_None, // G_FLOG10 = 166
    CEFBS_None, // G_FNEG = 167
    CEFBS_None, // G_FPEXT = 168
    CEFBS_None, // G_FPTRUNC = 169
    CEFBS_None, // G_FPTOSI = 170
    CEFBS_None, // G_FPTOUI = 171
    CEFBS_None, // G_SITOFP = 172
    CEFBS_None, // G_UITOFP = 173
    CEFBS_None, // G_FABS = 174
    CEFBS_None, // G_FCOPYSIGN = 175
    CEFBS_None, // G_IS_FPCLASS = 176
    CEFBS_None, // G_FCANONICALIZE = 177
    CEFBS_None, // G_FMINNUM = 178
    CEFBS_None, // G_FMAXNUM = 179
    CEFBS_None, // G_FMINNUM_IEEE = 180
    CEFBS_None, // G_FMAXNUM_IEEE = 181
    CEFBS_None, // G_FMINIMUM = 182
    CEFBS_None, // G_FMAXIMUM = 183
    CEFBS_None, // G_PTR_ADD = 184
    CEFBS_None, // G_PTRMASK = 185
    CEFBS_None, // G_SMIN = 186
    CEFBS_None, // G_SMAX = 187
    CEFBS_None, // G_UMIN = 188
    CEFBS_None, // G_UMAX = 189
    CEFBS_None, // G_ABS = 190
    CEFBS_None, // G_LROUND = 191
    CEFBS_None, // G_LLROUND = 192
    CEFBS_None, // G_BR = 193
    CEFBS_None, // G_BRJT = 194
    CEFBS_None, // G_INSERT_VECTOR_ELT = 195
    CEFBS_None, // G_EXTRACT_VECTOR_ELT = 196
    CEFBS_None, // G_SHUFFLE_VECTOR = 197
    CEFBS_None, // G_CTTZ = 198
    CEFBS_None, // G_CTTZ_ZERO_UNDEF = 199
    CEFBS_None, // G_CTLZ = 200
    CEFBS_None, // G_CTLZ_ZERO_UNDEF = 201
    CEFBS_None, // G_CTPOP = 202
    CEFBS_None, // G_BSWAP = 203
    CEFBS_None, // G_BITREVERSE = 204
    CEFBS_None, // G_FCEIL = 205
    CEFBS_None, // G_FCOS = 206
    CEFBS_None, // G_FSIN = 207
    CEFBS_None, // G_FSQRT = 208
    CEFBS_None, // G_FFLOOR = 209
    CEFBS_None, // G_FRINT = 210
    CEFBS_None, // G_FNEARBYINT = 211
    CEFBS_None, // G_ADDRSPACE_CAST = 212
    CEFBS_None, // G_BLOCK_ADDR = 213
    CEFBS_None, // G_JUMP_TABLE = 214
    CEFBS_None, // G_DYN_STACKALLOC = 215
    CEFBS_None, // G_STRICT_FADD = 216
    CEFBS_None, // G_STRICT_FSUB = 217
    CEFBS_None, // G_STRICT_FMUL = 218
    CEFBS_None, // G_STRICT_FDIV = 219
    CEFBS_None, // G_STRICT_FREM = 220
    CEFBS_None, // G_STRICT_FMA = 221
    CEFBS_None, // G_STRICT_FSQRT = 222
    CEFBS_None, // G_READ_REGISTER = 223
    CEFBS_None, // G_WRITE_REGISTER = 224
    CEFBS_None, // G_MEMCPY = 225
    CEFBS_None, // G_MEMCPY_INLINE = 226
    CEFBS_None, // G_MEMMOVE = 227
    CEFBS_None, // G_MEMSET = 228
    CEFBS_None, // G_BZERO = 229
    CEFBS_None, // G_VECREDUCE_SEQ_FADD = 230
    CEFBS_None, // G_VECREDUCE_SEQ_FMUL = 231
    CEFBS_None, // G_VECREDUCE_FADD = 232
    CEFBS_None, // G_VECREDUCE_FMUL = 233
    CEFBS_None, // G_VECREDUCE_FMAX = 234
    CEFBS_None, // G_VECREDUCE_FMIN = 235
    CEFBS_None, // G_VECREDUCE_ADD = 236
    CEFBS_None, // G_VECREDUCE_MUL = 237
    CEFBS_None, // G_VECREDUCE_AND = 238
    CEFBS_None, // G_VECREDUCE_OR = 239
    CEFBS_None, // G_VECREDUCE_XOR = 240
    CEFBS_None, // G_VECREDUCE_SMAX = 241
    CEFBS_None, // G_VECREDUCE_SMIN = 242
    CEFBS_None, // G_VECREDUCE_UMAX = 243
    CEFBS_None, // G_VECREDUCE_UMIN = 244
    CEFBS_None, // G_SBFX = 245
    CEFBS_None, // G_UBFX = 246
    CEFBS_None, // ATOMIC_CMP_SWAP_I128 = 247
    CEFBS_None, // ATOMIC_LOAD_ADD_I128 = 248
    CEFBS_None, // ATOMIC_LOAD_AND_I128 = 249
    CEFBS_None, // ATOMIC_LOAD_NAND_I128 = 250
    CEFBS_None, // ATOMIC_LOAD_OR_I128 = 251
    CEFBS_None, // ATOMIC_LOAD_SUB_I128 = 252
    CEFBS_None, // ATOMIC_LOAD_XOR_I128 = 253
    CEFBS_None, // ATOMIC_SWAP_I128 = 254
    CEFBS_None, // BUILD_QUADWORD = 255
    CEFBS_None, // BUILD_UACC = 256
    CEFBS_None, // CFENCE8 = 257
    CEFBS_None, // CLRLSLDI = 258
    CEFBS_None, // CLRLSLDI_rec = 259
    CEFBS_None, // CLRLSLWI = 260
    CEFBS_None, // CLRLSLWI_rec = 261
    CEFBS_None, // CLRRDI = 262
    CEFBS_None, // CLRRDI_rec = 263
    CEFBS_None, // CLRRWI = 264
    CEFBS_None, // CLRRWI_rec = 265
    CEFBS_None, // DCBFL = 266
    CEFBS_None, // DCBFLP = 267
    CEFBS_None, // DCBFPS = 268
    CEFBS_None, // DCBFx = 269
    CEFBS_None, // DCBSTPS = 270
    CEFBS_None, // DCBTCT = 271
    CEFBS_None, // DCBTDS = 272
    CEFBS_None, // DCBTSTCT = 273
    CEFBS_None, // DCBTSTDS = 274
    CEFBS_None, // DCBTSTT = 275
    CEFBS_None, // DCBTSTx = 276
    CEFBS_None, // DCBTT = 277
    CEFBS_None, // DCBTx = 278
    CEFBS_None, // DFLOADf32 = 279
    CEFBS_None, // DFLOADf64 = 280
    CEFBS_None, // DFSTOREf32 = 281
    CEFBS_None, // DFSTOREf64 = 282
    CEFBS_None, // EXTLDI = 283
    CEFBS_None, // EXTLDI_rec = 284
    CEFBS_None, // EXTLWI = 285
    CEFBS_None, // EXTLWI_rec = 286
    CEFBS_None, // EXTRDI = 287
    CEFBS_None, // EXTRDI_rec = 288
    CEFBS_None, // EXTRWI = 289
    CEFBS_None, // EXTRWI_rec = 290
    CEFBS_None, // INSLWI = 291
    CEFBS_None, // INSLWI_rec = 292
    CEFBS_None, // INSRDI = 293
    CEFBS_None, // INSRDI_rec = 294
    CEFBS_None, // INSRWI = 295
    CEFBS_None, // INSRWI_rec = 296
    CEFBS_None, // KILL_PAIR = 297
    CEFBS_None, // LAx = 298
    CEFBS_None, // LIWAX = 299
    CEFBS_None, // LIWZX = 300
    CEFBS_None, // RLWIMIbm = 301
    CEFBS_None, // RLWIMIbm_rec = 302
    CEFBS_None, // RLWINMbm = 303
    CEFBS_None, // RLWINMbm_rec = 304
    CEFBS_None, // RLWNMbm = 305
    CEFBS_None, // RLWNMbm_rec = 306
    CEFBS_None, // ROTRDI = 307
    CEFBS_None, // ROTRDI_rec = 308
    CEFBS_None, // ROTRWI = 309
    CEFBS_None, // ROTRWI_rec = 310
    CEFBS_None, // SLDI = 311
    CEFBS_None, // SLDI_rec = 312
    CEFBS_None, // SLWI = 313
    CEFBS_None, // SLWI_rec = 314
    CEFBS_None, // SPILLTOVSR_LD = 315
    CEFBS_None, // SPILLTOVSR_LDX = 316
    CEFBS_None, // SPILLTOVSR_ST = 317
    CEFBS_None, // SPILLTOVSR_STX = 318
    CEFBS_None, // SRDI = 319
    CEFBS_None, // SRDI_rec = 320
    CEFBS_None, // SRWI = 321
    CEFBS_None, // SRWI_rec = 322
    CEFBS_None, // STIWX = 323
    CEFBS_None, // SUBI = 324
    CEFBS_None, // SUBIC = 325
    CEFBS_None, // SUBIC_rec = 326
    CEFBS_None, // SUBIS = 327
    CEFBS_None, // SUBPCIS = 328
    CEFBS_None, // XFLOADf32 = 329
    CEFBS_None, // XFLOADf64 = 330
    CEFBS_None, // XFSTOREf32 = 331
    CEFBS_None, // XFSTOREf64 = 332
    CEFBS_None, // ADD4 = 333
    CEFBS_None, // ADD4O = 334
    CEFBS_None, // ADD4O_rec = 335
    CEFBS_None, // ADD4TLS = 336
    CEFBS_None, // ADD4_rec = 337
    CEFBS_None, // ADD8 = 338
    CEFBS_None, // ADD8O = 339
    CEFBS_None, // ADD8O_rec = 340
    CEFBS_None, // ADD8TLS = 341
    CEFBS_None, // ADD8TLS_ = 342
    CEFBS_None, // ADD8_rec = 343
    CEFBS_None, // ADDC = 344
    CEFBS_None, // ADDC8 = 345
    CEFBS_None, // ADDC8O = 346
    CEFBS_None, // ADDC8O_rec = 347
    CEFBS_None, // ADDC8_rec = 348
    CEFBS_None, // ADDCO = 349
    CEFBS_None, // ADDCO_rec = 350
    CEFBS_None, // ADDC_rec = 351
    CEFBS_None, // ADDE = 352
    CEFBS_None, // ADDE8 = 353
    CEFBS_None, // ADDE8O = 354
    CEFBS_None, // ADDE8O_rec = 355
    CEFBS_None, // ADDE8_rec = 356
    CEFBS_None, // ADDEO = 357
    CEFBS_None, // ADDEO_rec = 358
    CEFBS_None, // ADDEX = 359
    CEFBS_None, // ADDEX8 = 360
    CEFBS_None, // ADDE_rec = 361
    CEFBS_None, // ADDI = 362
    CEFBS_None, // ADDI8 = 363
    CEFBS_None, // ADDIC = 364
    CEFBS_None, // ADDIC8 = 365
    CEFBS_None, // ADDIC_rec = 366
    CEFBS_None, // ADDIS = 367
    CEFBS_None, // ADDIS8 = 368
    CEFBS_None, // ADDISdtprelHA = 369
    CEFBS_None, // ADDISdtprelHA32 = 370
    CEFBS_None, // ADDISgotTprelHA = 371
    CEFBS_None, // ADDIStlsgdHA = 372
    CEFBS_None, // ADDIStlsldHA = 373
    CEFBS_None, // ADDIStocHA = 374
    CEFBS_None, // ADDIStocHA8 = 375
    CEFBS_None, // ADDIdtprelL = 376
    CEFBS_None, // ADDIdtprelL32 = 377
    CEFBS_None, // ADDItlsgdL = 378
    CEFBS_None, // ADDItlsgdL32 = 379
    CEFBS_None, // ADDItlsgdLADDR = 380
    CEFBS_None, // ADDItlsgdLADDR32 = 381
    CEFBS_None, // ADDItlsldL = 382
    CEFBS_None, // ADDItlsldL32 = 383
    CEFBS_None, // ADDItlsldLADDR = 384
    CEFBS_None, // ADDItlsldLADDR32 = 385
    CEFBS_None, // ADDItoc = 386
    CEFBS_None, // ADDItoc8 = 387
    CEFBS_None, // ADDItocL = 388
    CEFBS_None, // ADDME = 389
    CEFBS_None, // ADDME8 = 390
    CEFBS_None, // ADDME8O = 391
    CEFBS_None, // ADDME8O_rec = 392
    CEFBS_None, // ADDME8_rec = 393
    CEFBS_None, // ADDMEO = 394
    CEFBS_None, // ADDMEO_rec = 395
    CEFBS_None, // ADDME_rec = 396
    CEFBS_None, // ADDPCIS = 397
    CEFBS_None, // ADDZE = 398
    CEFBS_None, // ADDZE8 = 399
    CEFBS_None, // ADDZE8O = 400
    CEFBS_None, // ADDZE8O_rec = 401
    CEFBS_None, // ADDZE8_rec = 402
    CEFBS_None, // ADDZEO = 403
    CEFBS_None, // ADDZEO_rec = 404
    CEFBS_None, // ADDZE_rec = 405
    CEFBS_None, // ADJCALLSTACKDOWN = 406
    CEFBS_None, // ADJCALLSTACKUP = 407
    CEFBS_None, // AND = 408
    CEFBS_None, // AND8 = 409
    CEFBS_None, // AND8_rec = 410
    CEFBS_None, // ANDC = 411
    CEFBS_None, // ANDC8 = 412
    CEFBS_None, // ANDC8_rec = 413
    CEFBS_None, // ANDC_rec = 414
    CEFBS_None, // ANDI8_rec = 415
    CEFBS_None, // ANDIS8_rec = 416
    CEFBS_None, // ANDIS_rec = 417
    CEFBS_None, // ANDI_rec = 418
    CEFBS_None, // ANDI_rec_1_EQ_BIT = 419
    CEFBS_None, // ANDI_rec_1_EQ_BIT8 = 420
    CEFBS_None, // ANDI_rec_1_GT_BIT = 421
    CEFBS_None, // ANDI_rec_1_GT_BIT8 = 422
    CEFBS_None, // AND_rec = 423
    CEFBS_None, // ATOMIC_CMP_SWAP_I16 = 424
    CEFBS_None, // ATOMIC_CMP_SWAP_I32 = 425
    CEFBS_None, // ATOMIC_CMP_SWAP_I64 = 426
    CEFBS_None, // ATOMIC_CMP_SWAP_I8 = 427
    CEFBS_None, // ATOMIC_LOAD_ADD_I16 = 428
    CEFBS_None, // ATOMIC_LOAD_ADD_I32 = 429
    CEFBS_None, // ATOMIC_LOAD_ADD_I64 = 430
    CEFBS_None, // ATOMIC_LOAD_ADD_I8 = 431
    CEFBS_None, // ATOMIC_LOAD_AND_I16 = 432
    CEFBS_None, // ATOMIC_LOAD_AND_I32 = 433
    CEFBS_None, // ATOMIC_LOAD_AND_I64 = 434
    CEFBS_None, // ATOMIC_LOAD_AND_I8 = 435
    CEFBS_None, // ATOMIC_LOAD_MAX_I16 = 436
    CEFBS_None, // ATOMIC_LOAD_MAX_I32 = 437
    CEFBS_None, // ATOMIC_LOAD_MAX_I64 = 438
    CEFBS_None, // ATOMIC_LOAD_MAX_I8 = 439
    CEFBS_None, // ATOMIC_LOAD_MIN_I16 = 440
    CEFBS_None, // ATOMIC_LOAD_MIN_I32 = 441
    CEFBS_None, // ATOMIC_LOAD_MIN_I64 = 442
    CEFBS_None, // ATOMIC_LOAD_MIN_I8 = 443
    CEFBS_None, // ATOMIC_LOAD_NAND_I16 = 444
    CEFBS_None, // ATOMIC_LOAD_NAND_I32 = 445
    CEFBS_None, // ATOMIC_LOAD_NAND_I64 = 446
    CEFBS_None, // ATOMIC_LOAD_NAND_I8 = 447
    CEFBS_None, // ATOMIC_LOAD_OR_I16 = 448
    CEFBS_None, // ATOMIC_LOAD_OR_I32 = 449
    CEFBS_None, // ATOMIC_LOAD_OR_I64 = 450
    CEFBS_None, // ATOMIC_LOAD_OR_I8 = 451
    CEFBS_None, // ATOMIC_LOAD_SUB_I16 = 452
    CEFBS_None, // ATOMIC_LOAD_SUB_I32 = 453
    CEFBS_None, // ATOMIC_LOAD_SUB_I64 = 454
    CEFBS_None, // ATOMIC_LOAD_SUB_I8 = 455
    CEFBS_None, // ATOMIC_LOAD_UMAX_I16 = 456
    CEFBS_None, // ATOMIC_LOAD_UMAX_I32 = 457
    CEFBS_None, // ATOMIC_LOAD_UMAX_I64 = 458
    CEFBS_None, // ATOMIC_LOAD_UMAX_I8 = 459
    CEFBS_None, // ATOMIC_LOAD_UMIN_I16 = 460
    CEFBS_None, // ATOMIC_LOAD_UMIN_I32 = 461
    CEFBS_None, // ATOMIC_LOAD_UMIN_I64 = 462
    CEFBS_None, // ATOMIC_LOAD_UMIN_I8 = 463
    CEFBS_None, // ATOMIC_LOAD_XOR_I16 = 464
    CEFBS_None, // ATOMIC_LOAD_XOR_I32 = 465
    CEFBS_None, // ATOMIC_LOAD_XOR_I64 = 466
    CEFBS_None, // ATOMIC_LOAD_XOR_I8 = 467
    CEFBS_None, // ATOMIC_SWAP_I16 = 468
    CEFBS_None, // ATOMIC_SWAP_I32 = 469
    CEFBS_None, // ATOMIC_SWAP_I64 = 470
    CEFBS_None, // ATOMIC_SWAP_I8 = 471
    CEFBS_None, // ATTN = 472
    CEFBS_None, // B = 473
    CEFBS_None, // BA = 474
    CEFBS_None, // BC = 475
    CEFBS_None, // BCC = 476
    CEFBS_None, // BCCA = 477
    CEFBS_None, // BCCCTR = 478
    CEFBS_None, // BCCCTR8 = 479
    CEFBS_None, // BCCCTRL = 480
    CEFBS_None, // BCCCTRL8 = 481
    CEFBS_None, // BCCL = 482
    CEFBS_None, // BCCLA = 483
    CEFBS_None, // BCCLR = 484
    CEFBS_None, // BCCLRL = 485
    CEFBS_None, // BCCTR = 486
    CEFBS_None, // BCCTR8 = 487
    CEFBS_None, // BCCTR8n = 488
    CEFBS_None, // BCCTRL = 489
    CEFBS_None, // BCCTRL8 = 490
    CEFBS_None, // BCCTRL8n = 491
    CEFBS_None, // BCCTRLn = 492
    CEFBS_None, // BCCTRn = 493
    CEFBS_None, // BCDADD_rec = 494
    CEFBS_None, // BCDCFN_rec = 495
    CEFBS_None, // BCDCFSQ_rec = 496
    CEFBS_None, // BCDCFZ_rec = 497
    CEFBS_None, // BCDCPSGN_rec = 498
    CEFBS_None, // BCDCTN_rec = 499
    CEFBS_None, // BCDCTSQ_rec = 500
    CEFBS_None, // BCDCTZ_rec = 501
    CEFBS_None, // BCDSETSGN_rec = 502
    CEFBS_None, // BCDSR_rec = 503
    CEFBS_None, // BCDSUB_rec = 504
    CEFBS_None, // BCDS_rec = 505
    CEFBS_None, // BCDTRUNC_rec = 506
    CEFBS_None, // BCDUS_rec = 507
    CEFBS_None, // BCDUTRUNC_rec = 508
    CEFBS_None, // BCL = 509
    CEFBS_None, // BCLR = 510
    CEFBS_None, // BCLRL = 511
    CEFBS_None, // BCLRLn = 512
    CEFBS_None, // BCLRn = 513
    CEFBS_None, // BCLalways = 514
    CEFBS_None, // BCLn = 515
    CEFBS_None, // BCTR = 516
    CEFBS_None, // BCTR8 = 517
    CEFBS_None, // BCTRL = 518
    CEFBS_None, // BCTRL8 = 519
    CEFBS_None, // BCTRL8_LDinto_toc = 520
    CEFBS_None, // BCTRL8_LDinto_toc_RM = 521
    CEFBS_None, // BCTRL8_RM = 522
    CEFBS_None, // BCTRL_LWZinto_toc = 523
    CEFBS_None, // BCTRL_LWZinto_toc_RM = 524
    CEFBS_None, // BCTRL_RM = 525
    CEFBS_None, // BCn = 526
    CEFBS_None, // BDNZ = 527
    CEFBS_None, // BDNZ8 = 528
    CEFBS_None, // BDNZA = 529
    CEFBS_None, // BDNZAm = 530
    CEFBS_None, // BDNZAp = 531
    CEFBS_None, // BDNZL = 532
    CEFBS_None, // BDNZLA = 533
    CEFBS_None, // BDNZLAm = 534
    CEFBS_None, // BDNZLAp = 535
    CEFBS_None, // BDNZLR = 536
    CEFBS_None, // BDNZLR8 = 537
    CEFBS_None, // BDNZLRL = 538
    CEFBS_None, // BDNZLRLm = 539
    CEFBS_None, // BDNZLRLp = 540
    CEFBS_None, // BDNZLRm = 541
    CEFBS_None, // BDNZLRp = 542
    CEFBS_None, // BDNZLm = 543
    CEFBS_None, // BDNZLp = 544
    CEFBS_None, // BDNZm = 545
    CEFBS_None, // BDNZp = 546
    CEFBS_None, // BDZ = 547
    CEFBS_None, // BDZ8 = 548
    CEFBS_None, // BDZA = 549
    CEFBS_None, // BDZAm = 550
    CEFBS_None, // BDZAp = 551
    CEFBS_None, // BDZL = 552
    CEFBS_None, // BDZLA = 553
    CEFBS_None, // BDZLAm = 554
    CEFBS_None, // BDZLAp = 555
    CEFBS_None, // BDZLR = 556
    CEFBS_None, // BDZLR8 = 557
    CEFBS_None, // BDZLRL = 558
    CEFBS_None, // BDZLRLm = 559
    CEFBS_None, // BDZLRLp = 560
    CEFBS_None, // BDZLRm = 561
    CEFBS_None, // BDZLRp = 562
    CEFBS_None, // BDZLm = 563
    CEFBS_None, // BDZLp = 564
    CEFBS_None, // BDZm = 565
    CEFBS_None, // BDZp = 566
    CEFBS_None, // BL = 567
    CEFBS_None, // BL8 = 568
    CEFBS_None, // BL8_NOP = 569
    CEFBS_None, // BL8_NOP_RM = 570
    CEFBS_None, // BL8_NOP_TLS = 571
    CEFBS_None, // BL8_NOTOC = 572
    CEFBS_None, // BL8_NOTOC_RM = 573
    CEFBS_None, // BL8_NOTOC_TLS = 574
    CEFBS_None, // BL8_RM = 575
    CEFBS_None, // BL8_TLS = 576
    CEFBS_None, // BL8_TLS_ = 577
    CEFBS_None, // BLA = 578
    CEFBS_None, // BLA8 = 579
    CEFBS_None, // BLA8_NOP = 580
    CEFBS_None, // BLA8_NOP_RM = 581
    CEFBS_None, // BLA8_RM = 582
    CEFBS_None, // BLA_RM = 583
    CEFBS_None, // BLR = 584
    CEFBS_None, // BLR8 = 585
    CEFBS_None, // BLRL = 586
    CEFBS_None, // BL_NOP = 587
    CEFBS_None, // BL_NOP_RM = 588
    CEFBS_None, // BL_RM = 589
    CEFBS_None, // BL_TLS = 590
    CEFBS_None, // BPERMD = 591
    CEFBS_None, // BRINC = 592
    CEFBS_None, // CFUGED = 593
    CEFBS_None, // CLRBHRB = 594
    CEFBS_None, // CMPB = 595
    CEFBS_None, // CMPB8 = 596
    CEFBS_None, // CMPD = 597
    CEFBS_None, // CMPDI = 598
    CEFBS_None, // CMPEQB = 599
    CEFBS_None, // CMPLD = 600
    CEFBS_None, // CMPLDI = 601
    CEFBS_None, // CMPLW = 602
    CEFBS_None, // CMPLWI = 603
    CEFBS_None, // CMPRB = 604
    CEFBS_None, // CMPRB8 = 605
    CEFBS_None, // CMPW = 606
    CEFBS_None, // CMPWI = 607
    CEFBS_None, // CNTLZD = 608
    CEFBS_None, // CNTLZDM = 609
    CEFBS_None, // CNTLZD_rec = 610
    CEFBS_None, // CNTLZW = 611
    CEFBS_None, // CNTLZW8 = 612
    CEFBS_None, // CNTLZW8_rec = 613
    CEFBS_None, // CNTLZW_rec = 614
    CEFBS_None, // CNTTZD = 615
    CEFBS_None, // CNTTZDM = 616
    CEFBS_None, // CNTTZD_rec = 617
    CEFBS_None, // CNTTZW = 618
    CEFBS_None, // CNTTZW8 = 619
    CEFBS_None, // CNTTZW8_rec = 620
    CEFBS_None, // CNTTZW_rec = 621
    CEFBS_None, // CP_ABORT = 622
    CEFBS_None, // CP_COPY = 623
    CEFBS_None, // CP_COPY8 = 624
    CEFBS_None, // CP_PASTE8_rec = 625
    CEFBS_None, // CP_PASTE_rec = 626
    CEFBS_None, // CR6SET = 627
    CEFBS_None, // CR6UNSET = 628
    CEFBS_None, // CRAND = 629
    CEFBS_None, // CRANDC = 630
    CEFBS_None, // CREQV = 631
    CEFBS_None, // CRNAND = 632
    CEFBS_None, // CRNOR = 633
    CEFBS_None, // CROR = 634
    CEFBS_None, // CRORC = 635
    CEFBS_None, // CRSET = 636
    CEFBS_None, // CRUNSET = 637
    CEFBS_None, // CRXOR = 638
    CEFBS_None, // CTRL_DEP = 639
    CEFBS_None, // DARN = 640
    CEFBS_None, // DCBA = 641
    CEFBS_None, // DCBF = 642
    CEFBS_None, // DCBFEP = 643
    CEFBS_None, // DCBI = 644
    CEFBS_None, // DCBST = 645
    CEFBS_None, // DCBSTEP = 646
    CEFBS_None, // DCBT = 647
    CEFBS_None, // DCBTEP = 648
    CEFBS_None, // DCBTST = 649
    CEFBS_None, // DCBTSTEP = 650
    CEFBS_None, // DCBZ = 651
    CEFBS_None, // DCBZEP = 652
    CEFBS_None, // DCBZL = 653
    CEFBS_None, // DCBZLEP = 654
    CEFBS_None, // DCCCI = 655
    CEFBS_None, // DIVD = 656
    CEFBS_None, // DIVDE = 657
    CEFBS_None, // DIVDEO = 658
    CEFBS_None, // DIVDEO_rec = 659
    CEFBS_None, // DIVDEU = 660
    CEFBS_None, // DIVDEUO = 661
    CEFBS_None, // DIVDEUO_rec = 662
    CEFBS_None, // DIVDEU_rec = 663
    CEFBS_None, // DIVDE_rec = 664
    CEFBS_None, // DIVDO = 665
    CEFBS_None, // DIVDO_rec = 666
    CEFBS_None, // DIVDU = 667
    CEFBS_None, // DIVDUO = 668
    CEFBS_None, // DIVDUO_rec = 669
    CEFBS_None, // DIVDU_rec = 670
    CEFBS_None, // DIVD_rec = 671
    CEFBS_None, // DIVW = 672
    CEFBS_None, // DIVWE = 673
    CEFBS_None, // DIVWEO = 674
    CEFBS_None, // DIVWEO_rec = 675
    CEFBS_None, // DIVWEU = 676
    CEFBS_None, // DIVWEUO = 677
    CEFBS_None, // DIVWEUO_rec = 678
    CEFBS_None, // DIVWEU_rec = 679
    CEFBS_None, // DIVWE_rec = 680
    CEFBS_None, // DIVWO = 681
    CEFBS_None, // DIVWO_rec = 682
    CEFBS_None, // DIVWU = 683
    CEFBS_None, // DIVWUO = 684
    CEFBS_None, // DIVWUO_rec = 685
    CEFBS_None, // DIVWU_rec = 686
    CEFBS_None, // DIVW_rec = 687
    CEFBS_None, // DSS = 688
    CEFBS_None, // DSSALL = 689
    CEFBS_None, // DST = 690
    CEFBS_None, // DST64 = 691
    CEFBS_None, // DSTST = 692
    CEFBS_None, // DSTST64 = 693
    CEFBS_None, // DSTSTT = 694
    CEFBS_None, // DSTSTT64 = 695
    CEFBS_None, // DSTT = 696
    CEFBS_None, // DSTT64 = 697
    CEFBS_None, // DYNALLOC = 698
    CEFBS_None, // DYNALLOC8 = 699
    CEFBS_None, // DYNAREAOFFSET = 700
    CEFBS_None, // DYNAREAOFFSET8 = 701
    CEFBS_None, // DecreaseCTR8Pseudo = 702
    CEFBS_None, // DecreaseCTRPseudo = 703
    CEFBS_None, // EFDABS = 704
    CEFBS_None, // EFDADD = 705
    CEFBS_None, // EFDCFS = 706
    CEFBS_None, // EFDCFSF = 707
    CEFBS_None, // EFDCFSI = 708
    CEFBS_None, // EFDCFSID = 709
    CEFBS_None, // EFDCFUF = 710
    CEFBS_None, // EFDCFUI = 711
    CEFBS_None, // EFDCFUID = 712
    CEFBS_None, // EFDCMPEQ = 713
    CEFBS_None, // EFDCMPGT = 714
    CEFBS_None, // EFDCMPLT = 715
    CEFBS_None, // EFDCTSF = 716
    CEFBS_None, // EFDCTSI = 717
    CEFBS_None, // EFDCTSIDZ = 718
    CEFBS_None, // EFDCTSIZ = 719
    CEFBS_None, // EFDCTUF = 720
    CEFBS_None, // EFDCTUI = 721
    CEFBS_None, // EFDCTUIDZ = 722
    CEFBS_None, // EFDCTUIZ = 723
    CEFBS_None, // EFDDIV = 724
    CEFBS_None, // EFDMUL = 725
    CEFBS_None, // EFDNABS = 726
    CEFBS_None, // EFDNEG = 727
    CEFBS_None, // EFDSUB = 728
    CEFBS_None, // EFDTSTEQ = 729
    CEFBS_None, // EFDTSTGT = 730
    CEFBS_None, // EFDTSTLT = 731
    CEFBS_None, // EFSABS = 732
    CEFBS_None, // EFSADD = 733
    CEFBS_None, // EFSCFD = 734
    CEFBS_None, // EFSCFSF = 735
    CEFBS_None, // EFSCFSI = 736
    CEFBS_None, // EFSCFUF = 737
    CEFBS_None, // EFSCFUI = 738
    CEFBS_None, // EFSCMPEQ = 739
    CEFBS_None, // EFSCMPGT = 740
    CEFBS_None, // EFSCMPLT = 741
    CEFBS_None, // EFSCTSF = 742
    CEFBS_None, // EFSCTSI = 743
    CEFBS_None, // EFSCTSIZ = 744
    CEFBS_None, // EFSCTUF = 745
    CEFBS_None, // EFSCTUI = 746
    CEFBS_None, // EFSCTUIZ = 747
    CEFBS_None, // EFSDIV = 748
    CEFBS_None, // EFSMUL = 749
    CEFBS_None, // EFSNABS = 750
    CEFBS_None, // EFSNEG = 751
    CEFBS_None, // EFSSUB = 752
    CEFBS_None, // EFSTSTEQ = 753
    CEFBS_None, // EFSTSTGT = 754
    CEFBS_None, // EFSTSTLT = 755
    CEFBS_None, // EH_SjLj_LongJmp32 = 756
    CEFBS_None, // EH_SjLj_LongJmp64 = 757
    CEFBS_None, // EH_SjLj_SetJmp32 = 758
    CEFBS_None, // EH_SjLj_SetJmp64 = 759
    CEFBS_None, // EH_SjLj_Setup = 760
    CEFBS_None, // EQV = 761
    CEFBS_None, // EQV8 = 762
    CEFBS_None, // EQV8_rec = 763
    CEFBS_None, // EQV_rec = 764
    CEFBS_None, // EVABS = 765
    CEFBS_None, // EVADDIW = 766
    CEFBS_None, // EVADDSMIAAW = 767
    CEFBS_None, // EVADDSSIAAW = 768
    CEFBS_None, // EVADDUMIAAW = 769
    CEFBS_None, // EVADDUSIAAW = 770
    CEFBS_None, // EVADDW = 771
    CEFBS_None, // EVAND = 772
    CEFBS_None, // EVANDC = 773
    CEFBS_None, // EVCMPEQ = 774
    CEFBS_None, // EVCMPGTS = 775
    CEFBS_None, // EVCMPGTU = 776
    CEFBS_None, // EVCMPLTS = 777
    CEFBS_None, // EVCMPLTU = 778
    CEFBS_None, // EVCNTLSW = 779
    CEFBS_None, // EVCNTLZW = 780
    CEFBS_None, // EVDIVWS = 781
    CEFBS_None, // EVDIVWU = 782
    CEFBS_None, // EVEQV = 783
    CEFBS_None, // EVEXTSB = 784
    CEFBS_None, // EVEXTSH = 785
    CEFBS_None, // EVFSABS = 786
    CEFBS_None, // EVFSADD = 787
    CEFBS_None, // EVFSCFSF = 788
    CEFBS_None, // EVFSCFSI = 789
    CEFBS_None, // EVFSCFUF = 790
    CEFBS_None, // EVFSCFUI = 791
    CEFBS_None, // EVFSCMPEQ = 792
    CEFBS_None, // EVFSCMPGT = 793
    CEFBS_None, // EVFSCMPLT = 794
    CEFBS_None, // EVFSCTSF = 795
    CEFBS_None, // EVFSCTSI = 796
    CEFBS_None, // EVFSCTSIZ = 797
    CEFBS_None, // EVFSCTUF = 798
    CEFBS_None, // EVFSCTUI = 799
    CEFBS_None, // EVFSCTUIZ = 800
    CEFBS_None, // EVFSDIV = 801
    CEFBS_None, // EVFSMUL = 802
    CEFBS_None, // EVFSNABS = 803
    CEFBS_None, // EVFSNEG = 804
    CEFBS_None, // EVFSSUB = 805
    CEFBS_None, // EVFSTSTEQ = 806
    CEFBS_None, // EVFSTSTGT = 807
    CEFBS_None, // EVFSTSTLT = 808
    CEFBS_None, // EVLDD = 809
    CEFBS_None, // EVLDDX = 810
    CEFBS_None, // EVLDH = 811
    CEFBS_None, // EVLDHX = 812
    CEFBS_None, // EVLDW = 813
    CEFBS_None, // EVLDWX = 814
    CEFBS_None, // EVLHHESPLAT = 815
    CEFBS_None, // EVLHHESPLATX = 816
    CEFBS_None, // EVLHHOSSPLAT = 817
    CEFBS_None, // EVLHHOSSPLATX = 818
    CEFBS_None, // EVLHHOUSPLAT = 819
    CEFBS_None, // EVLHHOUSPLATX = 820
    CEFBS_None, // EVLWHE = 821
    CEFBS_None, // EVLWHEX = 822
    CEFBS_None, // EVLWHOS = 823
    CEFBS_None, // EVLWHOSX = 824
    CEFBS_None, // EVLWHOU = 825
    CEFBS_None, // EVLWHOUX = 826
    CEFBS_None, // EVLWHSPLAT = 827
    CEFBS_None, // EVLWHSPLATX = 828
    CEFBS_None, // EVLWWSPLAT = 829
    CEFBS_None, // EVLWWSPLATX = 830
    CEFBS_None, // EVMERGEHI = 831
    CEFBS_None, // EVMERGEHILO = 832
    CEFBS_None, // EVMERGELO = 833
    CEFBS_None, // EVMERGELOHI = 834
    CEFBS_None, // EVMHEGSMFAA = 835
    CEFBS_None, // EVMHEGSMFAN = 836
    CEFBS_None, // EVMHEGSMIAA = 837
    CEFBS_None, // EVMHEGSMIAN = 838
    CEFBS_None, // EVMHEGUMIAA = 839
    CEFBS_None, // EVMHEGUMIAN = 840
    CEFBS_None, // EVMHESMF = 841
    CEFBS_None, // EVMHESMFA = 842
    CEFBS_None, // EVMHESMFAAW = 843
    CEFBS_None, // EVMHESMFANW = 844
    CEFBS_None, // EVMHESMI = 845
    CEFBS_None, // EVMHESMIA = 846
    CEFBS_None, // EVMHESMIAAW = 847
    CEFBS_None, // EVMHESMIANW = 848
    CEFBS_None, // EVMHESSF = 849
    CEFBS_None, // EVMHESSFA = 850
    CEFBS_None, // EVMHESSFAAW = 851
    CEFBS_None, // EVMHESSFANW = 852
    CEFBS_None, // EVMHESSIAAW = 853
    CEFBS_None, // EVMHESSIANW = 854
    CEFBS_None, // EVMHEUMI = 855
    CEFBS_None, // EVMHEUMIA = 856
    CEFBS_None, // EVMHEUMIAAW = 857
    CEFBS_None, // EVMHEUMIANW = 858
    CEFBS_None, // EVMHEUSIAAW = 859
    CEFBS_None, // EVMHEUSIANW = 860
    CEFBS_None, // EVMHOGSMFAA = 861
    CEFBS_None, // EVMHOGSMFAN = 862
    CEFBS_None, // EVMHOGSMIAA = 863
    CEFBS_None, // EVMHOGSMIAN = 864
    CEFBS_None, // EVMHOGUMIAA = 865
    CEFBS_None, // EVMHOGUMIAN = 866
    CEFBS_None, // EVMHOSMF = 867
    CEFBS_None, // EVMHOSMFA = 868
    CEFBS_None, // EVMHOSMFAAW = 869
    CEFBS_None, // EVMHOSMFANW = 870
    CEFBS_None, // EVMHOSMI = 871
    CEFBS_None, // EVMHOSMIA = 872
    CEFBS_None, // EVMHOSMIAAW = 873
    CEFBS_None, // EVMHOSMIANW = 874
    CEFBS_None, // EVMHOSSF = 875
    CEFBS_None, // EVMHOSSFA = 876
    CEFBS_None, // EVMHOSSFAAW = 877
    CEFBS_None, // EVMHOSSFANW = 878
    CEFBS_None, // EVMHOSSIAAW = 879
    CEFBS_None, // EVMHOSSIANW = 880
    CEFBS_None, // EVMHOUMI = 881
    CEFBS_None, // EVMHOUMIA = 882
    CEFBS_None, // EVMHOUMIAAW = 883
    CEFBS_None, // EVMHOUMIANW = 884
    CEFBS_None, // EVMHOUSIAAW = 885
    CEFBS_None, // EVMHOUSIANW = 886
    CEFBS_None, // EVMRA = 887
    CEFBS_None, // EVMWHSMF = 888
    CEFBS_None, // EVMWHSMFA = 889
    CEFBS_None, // EVMWHSMI = 890
    CEFBS_None, // EVMWHSMIA = 891
    CEFBS_None, // EVMWHSSF = 892
    CEFBS_None, // EVMWHSSFA = 893
    CEFBS_None, // EVMWHUMI = 894
    CEFBS_None, // EVMWHUMIA = 895
    CEFBS_None, // EVMWLSMIAAW = 896
    CEFBS_None, // EVMWLSMIANW = 897
    CEFBS_None, // EVMWLSSIAAW = 898
    CEFBS_None, // EVMWLSSIANW = 899
    CEFBS_None, // EVMWLUMI = 900
    CEFBS_None, // EVMWLUMIA = 901
    CEFBS_None, // EVMWLUMIAAW = 902
    CEFBS_None, // EVMWLUMIANW = 903
    CEFBS_None, // EVMWLUSIAAW = 904
    CEFBS_None, // EVMWLUSIANW = 905
    CEFBS_None, // EVMWSMF = 906
    CEFBS_None, // EVMWSMFA = 907
    CEFBS_None, // EVMWSMFAA = 908
    CEFBS_None, // EVMWSMFAN = 909
    CEFBS_None, // EVMWSMI = 910
    CEFBS_None, // EVMWSMIA = 911
    CEFBS_None, // EVMWSMIAA = 912
    CEFBS_None, // EVMWSMIAN = 913
    CEFBS_None, // EVMWSSF = 914
    CEFBS_None, // EVMWSSFA = 915
    CEFBS_None, // EVMWSSFAA = 916
    CEFBS_None, // EVMWSSFAN = 917
    CEFBS_None, // EVMWUMI = 918
    CEFBS_None, // EVMWUMIA = 919
    CEFBS_None, // EVMWUMIAA = 920
    CEFBS_None, // EVMWUMIAN = 921
    CEFBS_None, // EVNAND = 922
    CEFBS_None, // EVNEG = 923
    CEFBS_None, // EVNOR = 924
    CEFBS_None, // EVOR = 925
    CEFBS_None, // EVORC = 926
    CEFBS_None, // EVRLW = 927
    CEFBS_None, // EVRLWI = 928
    CEFBS_None, // EVRNDW = 929
    CEFBS_None, // EVSEL = 930
    CEFBS_None, // EVSLW = 931
    CEFBS_None, // EVSLWI = 932
    CEFBS_None, // EVSPLATFI = 933
    CEFBS_None, // EVSPLATI = 934
    CEFBS_None, // EVSRWIS = 935
    CEFBS_None, // EVSRWIU = 936
    CEFBS_None, // EVSRWS = 937
    CEFBS_None, // EVSRWU = 938
    CEFBS_None, // EVSTDD = 939
    CEFBS_None, // EVSTDDX = 940
    CEFBS_None, // EVSTDH = 941
    CEFBS_None, // EVSTDHX = 942
    CEFBS_None, // EVSTDW = 943
    CEFBS_None, // EVSTDWX = 944
    CEFBS_None, // EVSTWHE = 945
    CEFBS_None, // EVSTWHEX = 946
    CEFBS_None, // EVSTWHO = 947
    CEFBS_None, // EVSTWHOX = 948
    CEFBS_None, // EVSTWWE = 949
    CEFBS_None, // EVSTWWEX = 950
    CEFBS_None, // EVSTWWO = 951
    CEFBS_None, // EVSTWWOX = 952
    CEFBS_None, // EVSUBFSMIAAW = 953
    CEFBS_None, // EVSUBFSSIAAW = 954
    CEFBS_None, // EVSUBFUMIAAW = 955
    CEFBS_None, // EVSUBFUSIAAW = 956
    CEFBS_None, // EVSUBFW = 957
    CEFBS_None, // EVSUBIFW = 958
    CEFBS_None, // EVXOR = 959
    CEFBS_None, // EXTSB = 960
    CEFBS_None, // EXTSB8 = 961
    CEFBS_None, // EXTSB8_32_64 = 962
    CEFBS_None, // EXTSB8_rec = 963
    CEFBS_None, // EXTSB_rec = 964
    CEFBS_None, // EXTSH = 965
    CEFBS_None, // EXTSH8 = 966
    CEFBS_None, // EXTSH8_32_64 = 967
    CEFBS_None, // EXTSH8_rec = 968
    CEFBS_None, // EXTSH_rec = 969
    CEFBS_None, // EXTSW = 970
    CEFBS_None, // EXTSWSLI = 971
    CEFBS_None, // EXTSWSLI_32_64 = 972
    CEFBS_None, // EXTSWSLI_32_64_rec = 973
    CEFBS_None, // EXTSWSLI_rec = 974
    CEFBS_None, // EXTSW_32 = 975
    CEFBS_None, // EXTSW_32_64 = 976
    CEFBS_None, // EXTSW_32_64_rec = 977
    CEFBS_None, // EXTSW_rec = 978
    CEFBS_None, // EnforceIEIO = 979
    CEFBS_None, // FABSD = 980
    CEFBS_None, // FABSD_rec = 981
    CEFBS_None, // FABSS = 982
    CEFBS_None, // FABSS_rec = 983
    CEFBS_None, // FADD = 984
    CEFBS_None, // FADDS = 985
    CEFBS_None, // FADDS_rec = 986
    CEFBS_None, // FADD_rec = 987
    CEFBS_None, // FADDrtz = 988
    CEFBS_None, // FCFID = 989
    CEFBS_None, // FCFIDS = 990
    CEFBS_None, // FCFIDS_rec = 991
    CEFBS_None, // FCFIDU = 992
    CEFBS_None, // FCFIDUS = 993
    CEFBS_None, // FCFIDUS_rec = 994
    CEFBS_None, // FCFIDU_rec = 995
    CEFBS_None, // FCFID_rec = 996
    CEFBS_None, // FCMPOD = 997
    CEFBS_None, // FCMPOS = 998
    CEFBS_None, // FCMPUD = 999
    CEFBS_None, // FCMPUS = 1000
    CEFBS_None, // FCPSGND = 1001
    CEFBS_None, // FCPSGND_rec = 1002
    CEFBS_None, // FCPSGNS = 1003
    CEFBS_None, // FCPSGNS_rec = 1004
    CEFBS_None, // FCTID = 1005
    CEFBS_None, // FCTIDU = 1006
    CEFBS_None, // FCTIDUZ = 1007
    CEFBS_None, // FCTIDUZ_rec = 1008
    CEFBS_None, // FCTIDU_rec = 1009
    CEFBS_None, // FCTIDZ = 1010
    CEFBS_None, // FCTIDZ_rec = 1011
    CEFBS_None, // FCTID_rec = 1012
    CEFBS_None, // FCTIW = 1013
    CEFBS_None, // FCTIWU = 1014
    CEFBS_None, // FCTIWUZ = 1015
    CEFBS_None, // FCTIWUZ_rec = 1016
    CEFBS_None, // FCTIWU_rec = 1017
    CEFBS_None, // FCTIWZ = 1018
    CEFBS_None, // FCTIWZ_rec = 1019
    CEFBS_None, // FCTIW_rec = 1020
    CEFBS_None, // FDIV = 1021
    CEFBS_None, // FDIVS = 1022
    CEFBS_None, // FDIVS_rec = 1023
    CEFBS_None, // FDIV_rec = 1024
    CEFBS_None, // FMADD = 1025
    CEFBS_None, // FMADDS = 1026
    CEFBS_None, // FMADDS_rec = 1027
    CEFBS_None, // FMADD_rec = 1028
    CEFBS_None, // FMR = 1029
    CEFBS_None, // FMR_rec = 1030
    CEFBS_None, // FMSUB = 1031
    CEFBS_None, // FMSUBS = 1032
    CEFBS_None, // FMSUBS_rec = 1033
    CEFBS_None, // FMSUB_rec = 1034
    CEFBS_None, // FMUL = 1035
    CEFBS_None, // FMULS = 1036
    CEFBS_None, // FMULS_rec = 1037
    CEFBS_None, // FMUL_rec = 1038
    CEFBS_None, // FNABSD = 1039
    CEFBS_None, // FNABSD_rec = 1040
    CEFBS_None, // FNABSS = 1041
    CEFBS_None, // FNABSS_rec = 1042
    CEFBS_None, // FNEGD = 1043
    CEFBS_None, // FNEGD_rec = 1044
    CEFBS_None, // FNEGS = 1045
    CEFBS_None, // FNEGS_rec = 1046
    CEFBS_None, // FNMADD = 1047
    CEFBS_None, // FNMADDS = 1048
    CEFBS_None, // FNMADDS_rec = 1049
    CEFBS_None, // FNMADD_rec = 1050
    CEFBS_None, // FNMSUB = 1051
    CEFBS_None, // FNMSUBS = 1052
    CEFBS_None, // FNMSUBS_rec = 1053
    CEFBS_None, // FNMSUB_rec = 1054
    CEFBS_None, // FRE = 1055
    CEFBS_None, // FRES = 1056
    CEFBS_None, // FRES_rec = 1057
    CEFBS_None, // FRE_rec = 1058
    CEFBS_None, // FRIMD = 1059
    CEFBS_None, // FRIMD_rec = 1060
    CEFBS_None, // FRIMS = 1061
    CEFBS_None, // FRIMS_rec = 1062
    CEFBS_None, // FRIND = 1063
    CEFBS_None, // FRIND_rec = 1064
    CEFBS_None, // FRINS = 1065
    CEFBS_None, // FRINS_rec = 1066
    CEFBS_None, // FRIPD = 1067
    CEFBS_None, // FRIPD_rec = 1068
    CEFBS_None, // FRIPS = 1069
    CEFBS_None, // FRIPS_rec = 1070
    CEFBS_None, // FRIZD = 1071
    CEFBS_None, // FRIZD_rec = 1072
    CEFBS_None, // FRIZS = 1073
    CEFBS_None, // FRIZS_rec = 1074
    CEFBS_None, // FRSP = 1075
    CEFBS_None, // FRSP_rec = 1076
    CEFBS_None, // FRSQRTE = 1077
    CEFBS_None, // FRSQRTES = 1078
    CEFBS_None, // FRSQRTES_rec = 1079
    CEFBS_None, // FRSQRTE_rec = 1080
    CEFBS_None, // FSELD = 1081
    CEFBS_None, // FSELD_rec = 1082
    CEFBS_None, // FSELS = 1083
    CEFBS_None, // FSELS_rec = 1084
    CEFBS_None, // FSQRT = 1085
    CEFBS_None, // FSQRTS = 1086
    CEFBS_None, // FSQRTS_rec = 1087
    CEFBS_None, // FSQRT_rec = 1088
    CEFBS_None, // FSUB = 1089
    CEFBS_None, // FSUBS = 1090
    CEFBS_None, // FSUBS_rec = 1091
    CEFBS_None, // FSUB_rec = 1092
    CEFBS_None, // FTDIV = 1093
    CEFBS_None, // FTSQRT = 1094
    CEFBS_None, // GETtlsADDR = 1095
    CEFBS_None, // GETtlsADDR32 = 1096
    CEFBS_None, // GETtlsADDR32AIX = 1097
    CEFBS_None, // GETtlsADDR64AIX = 1098
    CEFBS_None, // GETtlsADDRPCREL = 1099
    CEFBS_None, // GETtlsldADDR = 1100
    CEFBS_None, // GETtlsldADDR32 = 1101
    CEFBS_None, // GETtlsldADDRPCREL = 1102
    CEFBS_None, // HASHCHK = 1103
    CEFBS_None, // HASHCHK8 = 1104
    CEFBS_None, // HASHCHKP = 1105
    CEFBS_None, // HASHCHKP8 = 1106
    CEFBS_None, // HASHST = 1107
    CEFBS_None, // HASHST8 = 1108
    CEFBS_None, // HASHSTP = 1109
    CEFBS_None, // HASHSTP8 = 1110
    CEFBS_None, // HRFID = 1111
    CEFBS_None, // ICBI = 1112
    CEFBS_None, // ICBIEP = 1113
    CEFBS_None, // ICBLC = 1114
    CEFBS_None, // ICBLQ = 1115
    CEFBS_None, // ICBT = 1116
    CEFBS_None, // ICBTLS = 1117
    CEFBS_None, // ICCCI = 1118
    CEFBS_None, // ISEL = 1119
    CEFBS_None, // ISEL8 = 1120
    CEFBS_None, // ISYNC = 1121
    CEFBS_None, // LA = 1122
    CEFBS_None, // LA8 = 1123
    CEFBS_None, // LBARX = 1124
    CEFBS_None, // LBARXL = 1125
    CEFBS_None, // LBEPX = 1126
    CEFBS_None, // LBZ = 1127
    CEFBS_None, // LBZ8 = 1128
    CEFBS_None, // LBZCIX = 1129
    CEFBS_None, // LBZU = 1130
    CEFBS_None, // LBZU8 = 1131
    CEFBS_None, // LBZUX = 1132
    CEFBS_None, // LBZUX8 = 1133
    CEFBS_None, // LBZX = 1134
    CEFBS_None, // LBZX8 = 1135
    CEFBS_None, // LBZXTLS = 1136
    CEFBS_None, // LBZXTLS_ = 1137
    CEFBS_None, // LBZXTLS_32 = 1138
    CEFBS_None, // LD = 1139
    CEFBS_None, // LDARX = 1140
    CEFBS_None, // LDARXL = 1141
    CEFBS_None, // LDAT = 1142
    CEFBS_None, // LDBRX = 1143
    CEFBS_None, // LDCIX = 1144
    CEFBS_None, // LDU = 1145
    CEFBS_None, // LDUX = 1146
    CEFBS_None, // LDX = 1147
    CEFBS_None, // LDXTLS = 1148
    CEFBS_None, // LDXTLS_ = 1149
    CEFBS_None, // LDgotTprelL = 1150
    CEFBS_None, // LDgotTprelL32 = 1151
    CEFBS_None, // LDtoc = 1152
    CEFBS_None, // LDtocBA = 1153
    CEFBS_None, // LDtocCPT = 1154
    CEFBS_None, // LDtocJTI = 1155
    CEFBS_None, // LDtocL = 1156
    CEFBS_None, // LFD = 1157
    CEFBS_None, // LFDEPX = 1158
    CEFBS_None, // LFDU = 1159
    CEFBS_None, // LFDUX = 1160
    CEFBS_None, // LFDX = 1161
    CEFBS_None, // LFIWAX = 1162
    CEFBS_None, // LFIWZX = 1163
    CEFBS_None, // LFS = 1164
    CEFBS_None, // LFSU = 1165
    CEFBS_None, // LFSUX = 1166
    CEFBS_None, // LFSX = 1167
    CEFBS_None, // LHA = 1168
    CEFBS_None, // LHA8 = 1169
    CEFBS_None, // LHARX = 1170
    CEFBS_None, // LHARXL = 1171
    CEFBS_None, // LHAU = 1172
    CEFBS_None, // LHAU8 = 1173
    CEFBS_None, // LHAUX = 1174
    CEFBS_None, // LHAUX8 = 1175
    CEFBS_None, // LHAX = 1176
    CEFBS_None, // LHAX8 = 1177
    CEFBS_None, // LHBRX = 1178
    CEFBS_None, // LHBRX8 = 1179
    CEFBS_None, // LHEPX = 1180
    CEFBS_None, // LHZ = 1181
    CEFBS_None, // LHZ8 = 1182
    CEFBS_None, // LHZCIX = 1183
    CEFBS_None, // LHZU = 1184
    CEFBS_None, // LHZU8 = 1185
    CEFBS_None, // LHZUX = 1186
    CEFBS_None, // LHZUX8 = 1187
    CEFBS_None, // LHZX = 1188
    CEFBS_None, // LHZX8 = 1189
    CEFBS_None, // LHZXTLS = 1190
    CEFBS_None, // LHZXTLS_ = 1191
    CEFBS_None, // LHZXTLS_32 = 1192
    CEFBS_None, // LI = 1193
    CEFBS_None, // LI8 = 1194
    CEFBS_None, // LIS = 1195
    CEFBS_None, // LIS8 = 1196
    CEFBS_None, // LMW = 1197
    CEFBS_None, // LQ = 1198
    CEFBS_None, // LQARX = 1199
    CEFBS_None, // LQARXL = 1200
    CEFBS_None, // LQX_PSEUDO = 1201
    CEFBS_None, // LSWI = 1202
    CEFBS_None, // LVEBX = 1203
    CEFBS_None, // LVEHX = 1204
    CEFBS_None, // LVEWX = 1205
    CEFBS_None, // LVSL = 1206
    CEFBS_None, // LVSR = 1207
    CEFBS_None, // LVX = 1208
    CEFBS_None, // LVXL = 1209
    CEFBS_None, // LWA = 1210
    CEFBS_None, // LWARX = 1211
    CEFBS_None, // LWARXL = 1212
    CEFBS_None, // LWAT = 1213
    CEFBS_None, // LWAUX = 1214
    CEFBS_None, // LWAX = 1215
    CEFBS_None, // LWAX_32 = 1216
    CEFBS_None, // LWA_32 = 1217
    CEFBS_None, // LWBRX = 1218
    CEFBS_None, // LWBRX8 = 1219
    CEFBS_None, // LWEPX = 1220
    CEFBS_None, // LWZ = 1221
    CEFBS_None, // LWZ8 = 1222
    CEFBS_None, // LWZCIX = 1223
    CEFBS_None, // LWZU = 1224
    CEFBS_None, // LWZU8 = 1225
    CEFBS_None, // LWZUX = 1226
    CEFBS_None, // LWZUX8 = 1227
    CEFBS_None, // LWZX = 1228
    CEFBS_None, // LWZX8 = 1229
    CEFBS_None, // LWZXTLS = 1230
    CEFBS_None, // LWZXTLS_ = 1231
    CEFBS_None, // LWZXTLS_32 = 1232
    CEFBS_None, // LWZtoc = 1233
    CEFBS_None, // LWZtocL = 1234
    CEFBS_None, // LXSD = 1235
    CEFBS_None, // LXSDX = 1236
    CEFBS_None, // LXSIBZX = 1237
    CEFBS_None, // LXSIHZX = 1238
    CEFBS_None, // LXSIWAX = 1239
    CEFBS_None, // LXSIWZX = 1240
    CEFBS_None, // LXSSP = 1241
    CEFBS_None, // LXSSPX = 1242
    CEFBS_None, // LXV = 1243
    CEFBS_None, // LXVB16X = 1244
    CEFBS_None, // LXVD2X = 1245
    CEFBS_None, // LXVDSX = 1246
    CEFBS_None, // LXVH8X = 1247
    CEFBS_None, // LXVKQ = 1248
    CEFBS_None, // LXVL = 1249
    CEFBS_None, // LXVLL = 1250
    CEFBS_None, // LXVP = 1251
    CEFBS_None, // LXVPX = 1252
    CEFBS_None, // LXVRBX = 1253
    CEFBS_None, // LXVRDX = 1254
    CEFBS_None, // LXVRHX = 1255
    CEFBS_None, // LXVRWX = 1256
    CEFBS_None, // LXVW4X = 1257
    CEFBS_None, // LXVWSX = 1258
    CEFBS_None, // LXVX = 1259
    CEFBS_None, // MADDHD = 1260
    CEFBS_None, // MADDHDU = 1261
    CEFBS_None, // MADDLD = 1262
    CEFBS_None, // MADDLD8 = 1263
    CEFBS_None, // MBAR = 1264
    CEFBS_None, // MCRF = 1265
    CEFBS_None, // MCRFS = 1266
    CEFBS_None, // MCRXRX = 1267
    CEFBS_None, // MFBHRBE = 1268
    CEFBS_None, // MFCR = 1269
    CEFBS_None, // MFCR8 = 1270
    CEFBS_None, // MFCTR = 1271
    CEFBS_None, // MFCTR8 = 1272
    CEFBS_None, // MFDCR = 1273
    CEFBS_None, // MFFS = 1274
    CEFBS_None, // MFFSCDRN = 1275
    CEFBS_None, // MFFSCDRNI = 1276
    CEFBS_None, // MFFSCE = 1277
    CEFBS_None, // MFFSCRN = 1278
    CEFBS_None, // MFFSCRNI = 1279
    CEFBS_None, // MFFSL = 1280
    CEFBS_None, // MFFS_rec = 1281
    CEFBS_None, // MFLR = 1282
    CEFBS_None, // MFLR8 = 1283
    CEFBS_None, // MFMSR = 1284
    CEFBS_None, // MFOCRF = 1285
    CEFBS_None, // MFOCRF8 = 1286
    CEFBS_None, // MFPMR = 1287
    CEFBS_None, // MFSPR = 1288
    CEFBS_None, // MFSPR8 = 1289
    CEFBS_None, // MFSR = 1290
    CEFBS_None, // MFSRIN = 1291
    CEFBS_None, // MFTB = 1292
    CEFBS_None, // MFTB8 = 1293
    CEFBS_None, // MFUDSCR = 1294
    CEFBS_None, // MFVRD = 1295
    CEFBS_None, // MFVRSAVE = 1296
    CEFBS_None, // MFVRSAVEv = 1297
    CEFBS_None, // MFVRWZ = 1298
    CEFBS_None, // MFVSCR = 1299
    CEFBS_None, // MFVSRD = 1300
    CEFBS_None, // MFVSRLD = 1301
    CEFBS_None, // MFVSRWZ = 1302
    CEFBS_None, // MODSD = 1303
    CEFBS_None, // MODSW = 1304
    CEFBS_None, // MODUD = 1305
    CEFBS_None, // MODUW = 1306
    CEFBS_None, // MSGSYNC = 1307
    CEFBS_None, // MSYNC = 1308
    CEFBS_None, // MTCRF = 1309
    CEFBS_None, // MTCRF8 = 1310
    CEFBS_None, // MTCTR = 1311
    CEFBS_None, // MTCTR8 = 1312
    CEFBS_None, // MTCTR8Pseudo = 1313
    CEFBS_None, // MTCTR8loop = 1314
    CEFBS_None, // MTCTRPseudo = 1315
    CEFBS_None, // MTCTRloop = 1316
    CEFBS_None, // MTDCR = 1317
    CEFBS_None, // MTFSB0 = 1318
    CEFBS_None, // MTFSB1 = 1319
    CEFBS_None, // MTFSF = 1320
    CEFBS_None, // MTFSFI = 1321
    CEFBS_None, // MTFSFI_rec = 1322
    CEFBS_None, // MTFSFIb = 1323
    CEFBS_None, // MTFSF_rec = 1324
    CEFBS_None, // MTFSFb = 1325
    CEFBS_None, // MTLR = 1326
    CEFBS_None, // MTLR8 = 1327
    CEFBS_None, // MTMSR = 1328
    CEFBS_None, // MTMSRD = 1329
    CEFBS_None, // MTOCRF = 1330
    CEFBS_None, // MTOCRF8 = 1331
    CEFBS_None, // MTPMR = 1332
    CEFBS_None, // MTSPR = 1333
    CEFBS_None, // MTSPR8 = 1334
    CEFBS_None, // MTSR = 1335
    CEFBS_None, // MTSRIN = 1336
    CEFBS_None, // MTUDSCR = 1337
    CEFBS_None, // MTVRD = 1338
    CEFBS_None, // MTVRSAVE = 1339
    CEFBS_None, // MTVRSAVEv = 1340
    CEFBS_None, // MTVRWA = 1341
    CEFBS_None, // MTVRWZ = 1342
    CEFBS_None, // MTVSCR = 1343
    CEFBS_None, // MTVSRBM = 1344
    CEFBS_None, // MTVSRBMI = 1345
    CEFBS_None, // MTVSRD = 1346
    CEFBS_None, // MTVSRDD = 1347
    CEFBS_None, // MTVSRDM = 1348
    CEFBS_None, // MTVSRHM = 1349
    CEFBS_None, // MTVSRQM = 1350
    CEFBS_None, // MTVSRWA = 1351
    CEFBS_None, // MTVSRWM = 1352
    CEFBS_None, // MTVSRWS = 1353
    CEFBS_None, // MTVSRWZ = 1354
    CEFBS_None, // MULHD = 1355
    CEFBS_None, // MULHDU = 1356
    CEFBS_None, // MULHDU_rec = 1357
    CEFBS_None, // MULHD_rec = 1358
    CEFBS_None, // MULHW = 1359
    CEFBS_None, // MULHWU = 1360
    CEFBS_None, // MULHWU_rec = 1361
    CEFBS_None, // MULHW_rec = 1362
    CEFBS_None, // MULLD = 1363
    CEFBS_None, // MULLDO = 1364
    CEFBS_None, // MULLDO_rec = 1365
    CEFBS_None, // MULLD_rec = 1366
    CEFBS_None, // MULLI = 1367
    CEFBS_None, // MULLI8 = 1368
    CEFBS_None, // MULLW = 1369
    CEFBS_None, // MULLWO = 1370
    CEFBS_None, // MULLWO_rec = 1371
    CEFBS_None, // MULLW_rec = 1372
    CEFBS_None, // MoveGOTtoLR = 1373
    CEFBS_None, // MovePCtoLR = 1374
    CEFBS_None, // MovePCtoLR8 = 1375
    CEFBS_None, // NAND = 1376
    CEFBS_None, // NAND8 = 1377
    CEFBS_None, // NAND8_rec = 1378
    CEFBS_None, // NAND_rec = 1379
    CEFBS_None, // NAP = 1380
    CEFBS_None, // NEG = 1381
    CEFBS_None, // NEG8 = 1382
    CEFBS_None, // NEG8O = 1383
    CEFBS_None, // NEG8O_rec = 1384
    CEFBS_None, // NEG8_rec = 1385
    CEFBS_None, // NEGO = 1386
    CEFBS_None, // NEGO_rec = 1387
    CEFBS_None, // NEG_rec = 1388
    CEFBS_None, // NOP = 1389
    CEFBS_None, // NOP_GT_PWR6 = 1390
    CEFBS_None, // NOP_GT_PWR7 = 1391
    CEFBS_None, // NOR = 1392
    CEFBS_None, // NOR8 = 1393
    CEFBS_None, // NOR8_rec = 1394
    CEFBS_None, // NOR_rec = 1395
    CEFBS_None, // OR = 1396
    CEFBS_None, // OR8 = 1397
    CEFBS_None, // OR8_rec = 1398
    CEFBS_None, // ORC = 1399
    CEFBS_None, // ORC8 = 1400
    CEFBS_None, // ORC8_rec = 1401
    CEFBS_None, // ORC_rec = 1402
    CEFBS_None, // ORI = 1403
    CEFBS_None, // ORI8 = 1404
    CEFBS_None, // ORIS = 1405
    CEFBS_None, // ORIS8 = 1406
    CEFBS_None, // OR_rec = 1407
    CEFBS_None, // PADDI = 1408
    CEFBS_None, // PADDI8 = 1409
    CEFBS_None, // PADDI8pc = 1410
    CEFBS_None, // PADDIdtprel = 1411
    CEFBS_None, // PADDIpc = 1412
    CEFBS_None, // PDEPD = 1413
    CEFBS_None, // PEXTD = 1414
    CEFBS_None, // PLBZ = 1415
    CEFBS_None, // PLBZ8 = 1416
    CEFBS_None, // PLBZ8pc = 1417
    CEFBS_None, // PLBZpc = 1418
    CEFBS_None, // PLD = 1419
    CEFBS_None, // PLDpc = 1420
    CEFBS_None, // PLFD = 1421
    CEFBS_None, // PLFDpc = 1422
    CEFBS_None, // PLFS = 1423
    CEFBS_None, // PLFSpc = 1424
    CEFBS_None, // PLHA = 1425
    CEFBS_None, // PLHA8 = 1426
    CEFBS_None, // PLHA8pc = 1427
    CEFBS_None, // PLHApc = 1428
    CEFBS_None, // PLHZ = 1429
    CEFBS_None, // PLHZ8 = 1430
    CEFBS_None, // PLHZ8pc = 1431
    CEFBS_None, // PLHZpc = 1432
    CEFBS_None, // PLI = 1433
    CEFBS_None, // PLI8 = 1434
    CEFBS_None, // PLWA = 1435
    CEFBS_None, // PLWA8 = 1436
    CEFBS_None, // PLWA8pc = 1437
    CEFBS_None, // PLWApc = 1438
    CEFBS_None, // PLWZ = 1439
    CEFBS_None, // PLWZ8 = 1440
    CEFBS_None, // PLWZ8pc = 1441
    CEFBS_None, // PLWZpc = 1442
    CEFBS_None, // PLXSD = 1443
    CEFBS_None, // PLXSDpc = 1444
    CEFBS_None, // PLXSSP = 1445
    CEFBS_None, // PLXSSPpc = 1446
    CEFBS_None, // PLXV = 1447
    CEFBS_None, // PLXVP = 1448
    CEFBS_None, // PLXVPpc = 1449
    CEFBS_None, // PLXVpc = 1450
    CEFBS_None, // PMXVBF16GER2 = 1451
    CEFBS_None, // PMXVBF16GER2NN = 1452
    CEFBS_None, // PMXVBF16GER2NP = 1453
    CEFBS_None, // PMXVBF16GER2PN = 1454
    CEFBS_None, // PMXVBF16GER2PP = 1455
    CEFBS_None, // PMXVF16GER2 = 1456
    CEFBS_None, // PMXVF16GER2NN = 1457
    CEFBS_None, // PMXVF16GER2NP = 1458
    CEFBS_None, // PMXVF16GER2PN = 1459
    CEFBS_None, // PMXVF16GER2PP = 1460
    CEFBS_None, // PMXVF32GER = 1461
    CEFBS_None, // PMXVF32GERNN = 1462
    CEFBS_None, // PMXVF32GERNP = 1463
    CEFBS_None, // PMXVF32GERPN = 1464
    CEFBS_None, // PMXVF32GERPP = 1465
    CEFBS_None, // PMXVF64GER = 1466
    CEFBS_None, // PMXVF64GERNN = 1467
    CEFBS_None, // PMXVF64GERNP = 1468
    CEFBS_None, // PMXVF64GERPN = 1469
    CEFBS_None, // PMXVF64GERPP = 1470
    CEFBS_None, // PMXVI16GER2 = 1471
    CEFBS_None, // PMXVI16GER2PP = 1472
    CEFBS_None, // PMXVI16GER2S = 1473
    CEFBS_None, // PMXVI16GER2SPP = 1474
    CEFBS_None, // PMXVI4GER8 = 1475
    CEFBS_None, // PMXVI4GER8PP = 1476
    CEFBS_None, // PMXVI8GER4 = 1477
    CEFBS_None, // PMXVI8GER4PP = 1478
    CEFBS_None, // PMXVI8GER4SPP = 1479
    CEFBS_None, // POPCNTB = 1480
    CEFBS_None, // POPCNTB8 = 1481
    CEFBS_None, // POPCNTD = 1482
    CEFBS_None, // POPCNTW = 1483
    CEFBS_None, // PPC32GOT = 1484
    CEFBS_None, // PPC32PICGOT = 1485
    CEFBS_None, // PREPARE_PROBED_ALLOCA_32 = 1486
    CEFBS_None, // PREPARE_PROBED_ALLOCA_64 = 1487
    CEFBS_None, // PREPARE_PROBED_ALLOCA_NEGSIZE_SAME_REG_32 = 1488
    CEFBS_None, // PREPARE_PROBED_ALLOCA_NEGSIZE_SAME_REG_64 = 1489
    CEFBS_None, // PROBED_ALLOCA_32 = 1490
    CEFBS_None, // PROBED_ALLOCA_64 = 1491
    CEFBS_None, // PROBED_STACKALLOC_32 = 1492
    CEFBS_None, // PROBED_STACKALLOC_64 = 1493
    CEFBS_None, // PSTB = 1494
    CEFBS_None, // PSTB8 = 1495
    CEFBS_None, // PSTB8pc = 1496
    CEFBS_None, // PSTBpc = 1497
    CEFBS_None, // PSTD = 1498
    CEFBS_None, // PSTDpc = 1499
    CEFBS_None, // PSTFD = 1500
    CEFBS_None, // PSTFDpc = 1501
    CEFBS_None, // PSTFS = 1502
    CEFBS_None, // PSTFSpc = 1503
    CEFBS_None, // PSTH = 1504
    CEFBS_None, // PSTH8 = 1505
    CEFBS_None, // PSTH8pc = 1506
    CEFBS_None, // PSTHpc = 1507
    CEFBS_None, // PSTW = 1508
    CEFBS_None, // PSTW8 = 1509
    CEFBS_None, // PSTW8pc = 1510
    CEFBS_None, // PSTWpc = 1511
    CEFBS_None, // PSTXSD = 1512
    CEFBS_None, // PSTXSDpc = 1513
    CEFBS_None, // PSTXSSP = 1514
    CEFBS_None, // PSTXSSPpc = 1515
    CEFBS_None, // PSTXV = 1516
    CEFBS_None, // PSTXVP = 1517
    CEFBS_None, // PSTXVPpc = 1518
    CEFBS_None, // PSTXVpc = 1519
    CEFBS_None, // PseudoEIEIO = 1520
    CEFBS_None, // RESTORE_ACC = 1521
    CEFBS_None, // RESTORE_CR = 1522
    CEFBS_None, // RESTORE_CRBIT = 1523
    CEFBS_None, // RESTORE_QUADWORD = 1524
    CEFBS_None, // RESTORE_UACC = 1525
    CEFBS_None, // RFCI = 1526
    CEFBS_None, // RFDI = 1527
    CEFBS_None, // RFEBB = 1528
    CEFBS_None, // RFI = 1529
    CEFBS_None, // RFID = 1530
    CEFBS_None, // RFMCI = 1531
    CEFBS_None, // RLDCL = 1532
    CEFBS_None, // RLDCL_rec = 1533
    CEFBS_None, // RLDCR = 1534
    CEFBS_None, // RLDCR_rec = 1535
    CEFBS_None, // RLDIC = 1536
    CEFBS_None, // RLDICL = 1537
    CEFBS_None, // RLDICL_32 = 1538
    CEFBS_None, // RLDICL_32_64 = 1539
    CEFBS_None, // RLDICL_32_rec = 1540
    CEFBS_None, // RLDICL_rec = 1541
    CEFBS_None, // RLDICR = 1542
    CEFBS_None, // RLDICR_32 = 1543
    CEFBS_None, // RLDICR_rec = 1544
    CEFBS_None, // RLDIC_rec = 1545
    CEFBS_None, // RLDIMI = 1546
    CEFBS_None, // RLDIMI_rec = 1547
    CEFBS_None, // RLWIMI = 1548
    CEFBS_None, // RLWIMI8 = 1549
    CEFBS_None, // RLWIMI8_rec = 1550
    CEFBS_None, // RLWIMI_rec = 1551
    CEFBS_None, // RLWINM = 1552
    CEFBS_None, // RLWINM8 = 1553
    CEFBS_None, // RLWINM8_rec = 1554
    CEFBS_None, // RLWINM_rec = 1555
    CEFBS_None, // RLWNM = 1556
    CEFBS_None, // RLWNM8 = 1557
    CEFBS_None, // RLWNM8_rec = 1558
    CEFBS_None, // RLWNM_rec = 1559
    CEFBS_None, // ReadTB = 1560
    CEFBS_None, // SC = 1561
    CEFBS_None, // SELECT_CC_F16 = 1562
    CEFBS_None, // SELECT_CC_F4 = 1563
    CEFBS_None, // SELECT_CC_F8 = 1564
    CEFBS_None, // SELECT_CC_I4 = 1565
    CEFBS_None, // SELECT_CC_I8 = 1566
    CEFBS_None, // SELECT_CC_SPE = 1567
    CEFBS_None, // SELECT_CC_SPE4 = 1568
    CEFBS_None, // SELECT_CC_VRRC = 1569
    CEFBS_None, // SELECT_CC_VSFRC = 1570
    CEFBS_None, // SELECT_CC_VSRC = 1571
    CEFBS_None, // SELECT_CC_VSSRC = 1572
    CEFBS_None, // SELECT_F16 = 1573
    CEFBS_None, // SELECT_F4 = 1574
    CEFBS_None, // SELECT_F8 = 1575
    CEFBS_None, // SELECT_I4 = 1576
    CEFBS_None, // SELECT_I8 = 1577
    CEFBS_None, // SELECT_SPE = 1578
    CEFBS_None, // SELECT_SPE4 = 1579
    CEFBS_None, // SELECT_VRRC = 1580
    CEFBS_None, // SELECT_VSFRC = 1581
    CEFBS_None, // SELECT_VSRC = 1582
    CEFBS_None, // SELECT_VSSRC = 1583
    CEFBS_None, // SETB = 1584
    CEFBS_None, // SETB8 = 1585
    CEFBS_None, // SETBC = 1586
    CEFBS_None, // SETBC8 = 1587
    CEFBS_None, // SETBCR = 1588
    CEFBS_None, // SETBCR8 = 1589
    CEFBS_None, // SETFLM = 1590
    CEFBS_None, // SETNBC = 1591
    CEFBS_None, // SETNBC8 = 1592
    CEFBS_None, // SETNBCR = 1593
    CEFBS_None, // SETNBCR8 = 1594
    CEFBS_None, // SETRND = 1595
    CEFBS_None, // SETRNDi = 1596
    CEFBS_None, // SLBFEE_rec = 1597
    CEFBS_None, // SLBIA = 1598
    CEFBS_None, // SLBIE = 1599
    CEFBS_None, // SLBIEG = 1600
    CEFBS_None, // SLBMFEE = 1601
    CEFBS_None, // SLBMFEV = 1602
    CEFBS_None, // SLBMTE = 1603
    CEFBS_None, // SLBSYNC = 1604
    CEFBS_None, // SLD = 1605
    CEFBS_None, // SLD_rec = 1606
    CEFBS_None, // SLW = 1607
    CEFBS_None, // SLW8 = 1608
    CEFBS_None, // SLW8_rec = 1609
    CEFBS_None, // SLW_rec = 1610
    CEFBS_None, // SPELWZ = 1611
    CEFBS_None, // SPELWZX = 1612
    CEFBS_None, // SPESTW = 1613
    CEFBS_None, // SPESTWX = 1614
    CEFBS_None, // SPILL_ACC = 1615
    CEFBS_None, // SPILL_CR = 1616
    CEFBS_None, // SPILL_CRBIT = 1617
    CEFBS_None, // SPILL_QUADWORD = 1618
    CEFBS_None, // SPILL_UACC = 1619
    CEFBS_None, // SPLIT_QUADWORD = 1620
    CEFBS_None, // SRAD = 1621
    CEFBS_None, // SRADI = 1622
    CEFBS_None, // SRADI_32 = 1623
    CEFBS_None, // SRADI_rec = 1624
    CEFBS_None, // SRAD_rec = 1625
    CEFBS_None, // SRAW = 1626
    CEFBS_None, // SRAWI = 1627
    CEFBS_None, // SRAWI_rec = 1628
    CEFBS_None, // SRAW_rec = 1629
    CEFBS_None, // SRD = 1630
    CEFBS_None, // SRD_rec = 1631
    CEFBS_None, // SRW = 1632
    CEFBS_None, // SRW8 = 1633
    CEFBS_None, // SRW8_rec = 1634
    CEFBS_None, // SRW_rec = 1635
    CEFBS_None, // STB = 1636
    CEFBS_None, // STB8 = 1637
    CEFBS_None, // STBCIX = 1638
    CEFBS_None, // STBCX = 1639
    CEFBS_None, // STBEPX = 1640
    CEFBS_None, // STBU = 1641
    CEFBS_None, // STBU8 = 1642
    CEFBS_None, // STBUX = 1643
    CEFBS_None, // STBUX8 = 1644
    CEFBS_None, // STBX = 1645
    CEFBS_None, // STBX8 = 1646
    CEFBS_None, // STBXTLS = 1647
    CEFBS_None, // STBXTLS_ = 1648
    CEFBS_None, // STBXTLS_32 = 1649
    CEFBS_None, // STD = 1650
    CEFBS_None, // STDAT = 1651
    CEFBS_None, // STDBRX = 1652
    CEFBS_None, // STDCIX = 1653
    CEFBS_None, // STDCX = 1654
    CEFBS_None, // STDU = 1655
    CEFBS_None, // STDUX = 1656
    CEFBS_None, // STDX = 1657
    CEFBS_None, // STDXTLS = 1658
    CEFBS_None, // STDXTLS_ = 1659
    CEFBS_None, // STFD = 1660
    CEFBS_None, // STFDEPX = 1661
    CEFBS_None, // STFDU = 1662
    CEFBS_None, // STFDUX = 1663
    CEFBS_None, // STFDX = 1664
    CEFBS_None, // STFIWX = 1665
    CEFBS_None, // STFS = 1666
    CEFBS_None, // STFSU = 1667
    CEFBS_None, // STFSUX = 1668
    CEFBS_None, // STFSX = 1669
    CEFBS_None, // STH = 1670
    CEFBS_None, // STH8 = 1671
    CEFBS_None, // STHBRX = 1672
    CEFBS_None, // STHCIX = 1673
    CEFBS_None, // STHCX = 1674
    CEFBS_None, // STHEPX = 1675
    CEFBS_None, // STHU = 1676
    CEFBS_None, // STHU8 = 1677
    CEFBS_None, // STHUX = 1678
    CEFBS_None, // STHUX8 = 1679
    CEFBS_None, // STHX = 1680
    CEFBS_None, // STHX8 = 1681
    CEFBS_None, // STHXTLS = 1682
    CEFBS_None, // STHXTLS_ = 1683
    CEFBS_None, // STHXTLS_32 = 1684
    CEFBS_None, // STMW = 1685
    CEFBS_None, // STOP = 1686
    CEFBS_None, // STQ = 1687
    CEFBS_None, // STQCX = 1688
    CEFBS_None, // STQX_PSEUDO = 1689
    CEFBS_None, // STSWI = 1690
    CEFBS_None, // STVEBX = 1691
    CEFBS_None, // STVEHX = 1692
    CEFBS_None, // STVEWX = 1693
    CEFBS_None, // STVX = 1694
    CEFBS_None, // STVXL = 1695
    CEFBS_None, // STW = 1696
    CEFBS_None, // STW8 = 1697
    CEFBS_None, // STWAT = 1698
    CEFBS_None, // STWBRX = 1699
    CEFBS_None, // STWCIX = 1700
    CEFBS_None, // STWCX = 1701
    CEFBS_None, // STWEPX = 1702
    CEFBS_None, // STWU = 1703
    CEFBS_None, // STWU8 = 1704
    CEFBS_None, // STWUX = 1705
    CEFBS_None, // STWUX8 = 1706
    CEFBS_None, // STWX = 1707
    CEFBS_None, // STWX8 = 1708
    CEFBS_None, // STWXTLS = 1709
    CEFBS_None, // STWXTLS_ = 1710
    CEFBS_None, // STWXTLS_32 = 1711
    CEFBS_None, // STXSD = 1712
    CEFBS_None, // STXSDX = 1713
    CEFBS_None, // STXSIBX = 1714
    CEFBS_None, // STXSIBXv = 1715
    CEFBS_None, // STXSIHX = 1716
    CEFBS_None, // STXSIHXv = 1717
    CEFBS_None, // STXSIWX = 1718
    CEFBS_None, // STXSSP = 1719
    CEFBS_None, // STXSSPX = 1720
    CEFBS_None, // STXV = 1721
    CEFBS_None, // STXVB16X = 1722
    CEFBS_None, // STXVD2X = 1723
    CEFBS_None, // STXVH8X = 1724
    CEFBS_None, // STXVL = 1725
    CEFBS_None, // STXVLL = 1726
    CEFBS_None, // STXVP = 1727
    CEFBS_None, // STXVPX = 1728
    CEFBS_None, // STXVRBX = 1729
    CEFBS_None, // STXVRDX = 1730
    CEFBS_None, // STXVRHX = 1731
    CEFBS_None, // STXVRWX = 1732
    CEFBS_None, // STXVW4X = 1733
    CEFBS_None, // STXVX = 1734
    CEFBS_None, // SUBF = 1735
    CEFBS_None, // SUBF8 = 1736
    CEFBS_None, // SUBF8O = 1737
    CEFBS_None, // SUBF8O_rec = 1738
    CEFBS_None, // SUBF8_rec = 1739
    CEFBS_None, // SUBFC = 1740
    CEFBS_None, // SUBFC8 = 1741
    CEFBS_None, // SUBFC8O = 1742
    CEFBS_None, // SUBFC8O_rec = 1743
    CEFBS_None, // SUBFC8_rec = 1744
    CEFBS_None, // SUBFCO = 1745
    CEFBS_None, // SUBFCO_rec = 1746
    CEFBS_None, // SUBFC_rec = 1747
    CEFBS_None, // SUBFE = 1748
    CEFBS_None, // SUBFE8 = 1749
    CEFBS_None, // SUBFE8O = 1750
    CEFBS_None, // SUBFE8O_rec = 1751
    CEFBS_None, // SUBFE8_rec = 1752
    CEFBS_None, // SUBFEO = 1753
    CEFBS_None, // SUBFEO_rec = 1754
    CEFBS_None, // SUBFE_rec = 1755
    CEFBS_None, // SUBFIC = 1756
    CEFBS_None, // SUBFIC8 = 1757
    CEFBS_None, // SUBFME = 1758
    CEFBS_None, // SUBFME8 = 1759
    CEFBS_None, // SUBFME8O = 1760
    CEFBS_None, // SUBFME8O_rec = 1761
    CEFBS_None, // SUBFME8_rec = 1762
    CEFBS_None, // SUBFMEO = 1763
    CEFBS_None, // SUBFMEO_rec = 1764
    CEFBS_None, // SUBFME_rec = 1765
    CEFBS_None, // SUBFO = 1766
    CEFBS_None, // SUBFO_rec = 1767
    CEFBS_None, // SUBFZE = 1768
    CEFBS_None, // SUBFZE8 = 1769
    CEFBS_None, // SUBFZE8O = 1770
    CEFBS_None, // SUBFZE8O_rec = 1771
    CEFBS_None, // SUBFZE8_rec = 1772
    CEFBS_None, // SUBFZEO = 1773
    CEFBS_None, // SUBFZEO_rec = 1774
    CEFBS_None, // SUBFZE_rec = 1775
    CEFBS_None, // SUBF_rec = 1776
    CEFBS_None, // SYNC = 1777
    CEFBS_None, // TABORT = 1778
    CEFBS_None, // TABORTDC = 1779
    CEFBS_None, // TABORTDCI = 1780
    CEFBS_None, // TABORTWC = 1781
    CEFBS_None, // TABORTWCI = 1782
    CEFBS_None, // TAILB = 1783
    CEFBS_None, // TAILB8 = 1784
    CEFBS_None, // TAILBA = 1785
    CEFBS_None, // TAILBA8 = 1786
    CEFBS_None, // TAILBCTR = 1787
    CEFBS_None, // TAILBCTR8 = 1788
    CEFBS_None, // TBEGIN = 1789
    CEFBS_None, // TBEGIN_RET = 1790
    CEFBS_None, // TCHECK = 1791
    CEFBS_None, // TCHECK_RET = 1792
    CEFBS_None, // TCRETURNai = 1793
    CEFBS_None, // TCRETURNai8 = 1794
    CEFBS_None, // TCRETURNdi = 1795
    CEFBS_None, // TCRETURNdi8 = 1796
    CEFBS_None, // TCRETURNri = 1797
    CEFBS_None, // TCRETURNri8 = 1798
    CEFBS_None, // TD = 1799
    CEFBS_None, // TDI = 1800
    CEFBS_None, // TEND = 1801
    CEFBS_None, // TLBIA = 1802
    CEFBS_None, // TLBIE = 1803
    CEFBS_None, // TLBIEL = 1804
    CEFBS_None, // TLBIVAX = 1805
    CEFBS_None, // TLBLD = 1806
    CEFBS_None, // TLBLI = 1807
    CEFBS_None, // TLBRE = 1808
    CEFBS_None, // TLBRE2 = 1809
    CEFBS_None, // TLBSX = 1810
    CEFBS_None, // TLBSX2 = 1811
    CEFBS_None, // TLBSX2D = 1812
    CEFBS_None, // TLBSYNC = 1813
    CEFBS_None, // TLBWE = 1814
    CEFBS_None, // TLBWE2 = 1815
    CEFBS_None, // TLSGDAIX = 1816
    CEFBS_None, // TLSGDAIX8 = 1817
    CEFBS_None, // TRAP = 1818
    CEFBS_None, // TRECHKPT = 1819
    CEFBS_None, // TRECLAIM = 1820
    CEFBS_None, // TSR = 1821
    CEFBS_None, // TW = 1822
    CEFBS_None, // TWI = 1823
    CEFBS_None, // UNENCODED_NOP = 1824
    CEFBS_None, // UpdateGBR = 1825
    CEFBS_None, // VABSDUB = 1826
    CEFBS_None, // VABSDUH = 1827
    CEFBS_None, // VABSDUW = 1828
    CEFBS_None, // VADDCUQ = 1829
    CEFBS_None, // VADDCUW = 1830
    CEFBS_None, // VADDECUQ = 1831
    CEFBS_None, // VADDEUQM = 1832
    CEFBS_None, // VADDFP = 1833
    CEFBS_None, // VADDSBS = 1834
    CEFBS_None, // VADDSHS = 1835
    CEFBS_None, // VADDSWS = 1836
    CEFBS_None, // VADDUBM = 1837
    CEFBS_None, // VADDUBS = 1838
    CEFBS_None, // VADDUDM = 1839
    CEFBS_None, // VADDUHM = 1840
    CEFBS_None, // VADDUHS = 1841
    CEFBS_None, // VADDUQM = 1842
    CEFBS_None, // VADDUWM = 1843
    CEFBS_None, // VADDUWS = 1844
    CEFBS_None, // VAND = 1845
    CEFBS_None, // VANDC = 1846
    CEFBS_None, // VAVGSB = 1847
    CEFBS_None, // VAVGSH = 1848
    CEFBS_None, // VAVGSW = 1849
    CEFBS_None, // VAVGUB = 1850
    CEFBS_None, // VAVGUH = 1851
    CEFBS_None, // VAVGUW = 1852
    CEFBS_None, // VBPERMD = 1853
    CEFBS_None, // VBPERMQ = 1854
    CEFBS_None, // VCFSX = 1855
    CEFBS_None, // VCFSX_0 = 1856
    CEFBS_None, // VCFUGED = 1857
    CEFBS_None, // VCFUX = 1858
    CEFBS_None, // VCFUX_0 = 1859
    CEFBS_None, // VCIPHER = 1860
    CEFBS_None, // VCIPHERLAST = 1861
    CEFBS_None, // VCLRLB = 1862
    CEFBS_None, // VCLRRB = 1863
    CEFBS_None, // VCLZB = 1864
    CEFBS_None, // VCLZD = 1865
    CEFBS_None, // VCLZDM = 1866
    CEFBS_None, // VCLZH = 1867
    CEFBS_None, // VCLZLSBB = 1868
    CEFBS_None, // VCLZW = 1869
    CEFBS_None, // VCMPBFP = 1870
    CEFBS_None, // VCMPBFP_rec = 1871
    CEFBS_None, // VCMPEQFP = 1872
    CEFBS_None, // VCMPEQFP_rec = 1873
    CEFBS_None, // VCMPEQUB = 1874
    CEFBS_None, // VCMPEQUB_rec = 1875
    CEFBS_None, // VCMPEQUD = 1876
    CEFBS_None, // VCMPEQUD_rec = 1877
    CEFBS_None, // VCMPEQUH = 1878
    CEFBS_None, // VCMPEQUH_rec = 1879
    CEFBS_None, // VCMPEQUQ = 1880
    CEFBS_None, // VCMPEQUQ_rec = 1881
    CEFBS_None, // VCMPEQUW = 1882
    CEFBS_None, // VCMPEQUW_rec = 1883
    CEFBS_None, // VCMPGEFP = 1884
    CEFBS_None, // VCMPGEFP_rec = 1885
    CEFBS_None, // VCMPGTFP = 1886
    CEFBS_None, // VCMPGTFP_rec = 1887
    CEFBS_None, // VCMPGTSB = 1888
    CEFBS_None, // VCMPGTSB_rec = 1889
    CEFBS_None, // VCMPGTSD = 1890
    CEFBS_None, // VCMPGTSD_rec = 1891
    CEFBS_None, // VCMPGTSH = 1892
    CEFBS_None, // VCMPGTSH_rec = 1893
    CEFBS_None, // VCMPGTSQ = 1894
    CEFBS_None, // VCMPGTSQ_rec = 1895
    CEFBS_None, // VCMPGTSW = 1896
    CEFBS_None, // VCMPGTSW_rec = 1897
    CEFBS_None, // VCMPGTUB = 1898
    CEFBS_None, // VCMPGTUB_rec = 1899
    CEFBS_None, // VCMPGTUD = 1900
    CEFBS_None, // VCMPGTUD_rec = 1901
    CEFBS_None, // VCMPGTUH = 1902
    CEFBS_None, // VCMPGTUH_rec = 1903
    CEFBS_None, // VCMPGTUQ = 1904
    CEFBS_None, // VCMPGTUQ_rec = 1905
    CEFBS_None, // VCMPGTUW = 1906
    CEFBS_None, // VCMPGTUW_rec = 1907
    CEFBS_None, // VCMPNEB = 1908
    CEFBS_None, // VCMPNEB_rec = 1909
    CEFBS_None, // VCMPNEH = 1910
    CEFBS_None, // VCMPNEH_rec = 1911
    CEFBS_None, // VCMPNEW = 1912
    CEFBS_None, // VCMPNEW_rec = 1913
    CEFBS_None, // VCMPNEZB = 1914
    CEFBS_None, // VCMPNEZB_rec = 1915
    CEFBS_None, // VCMPNEZH = 1916
    CEFBS_None, // VCMPNEZH_rec = 1917
    CEFBS_None, // VCMPNEZW = 1918
    CEFBS_None, // VCMPNEZW_rec = 1919
    CEFBS_None, // VCMPSQ = 1920
    CEFBS_None, // VCMPUQ = 1921
    CEFBS_None, // VCNTMBB = 1922
    CEFBS_None, // VCNTMBD = 1923
    CEFBS_None, // VCNTMBH = 1924
    CEFBS_None, // VCNTMBW = 1925
    CEFBS_None, // VCTSXS = 1926
    CEFBS_None, // VCTSXS_0 = 1927
    CEFBS_None, // VCTUXS = 1928
    CEFBS_None, // VCTUXS_0 = 1929
    CEFBS_None, // VCTZB = 1930
    CEFBS_None, // VCTZD = 1931
    CEFBS_None, // VCTZDM = 1932
    CEFBS_None, // VCTZH = 1933
    CEFBS_None, // VCTZLSBB = 1934
    CEFBS_None, // VCTZW = 1935
    CEFBS_None, // VDIVESD = 1936
    CEFBS_None, // VDIVESQ = 1937
    CEFBS_None, // VDIVESW = 1938
    CEFBS_None, // VDIVEUD = 1939
    CEFBS_None, // VDIVEUQ = 1940
    CEFBS_None, // VDIVEUW = 1941
    CEFBS_None, // VDIVSD = 1942
    CEFBS_None, // VDIVSQ = 1943
    CEFBS_None, // VDIVSW = 1944
    CEFBS_None, // VDIVUD = 1945
    CEFBS_None, // VDIVUQ = 1946
    CEFBS_None, // VDIVUW = 1947
    CEFBS_None, // VEQV = 1948
    CEFBS_None, // VEXPANDBM = 1949
    CEFBS_None, // VEXPANDDM = 1950
    CEFBS_None, // VEXPANDHM = 1951
    CEFBS_None, // VEXPANDQM = 1952
    CEFBS_None, // VEXPANDWM = 1953
    CEFBS_None, // VEXPTEFP = 1954
    CEFBS_None, // VEXTDDVLX = 1955
    CEFBS_None, // VEXTDDVRX = 1956
    CEFBS_None, // VEXTDUBVLX = 1957
    CEFBS_None, // VEXTDUBVRX = 1958
    CEFBS_None, // VEXTDUHVLX = 1959
    CEFBS_None, // VEXTDUHVRX = 1960
    CEFBS_None, // VEXTDUWVLX = 1961
    CEFBS_None, // VEXTDUWVRX = 1962
    CEFBS_None, // VEXTRACTBM = 1963
    CEFBS_None, // VEXTRACTD = 1964
    CEFBS_None, // VEXTRACTDM = 1965
    CEFBS_None, // VEXTRACTHM = 1966
    CEFBS_None, // VEXTRACTQM = 1967
    CEFBS_None, // VEXTRACTUB = 1968
    CEFBS_None, // VEXTRACTUH = 1969
    CEFBS_None, // VEXTRACTUW = 1970
    CEFBS_None, // VEXTRACTWM = 1971
    CEFBS_None, // VEXTSB2D = 1972
    CEFBS_None, // VEXTSB2Ds = 1973
    CEFBS_None, // VEXTSB2W = 1974
    CEFBS_None, // VEXTSB2Ws = 1975
    CEFBS_None, // VEXTSD2Q = 1976
    CEFBS_None, // VEXTSH2D = 1977
    CEFBS_None, // VEXTSH2Ds = 1978
    CEFBS_None, // VEXTSH2W = 1979
    CEFBS_None, // VEXTSH2Ws = 1980
    CEFBS_None, // VEXTSW2D = 1981
    CEFBS_None, // VEXTSW2Ds = 1982
    CEFBS_None, // VEXTUBLX = 1983
    CEFBS_None, // VEXTUBRX = 1984
    CEFBS_None, // VEXTUHLX = 1985
    CEFBS_None, // VEXTUHRX = 1986
    CEFBS_None, // VEXTUWLX = 1987
    CEFBS_None, // VEXTUWRX = 1988
    CEFBS_None, // VGBBD = 1989
    CEFBS_None, // VGNB = 1990
    CEFBS_None, // VINSBLX = 1991
    CEFBS_None, // VINSBRX = 1992
    CEFBS_None, // VINSBVLX = 1993
    CEFBS_None, // VINSBVRX = 1994
    CEFBS_None, // VINSD = 1995
    CEFBS_None, // VINSDLX = 1996
    CEFBS_None, // VINSDRX = 1997
    CEFBS_None, // VINSERTB = 1998
    CEFBS_None, // VINSERTD = 1999
    CEFBS_None, // VINSERTH = 2000
    CEFBS_None, // VINSERTW = 2001
    CEFBS_None, // VINSHLX = 2002
    CEFBS_None, // VINSHRX = 2003
    CEFBS_None, // VINSHVLX = 2004
    CEFBS_None, // VINSHVRX = 2005
    CEFBS_None, // VINSW = 2006
    CEFBS_None, // VINSWLX = 2007
    CEFBS_None, // VINSWRX = 2008
    CEFBS_None, // VINSWVLX = 2009
    CEFBS_None, // VINSWVRX = 2010
    CEFBS_None, // VLOGEFP = 2011
    CEFBS_None, // VMADDFP = 2012
    CEFBS_None, // VMAXFP = 2013
    CEFBS_None, // VMAXSB = 2014
    CEFBS_None, // VMAXSD = 2015
    CEFBS_None, // VMAXSH = 2016
    CEFBS_None, // VMAXSW = 2017
    CEFBS_None, // VMAXUB = 2018
    CEFBS_None, // VMAXUD = 2019
    CEFBS_None, // VMAXUH = 2020
    CEFBS_None, // VMAXUW = 2021
    CEFBS_None, // VMHADDSHS = 2022
    CEFBS_None, // VMHRADDSHS = 2023
    CEFBS_None, // VMINFP = 2024
    CEFBS_None, // VMINSB = 2025
    CEFBS_None, // VMINSD = 2026
    CEFBS_None, // VMINSH = 2027
    CEFBS_None, // VMINSW = 2028
    CEFBS_None, // VMINUB = 2029
    CEFBS_None, // VMINUD = 2030
    CEFBS_None, // VMINUH = 2031
    CEFBS_None, // VMINUW = 2032
    CEFBS_None, // VMLADDUHM = 2033
    CEFBS_None, // VMODSD = 2034
    CEFBS_None, // VMODSQ = 2035
    CEFBS_None, // VMODSW = 2036
    CEFBS_None, // VMODUD = 2037
    CEFBS_None, // VMODUQ = 2038
    CEFBS_None, // VMODUW = 2039
    CEFBS_None, // VMRGEW = 2040
    CEFBS_None, // VMRGHB = 2041
    CEFBS_None, // VMRGHH = 2042
    CEFBS_None, // VMRGHW = 2043
    CEFBS_None, // VMRGLB = 2044
    CEFBS_None, // VMRGLH = 2045
    CEFBS_None, // VMRGLW = 2046
    CEFBS_None, // VMRGOW = 2047
    CEFBS_None, // VMSUMCUD = 2048
    CEFBS_None, // VMSUMMBM = 2049
    CEFBS_None, // VMSUMSHM = 2050
    CEFBS_None, // VMSUMSHS = 2051
    CEFBS_None, // VMSUMUBM = 2052
    CEFBS_None, // VMSUMUDM = 2053
    CEFBS_None, // VMSUMUHM = 2054
    CEFBS_None, // VMSUMUHS = 2055
    CEFBS_None, // VMUL10CUQ = 2056
    CEFBS_None, // VMUL10ECUQ = 2057
    CEFBS_None, // VMUL10EUQ = 2058
    CEFBS_None, // VMUL10UQ = 2059
    CEFBS_None, // VMULESB = 2060
    CEFBS_None, // VMULESD = 2061
    CEFBS_None, // VMULESH = 2062
    CEFBS_None, // VMULESW = 2063
    CEFBS_None, // VMULEUB = 2064
    CEFBS_None, // VMULEUD = 2065
    CEFBS_None, // VMULEUH = 2066
    CEFBS_None, // VMULEUW = 2067
    CEFBS_None, // VMULHSD = 2068
    CEFBS_None, // VMULHSW = 2069
    CEFBS_None, // VMULHUD = 2070
    CEFBS_None, // VMULHUW = 2071
    CEFBS_None, // VMULLD = 2072
    CEFBS_None, // VMULOSB = 2073
    CEFBS_None, // VMULOSD = 2074
    CEFBS_None, // VMULOSH = 2075
    CEFBS_None, // VMULOSW = 2076
    CEFBS_None, // VMULOUB = 2077
    CEFBS_None, // VMULOUD = 2078
    CEFBS_None, // VMULOUH = 2079
    CEFBS_None, // VMULOUW = 2080
    CEFBS_None, // VMULUWM = 2081
    CEFBS_None, // VNAND = 2082
    CEFBS_None, // VNCIPHER = 2083
    CEFBS_None, // VNCIPHERLAST = 2084
    CEFBS_None, // VNEGD = 2085
    CEFBS_None, // VNEGW = 2086
    CEFBS_None, // VNMSUBFP = 2087
    CEFBS_None, // VNOR = 2088
    CEFBS_None, // VOR = 2089
    CEFBS_None, // VORC = 2090
    CEFBS_None, // VPDEPD = 2091
    CEFBS_None, // VPERM = 2092
    CEFBS_None, // VPERMR = 2093
    CEFBS_None, // VPERMXOR = 2094
    CEFBS_None, // VPEXTD = 2095
    CEFBS_None, // VPKPX = 2096
    CEFBS_None, // VPKSDSS = 2097
    CEFBS_None, // VPKSDUS = 2098
    CEFBS_None, // VPKSHSS = 2099
    CEFBS_None, // VPKSHUS = 2100
    CEFBS_None, // VPKSWSS = 2101
    CEFBS_None, // VPKSWUS = 2102
    CEFBS_None, // VPKUDUM = 2103
    CEFBS_None, // VPKUDUS = 2104
    CEFBS_None, // VPKUHUM = 2105
    CEFBS_None, // VPKUHUS = 2106
    CEFBS_None, // VPKUWUM = 2107
    CEFBS_None, // VPKUWUS = 2108
    CEFBS_None, // VPMSUMB = 2109
    CEFBS_None, // VPMSUMD = 2110
    CEFBS_None, // VPMSUMH = 2111
    CEFBS_None, // VPMSUMW = 2112
    CEFBS_None, // VPOPCNTB = 2113
    CEFBS_None, // VPOPCNTD = 2114
    CEFBS_None, // VPOPCNTH = 2115
    CEFBS_None, // VPOPCNTW = 2116
    CEFBS_None, // VPRTYBD = 2117
    CEFBS_None, // VPRTYBQ = 2118
    CEFBS_None, // VPRTYBW = 2119
    CEFBS_None, // VREFP = 2120
    CEFBS_None, // VRFIM = 2121
    CEFBS_None, // VRFIN = 2122
    CEFBS_None, // VRFIP = 2123
    CEFBS_None, // VRFIZ = 2124
    CEFBS_None, // VRLB = 2125
    CEFBS_None, // VRLD = 2126
    CEFBS_None, // VRLDMI = 2127
    CEFBS_None, // VRLDNM = 2128
    CEFBS_None, // VRLH = 2129
    CEFBS_None, // VRLQ = 2130
    CEFBS_None, // VRLQMI = 2131
    CEFBS_None, // VRLQNM = 2132
    CEFBS_None, // VRLW = 2133
    CEFBS_None, // VRLWMI = 2134
    CEFBS_None, // VRLWNM = 2135
    CEFBS_None, // VRSQRTEFP = 2136
    CEFBS_None, // VSBOX = 2137
    CEFBS_None, // VSEL = 2138
    CEFBS_None, // VSHASIGMAD = 2139
    CEFBS_None, // VSHASIGMAW = 2140
    CEFBS_None, // VSL = 2141
    CEFBS_None, // VSLB = 2142
    CEFBS_None, // VSLD = 2143
    CEFBS_None, // VSLDBI = 2144
    CEFBS_None, // VSLDOI = 2145
    CEFBS_None, // VSLH = 2146
    CEFBS_None, // VSLO = 2147
    CEFBS_None, // VSLQ = 2148
    CEFBS_None, // VSLV = 2149
    CEFBS_None, // VSLW = 2150
    CEFBS_None, // VSPLTB = 2151
    CEFBS_None, // VSPLTBs = 2152
    CEFBS_None, // VSPLTH = 2153
    CEFBS_None, // VSPLTHs = 2154
    CEFBS_None, // VSPLTISB = 2155
    CEFBS_None, // VSPLTISH = 2156
    CEFBS_None, // VSPLTISW = 2157
    CEFBS_None, // VSPLTW = 2158
    CEFBS_None, // VSR = 2159
    CEFBS_None, // VSRAB = 2160
    CEFBS_None, // VSRAD = 2161
    CEFBS_None, // VSRAH = 2162
    CEFBS_None, // VSRAQ = 2163
    CEFBS_None, // VSRAW = 2164
    CEFBS_None, // VSRB = 2165
    CEFBS_None, // VSRD = 2166
    CEFBS_None, // VSRDBI = 2167
    CEFBS_None, // VSRH = 2168
    CEFBS_None, // VSRO = 2169
    CEFBS_None, // VSRQ = 2170
    CEFBS_None, // VSRV = 2171
    CEFBS_None, // VSRW = 2172
    CEFBS_None, // VSTRIBL = 2173
    CEFBS_None, // VSTRIBL_rec = 2174
    CEFBS_None, // VSTRIBR = 2175
    CEFBS_None, // VSTRIBR_rec = 2176
    CEFBS_None, // VSTRIHL = 2177
    CEFBS_None, // VSTRIHL_rec = 2178
    CEFBS_None, // VSTRIHR = 2179
    CEFBS_None, // VSTRIHR_rec = 2180
    CEFBS_None, // VSUBCUQ = 2181
    CEFBS_None, // VSUBCUW = 2182
    CEFBS_None, // VSUBECUQ = 2183
    CEFBS_None, // VSUBEUQM = 2184
    CEFBS_None, // VSUBFP = 2185
    CEFBS_None, // VSUBSBS = 2186
    CEFBS_None, // VSUBSHS = 2187
    CEFBS_None, // VSUBSWS = 2188
    CEFBS_None, // VSUBUBM = 2189
    CEFBS_None, // VSUBUBS = 2190
    CEFBS_None, // VSUBUDM = 2191
    CEFBS_None, // VSUBUHM = 2192
    CEFBS_None, // VSUBUHS = 2193
    CEFBS_None, // VSUBUQM = 2194
    CEFBS_None, // VSUBUWM = 2195
    CEFBS_None, // VSUBUWS = 2196
    CEFBS_None, // VSUM2SWS = 2197
    CEFBS_None, // VSUM4SBS = 2198
    CEFBS_None, // VSUM4SHS = 2199
    CEFBS_None, // VSUM4UBS = 2200
    CEFBS_None, // VSUMSWS = 2201
    CEFBS_None, // VUPKHPX = 2202
    CEFBS_None, // VUPKHSB = 2203
    CEFBS_None, // VUPKHSH = 2204
    CEFBS_None, // VUPKHSW = 2205
    CEFBS_None, // VUPKLPX = 2206
    CEFBS_None, // VUPKLSB = 2207
    CEFBS_None, // VUPKLSH = 2208
    CEFBS_None, // VUPKLSW = 2209
    CEFBS_None, // VXOR = 2210
    CEFBS_None, // V_SET0 = 2211
    CEFBS_None, // V_SET0B = 2212
    CEFBS_None, // V_SET0H = 2213
    CEFBS_None, // V_SETALLONES = 2214
    CEFBS_None, // V_SETALLONESB = 2215
    CEFBS_None, // V_SETALLONESH = 2216
    CEFBS_None, // WAIT = 2217
    CEFBS_None, // WRTEE = 2218
    CEFBS_None, // WRTEEI = 2219
    CEFBS_None, // XOR = 2220
    CEFBS_None, // XOR8 = 2221
    CEFBS_None, // XOR8_rec = 2222
    CEFBS_None, // XORI = 2223
    CEFBS_None, // XORI8 = 2224
    CEFBS_None, // XORIS = 2225
    CEFBS_None, // XORIS8 = 2226
    CEFBS_None, // XOR_rec = 2227
    CEFBS_None, // XSABSDP = 2228
    CEFBS_None, // XSABSQP = 2229
    CEFBS_None, // XSADDDP = 2230
    CEFBS_None, // XSADDQP = 2231
    CEFBS_None, // XSADDQPO = 2232
    CEFBS_None, // XSADDSP = 2233
    CEFBS_None, // XSCMPEQDP = 2234
    CEFBS_None, // XSCMPEXPDP = 2235
    CEFBS_None, // XSCMPEXPQP = 2236
    CEFBS_None, // XSCMPGEDP = 2237
    CEFBS_None, // XSCMPGTDP = 2238
    CEFBS_None, // XSCMPODP = 2239
    CEFBS_None, // XSCMPOQP = 2240
    CEFBS_None, // XSCMPUDP = 2241
    CEFBS_None, // XSCMPUQP = 2242
    CEFBS_None, // XSCPSGNDP = 2243
    CEFBS_None, // XSCPSGNQP = 2244
    CEFBS_None, // XSCVDPHP = 2245
    CEFBS_None, // XSCVDPQP = 2246
    CEFBS_None, // XSCVDPSP = 2247
    CEFBS_None, // XSCVDPSPN = 2248
    CEFBS_None, // XSCVDPSXDS = 2249
    CEFBS_None, // XSCVDPSXDSs = 2250
    CEFBS_None, // XSCVDPSXWS = 2251
    CEFBS_None, // XSCVDPSXWSs = 2252
    CEFBS_None, // XSCVDPUXDS = 2253
    CEFBS_None, // XSCVDPUXDSs = 2254
    CEFBS_None, // XSCVDPUXWS = 2255
    CEFBS_None, // XSCVDPUXWSs = 2256
    CEFBS_None, // XSCVHPDP = 2257
    CEFBS_None, // XSCVQPDP = 2258
    CEFBS_None, // XSCVQPDPO = 2259
    CEFBS_None, // XSCVQPSDZ = 2260
    CEFBS_None, // XSCVQPSQZ = 2261
    CEFBS_None, // XSCVQPSWZ = 2262
    CEFBS_None, // XSCVQPUDZ = 2263
    CEFBS_None, // XSCVQPUQZ = 2264
    CEFBS_None, // XSCVQPUWZ = 2265
    CEFBS_None, // XSCVSDQP = 2266
    CEFBS_None, // XSCVSPDP = 2267
    CEFBS_None, // XSCVSPDPN = 2268
    CEFBS_None, // XSCVSQQP = 2269
    CEFBS_None, // XSCVSXDDP = 2270
    CEFBS_None, // XSCVSXDSP = 2271
    CEFBS_None, // XSCVUDQP = 2272
    CEFBS_None, // XSCVUQQP = 2273
    CEFBS_None, // XSCVUXDDP = 2274
    CEFBS_None, // XSCVUXDSP = 2275
    CEFBS_None, // XSDIVDP = 2276
    CEFBS_None, // XSDIVQP = 2277
    CEFBS_None, // XSDIVQPO = 2278
    CEFBS_None, // XSDIVSP = 2279
    CEFBS_None, // XSIEXPDP = 2280
    CEFBS_None, // XSIEXPQP = 2281
    CEFBS_None, // XSMADDADP = 2282
    CEFBS_None, // XSMADDASP = 2283
    CEFBS_None, // XSMADDMDP = 2284
    CEFBS_None, // XSMADDMSP = 2285
    CEFBS_None, // XSMADDQP = 2286
    CEFBS_None, // XSMADDQPO = 2287
    CEFBS_None, // XSMAXCDP = 2288
    CEFBS_None, // XSMAXCQP = 2289
    CEFBS_None, // XSMAXDP = 2290
    CEFBS_None, // XSMAXJDP = 2291
    CEFBS_None, // XSMINCDP = 2292
    CEFBS_None, // XSMINCQP = 2293
    CEFBS_None, // XSMINDP = 2294
    CEFBS_None, // XSMINJDP = 2295
    CEFBS_None, // XSMSUBADP = 2296
    CEFBS_None, // XSMSUBASP = 2297
    CEFBS_None, // XSMSUBMDP = 2298
    CEFBS_None, // XSMSUBMSP = 2299
    CEFBS_None, // XSMSUBQP = 2300
    CEFBS_None, // XSMSUBQPO = 2301
    CEFBS_None, // XSMULDP = 2302
    CEFBS_None, // XSMULQP = 2303
    CEFBS_None, // XSMULQPO = 2304
    CEFBS_None, // XSMULSP = 2305
    CEFBS_None, // XSNABSDP = 2306
    CEFBS_None, // XSNABSDPs = 2307
    CEFBS_None, // XSNABSQP = 2308
    CEFBS_None, // XSNEGDP = 2309
    CEFBS_None, // XSNEGQP = 2310
    CEFBS_None, // XSNMADDADP = 2311
    CEFBS_None, // XSNMADDASP = 2312
    CEFBS_None, // XSNMADDMDP = 2313
    CEFBS_None, // XSNMADDMSP = 2314
    CEFBS_None, // XSNMADDQP = 2315
    CEFBS_None, // XSNMADDQPO = 2316
    CEFBS_None, // XSNMSUBADP = 2317
    CEFBS_None, // XSNMSUBASP = 2318
    CEFBS_None, // XSNMSUBMDP = 2319
    CEFBS_None, // XSNMSUBMSP = 2320
    CEFBS_None, // XSNMSUBQP = 2321
    CEFBS_None, // XSNMSUBQPO = 2322
    CEFBS_None, // XSRDPI = 2323
    CEFBS_None, // XSRDPIC = 2324
    CEFBS_None, // XSRDPIM = 2325
    CEFBS_None, // XSRDPIP = 2326
    CEFBS_None, // XSRDPIZ = 2327
    CEFBS_None, // XSREDP = 2328
    CEFBS_None, // XSRESP = 2329
    CEFBS_None, // XSRQPI = 2330
    CEFBS_None, // XSRQPIX = 2331
    CEFBS_None, // XSRQPXP = 2332
    CEFBS_None, // XSRSP = 2333
    CEFBS_None, // XSRSQRTEDP = 2334
    CEFBS_None, // XSRSQRTESP = 2335
    CEFBS_None, // XSSQRTDP = 2336
    CEFBS_None, // XSSQRTQP = 2337
    CEFBS_None, // XSSQRTQPO = 2338
    CEFBS_None, // XSSQRTSP = 2339
    CEFBS_None, // XSSUBDP = 2340
    CEFBS_None, // XSSUBQP = 2341
    CEFBS_None, // XSSUBQPO = 2342
    CEFBS_None, // XSSUBSP = 2343
    CEFBS_None, // XSTDIVDP = 2344
    CEFBS_None, // XSTSQRTDP = 2345
    CEFBS_None, // XSTSTDCDP = 2346
    CEFBS_None, // XSTSTDCQP = 2347
    CEFBS_None, // XSTSTDCSP = 2348
    CEFBS_None, // XSXEXPDP = 2349
    CEFBS_None, // XSXEXPQP = 2350
    CEFBS_None, // XSXSIGDP = 2351
    CEFBS_None, // XSXSIGQP = 2352
    CEFBS_None, // XVABSDP = 2353
    CEFBS_None, // XVABSSP = 2354
    CEFBS_None, // XVADDDP = 2355
    CEFBS_None, // XVADDSP = 2356
    CEFBS_None, // XVBF16GER2 = 2357
    CEFBS_None, // XVBF16GER2NN = 2358
    CEFBS_None, // XVBF16GER2NP = 2359
    CEFBS_None, // XVBF16GER2PN = 2360
    CEFBS_None, // XVBF16GER2PP = 2361
    CEFBS_None, // XVCMPEQDP = 2362
    CEFBS_None, // XVCMPEQDP_rec = 2363
    CEFBS_None, // XVCMPEQSP = 2364
    CEFBS_None, // XVCMPEQSP_rec = 2365
    CEFBS_None, // XVCMPGEDP = 2366
    CEFBS_None, // XVCMPGEDP_rec = 2367
    CEFBS_None, // XVCMPGESP = 2368
    CEFBS_None, // XVCMPGESP_rec = 2369
    CEFBS_None, // XVCMPGTDP = 2370
    CEFBS_None, // XVCMPGTDP_rec = 2371
    CEFBS_None, // XVCMPGTSP = 2372
    CEFBS_None, // XVCMPGTSP_rec = 2373
    CEFBS_None, // XVCPSGNDP = 2374
    CEFBS_None, // XVCPSGNSP = 2375
    CEFBS_None, // XVCVBF16SPN = 2376
    CEFBS_None, // XVCVDPSP = 2377
    CEFBS_None, // XVCVDPSXDS = 2378
    CEFBS_None, // XVCVDPSXWS = 2379
    CEFBS_None, // XVCVDPUXDS = 2380
    CEFBS_None, // XVCVDPUXWS = 2381
    CEFBS_None, // XVCVHPSP = 2382
    CEFBS_None, // XVCVSPBF16 = 2383
    CEFBS_None, // XVCVSPDP = 2384
    CEFBS_None, // XVCVSPHP = 2385
    CEFBS_None, // XVCVSPSXDS = 2386
    CEFBS_None, // XVCVSPSXWS = 2387
    CEFBS_None, // XVCVSPUXDS = 2388
    CEFBS_None, // XVCVSPUXWS = 2389
    CEFBS_None, // XVCVSXDDP = 2390
    CEFBS_None, // XVCVSXDSP = 2391
    CEFBS_None, // XVCVSXWDP = 2392
    CEFBS_None, // XVCVSXWSP = 2393
    CEFBS_None, // XVCVUXDDP = 2394
    CEFBS_None, // XVCVUXDSP = 2395
    CEFBS_None, // XVCVUXWDP = 2396
    CEFBS_None, // XVCVUXWSP = 2397
    CEFBS_None, // XVDIVDP = 2398
    CEFBS_None, // XVDIVSP = 2399
    CEFBS_None, // XVF16GER2 = 2400
    CEFBS_None, // XVF16GER2NN = 2401
    CEFBS_None, // XVF16GER2NP = 2402
    CEFBS_None, // XVF16GER2PN = 2403
    CEFBS_None, // XVF16GER2PP = 2404
    CEFBS_None, // XVF32GER = 2405
    CEFBS_None, // XVF32GERNN = 2406
    CEFBS_None, // XVF32GERNP = 2407
    CEFBS_None, // XVF32GERPN = 2408
    CEFBS_None, // XVF32GERPP = 2409
    CEFBS_None, // XVF64GER = 2410
    CEFBS_None, // XVF64GERNN = 2411
    CEFBS_None, // XVF64GERNP = 2412
    CEFBS_None, // XVF64GERPN = 2413
    CEFBS_None, // XVF64GERPP = 2414
    CEFBS_None, // XVI16GER2 = 2415
    CEFBS_None, // XVI16GER2PP = 2416
    CEFBS_None, // XVI16GER2S = 2417
    CEFBS_None, // XVI16GER2SPP = 2418
    CEFBS_None, // XVI4GER8 = 2419
    CEFBS_None, // XVI4GER8PP = 2420
    CEFBS_None, // XVI8GER4 = 2421
    CEFBS_None, // XVI8GER4PP = 2422
    CEFBS_None, // XVI8GER4SPP = 2423
    CEFBS_None, // XVIEXPDP = 2424
    CEFBS_None, // XVIEXPSP = 2425
    CEFBS_None, // XVMADDADP = 2426
    CEFBS_None, // XVMADDASP = 2427
    CEFBS_None, // XVMADDMDP = 2428
    CEFBS_None, // XVMADDMSP = 2429
    CEFBS_None, // XVMAXDP = 2430
    CEFBS_None, // XVMAXSP = 2431
    CEFBS_None, // XVMINDP = 2432
    CEFBS_None, // XVMINSP = 2433
    CEFBS_None, // XVMSUBADP = 2434
    CEFBS_None, // XVMSUBASP = 2435
    CEFBS_None, // XVMSUBMDP = 2436
    CEFBS_None, // XVMSUBMSP = 2437
    CEFBS_None, // XVMULDP = 2438
    CEFBS_None, // XVMULSP = 2439
    CEFBS_None, // XVNABSDP = 2440
    CEFBS_None, // XVNABSSP = 2441
    CEFBS_None, // XVNEGDP = 2442
    CEFBS_None, // XVNEGSP = 2443
    CEFBS_None, // XVNMADDADP = 2444
    CEFBS_None, // XVNMADDASP = 2445
    CEFBS_None, // XVNMADDMDP = 2446
    CEFBS_None, // XVNMADDMSP = 2447
    CEFBS_None, // XVNMSUBADP = 2448
    CEFBS_None, // XVNMSUBASP = 2449
    CEFBS_None, // XVNMSUBMDP = 2450
    CEFBS_None, // XVNMSUBMSP = 2451
    CEFBS_None, // XVRDPI = 2452
    CEFBS_None, // XVRDPIC = 2453
    CEFBS_None, // XVRDPIM = 2454
    CEFBS_None, // XVRDPIP = 2455
    CEFBS_None, // XVRDPIZ = 2456
    CEFBS_None, // XVREDP = 2457
    CEFBS_None, // XVRESP = 2458
    CEFBS_None, // XVRSPI = 2459
    CEFBS_None, // XVRSPIC = 2460
    CEFBS_None, // XVRSPIM = 2461
    CEFBS_None, // XVRSPIP = 2462
    CEFBS_None, // XVRSPIZ = 2463
    CEFBS_None, // XVRSQRTEDP = 2464
    CEFBS_None, // XVRSQRTESP = 2465
    CEFBS_None, // XVSQRTDP = 2466
    CEFBS_None, // XVSQRTSP = 2467
    CEFBS_None, // XVSUBDP = 2468
    CEFBS_None, // XVSUBSP = 2469
    CEFBS_None, // XVTDIVDP = 2470
    CEFBS_None, // XVTDIVSP = 2471
    CEFBS_None, // XVTLSBB = 2472
    CEFBS_None, // XVTSQRTDP = 2473
    CEFBS_None, // XVTSQRTSP = 2474
    CEFBS_None, // XVTSTDCDP = 2475
    CEFBS_None, // XVTSTDCSP = 2476
    CEFBS_None, // XVXEXPDP = 2477
    CEFBS_None, // XVXEXPSP = 2478
    CEFBS_None, // XVXSIGDP = 2479
    CEFBS_None, // XVXSIGSP = 2480
    CEFBS_None, // XXBLENDVB = 2481
    CEFBS_None, // XXBLENDVD = 2482
    CEFBS_None, // XXBLENDVH = 2483
    CEFBS_None, // XXBLENDVW = 2484
    CEFBS_None, // XXBRD = 2485
    CEFBS_None, // XXBRH = 2486
    CEFBS_None, // XXBRQ = 2487
    CEFBS_None, // XXBRW = 2488
    CEFBS_None, // XXEVAL = 2489
    CEFBS_None, // XXEXTRACTUW = 2490
    CEFBS_None, // XXGENPCVBM = 2491
    CEFBS_None, // XXGENPCVDM = 2492
    CEFBS_None, // XXGENPCVHM = 2493
    CEFBS_None, // XXGENPCVWM = 2494
    CEFBS_None, // XXINSERTW = 2495
    CEFBS_None, // XXLAND = 2496
    CEFBS_None, // XXLANDC = 2497
    CEFBS_None, // XXLEQV = 2498
    CEFBS_None, // XXLEQVOnes = 2499
    CEFBS_None, // XXLNAND = 2500
    CEFBS_None, // XXLNOR = 2501
    CEFBS_None, // XXLOR = 2502
    CEFBS_None, // XXLORC = 2503
    CEFBS_None, // XXLORf = 2504
    CEFBS_None, // XXLXOR = 2505
    CEFBS_None, // XXLXORdpz = 2506
    CEFBS_None, // XXLXORspz = 2507
    CEFBS_None, // XXLXORz = 2508
    CEFBS_None, // XXMFACC = 2509
    CEFBS_None, // XXMRGHW = 2510
    CEFBS_None, // XXMRGLW = 2511
    CEFBS_None, // XXMTACC = 2512
    CEFBS_None, // XXPERM = 2513
    CEFBS_None, // XXPERMDI = 2514
    CEFBS_None, // XXPERMDIs = 2515
    CEFBS_None, // XXPERMR = 2516
    CEFBS_None, // XXPERMX = 2517
    CEFBS_None, // XXSEL = 2518
    CEFBS_None, // XXSETACCZ = 2519
    CEFBS_None, // XXSLDWI = 2520
    CEFBS_None, // XXSLDWIs = 2521
    CEFBS_None, // XXSPLTI32DX = 2522
    CEFBS_None, // XXSPLTIB = 2523
    CEFBS_None, // XXSPLTIDP = 2524
    CEFBS_None, // XXSPLTIW = 2525
    CEFBS_None, // XXSPLTW = 2526
    CEFBS_None, // XXSPLTWs = 2527
    CEFBS_None, // gBC = 2528
    CEFBS_None, // gBCA = 2529
    CEFBS_None, // gBCAat = 2530
    CEFBS_None, // gBCCTR = 2531
    CEFBS_None, // gBCCTRL = 2532
    CEFBS_None, // gBCL = 2533
    CEFBS_None, // gBCLA = 2534
    CEFBS_None, // gBCLAat = 2535
    CEFBS_None, // gBCLR = 2536
    CEFBS_None, // gBCLRL = 2537
    CEFBS_None, // gBCLat = 2538
    CEFBS_None, // gBCat = 2539
  };

  assert(Opcode < 2540);
  FeatureBitset AvailableFeatures = computeAvailableFeatures(Features);
  const FeatureBitset &RequiredFeatures = FeatureBitsets[RequiredFeaturesRefs[Opcode]];
  FeatureBitset MissingFeatures =
      (AvailableFeatures & RequiredFeatures) ^
      RequiredFeatures;
  if (MissingFeatures.any()) {
    std::ostringstream Msg;
    Msg << "Attempting to emit " << &PPCInstrNameData[PPCInstrNameIndices[Opcode]]
        << " instruction but the ";
    for (unsigned i = 0, e = MissingFeatures.size(); i != e; ++i)
      if (MissingFeatures.test(i))
        Msg << SubtargetFeatureNames[i] << " ";
    Msg << "predicate(s) are not met";
    report_fatal_error(Msg.str().c_str());
  }
#endif // NDEBUG
}
} // end namespace PPC_MC
} // end namespace llvm
#endif // ENABLE_INSTR_PREDICATE_VERIFIER

#ifdef GET_INSTRMAP_INFO
#undef GET_INSTRMAP_INFO
namespace llvm {

namespace PPC {

enum IsVSXFMAAlt {
	IsVSXFMAAlt_1
};

enum RC {
	RC_0,
	RC_1
};

// getAltVSXFMAOpcode
LLVM_READONLY
int getAltVSXFMAOpcode(uint16_t Opcode) {
static const uint16_t getAltVSXFMAOpcodeTable[][2] = {
  { PPC::XSMADDADP, PPC::XSMADDMDP },
  { PPC::XSMADDASP, PPC::XSMADDMSP },
  { PPC::XSMSUBADP, PPC::XSMSUBMDP },
  { PPC::XSMSUBASP, PPC::XSMSUBMSP },
  { PPC::XSNMADDADP, PPC::XSNMADDMDP },
  { PPC::XSNMADDASP, PPC::XSNMADDMSP },
  { PPC::XSNMSUBADP, PPC::XSNMSUBMDP },
  { PPC::XSNMSUBASP, PPC::XSNMSUBMSP },
  { PPC::XVMADDADP, PPC::XVMADDMDP },
  { PPC::XVMADDASP, PPC::XVMADDMSP },
  { PPC::XVMSUBADP, PPC::XVMSUBMDP },
  { PPC::XVMSUBASP, PPC::XVMSUBMSP },
  { PPC::XVNMADDADP, PPC::XVNMADDMDP },
  { PPC::XVNMADDASP, PPC::XVNMADDMSP },
  { PPC::XVNMSUBADP, PPC::XVNMSUBMDP },
  { PPC::XVNMSUBASP, PPC::XVNMSUBMSP },
}; // End of getAltVSXFMAOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 16;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == getAltVSXFMAOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getAltVSXFMAOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getAltVSXFMAOpcodeTable[mid][1];
}

// getNonRecordFormOpcode
LLVM_READONLY
int getNonRecordFormOpcode(uint16_t Opcode) {
static const uint16_t getNonRecordFormOpcodeTable[][2] = {
  { PPC::ADD4O_rec, PPC::ADD4O },
  { PPC::ADD4_rec, PPC::ADD4 },
  { PPC::ADD8O_rec, PPC::ADD8O },
  { PPC::ADD8_rec, PPC::ADD8 },
  { PPC::ADDC8O_rec, PPC::ADDC8O },
  { PPC::ADDC8_rec, PPC::ADDC8 },
  { PPC::ADDCO_rec, PPC::ADDCO },
  { PPC::ADDC_rec, PPC::ADDC },
  { PPC::ADDE8O_rec, PPC::ADDE8O },
  { PPC::ADDE8_rec, PPC::ADDE8 },
  { PPC::ADDEO_rec, PPC::ADDEO },
  { PPC::ADDE_rec, PPC::ADDE },
  { PPC::ADDIC_rec, PPC::ADDIC },
  { PPC::ADDME8O_rec, PPC::ADDME8O },
  { PPC::ADDME8_rec, PPC::ADDME8 },
  { PPC::ADDMEO_rec, PPC::ADDMEO },
  { PPC::ADDME_rec, PPC::ADDME },
  { PPC::ADDZE8O_rec, PPC::ADDZE8O },
  { PPC::ADDZE8_rec, PPC::ADDZE8 },
  { PPC::ADDZEO_rec, PPC::ADDZEO },
  { PPC::ADDZE_rec, PPC::ADDZE },
  { PPC::AND8_rec, PPC::AND8 },
  { PPC::ANDC8_rec, PPC::ANDC8 },
  { PPC::ANDC_rec, PPC::ANDC },
  { PPC::AND_rec, PPC::AND },
  { PPC::CNTLZD_rec, PPC::CNTLZD },
  { PPC::CNTLZW8_rec, PPC::CNTLZW8 },
  { PPC::CNTLZW_rec, PPC::CNTLZW },
  { PPC::CNTTZD_rec, PPC::CNTTZD },
  { PPC::CNTTZW8_rec, PPC::CNTTZW8 },
  { PPC::CNTTZW_rec, PPC::CNTTZW },
  { PPC::DIVDEO_rec, PPC::DIVDEO },
  { PPC::DIVDEUO_rec, PPC::DIVDEUO },
  { PPC::DIVDEU_rec, PPC::DIVDEU },
  { PPC::DIVDE_rec, PPC::DIVDE },
  { PPC::DIVDO_rec, PPC::DIVDO },
  { PPC::DIVDUO_rec, PPC::DIVDUO },
  { PPC::DIVDU_rec, PPC::DIVDU },
  { PPC::DIVD_rec, PPC::DIVD },
  { PPC::DIVWEO_rec, PPC::DIVWEO },
  { PPC::DIVWEUO_rec, PPC::DIVWEUO },
  { PPC::DIVWEU_rec, PPC::DIVWEU },
  { PPC::DIVWE_rec, PPC::DIVWE },
  { PPC::DIVWO_rec, PPC::DIVWO },
  { PPC::DIVWUO_rec, PPC::DIVWUO },
  { PPC::DIVWU_rec, PPC::DIVWU },
  { PPC::DIVW_rec, PPC::DIVW },
  { PPC::EQV8_rec, PPC::EQV8 },
  { PPC::EQV_rec, PPC::EQV },
  { PPC::EXTSB8_rec, PPC::EXTSB8 },
  { PPC::EXTSB_rec, PPC::EXTSB },
  { PPC::EXTSH8_rec, PPC::EXTSH8 },
  { PPC::EXTSH_rec, PPC::EXTSH },
  { PPC::EXTSWSLI_32_64_rec, PPC::EXTSWSLI_32_64 },
  { PPC::EXTSWSLI_rec, PPC::EXTSWSLI },
  { PPC::EXTSW_32_64_rec, PPC::EXTSW_32_64 },
  { PPC::EXTSW_rec, PPC::EXTSW },
  { PPC::FABSD_rec, PPC::FABSD },
  { PPC::FABSS_rec, PPC::FABSS },
  { PPC::FADDS_rec, PPC::FADDS },
  { PPC::FADD_rec, PPC::FADD },
  { PPC::FCFIDS_rec, PPC::FCFIDS },
  { PPC::FCFIDUS_rec, PPC::FCFIDUS },
  { PPC::FCFIDU_rec, PPC::FCFIDU },
  { PPC::FCFID_rec, PPC::FCFID },
  { PPC::FCPSGND_rec, PPC::FCPSGND },
  { PPC::FCPSGNS_rec, PPC::FCPSGNS },
  { PPC::FCTIDUZ_rec, PPC::FCTIDUZ },
  { PPC::FCTIDU_rec, PPC::FCTIDU },
  { PPC::FCTIDZ_rec, PPC::FCTIDZ },
  { PPC::FCTID_rec, PPC::FCTID },
  { PPC::FCTIWUZ_rec, PPC::FCTIWUZ },
  { PPC::FCTIWU_rec, PPC::FCTIWU },
  { PPC::FCTIWZ_rec, PPC::FCTIWZ },
  { PPC::FCTIW_rec, PPC::FCTIW },
  { PPC::FDIVS_rec, PPC::FDIVS },
  { PPC::FDIV_rec, PPC::FDIV },
  { PPC::FMADDS_rec, PPC::FMADDS },
  { PPC::FMADD_rec, PPC::FMADD },
  { PPC::FMR_rec, PPC::FMR },
  { PPC::FMSUBS_rec, PPC::FMSUBS },
  { PPC::FMSUB_rec, PPC::FMSUB },
  { PPC::FMULS_rec, PPC::FMULS },
  { PPC::FMUL_rec, PPC::FMUL },
  { PPC::FNABSD_rec, PPC::FNABSD },
  { PPC::FNABSS_rec, PPC::FNABSS },
  { PPC::FNEGD_rec, PPC::FNEGD },
  { PPC::FNEGS_rec, PPC::FNEGS },
  { PPC::FNMADDS_rec, PPC::FNMADDS },
  { PPC::FNMADD_rec, PPC::FNMADD },
  { PPC::FNMSUBS_rec, PPC::FNMSUBS },
  { PPC::FNMSUB_rec, PPC::FNMSUB },
  { PPC::FRES_rec, PPC::FRES },
  { PPC::FRE_rec, PPC::FRE },
  { PPC::FRIMD_rec, PPC::FRIMD },
  { PPC::FRIMS_rec, PPC::FRIMS },
  { PPC::FRIND_rec, PPC::FRIND },
  { PPC::FRINS_rec, PPC::FRINS },
  { PPC::FRIPD_rec, PPC::FRIPD },
  { PPC::FRIPS_rec, PPC::FRIPS },
  { PPC::FRIZD_rec, PPC::FRIZD },
  { PPC::FRIZS_rec, PPC::FRIZS },
  { PPC::FRSP_rec, PPC::FRSP },
  { PPC::FRSQRTES_rec, PPC::FRSQRTES },
  { PPC::FRSQRTE_rec, PPC::FRSQRTE },
  { PPC::FSELD_rec, PPC::FSELD },
  { PPC::FSELS_rec, PPC::FSELS },
  { PPC::FSQRTS_rec, PPC::FSQRTS },
  { PPC::FSQRT_rec, PPC::FSQRT },
  { PPC::FSUBS_rec, PPC::FSUBS },
  { PPC::FSUB_rec, PPC::FSUB },
  { PPC::MULHDU_rec, PPC::MULHDU },
  { PPC::MULHD_rec, PPC::MULHD },
  { PPC::MULHWU_rec, PPC::MULHWU },
  { PPC::MULHW_rec, PPC::MULHW },
  { PPC::MULLDO_rec, PPC::MULLDO },
  { PPC::MULLD_rec, PPC::MULLD },
  { PPC::MULLWO_rec, PPC::MULLWO },
  { PPC::MULLW_rec, PPC::MULLW },
  { PPC::NAND8_rec, PPC::NAND8 },
  { PPC::NAND_rec, PPC::NAND },
  { PPC::NEG8O_rec, PPC::NEG8O },
  { PPC::NEG8_rec, PPC::NEG8 },
  { PPC::NEGO_rec, PPC::NEGO },
  { PPC::NEG_rec, PPC::NEG },
  { PPC::NOR8_rec, PPC::NOR8 },
  { PPC::NOR_rec, PPC::NOR },
  { PPC::OR8_rec, PPC::OR8 },
  { PPC::ORC8_rec, PPC::ORC8 },
  { PPC::ORC_rec, PPC::ORC },
  { PPC::OR_rec, PPC::OR },
  { PPC::RLDCL_rec, PPC::RLDCL },
  { PPC::RLDCR_rec, PPC::RLDCR },
  { PPC::RLDICL_32_rec, PPC::RLDICL_32 },
  { PPC::RLDICL_rec, PPC::RLDICL },
  { PPC::RLDICR_rec, PPC::RLDICR },
  { PPC::RLDIC_rec, PPC::RLDIC },
  { PPC::RLDIMI_rec, PPC::RLDIMI },
  { PPC::RLWIMI8_rec, PPC::RLWIMI8 },
  { PPC::RLWIMI_rec, PPC::RLWIMI },
  { PPC::RLWINM8_rec, PPC::RLWINM8 },
  { PPC::RLWINM_rec, PPC::RLWINM },
  { PPC::RLWNM8_rec, PPC::RLWNM8 },
  { PPC::RLWNM_rec, PPC::RLWNM },
  { PPC::SLD_rec, PPC::SLD },
  { PPC::SLW8_rec, PPC::SLW8 },
  { PPC::SLW_rec, PPC::SLW },
  { PPC::SRADI_rec, PPC::SRADI },
  { PPC::SRAD_rec, PPC::SRAD },
  { PPC::SRAWI_rec, PPC::SRAWI },
  { PPC::SRAW_rec, PPC::SRAW },
  { PPC::SRD_rec, PPC::SRD },
  { PPC::SRW8_rec, PPC::SRW8 },
  { PPC::SRW_rec, PPC::SRW },
  { PPC::SUBF8O_rec, PPC::SUBF8O },
  { PPC::SUBF8_rec, PPC::SUBF8 },
  { PPC::SUBFC8O_rec, PPC::SUBFC8O },
  { PPC::SUBFC8_rec, PPC::SUBFC8 },
  { PPC::SUBFCO_rec, PPC::SUBFCO },
  { PPC::SUBFC_rec, PPC::SUBFC },
  { PPC::SUBFE8O_rec, PPC::SUBFE8O },
  { PPC::SUBFE8_rec, PPC::SUBFE8 },
  { PPC::SUBFEO_rec, PPC::SUBFEO },
  { PPC::SUBFE_rec, PPC::SUBFE },
  { PPC::SUBFME8O_rec, PPC::SUBFME8O },
  { PPC::SUBFME8_rec, PPC::SUBFME8 },
  { PPC::SUBFMEO_rec, PPC::SUBFMEO },
  { PPC::SUBFME_rec, PPC::SUBFME },
  { PPC::SUBFO_rec, PPC::SUBFO },
  { PPC::SUBFZE8O_rec, PPC::SUBFZE8O },
  { PPC::SUBFZE8_rec, PPC::SUBFZE8 },
  { PPC::SUBFZEO_rec, PPC::SUBFZEO },
  { PPC::SUBFZE_rec, PPC::SUBFZE },
  { PPC::SUBF_rec, PPC::SUBF },
  { PPC::VSTRIBL_rec, PPC::VSTRIBL },
  { PPC::VSTRIBR_rec, PPC::VSTRIBR },
  { PPC::VSTRIHL_rec, PPC::VSTRIHL },
  { PPC::VSTRIHR_rec, PPC::VSTRIHR },
  { PPC::XOR8_rec, PPC::XOR8 },
  { PPC::XOR_rec, PPC::XOR },
}; // End of getNonRecordFormOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 180;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == getNonRecordFormOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getNonRecordFormOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getNonRecordFormOpcodeTable[mid][1];
}

// getRecordFormOpcode
LLVM_READONLY
int getRecordFormOpcode(uint16_t Opcode) {
static const uint16_t getRecordFormOpcodeTable[][2] = {
  { PPC::ADD4, PPC::ADD4_rec },
  { PPC::ADD4O, PPC::ADD4O_rec },
  { PPC::ADD8, PPC::ADD8_rec },
  { PPC::ADD8O, PPC::ADD8O_rec },
  { PPC::ADDC, PPC::ADDC_rec },
  { PPC::ADDC8, PPC::ADDC8_rec },
  { PPC::ADDC8O, PPC::ADDC8O_rec },
  { PPC::ADDCO, PPC::ADDCO_rec },
  { PPC::ADDE, PPC::ADDE_rec },
  { PPC::ADDE8, PPC::ADDE8_rec },
  { PPC::ADDE8O, PPC::ADDE8O_rec },
  { PPC::ADDEO, PPC::ADDEO_rec },
  { PPC::ADDIC, PPC::ADDIC_rec },
  { PPC::ADDME, PPC::ADDME_rec },
  { PPC::ADDME8, PPC::ADDME8_rec },
  { PPC::ADDME8O, PPC::ADDME8O_rec },
  { PPC::ADDMEO, PPC::ADDMEO_rec },
  { PPC::ADDZE, PPC::ADDZE_rec },
  { PPC::ADDZE8, PPC::ADDZE8_rec },
  { PPC::ADDZE8O, PPC::ADDZE8O_rec },
  { PPC::ADDZEO, PPC::ADDZEO_rec },
  { PPC::AND, PPC::AND_rec },
  { PPC::AND8, PPC::AND8_rec },
  { PPC::ANDC, PPC::ANDC_rec },
  { PPC::ANDC8, PPC::ANDC8_rec },
  { PPC::CNTLZD, PPC::CNTLZD_rec },
  { PPC::CNTLZW, PPC::CNTLZW_rec },
  { PPC::CNTLZW8, PPC::CNTLZW8_rec },
  { PPC::CNTTZD, PPC::CNTTZD_rec },
  { PPC::CNTTZW, PPC::CNTTZW_rec },
  { PPC::CNTTZW8, PPC::CNTTZW8_rec },
  { PPC::DIVD, PPC::DIVD_rec },
  { PPC::DIVDE, PPC::DIVDE_rec },
  { PPC::DIVDEO, PPC::DIVDEO_rec },
  { PPC::DIVDEU, PPC::DIVDEU_rec },
  { PPC::DIVDEUO, PPC::DIVDEUO_rec },
  { PPC::DIVDO, PPC::DIVDO_rec },
  { PPC::DIVDU, PPC::DIVDU_rec },
  { PPC::DIVDUO, PPC::DIVDUO_rec },
  { PPC::DIVW, PPC::DIVW_rec },
  { PPC::DIVWE, PPC::DIVWE_rec },
  { PPC::DIVWEO, PPC::DIVWEO_rec },
  { PPC::DIVWEU, PPC::DIVWEU_rec },
  { PPC::DIVWEUO, PPC::DIVWEUO_rec },
  { PPC::DIVWO, PPC::DIVWO_rec },
  { PPC::DIVWU, PPC::DIVWU_rec },
  { PPC::DIVWUO, PPC::DIVWUO_rec },
  { PPC::EQV, PPC::EQV_rec },
  { PPC::EQV8, PPC::EQV8_rec },
  { PPC::EXTSB, PPC::EXTSB_rec },
  { PPC::EXTSB8, PPC::EXTSB8_rec },
  { PPC::EXTSH, PPC::EXTSH_rec },
  { PPC::EXTSH8, PPC::EXTSH8_rec },
  { PPC::EXTSW, PPC::EXTSW_rec },
  { PPC::EXTSWSLI, PPC::EXTSWSLI_rec },
  { PPC::EXTSWSLI_32_64, PPC::EXTSWSLI_32_64_rec },
  { PPC::EXTSW_32_64, PPC::EXTSW_32_64_rec },
  { PPC::FABSD, PPC::FABSD_rec },
  { PPC::FABSS, PPC::FABSS_rec },
  { PPC::FADD, PPC::FADD_rec },
  { PPC::FADDS, PPC::FADDS_rec },
  { PPC::FCFID, PPC::FCFID_rec },
  { PPC::FCFIDS, PPC::FCFIDS_rec },
  { PPC::FCFIDU, PPC::FCFIDU_rec },
  { PPC::FCFIDUS, PPC::FCFIDUS_rec },
  { PPC::FCPSGND, PPC::FCPSGND_rec },
  { PPC::FCPSGNS, PPC::FCPSGNS_rec },
  { PPC::FCTID, PPC::FCTID_rec },
  { PPC::FCTIDU, PPC::FCTIDU_rec },
  { PPC::FCTIDUZ, PPC::FCTIDUZ_rec },
  { PPC::FCTIDZ, PPC::FCTIDZ_rec },
  { PPC::FCTIW, PPC::FCTIW_rec },
  { PPC::FCTIWU, PPC::FCTIWU_rec },
  { PPC::FCTIWUZ, PPC::FCTIWUZ_rec },
  { PPC::FCTIWZ, PPC::FCTIWZ_rec },
  { PPC::FDIV, PPC::FDIV_rec },
  { PPC::FDIVS, PPC::FDIVS_rec },
  { PPC::FMADD, PPC::FMADD_rec },
  { PPC::FMADDS, PPC::FMADDS_rec },
  { PPC::FMR, PPC::FMR_rec },
  { PPC::FMSUB, PPC::FMSUB_rec },
  { PPC::FMSUBS, PPC::FMSUBS_rec },
  { PPC::FMUL, PPC::FMUL_rec },
  { PPC::FMULS, PPC::FMULS_rec },
  { PPC::FNABSD, PPC::FNABSD_rec },
  { PPC::FNABSS, PPC::FNABSS_rec },
  { PPC::FNEGD, PPC::FNEGD_rec },
  { PPC::FNEGS, PPC::FNEGS_rec },
  { PPC::FNMADD, PPC::FNMADD_rec },
  { PPC::FNMADDS, PPC::FNMADDS_rec },
  { PPC::FNMSUB, PPC::FNMSUB_rec },
  { PPC::FNMSUBS, PPC::FNMSUBS_rec },
  { PPC::FRE, PPC::FRE_rec },
  { PPC::FRES, PPC::FRES_rec },
  { PPC::FRIMD, PPC::FRIMD_rec },
  { PPC::FRIMS, PPC::FRIMS_rec },
  { PPC::FRIND, PPC::FRIND_rec },
  { PPC::FRINS, PPC::FRINS_rec },
  { PPC::FRIPD, PPC::FRIPD_rec },
  { PPC::FRIPS, PPC::FRIPS_rec },
  { PPC::FRIZD, PPC::FRIZD_rec },
  { PPC::FRIZS, PPC::FRIZS_rec },
  { PPC::FRSP, PPC::FRSP_rec },
  { PPC::FRSQRTE, PPC::FRSQRTE_rec },
  { PPC::FRSQRTES, PPC::FRSQRTES_rec },
  { PPC::FSELD, PPC::FSELD_rec },
  { PPC::FSELS, PPC::FSELS_rec },
  { PPC::FSQRT, PPC::FSQRT_rec },
  { PPC::FSQRTS, PPC::FSQRTS_rec },
  { PPC::FSUB, PPC::FSUB_rec },
  { PPC::FSUBS, PPC::FSUBS_rec },
  { PPC::MULHD, PPC::MULHD_rec },
  { PPC::MULHDU, PPC::MULHDU_rec },
  { PPC::MULHW, PPC::MULHW_rec },
  { PPC::MULHWU, PPC::MULHWU_rec },
  { PPC::MULLD, PPC::MULLD_rec },
  { PPC::MULLDO, PPC::MULLDO_rec },
  { PPC::MULLW, PPC::MULLW_rec },
  { PPC::MULLWO, PPC::MULLWO_rec },
  { PPC::NAND, PPC::NAND_rec },
  { PPC::NAND8, PPC::NAND8_rec },
  { PPC::NEG, PPC::NEG_rec },
  { PPC::NEG8, PPC::NEG8_rec },
  { PPC::NEG8O, PPC::NEG8O_rec },
  { PPC::NEGO, PPC::NEGO_rec },
  { PPC::NOR, PPC::NOR_rec },
  { PPC::NOR8, PPC::NOR8_rec },
  { PPC::OR, PPC::OR_rec },
  { PPC::OR8, PPC::OR8_rec },
  { PPC::ORC, PPC::ORC_rec },
  { PPC::ORC8, PPC::ORC8_rec },
  { PPC::RLDCL, PPC::RLDCL_rec },
  { PPC::RLDCR, PPC::RLDCR_rec },
  { PPC::RLDIC, PPC::RLDIC_rec },
  { PPC::RLDICL, PPC::RLDICL_rec },
  { PPC::RLDICL_32, PPC::RLDICL_32_rec },
  { PPC::RLDICR, PPC::RLDICR_rec },
  { PPC::RLDIMI, PPC::RLDIMI_rec },
  { PPC::RLWIMI, PPC::RLWIMI_rec },
  { PPC::RLWIMI8, PPC::RLWIMI8_rec },
  { PPC::RLWINM, PPC::RLWINM_rec },
  { PPC::RLWINM8, PPC::RLWINM8_rec },
  { PPC::RLWNM, PPC::RLWNM_rec },
  { PPC::RLWNM8, PPC::RLWNM8_rec },
  { PPC::SLD, PPC::SLD_rec },
  { PPC::SLW, PPC::SLW_rec },
  { PPC::SLW8, PPC::SLW8_rec },
  { PPC::SRAD, PPC::SRAD_rec },
  { PPC::SRADI, PPC::SRADI_rec },
  { PPC::SRAW, PPC::SRAW_rec },
  { PPC::SRAWI, PPC::SRAWI_rec },
  { PPC::SRD, PPC::SRD_rec },
  { PPC::SRW, PPC::SRW_rec },
  { PPC::SRW8, PPC::SRW8_rec },
  { PPC::SUBF, PPC::SUBF_rec },
  { PPC::SUBF8, PPC::SUBF8_rec },
  { PPC::SUBF8O, PPC::SUBF8O_rec },
  { PPC::SUBFC, PPC::SUBFC_rec },
  { PPC::SUBFC8, PPC::SUBFC8_rec },
  { PPC::SUBFC8O, PPC::SUBFC8O_rec },
  { PPC::SUBFCO, PPC::SUBFCO_rec },
  { PPC::SUBFE, PPC::SUBFE_rec },
  { PPC::SUBFE8, PPC::SUBFE8_rec },
  { PPC::SUBFE8O, PPC::SUBFE8O_rec },
  { PPC::SUBFEO, PPC::SUBFEO_rec },
  { PPC::SUBFME, PPC::SUBFME_rec },
  { PPC::SUBFME8, PPC::SUBFME8_rec },
  { PPC::SUBFME8O, PPC::SUBFME8O_rec },
  { PPC::SUBFMEO, PPC::SUBFMEO_rec },
  { PPC::SUBFO, PPC::SUBFO_rec },
  { PPC::SUBFZE, PPC::SUBFZE_rec },
  { PPC::SUBFZE8, PPC::SUBFZE8_rec },
  { PPC::SUBFZE8O, PPC::SUBFZE8O_rec },
  { PPC::SUBFZEO, PPC::SUBFZEO_rec },
  { PPC::VSTRIBL, PPC::VSTRIBL_rec },
  { PPC::VSTRIBR, PPC::VSTRIBR_rec },
  { PPC::VSTRIHL, PPC::VSTRIHL_rec },
  { PPC::VSTRIHR, PPC::VSTRIHR_rec },
  { PPC::XOR, PPC::XOR_rec },
  { PPC::XOR8, PPC::XOR8_rec },
}; // End of getRecordFormOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 180;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == getRecordFormOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getRecordFormOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getRecordFormOpcodeTable[mid][1];
}

} // end namespace PPC
} // end namespace llvm
#endif // GET_INSTRMAP_INFO

